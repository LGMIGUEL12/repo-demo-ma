{
  "version": 3,
  "sources": ["../../../app/components/PricingTable.tsx"],
  "sourcesContent": ["import CheckCircleIcon from '@heroicons/react/24/outline/CheckCircleIcon';\nimport classNames from 'classnames';\nimport { Trans } from 'react-i18next';\n\nimport Heading from '~/core/ui/Heading';\nimport Button from '~/core/ui/Button';\nimport If from '~/core/ui/If';\n\nimport configuration from '~/configuration';\n\nconst PLANS = configuration.stripe.plans;\n\nconst PricingTable: React.FC & {\n  Item: typeof PricingItem;\n  Price: typeof Price;\n  FeaturesList: typeof FeaturesList;\n} = () => {\n  return (\n    <div\n      className={\n        'flex flex-col items-start items-center space-y-6 lg:space-y-0' +\n        ' justify-center lg:flex-row lg:space-x-4'\n      }\n    >\n      {PLANS.map((plan) => {\n        return <PricingItem selectable key={plan.stripePriceId} plan={plan} />;\n      })}\n    </div>\n  );\n};\n\nexport default PricingTable;\n\nPricingTable.Item = PricingItem;\nPricingTable.Price = Price;\nPricingTable.FeaturesList = FeaturesList;\n\nfunction PricingItem(\n  props: React.PropsWithChildren<{\n    selectable: boolean;\n    plan: {\n      name: string;\n      stripePriceId: string;\n      description: string;\n      price: string;\n      features: string[];\n    };\n  }>\n) {\n  const linkHref = `${configuration.paths.signUp}?utm_source=${props.plan.stripePriceId}`;\n\n  return (\n    <div\n      className={classNames(\n        `\n         relative flex w-full flex-col justify-between rounded-2xl border-2 border-gray-100\n         p-4 shadow-2xl shadow-transparent transition-all duration-500 dark:border-black-300 dark:bg-black-500 \n         sm:p-6 lg:w-4/12 xl:p-8 2xl:w-3/12\n      `,\n        {\n          ['dark:hover:border-primary-500 dark:hover:bg-black-500' +\n          ' hover:scale-[1.01] dark:hover:shadow-primary-500/40']:\n            props.selectable,\n        }\n      )}\n    >\n      <div className={'flex flex-col space-y-4'}>\n        <Heading type={2}>\n          <span className={'font-semibold dark:text-white'}>\n            {props.plan.name}\n          </span>\n        </Heading>\n\n        <Price>{props.plan.price}</Price>\n\n        <span className={'text-xl text-gray-500 dark:text-gray-400'}>\n          {props.plan.description}\n        </span>\n      </div>\n\n      <div className={'my-4 py-4'}>\n        <FeaturesList features={props.plan.features} />\n      </div>\n\n      <If condition={props.selectable}>\n        <div className={'bottom-0 left-0 w-full p-0'}>\n          <Button size={'large'} block href={linkHref}>\n            <Trans i18nKey={'common:getStarted'} />\n          </Button>\n        </div>\n      </If>\n    </div>\n  );\n}\n\nfunction FeaturesList(\n  props: React.PropsWithChildren<{\n    features: string[];\n  }>\n) {\n  return (\n    <ul className={'flex flex-col space-y-2'}>\n      {props.features.map((feature) => {\n        return (\n          <ListItem key={feature}>\n            <Trans\n              i18nKey={`common:plans.features.${feature}`}\n              defaults={feature}\n            />\n          </ListItem>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction Price({ children }: React.PropsWithChildren) {\n  return (\n    <div>\n      <span className={'text-3xl font-extrabold lg:text-4xl'}>{children}</span>\n    </div>\n  );\n}\n\nfunction ListItem({ children }: React.PropsWithChildren) {\n  return (\n    <li className={'flex items-center space-x-3 text-lg font-medium'}>\n      <div>\n        <CheckCircleIcon className={'h-7 text-green-500'} />\n      </div>\n\n      <span>{children}</span>\n    </li>\n  );\n}\n"],
  "mappings": "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",
  "names": ["classNames", "CheckCircleIcon"]
}
