{
  "version": 3,
  "sources": ["../../../app/core/theming.ts"],
  "sourcesContent": ["import isBrowser from '~/core/generic/is-browser';\nimport configuration from '~/configuration';\nimport { getCookie, setCookie } from '~/core/generic/cookies';\n\nconst THEME_KEY = `theme`;\nconst LIGHT_THEME_META_COLOR = configuration.site.themeColor;\nconst DARK_THEME_META_COLOR = configuration.site.themeColorDark;\n\nexport const DARK_THEME_CLASSNAME = `dark`;\nexport const LIGHT_THEME_CLASSNAME = `light`;\n\nexport function getDefaultTheme() {\n  return getThemeFromHTML();\n}\n\nexport function getStoredTheme() {\n  return getCookie('theme');\n}\n\nexport function setTheme(theme: string | null) {\n  const root = getHtml();\n\n  if (getDefaultTheme() === theme) {\n    return;\n  }\n\n  if (theme === DARK_THEME_CLASSNAME) {\n    root.classList.add(DARK_THEME_CLASSNAME);\n    setMetaTag(DARK_THEME_META_COLOR);\n    setCookie(THEME_KEY, DARK_THEME_CLASSNAME);\n  } else {\n    root.classList.remove(DARK_THEME_CLASSNAME);\n    setMetaTag(LIGHT_THEME_META_COLOR);\n    setCookie(THEME_KEY, LIGHT_THEME_CLASSNAME);\n  }\n}\n\nexport function loadSelectedTheme() {}\n\nfunction getThemeFromHTML() {\n  if (isBrowser()) {\n    const root = getHtml();\n\n    return root.classList.contains(DARK_THEME_CLASSNAME)\n      ? DARK_THEME_CLASSNAME\n      : LIGHT_THEME_CLASSNAME;\n  }\n}\n\nfunction getHtml() {\n  return document.firstElementChild as HTMLHtmlElement;\n}\n\nfunction getThemeMetaTag() {\n  return document.querySelector(`meta[name='theme-color']`);\n}\n\nfunction setMetaTag(value: string) {\n  const callback = () => {\n    let tag = getThemeMetaTag();\n\n    if (tag) {\n      tag.setAttribute('content', value);\n    } else {\n      tag = document.createElement('meta');\n      tag.setAttribute('name', 'theme-color');\n      tag.setAttribute('content', value);\n      document.head.appendChild(tag);\n    }\n  };\n\n  if (document.readyState === 'complete') {\n    callback();\n  } else {\n    document.addEventListener('DOMContentLoaded', callback);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;AAIA,IAAM,YAAY;AAClB,IAAM,yBAAyB,sBAAc,KAAK;AAClD,IAAM,wBAAwB,sBAAc,KAAK;AAE1C,IAAM,uBAAuB;AAC7B,IAAM,wBAAwB;AAE9B,SAAS,kBAAkB;AAChC,SAAO,iBAAiB;AAC1B;AAEO,SAAS,iBAAiB;AAC/B,SAAO,UAAU,OAAO;AAC1B;AAEO,SAAS,SAAS,OAAsB;AAC7C,QAAM,OAAO,QAAQ;AAErB,MAAI,gBAAgB,MAAM,OAAO;AAC/B;AAAA,EACF;AAEA,MAAI,UAAU,sBAAsB;AAClC,SAAK,UAAU,IAAI,oBAAoB;AACvC,eAAW,qBAAqB;AAChC,cAAU,WAAW,oBAAoB;AAAA,EAC3C,OAAO;AACL,SAAK,UAAU,OAAO,oBAAoB;AAC1C,eAAW,sBAAsB;AACjC,cAAU,WAAW,qBAAqB;AAAA,EAC5C;AACF;AAEO,SAAS,oBAAoB;AAAC;AAErC,SAAS,mBAAmB;AAC1B,MAAI,mBAAU,GAAG;AACf,UAAM,OAAO,QAAQ;AAErB,WAAO,KAAK,UAAU,SAAS,oBAAoB,IAC/C,uBACA;AAAA,EACN;AACF;AAEA,SAAS,UAAU;AACjB,SAAO,SAAS;AAClB;AAEA,SAAS,kBAAkB;AACzB,SAAO,SAAS,cAAc,0BAA0B;AAC1D;AAEA,SAAS,WAAW,OAAe;AACjC,QAAM,WAAW,MAAM;AACrB,QAAI,MAAM,gBAAgB;AAE1B,QAAI,KAAK;AACP,UAAI,aAAa,WAAW,KAAK;AAAA,IACnC,OAAO;AACL,YAAM,SAAS,cAAc,MAAM;AACnC,UAAI,aAAa,QAAQ,aAAa;AACtC,UAAI,aAAa,WAAW,KAAK;AACjC,eAAS,KAAK,YAAY,GAAG;AAAA,IAC/B;AAAA,EACF;AAEA,MAAI,SAAS,eAAe,YAAY;AACtC,aAAS;AAAA,EACX,OAAO;AACL,aAAS,iBAAiB,oBAAoB,QAAQ;AAAA,EACxD;AACF;",
  "names": []
}
