{
  "version": 3,
  "sources": ["../../../app/core/firebase/hooks/use-track-signed-in-user.ts", "../../../app/core/firebase/hooks/use-analytics-tracking.ts", "../../../app/core/firebase/components/FirebaseAnalyticsProvider.tsx"],
  "sourcesContent": ["import { useEffect } from 'react';\n\nimport isBrowser from '~/core/generic/is-browser';\nimport useUserSession from '~/core/hooks/use-user-session';\n\n/**\n * @name useTrackSignedInUser\n * @description tracks the current user ID\n */\nexport function useTrackSignedInUser() {\n  const user = useUserSession();\n  const userId = user?.auth?.uid;\n\n  useEffect(() => {\n    if (!isBrowser()) {\n      return;\n    }\n\n    void (async () => {\n      const { getAnalytics, setUserId } = await import('firebase/analytics');\n\n      if (userId) {\n        setUserId(getAnalytics(), userId);\n      }\n    })();\n  }, [userId]);\n}\n", "import { useTrackSignedInUser } from './use-track-signed-in-user';\n\n/**\n * @name useAnalyticsTracking\n * @description Hook to start tracking using other Analytics hooks\n */\nexport function useAnalyticsTracking() {\n  useTrackSignedInUser();\n}\n", "import { AnalyticsProvider, useInitAnalytics } from 'reactfire';\n\nimport configuration from '~/configuration';\nimport { useAnalyticsTracking } from '~/core/firebase/hooks/use-analytics-tracking';\nimport isBrowser from '~/core/generic/is-browser';\n\nconst FirebaseAnalyticsProvider: React.FCC = ({ children }) => {\n  const isEmulator = configuration.emulator;\n\n  if (isEmulator || !isBrowser()) {\n    return <>{children}</>;\n  }\n\n  return (\n    <BrowserFirebaseAnalyticsProvider>\n      {children}\n    </BrowserFirebaseAnalyticsProvider>\n  );\n};\n\nfunction BrowserFirebaseAnalyticsProvider(props: React.PropsWithChildren) {\n  const { data: sdk, status } = useInitAnalytics(async (app) => {\n    const { getAnalytics } = await import('firebase/analytics');\n\n    return getAnalytics(app);\n  });\n\n  if (status !== 'success') {\n    return <>{props.children}</>;\n  }\n\n  return (\n    <AnalyticsProvider sdk={sdk}>\n      <AnalyticsTrackingEventsProvider>\n        {props.children}\n      </AnalyticsTrackingEventsProvider>\n    </AnalyticsProvider>\n  );\n}\n\nfunction AnalyticsTrackingEventsProvider({\n  children,\n}: React.PropsWithChildren) {\n  useAnalyticsTracking();\n\n  return <>{children}</>;\n}\n\nexport default FirebaseAnalyticsProvider;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA,mBAA0B;AASnB,SAAS,uBAAuB;AACrC,QAAM,OAAO,eAAe;AAC5B,QAAM,SAAS,MAAM,MAAM;AAE3B,8BAAU,MAAM;AACd,QAAI,CAAC,mBAAU,GAAG;AAChB;AAAA,IACF;AAEA,UAAM,YAAY;AAChB,YAAM,EAAE,cAAc,UAAU,IAAI,MAAM,OAAO;AAEjD,UAAI,QAAQ;AACV,kBAAU,aAAa,GAAG,MAAM;AAAA,MAClC;AAAA,IACF,GAAG;AAAA,EACL,GAAG,CAAC,MAAM,CAAC;AACb;;;ACpBO,SAAS,uBAAuB;AACrC,uBAAqB;AACvB;;;ACRA;AAMA,IAAM,4BAAuC,CAAC,EAAE,SAAS,MAAM;AAC7D,QAAM,aAAa,sBAAc;AAEjC,MAAI,cAAc,CAAC,mBAAU,GAAG;AAC9B,WAAO;AAAA,MAAG;AAAA,OAAH;AAAA;AAAA;AAAA;AAAA,WAAY;AAAA,EACrB;AAEA,SACE,mDAAC;AAAA,IACE;AAAA,KADH;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEA,SAAS,iCAAiC,OAAgC;AACxE,QAAM,EAAE,MAAM,KAAK,OAAO,IAAI,GAAiB,OAAO,QAAQ;AAC5D,UAAM,EAAE,aAAa,IAAI,MAAM,OAAO;AAEtC,WAAO,aAAa,GAAG;AAAA,EACzB,CAAC;AAED,MAAI,WAAW,WAAW;AACxB,WAAO;AAAA,MAAG,gBAAM;AAAA,OAAT;AAAA;AAAA;AAAA;AAAA,WAAkB;AAAA,EAC3B;AAEA,SACE,mDAAC;AAAA,IAAkB;AAAA,IACjB,6DAAC;AAAA,MACE,gBAAM;AAAA,OADT;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,KAHF;AAAA;AAAA;AAAA;AAAA,SAIA;AAEJ;AAEA,SAAS,gCAAgC;AAAA,EACvC;AACF,GAA4B;AAC1B,uBAAqB;AAErB,SAAO;AAAA,IAAG;AAAA,KAAH;AAAA;AAAA;AAAA;AAAA,SAAY;AACrB;AAEA,IAAO,oCAAQ;",
  "names": []
}
