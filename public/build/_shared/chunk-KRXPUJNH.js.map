{
  "version": 3,
  "sources": ["../../../node_modules/firebase-admin/lib/auth/user-import-builder.js", "../../../node_modules/firebase-admin/lib/auth/action-code-settings-builder.js", "../../../node_modules/firebase-admin/lib/auth/auth-config.js", "../../../node_modules/firebase-admin/lib/auth/tenant.js", "../../../node_modules/firebase-admin/lib/auth/identifier.js", "../../../node_modules/firebase-admin/lib/auth/project-config.js", "../../../node_modules/firebase-admin/lib/auth/auth-api-request.js", "../../../node_modules/firebase-admin/lib/utils/crypto-signer.js", "../../../node_modules/firebase-admin/lib/auth/token-generator.js", "../../../node_modules/jose/lib/help/consts.js", "../../../node_modules/jose/lib/registry/ec_curves.js", "../../../node_modules/jose/lib/registry/iv_lengths.js", "../../../node_modules/jose/lib/registry/jwa.js", "../../../node_modules/jose/lib/registry/jwk.js", "../../../node_modules/jose/lib/registry/key_lengths.js", "../../../node_modules/jose/lib/registry/okp_curves.js", "../../../node_modules/jose/lib/registry/ecdh_derive_lengths.js", "../../../node_modules/jose/lib/registry/index.js", "../../../node_modules/jose/lib/help/generate_iv.js", "../../../node_modules/jose/lib/help/base64url.js", "../../../node_modules/jose/lib/errors.js", "../../../node_modules/jose/lib/help/runtime_support.js", "../../../node_modules/jose/lib/help/is_object.js", "../../../node_modules/@panva/asn1.js/lib/asn1/base/reporter.js", "../../../node_modules/@panva/asn1.js/lib/asn1/base/buffer.js", "../../../node_modules/@panva/asn1.js/lib/asn1/base/node.js", "../../../node_modules/@panva/asn1.js/lib/asn1/constants/der.js", "../../../node_modules/@panva/asn1.js/lib/asn1/encoders/der.js", "../../../node_modules/@panva/asn1.js/lib/asn1/encoders/pem.js", "../../../node_modules/@panva/asn1.js/lib/asn1/encoders/index.js", "../../../node_modules/@panva/asn1.js/lib/asn1/decoders/der.js", "../../../node_modules/@panva/asn1.js/lib/asn1/decoders/pem.js", "../../../node_modules/@panva/asn1.js/lib/asn1/decoders/index.js", "../../../node_modules/@panva/asn1.js/lib/asn1/api.js", "../../../node_modules/@panva/asn1.js/lib/asn1/base/index.js", "../../../node_modules/@panva/asn1.js/lib/asn1/constants/index.js", "../../../node_modules/@panva/asn1.js/lib/asn1.js", "../../../node_modules/jose/lib/help/asn1/oids.js", "../../../node_modules/jose/lib/help/asn1/algorithm_identifier.js", "../../../node_modules/jose/lib/help/asn1/ec_private_key.js", "../../../node_modules/jose/lib/help/asn1/private_key_info.js", "../../../node_modules/jose/lib/help/asn1/public_key_info.js", "../../../node_modules/jose/lib/help/asn1/private_key.js", "../../../node_modules/jose/lib/help/asn1/one_asymmetric_key.js", "../../../node_modules/jose/lib/help/asn1/rsa_private_key.js", "../../../node_modules/jose/lib/help/asn1/rsa_public_key.js", "../../../node_modules/jose/lib/help/asn1/index.js", "../../../node_modules/jose/lib/help/key_object.js", "../../../node_modules/jose/lib/help/rsa_primes.js", "../../../node_modules/jose/lib/help/key_utils.js", "../../../node_modules/jose/lib/jwk/thumbprint.js", "../../../node_modules/jose/lib/jwk/key/base.js", "../../../node_modules/jose/lib/jwk/key/rsa.js", "../../../node_modules/jose/lib/jwk/key/ec.js", "../../../node_modules/jose/lib/jwk/key/okp.js", "../../../node_modules/jose/lib/jwk/key/oct.js", "../../../node_modules/jose/lib/jwk/import.js", "../../../node_modules/jose/lib/jwk/generate.js", "../../../node_modules/jose/lib/jwk/key/none.js", "../../../node_modules/jose/lib/jwk/key/embedded.jwk.js", "../../../node_modules/jose/lib/jwk/key/embedded.x5c.js", "../../../node_modules/jose/lib/jwk/index.js", "../../../node_modules/jose/lib/jwks/keystore.js", "../../../node_modules/jose/lib/help/get_key.js", "../../../node_modules/jose/lib/help/deep_clone.js", "../../../node_modules/jose/lib/help/timing_safe_equal.js", "../../../node_modules/jose/lib/help/node_alg.js", "../../../node_modules/jose/lib/jwa/hmac.js", "../../../node_modules/jose/lib/help/ecdsa_signatures.js", "../../../node_modules/jose/lib/jwa/ecdsa.js", "../../../node_modules/jose/lib/jwa/eddsa.js", "../../../node_modules/jose/lib/jwa/rsassa_pss.js", "../../../node_modules/jose/lib/jwa/rsassa.js", "../../../node_modules/jose/lib/jwa/none.js", "../../../node_modules/jose/lib/help/uint64be.js", "../../../node_modules/jose/lib/jwa/aes_cbc_hmac_sha2.js", "../../../node_modules/jose/lib/jwa/aes_gcm.js", "../../../node_modules/jose/lib/jwa/rsaes.js", "../../../node_modules/jose/lib/jwa/aes_kw.js", "../../../node_modules/jose/lib/jwa/aes_gcm_kw.js", "../../../node_modules/jose/lib/jwa/pbes2.js", "../../../node_modules/jose/lib/jwa/ecdh/compute_secret.js", "../../../node_modules/jose/lib/jwa/ecdh/derive.js", "../../../node_modules/jose/lib/jwa/ecdh/dir.js", "../../../node_modules/jose/lib/jwa/ecdh/kw.js", "../../../node_modules/jose/lib/jwa/index.js", "../../../node_modules/jose/lib/help/validate_crit.js", "../../../node_modules/jose/lib/jwe/serializers.js", "../../../node_modules/jose/lib/jwe/generate_cek.js", "../../../node_modules/jose/lib/help/is_disjoint.js", "../../../node_modules/jose/lib/jwe/validate_headers.js", "../../../node_modules/jose/lib/jwe/encrypt.js", "../../../node_modules/jose/lib/jwks/index.js", "../../../node_modules/jose/lib/jwe/decrypt.js", "../../../node_modules/jose/lib/jwe/index.js", "../../../node_modules/jose/lib/jws/serializers.js", "../../../node_modules/jose/lib/jws/sign.js", "../../../node_modules/jose/lib/jws/verify.js", "../../../node_modules/jose/lib/jws/index.js", "../../../node_modules/jose/lib/jwt/decode.js", "../../../node_modules/jose/lib/help/secs.js", "../../../node_modules/jose/lib/help/epoch.js", "../../../node_modules/jose/lib/jwt/shared_validations.js", "../../../node_modules/jose/lib/jwt/sign.js", "../../../node_modules/jose/lib/jwt/verify.js", "../../../node_modules/jose/lib/jwt/profiles.js", "../../../node_modules/jose/lib/jwt/index.js", "../../../node_modules/jose/lib/index.js", "../../../node_modules/jwks-rsa/src/utils.js", "../../../node_modules/jwks-rsa/src/wrappers/request.js", "../../../node_modules/pseudomap/pseudomap.js", "../../../node_modules/pseudomap/map.js", "../../../node_modules/lru-memoizer/node_modules/yallist/yallist.js", "../../../node_modules/lru-memoizer/node_modules/lru-cache/lib/lru-cache.js", "../../../node_modules/lodash.clonedeep/index.js", "../../../node_modules/lru-memoizer/src/freeze.ts", "../../../node_modules/lru-memoizer/src/sync.ts", "../../../node_modules/lru-memoizer/src/async.ts", "../../../node_modules/lru-memoizer/src/index.ts", "../../../node_modules/jwks-rsa/src/wrappers/cache.js", "../../../node_modules/limiter/lib/tokenBucket.js", "../../../node_modules/limiter/lib/clock.js", "../../../node_modules/limiter/lib/rateLimiter.js", "../../../node_modules/limiter/index.js", "../../../node_modules/jwks-rsa/src/errors/JwksRateLimitError.js", "../../../node_modules/jwks-rsa/src/wrappers/rateLimit.js", "../../../node_modules/jwks-rsa/src/wrappers/interceptor.js", "../../../node_modules/jwks-rsa/src/wrappers/callbackSupport.js", "../../../node_modules/jwks-rsa/src/wrappers/index.js", "../../../node_modules/jwks-rsa/src/errors/JwksError.js", "../../../node_modules/jwks-rsa/src/errors/SigningKeyNotFoundError.js", "../../../node_modules/jwks-rsa/src/JwksClient.js", "../../../node_modules/jwks-rsa/src/errors/ArgumentError.js", "../../../node_modules/jwks-rsa/src/errors/index.js", "../../../node_modules/jwks-rsa/src/integrations/config.js", "../../../node_modules/jwks-rsa/src/integrations/hapi.js", "../../../node_modules/jwks-rsa/src/integrations/express.js", "../../../node_modules/jwks-rsa/src/integrations/koa.js", "../../../node_modules/jwks-rsa/src/integrations/passport.js", "../../../node_modules/jwks-rsa/src/index.js", "../../../node_modules/firebase-admin/lib/utils/jwt.js", "../../../node_modules/firebase-admin/lib/auth/token-verifier.js", "../../../node_modules/firebase-admin/lib/auth/user-record.js", "../../../node_modules/firebase-admin/lib/auth/base-auth.js", "../../../node_modules/firebase-admin/lib/auth/tenant-manager.js", "../../../node_modules/firebase-admin/lib/auth/project-config-manager.js", "../../../node_modules/firebase-admin/lib/auth/auth.js", "../../../node_modules/firebase-admin/lib/auth/index.js", "../../../node_modules/firebase-admin/lib/esm/auth/index.js"],
  "sourcesContent": ["/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserImportBuilder = exports.convertMultiFactorInfoToServerFormat = void 0;\nconst deep_copy_1 = require(\"../utils/deep-copy\");\nconst utils = require(\"../utils\");\nconst validator = require(\"../utils/validator\");\nconst error_1 = require(\"../utils/error\");\n/**\n * Converts a client format second factor object to server format.\n * @param multiFactorInfo - The client format second factor.\n * @returns The corresponding AuthFactorInfo server request format.\n */\nfunction convertMultiFactorInfoToServerFormat(multiFactorInfo) {\n    let enrolledAt;\n    if (typeof multiFactorInfo.enrollmentTime !== 'undefined') {\n        if (validator.isUTCDateString(multiFactorInfo.enrollmentTime)) {\n            // Convert from UTC date string (client side format) to ISO date string (server side format).\n            enrolledAt = new Date(multiFactorInfo.enrollmentTime).toISOString();\n        }\n        else {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ENROLLMENT_TIME, `The second factor \"enrollmentTime\" for \"${multiFactorInfo.uid}\" must be a valid ` +\n                'UTC date string.');\n        }\n    }\n    // Currently only phone second factors are supported.\n    if (isPhoneFactor(multiFactorInfo)) {\n        // If any required field is missing or invalid, validation will still fail later.\n        const authFactorInfo = {\n            mfaEnrollmentId: multiFactorInfo.uid,\n            displayName: multiFactorInfo.displayName,\n            // Required for all phone second factors.\n            phoneInfo: multiFactorInfo.phoneNumber,\n            enrolledAt,\n        };\n        for (const objKey in authFactorInfo) {\n            if (typeof authFactorInfo[objKey] === 'undefined') {\n                delete authFactorInfo[objKey];\n            }\n        }\n        return authFactorInfo;\n    }\n    else {\n        // Unsupported second factor.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.UNSUPPORTED_SECOND_FACTOR, `Unsupported second factor \"${JSON.stringify(multiFactorInfo)}\" provided.`);\n    }\n}\nexports.convertMultiFactorInfoToServerFormat = convertMultiFactorInfoToServerFormat;\nfunction isPhoneFactor(multiFactorInfo) {\n    return multiFactorInfo.factorId === 'phone';\n}\n/**\n * @param {any} obj The object to check for number field within.\n * @param {string} key The entry key.\n * @returns {number} The corresponding number if available. Otherwise, NaN.\n */\nfunction getNumberField(obj, key) {\n    if (typeof obj[key] !== 'undefined' && obj[key] !== null) {\n        return parseInt(obj[key].toString(), 10);\n    }\n    return NaN;\n}\n/**\n * Converts a UserImportRecord to a UploadAccountUser object. Throws an error when invalid\n * fields are provided.\n * @param {UserImportRecord} user The UserImportRecord to conver to UploadAccountUser.\n * @param {ValidatorFunction=} userValidator The user validator function.\n * @returns {UploadAccountUser} The corresponding UploadAccountUser to return.\n */\nfunction populateUploadAccountUser(user, userValidator) {\n    const result = {\n        localId: user.uid,\n        email: user.email,\n        emailVerified: user.emailVerified,\n        displayName: user.displayName,\n        disabled: user.disabled,\n        photoUrl: user.photoURL,\n        phoneNumber: user.phoneNumber,\n        providerUserInfo: [],\n        mfaInfo: [],\n        tenantId: user.tenantId,\n        customAttributes: user.customClaims && JSON.stringify(user.customClaims),\n    };\n    if (typeof user.passwordHash !== 'undefined') {\n        if (!validator.isBuffer(user.passwordHash)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PASSWORD_HASH);\n        }\n        result.passwordHash = utils.toWebSafeBase64(user.passwordHash);\n    }\n    if (typeof user.passwordSalt !== 'undefined') {\n        if (!validator.isBuffer(user.passwordSalt)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PASSWORD_SALT);\n        }\n        result.salt = utils.toWebSafeBase64(user.passwordSalt);\n    }\n    if (validator.isNonNullObject(user.metadata)) {\n        if (validator.isNonEmptyString(user.metadata.creationTime)) {\n            result.createdAt = new Date(user.metadata.creationTime).getTime();\n        }\n        if (validator.isNonEmptyString(user.metadata.lastSignInTime)) {\n            result.lastLoginAt = new Date(user.metadata.lastSignInTime).getTime();\n        }\n    }\n    if (validator.isArray(user.providerData)) {\n        user.providerData.forEach((providerData) => {\n            result.providerUserInfo.push({\n                providerId: providerData.providerId,\n                rawId: providerData.uid,\n                email: providerData.email,\n                displayName: providerData.displayName,\n                photoUrl: providerData.photoURL,\n            });\n        });\n    }\n    // Convert user.multiFactor.enrolledFactors to server format.\n    if (validator.isNonNullObject(user.multiFactor) &&\n        validator.isNonEmptyArray(user.multiFactor.enrolledFactors)) {\n        user.multiFactor.enrolledFactors.forEach((multiFactorInfo) => {\n            result.mfaInfo.push(convertMultiFactorInfoToServerFormat(multiFactorInfo));\n        });\n    }\n    // Remove blank fields.\n    let key;\n    for (key in result) {\n        if (typeof result[key] === 'undefined') {\n            delete result[key];\n        }\n    }\n    if (result.providerUserInfo.length === 0) {\n        delete result.providerUserInfo;\n    }\n    if (result.mfaInfo.length === 0) {\n        delete result.mfaInfo;\n    }\n    // Validate the constructured user individual request. This will throw if an error\n    // is detected.\n    if (typeof userValidator === 'function') {\n        userValidator(result);\n    }\n    return result;\n}\n/**\n * Class that provides a helper for building/validating uploadAccount requests and\n * UserImportResult responses.\n */\nclass UserImportBuilder {\n    /**\n     * @param {UserImportRecord[]} users The list of user records to import.\n     * @param {UserImportOptions=} options The import options which includes hashing\n     *     algorithm details.\n     * @param {ValidatorFunction=} userRequestValidator The user request validator function.\n     * @constructor\n     */\n    constructor(users, options, userRequestValidator) {\n        this.requiresHashOptions = false;\n        this.validatedUsers = [];\n        this.userImportResultErrors = [];\n        this.indexMap = {};\n        this.validatedUsers = this.populateUsers(users, userRequestValidator);\n        this.validatedOptions = this.populateOptions(options, this.requiresHashOptions);\n    }\n    /**\n     * Returns the corresponding constructed uploadAccount request.\n     * @returns {UploadAccountRequest} The constructed uploadAccount request.\n     */\n    buildRequest() {\n        const users = this.validatedUsers.map((user) => {\n            return (0, deep_copy_1.deepCopy)(user);\n        });\n        return (0, deep_copy_1.deepExtend)({ users }, (0, deep_copy_1.deepCopy)(this.validatedOptions));\n    }\n    /**\n     * Populates the UserImportResult using the client side detected errors and the server\n     * side returned errors.\n     * @returns {UserImportResult} The user import result based on the returned failed\n     *     uploadAccount response.\n     */\n    buildResponse(failedUploads) {\n        // Initialize user import result.\n        const importResult = {\n            successCount: this.validatedUsers.length,\n            failureCount: this.userImportResultErrors.length,\n            errors: (0, deep_copy_1.deepCopy)(this.userImportResultErrors),\n        };\n        importResult.failureCount += failedUploads.length;\n        importResult.successCount -= failedUploads.length;\n        failedUploads.forEach((failedUpload) => {\n            importResult.errors.push({\n                // Map backend request index to original developer provided array index.\n                index: this.indexMap[failedUpload.index],\n                error: new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_USER_IMPORT, failedUpload.message),\n            });\n        });\n        // Sort errors by index.\n        importResult.errors.sort((a, b) => {\n            return a.index - b.index;\n        });\n        // Return sorted result.\n        return importResult;\n    }\n    /**\n     * Validates and returns the hashing options of the uploadAccount request.\n     * Throws an error whenever an invalid or missing options is detected.\n     * @param {UserImportOptions} options The UserImportOptions.\n     * @param {boolean} requiresHashOptions Whether to require hash options.\n     * @returns {UploadAccountOptions} The populated UploadAccount options.\n     */\n    populateOptions(options, requiresHashOptions) {\n        let populatedOptions;\n        if (!requiresHashOptions) {\n            return {};\n        }\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"UserImportOptions\" are required when importing users with passwords.');\n        }\n        if (!validator.isNonNullObject(options.hash)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISSING_HASH_ALGORITHM, '\"hash.algorithm\" is missing from the provided \"UserImportOptions\".');\n        }\n        if (typeof options.hash.algorithm === 'undefined' ||\n            !validator.isNonEmptyString(options.hash.algorithm)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_ALGORITHM, '\"hash.algorithm\" must be a string matching the list of supported algorithms.');\n        }\n        let rounds;\n        switch (options.hash.algorithm) {\n            case 'HMAC_SHA512':\n            case 'HMAC_SHA256':\n            case 'HMAC_SHA1':\n            case 'HMAC_MD5':\n                if (!validator.isBuffer(options.hash.key)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_KEY, 'A non-empty \"hash.key\" byte buffer must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                populatedOptions = {\n                    hashAlgorithm: options.hash.algorithm,\n                    signerKey: utils.toWebSafeBase64(options.hash.key),\n                };\n                break;\n            case 'MD5':\n            case 'SHA1':\n            case 'SHA256':\n            case 'SHA512': {\n                // MD5 is [0,8192] but SHA1, SHA256, and SHA512 are [1,8192]\n                rounds = getNumberField(options.hash, 'rounds');\n                const minRounds = options.hash.algorithm === 'MD5' ? 0 : 1;\n                if (isNaN(rounds) || rounds < minRounds || rounds > 8192) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_ROUNDS, `A valid \"hash.rounds\" number between ${minRounds} and 8192 must be provided for ` +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                populatedOptions = {\n                    hashAlgorithm: options.hash.algorithm,\n                    rounds,\n                };\n                break;\n            }\n            case 'PBKDF_SHA1':\n            case 'PBKDF2_SHA256':\n                rounds = getNumberField(options.hash, 'rounds');\n                if (isNaN(rounds) || rounds < 0 || rounds > 120000) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_ROUNDS, 'A valid \"hash.rounds\" number between 0 and 120000 must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                populatedOptions = {\n                    hashAlgorithm: options.hash.algorithm,\n                    rounds,\n                };\n                break;\n            case 'SCRYPT': {\n                if (!validator.isBuffer(options.hash.key)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_KEY, 'A \"hash.key\" byte buffer must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                rounds = getNumberField(options.hash, 'rounds');\n                if (isNaN(rounds) || rounds <= 0 || rounds > 8) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_ROUNDS, 'A valid \"hash.rounds\" number between 1 and 8 must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                const memoryCost = getNumberField(options.hash, 'memoryCost');\n                if (isNaN(memoryCost) || memoryCost <= 0 || memoryCost > 14) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_MEMORY_COST, 'A valid \"hash.memoryCost\" number between 1 and 14 must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                if (typeof options.hash.saltSeparator !== 'undefined' &&\n                    !validator.isBuffer(options.hash.saltSeparator)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_SALT_SEPARATOR, '\"hash.saltSeparator\" must be a byte buffer.');\n                }\n                populatedOptions = {\n                    hashAlgorithm: options.hash.algorithm,\n                    signerKey: utils.toWebSafeBase64(options.hash.key),\n                    rounds,\n                    memoryCost,\n                    saltSeparator: utils.toWebSafeBase64(options.hash.saltSeparator || Buffer.from('')),\n                };\n                break;\n            }\n            case 'BCRYPT':\n                populatedOptions = {\n                    hashAlgorithm: options.hash.algorithm,\n                };\n                break;\n            case 'STANDARD_SCRYPT': {\n                const cpuMemCost = getNumberField(options.hash, 'memoryCost');\n                if (isNaN(cpuMemCost)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_MEMORY_COST, 'A valid \"hash.memoryCost\" number must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                const parallelization = getNumberField(options.hash, 'parallelization');\n                if (isNaN(parallelization)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_PARALLELIZATION, 'A valid \"hash.parallelization\" number must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                const blockSize = getNumberField(options.hash, 'blockSize');\n                if (isNaN(blockSize)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_BLOCK_SIZE, 'A valid \"hash.blockSize\" number must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                const dkLen = getNumberField(options.hash, 'derivedKeyLength');\n                if (isNaN(dkLen)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_DERIVED_KEY_LENGTH, 'A valid \"hash.derivedKeyLength\" number must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                populatedOptions = {\n                    hashAlgorithm: options.hash.algorithm,\n                    cpuMemCost,\n                    parallelization,\n                    blockSize,\n                    dkLen,\n                };\n                break;\n            }\n            default:\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_ALGORITHM, `Unsupported hash algorithm provider \"${options.hash.algorithm}\".`);\n        }\n        return populatedOptions;\n    }\n    /**\n     * Validates and returns the users list of the uploadAccount request.\n     * Whenever a user with an error is detected, the error is cached and will later be\n     * merged into the user import result. This allows the processing of valid users without\n     * failing early on the first error detected.\n     * @param {UserImportRecord[]} users The UserImportRecords to convert to UnploadAccountUser\n     *     objects.\n     * @param {ValidatorFunction=} userValidator The user validator function.\n     * @returns {UploadAccountUser[]} The populated uploadAccount users.\n     */\n    populateUsers(users, userValidator) {\n        const populatedUsers = [];\n        users.forEach((user, index) => {\n            try {\n                const result = populateUploadAccountUser(user, userValidator);\n                if (typeof result.passwordHash !== 'undefined') {\n                    this.requiresHashOptions = true;\n                }\n                // Only users that pass client screening will be passed to backend for processing.\n                populatedUsers.push(result);\n                // Map user's index (the one to be sent to backend) to original developer provided array.\n                this.indexMap[populatedUsers.length - 1] = index;\n            }\n            catch (error) {\n                // Save the client side error with respect to the developer provided array.\n                this.userImportResultErrors.push({\n                    index,\n                    error,\n                });\n            }\n        });\n        return populatedUsers;\n    }\n}\nexports.UserImportBuilder = UserImportBuilder;\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActionCodeSettingsBuilder = void 0;\nconst validator = require(\"../utils/validator\");\nconst error_1 = require(\"../utils/error\");\n/**\n * Defines the ActionCodeSettings builder class used to convert the\n * ActionCodeSettings object to its corresponding server request.\n *\n * @internal\n */\nclass ActionCodeSettingsBuilder {\n    /**\n     * ActionCodeSettingsBuilder constructor.\n     *\n     * @param {ActionCodeSettings} actionCodeSettings The ActionCodeSettings\n     *     object used to initiliaze this server request builder.\n     * @constructor\n     */\n    constructor(actionCodeSettings) {\n        if (!validator.isNonNullObject(actionCodeSettings)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings\" must be a non-null object.');\n        }\n        if (typeof actionCodeSettings.url === 'undefined') {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISSING_CONTINUE_URI);\n        }\n        else if (!validator.isURL(actionCodeSettings.url)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONTINUE_URI);\n        }\n        this.continueUrl = actionCodeSettings.url;\n        if (typeof actionCodeSettings.handleCodeInApp !== 'undefined' &&\n            !validator.isBoolean(actionCodeSettings.handleCodeInApp)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings.handleCodeInApp\" must be a boolean.');\n        }\n        this.canHandleCodeInApp = actionCodeSettings.handleCodeInApp || false;\n        if (typeof actionCodeSettings.dynamicLinkDomain !== 'undefined' &&\n            !validator.isNonEmptyString(actionCodeSettings.dynamicLinkDomain)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_DYNAMIC_LINK_DOMAIN);\n        }\n        this.dynamicLinkDomain = actionCodeSettings.dynamicLinkDomain;\n        if (typeof actionCodeSettings.iOS !== 'undefined') {\n            if (!validator.isNonNullObject(actionCodeSettings.iOS)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings.iOS\" must be a valid non-null object.');\n            }\n            else if (typeof actionCodeSettings.iOS.bundleId === 'undefined') {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISSING_IOS_BUNDLE_ID);\n            }\n            else if (!validator.isNonEmptyString(actionCodeSettings.iOS.bundleId)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings.iOS.bundleId\" must be a valid non-empty string.');\n            }\n            this.ibi = actionCodeSettings.iOS.bundleId;\n        }\n        if (typeof actionCodeSettings.android !== 'undefined') {\n            if (!validator.isNonNullObject(actionCodeSettings.android)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings.android\" must be a valid non-null object.');\n            }\n            else if (typeof actionCodeSettings.android.packageName === 'undefined') {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISSING_ANDROID_PACKAGE_NAME);\n            }\n            else if (!validator.isNonEmptyString(actionCodeSettings.android.packageName)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings.android.packageName\" must be a valid non-empty string.');\n            }\n            else if (typeof actionCodeSettings.android.minimumVersion !== 'undefined' &&\n                !validator.isNonEmptyString(actionCodeSettings.android.minimumVersion)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings.android.minimumVersion\" must be a valid non-empty string.');\n            }\n            else if (typeof actionCodeSettings.android.installApp !== 'undefined' &&\n                !validator.isBoolean(actionCodeSettings.android.installApp)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings.android.installApp\" must be a valid boolean.');\n            }\n            this.apn = actionCodeSettings.android.packageName;\n            this.amv = actionCodeSettings.android.minimumVersion;\n            this.installApp = actionCodeSettings.android.installApp || false;\n        }\n    }\n    /**\n     * Returns the corresponding constructed server request corresponding to the\n     * current ActionCodeSettings.\n     *\n     * @returns The constructed EmailActionCodeRequest request.\n     */\n    buildRequest() {\n        const request = {\n            continueUrl: this.continueUrl,\n            canHandleCodeInApp: this.canHandleCodeInApp,\n            dynamicLinkDomain: this.dynamicLinkDomain,\n            androidPackageName: this.apn,\n            androidMinimumVersion: this.amv,\n            androidInstallApp: this.installApp,\n            iOSBundleId: this.ibi,\n        };\n        // Remove all null and undefined fields from request.\n        for (const key in request) {\n            if (Object.prototype.hasOwnProperty.call(request, key)) {\n                if (typeof request[key] === 'undefined' || request[key] === null) {\n                    delete request[key];\n                }\n            }\n        }\n        return request;\n    }\n}\nexports.ActionCodeSettingsBuilder = ActionCodeSettingsBuilder;\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SmsRegionsAuthConfig = exports.OIDCConfig = exports.SAMLConfig = exports.EmailSignInConfig = exports.validateTestPhoneNumbers = exports.MultiFactorAuthConfig = exports.MAXIMUM_TEST_PHONE_NUMBERS = void 0;\nconst validator = require(\"../utils/validator\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\nconst error_1 = require(\"../utils/error\");\n/** A maximum of 10 test phone number / code pairs can be configured. */\nexports.MAXIMUM_TEST_PHONE_NUMBERS = 10;\n/** Client Auth factor type to server auth factor type mapping. */\nconst AUTH_FACTOR_CLIENT_TO_SERVER_TYPE = {\n    phone: 'PHONE_SMS',\n};\n/** Server Auth factor type to client auth factor type mapping. */\nconst AUTH_FACTOR_SERVER_TO_CLIENT_TYPE = Object.keys(AUTH_FACTOR_CLIENT_TO_SERVER_TYPE)\n    .reduce((res, key) => {\n    res[AUTH_FACTOR_CLIENT_TO_SERVER_TYPE[key]] = key;\n    return res;\n}, {});\n/**\n * Defines the multi-factor config class used to convert client side MultiFactorConfig\n * to a format that is understood by the Auth server.\n */\nclass MultiFactorAuthConfig {\n    /**\n     * The MultiFactorAuthConfig constructor.\n     *\n     * @param response - The server side response used to initialize the\n     *     MultiFactorAuthConfig object.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        if (typeof response.state === 'undefined') {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid multi-factor configuration response');\n        }\n        this.state = response.state;\n        this.factorIds = [];\n        (response.enabledProviders || []).forEach((enabledProvider) => {\n            // Ignore unsupported types. It is possible the current admin SDK version is\n            // not up to date and newer backend types are supported.\n            if (typeof AUTH_FACTOR_SERVER_TO_CLIENT_TYPE[enabledProvider] !== 'undefined') {\n                this.factorIds.push(AUTH_FACTOR_SERVER_TO_CLIENT_TYPE[enabledProvider]);\n            }\n        });\n    }\n    /**\n     * Static method to convert a client side request to a MultiFactorAuthServerConfig.\n     * Throws an error if validation fails.\n     *\n     * @param options - The options object to convert to a server request.\n     * @returns The resulting server request.\n     * @internal\n     */\n    static buildServerRequest(options) {\n        const request = {};\n        MultiFactorAuthConfig.validate(options);\n        if (Object.prototype.hasOwnProperty.call(options, 'state')) {\n            request.state = options.state;\n        }\n        if (Object.prototype.hasOwnProperty.call(options, 'factorIds')) {\n            (options.factorIds || []).forEach((factorId) => {\n                if (typeof request.enabledProviders === 'undefined') {\n                    request.enabledProviders = [];\n                }\n                request.enabledProviders.push(AUTH_FACTOR_CLIENT_TO_SERVER_TYPE[factorId]);\n            });\n            // In case an empty array is passed. Ensure it gets populated so the array is cleared.\n            if (options.factorIds && options.factorIds.length === 0) {\n                request.enabledProviders = [];\n            }\n        }\n        return request;\n    }\n    /**\n     * Validates the MultiFactorConfig options object. Throws an error on failure.\n     *\n     * @param options - The options object to validate.\n     */\n    static validate(options) {\n        const validKeys = {\n            state: true,\n            factorIds: true,\n        };\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"MultiFactorConfig\" must be a non-null object.');\n        }\n        // Check for unsupported top level attributes.\n        for (const key in options) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid MultiFactorConfig parameter.`);\n            }\n        }\n        // Validate content.\n        if (typeof options.state !== 'undefined' &&\n            options.state !== 'ENABLED' &&\n            options.state !== 'DISABLED') {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"MultiFactorConfig.state\" must be either \"ENABLED\" or \"DISABLED\".');\n        }\n        if (typeof options.factorIds !== 'undefined') {\n            if (!validator.isArray(options.factorIds)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"MultiFactorConfig.factorIds\" must be an array of valid \"AuthFactorTypes\".');\n            }\n            // Validate content of array.\n            options.factorIds.forEach((factorId) => {\n                if (typeof AUTH_FACTOR_CLIENT_TO_SERVER_TYPE[factorId] === 'undefined') {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${factorId}\" is not a valid \"AuthFactorType\".`);\n                }\n            });\n        }\n    }\n    /** @returns The plain object representation of the multi-factor config instance. */\n    toJSON() {\n        return {\n            state: this.state,\n            factorIds: this.factorIds,\n        };\n    }\n}\nexports.MultiFactorAuthConfig = MultiFactorAuthConfig;\n/**\n * Validates the provided map of test phone number / code pairs.\n * @param testPhoneNumbers - The phone number / code pairs to validate.\n */\nfunction validateTestPhoneNumbers(testPhoneNumbers) {\n    if (!validator.isObject(testPhoneNumbers)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"testPhoneNumbers\" must be a map of phone number / code pairs.');\n    }\n    if (Object.keys(testPhoneNumbers).length > exports.MAXIMUM_TEST_PHONE_NUMBERS) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MAXIMUM_TEST_PHONE_NUMBER_EXCEEDED);\n    }\n    for (const phoneNumber in testPhoneNumbers) {\n        // Validate phone number.\n        if (!validator.isPhoneNumber(phoneNumber)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TESTING_PHONE_NUMBER, `\"${phoneNumber}\" is not a valid E.164 standard compliant phone number.`);\n        }\n        // Validate code.\n        if (!validator.isString(testPhoneNumbers[phoneNumber]) ||\n            !/^[\\d]{6}$/.test(testPhoneNumbers[phoneNumber])) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TESTING_PHONE_NUMBER, `\"${testPhoneNumbers[phoneNumber]}\" is not a valid 6 digit code string.`);\n        }\n    }\n}\nexports.validateTestPhoneNumbers = validateTestPhoneNumbers;\n/**\n * Defines the email sign-in config class used to convert client side EmailSignInConfig\n * to a format that is understood by the Auth server.\n *\n * @internal\n */\nclass EmailSignInConfig {\n    /**\n     * The EmailSignInConfig constructor.\n     *\n     * @param response - The server side response used to initialize the\n     *     EmailSignInConfig object.\n     * @constructor\n     */\n    constructor(response) {\n        if (typeof response.allowPasswordSignup === 'undefined') {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid email sign-in configuration response');\n        }\n        this.enabled = response.allowPasswordSignup;\n        this.passwordRequired = !response.enableEmailLinkSignin;\n    }\n    /**\n     * Static method to convert a client side request to a EmailSignInConfigServerRequest.\n     * Throws an error if validation fails.\n     *\n     * @param options - The options object to convert to a server request.\n     * @returns The resulting server request.\n     * @internal\n     */\n    static buildServerRequest(options) {\n        const request = {};\n        EmailSignInConfig.validate(options);\n        if (Object.prototype.hasOwnProperty.call(options, 'enabled')) {\n            request.allowPasswordSignup = options.enabled;\n        }\n        if (Object.prototype.hasOwnProperty.call(options, 'passwordRequired')) {\n            request.enableEmailLinkSignin = !options.passwordRequired;\n        }\n        return request;\n    }\n    /**\n     * Validates the EmailSignInConfig options object. Throws an error on failure.\n     *\n     * @param options - The options object to validate.\n     */\n    static validate(options) {\n        // TODO: Validate the request.\n        const validKeys = {\n            enabled: true,\n            passwordRequired: true,\n        };\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"EmailSignInConfig\" must be a non-null object.');\n        }\n        // Check for unsupported top level attributes.\n        for (const key in options) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${key}\" is not a valid EmailSignInConfig parameter.`);\n            }\n        }\n        // Validate content.\n        if (typeof options.enabled !== 'undefined' &&\n            !validator.isBoolean(options.enabled)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"EmailSignInConfig.enabled\" must be a boolean.');\n        }\n        if (typeof options.passwordRequired !== 'undefined' &&\n            !validator.isBoolean(options.passwordRequired)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"EmailSignInConfig.passwordRequired\" must be a boolean.');\n        }\n    }\n    /** @returns The plain object representation of the email sign-in config. */\n    toJSON() {\n        return {\n            enabled: this.enabled,\n            passwordRequired: this.passwordRequired,\n        };\n    }\n}\nexports.EmailSignInConfig = EmailSignInConfig;\n/**\n * Defines the SAMLConfig class used to convert a client side configuration to its\n * server side representation.\n *\n * @internal\n */\nclass SAMLConfig {\n    /**\n     * The SAMLConfig constructor.\n     *\n     * @param response - The server side response used to initialize the SAMLConfig object.\n     * @constructor\n     */\n    constructor(response) {\n        if (!response ||\n            !response.idpConfig ||\n            !response.idpConfig.idpEntityId ||\n            !response.idpConfig.ssoUrl ||\n            !response.spConfig ||\n            !response.spConfig.spEntityId ||\n            !response.name ||\n            !(validator.isString(response.name) &&\n                SAMLConfig.getProviderIdFromResourceName(response.name))) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid SAML configuration response');\n        }\n        const providerId = SAMLConfig.getProviderIdFromResourceName(response.name);\n        if (!providerId) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid SAML configuration response');\n        }\n        this.providerId = providerId;\n        // RP config.\n        this.rpEntityId = response.spConfig.spEntityId;\n        this.callbackURL = response.spConfig.callbackUri;\n        // IdP config.\n        this.idpEntityId = response.idpConfig.idpEntityId;\n        this.ssoURL = response.idpConfig.ssoUrl;\n        this.enableRequestSigning = !!response.idpConfig.signRequest;\n        const x509Certificates = [];\n        for (const cert of (response.idpConfig.idpCertificates || [])) {\n            if (cert.x509Certificate) {\n                x509Certificates.push(cert.x509Certificate);\n            }\n        }\n        this.x509Certificates = x509Certificates;\n        // When enabled is undefined, it takes its default value of false.\n        this.enabled = !!response.enabled;\n        this.displayName = response.displayName;\n    }\n    /**\n     * Converts a client side request to a SAMLConfigServerRequest which is the format\n     * accepted by the backend server.\n     * Throws an error if validation fails. If the request is not a SAMLConfig request,\n     * returns null.\n     *\n     * @param options - The options object to convert to a server request.\n     * @param ignoreMissingFields - Whether to ignore missing fields.\n     * @returns The resulting server request or null if not valid.\n     */\n    static buildServerRequest(options, ignoreMissingFields = false) {\n        const makeRequest = validator.isNonNullObject(options) &&\n            (options.providerId || ignoreMissingFields);\n        if (!makeRequest) {\n            return null;\n        }\n        const request = {};\n        // Validate options.\n        SAMLConfig.validate(options, ignoreMissingFields);\n        request.enabled = options.enabled;\n        request.displayName = options.displayName;\n        // IdP config.\n        if (options.idpEntityId || options.ssoURL || options.x509Certificates) {\n            request.idpConfig = {\n                idpEntityId: options.idpEntityId,\n                ssoUrl: options.ssoURL,\n                signRequest: options.enableRequestSigning,\n                idpCertificates: typeof options.x509Certificates === 'undefined' ? undefined : [],\n            };\n            if (options.x509Certificates) {\n                for (const cert of (options.x509Certificates || [])) {\n                    request.idpConfig.idpCertificates.push({ x509Certificate: cert });\n                }\n            }\n        }\n        // RP config.\n        if (options.callbackURL || options.rpEntityId) {\n            request.spConfig = {\n                spEntityId: options.rpEntityId,\n                callbackUri: options.callbackURL,\n            };\n        }\n        return request;\n    }\n    /**\n     * Returns the provider ID corresponding to the resource name if available.\n     *\n     * @param resourceName - The server side resource name.\n     * @returns The provider ID corresponding to the resource, null otherwise.\n     */\n    static getProviderIdFromResourceName(resourceName) {\n        // name is of form projects/project1/inboundSamlConfigs/providerId1\n        const matchProviderRes = resourceName.match(/\\/inboundSamlConfigs\\/(saml\\..*)$/);\n        if (!matchProviderRes || matchProviderRes.length < 2) {\n            return null;\n        }\n        return matchProviderRes[1];\n    }\n    /**\n     * @param providerId - The provider ID to check.\n     * @returns Whether the provider ID corresponds to a SAML provider.\n     */\n    static isProviderId(providerId) {\n        return validator.isNonEmptyString(providerId) && providerId.indexOf('saml.') === 0;\n    }\n    /**\n     * Validates the SAMLConfig options object. Throws an error on failure.\n     *\n     * @param options - The options object to validate.\n     * @param ignoreMissingFields - Whether to ignore missing fields.\n     */\n    static validate(options, ignoreMissingFields = false) {\n        const validKeys = {\n            enabled: true,\n            displayName: true,\n            providerId: true,\n            idpEntityId: true,\n            ssoURL: true,\n            x509Certificates: true,\n            rpEntityId: true,\n            callbackURL: true,\n            enableRequestSigning: true,\n        };\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig\" must be a valid non-null object.');\n        }\n        // Check for unsupported top level attributes.\n        for (const key in options) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid SAML config parameter.`);\n            }\n        }\n        // Required fields.\n        if (validator.isNonEmptyString(options.providerId)) {\n            if (options.providerId.indexOf('saml.') !== 0) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID, '\"SAMLAuthProviderConfig.providerId\" must be a valid non-empty string prefixed with \"saml.\".');\n            }\n        }\n        else if (!ignoreMissingFields) {\n            // providerId is required and not provided correctly.\n            throw new error_1.FirebaseAuthError(!options.providerId ? error_1.AuthClientErrorCode.MISSING_PROVIDER_ID : error_1.AuthClientErrorCode.INVALID_PROVIDER_ID, '\"SAMLAuthProviderConfig.providerId\" must be a valid non-empty string prefixed with \"saml.\".');\n        }\n        if (!(ignoreMissingFields && typeof options.idpEntityId === 'undefined') &&\n            !validator.isNonEmptyString(options.idpEntityId)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.idpEntityId\" must be a valid non-empty string.');\n        }\n        if (!(ignoreMissingFields && typeof options.ssoURL === 'undefined') &&\n            !validator.isURL(options.ssoURL)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.ssoURL\" must be a valid URL string.');\n        }\n        if (!(ignoreMissingFields && typeof options.rpEntityId === 'undefined') &&\n            !validator.isNonEmptyString(options.rpEntityId)) {\n            throw new error_1.FirebaseAuthError(!options.rpEntityId ? error_1.AuthClientErrorCode.MISSING_SAML_RELYING_PARTY_CONFIG :\n                error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.rpEntityId\" must be a valid non-empty string.');\n        }\n        if (!(ignoreMissingFields && typeof options.callbackURL === 'undefined') &&\n            !validator.isURL(options.callbackURL)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.callbackURL\" must be a valid URL string.');\n        }\n        if (!(ignoreMissingFields && typeof options.x509Certificates === 'undefined') &&\n            !validator.isArray(options.x509Certificates)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.x509Certificates\" must be a valid array of X509 certificate strings.');\n        }\n        (options.x509Certificates || []).forEach((cert) => {\n            if (!validator.isNonEmptyString(cert)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.x509Certificates\" must be a valid array of X509 certificate strings.');\n            }\n        });\n        if (typeof options.enableRequestSigning !== 'undefined' &&\n            !validator.isBoolean(options.enableRequestSigning)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.enableRequestSigning\" must be a boolean.');\n        }\n        if (typeof options.enabled !== 'undefined' &&\n            !validator.isBoolean(options.enabled)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.enabled\" must be a boolean.');\n        }\n        if (typeof options.displayName !== 'undefined' &&\n            !validator.isString(options.displayName)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.displayName\" must be a valid string.');\n        }\n    }\n    /** @returns The plain object representation of the SAMLConfig. */\n    toJSON() {\n        return {\n            enabled: this.enabled,\n            displayName: this.displayName,\n            providerId: this.providerId,\n            idpEntityId: this.idpEntityId,\n            ssoURL: this.ssoURL,\n            x509Certificates: (0, deep_copy_1.deepCopy)(this.x509Certificates),\n            rpEntityId: this.rpEntityId,\n            callbackURL: this.callbackURL,\n            enableRequestSigning: this.enableRequestSigning,\n        };\n    }\n}\nexports.SAMLConfig = SAMLConfig;\n/**\n * Defines the OIDCConfig class used to convert a client side configuration to its\n * server side representation.\n *\n * @internal\n */\nclass OIDCConfig {\n    /**\n     * The OIDCConfig constructor.\n     *\n     * @param response - The server side response used to initialize the OIDCConfig object.\n     * @constructor\n     */\n    constructor(response) {\n        if (!response ||\n            !response.issuer ||\n            !response.clientId ||\n            !response.name ||\n            !(validator.isString(response.name) &&\n                OIDCConfig.getProviderIdFromResourceName(response.name))) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid OIDC configuration response');\n        }\n        const providerId = OIDCConfig.getProviderIdFromResourceName(response.name);\n        if (!providerId) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid SAML configuration response');\n        }\n        this.providerId = providerId;\n        this.clientId = response.clientId;\n        this.issuer = response.issuer;\n        // When enabled is undefined, it takes its default value of false.\n        this.enabled = !!response.enabled;\n        this.displayName = response.displayName;\n        if (typeof response.clientSecret !== 'undefined') {\n            this.clientSecret = response.clientSecret;\n        }\n        if (typeof response.responseType !== 'undefined') {\n            this.responseType = response.responseType;\n        }\n    }\n    /**\n     * Converts a client side request to a OIDCConfigServerRequest which is the format\n     * accepted by the backend server.\n     * Throws an error if validation fails. If the request is not a OIDCConfig request,\n     * returns null.\n     *\n     * @param options - The options object to convert to a server request.\n     * @param ignoreMissingFields - Whether to ignore missing fields.\n     * @returns The resulting server request or null if not valid.\n     */\n    static buildServerRequest(options, ignoreMissingFields = false) {\n        const makeRequest = validator.isNonNullObject(options) &&\n            (options.providerId || ignoreMissingFields);\n        if (!makeRequest) {\n            return null;\n        }\n        const request = {};\n        // Validate options.\n        OIDCConfig.validate(options, ignoreMissingFields);\n        request.enabled = options.enabled;\n        request.displayName = options.displayName;\n        request.issuer = options.issuer;\n        request.clientId = options.clientId;\n        if (typeof options.clientSecret !== 'undefined') {\n            request.clientSecret = options.clientSecret;\n        }\n        if (typeof options.responseType !== 'undefined') {\n            request.responseType = options.responseType;\n        }\n        return request;\n    }\n    /**\n     * Returns the provider ID corresponding to the resource name if available.\n     *\n     * @param resourceName - The server side resource name\n     * @returns The provider ID corresponding to the resource, null otherwise.\n     */\n    static getProviderIdFromResourceName(resourceName) {\n        // name is of form projects/project1/oauthIdpConfigs/providerId1\n        const matchProviderRes = resourceName.match(/\\/oauthIdpConfigs\\/(oidc\\..*)$/);\n        if (!matchProviderRes || matchProviderRes.length < 2) {\n            return null;\n        }\n        return matchProviderRes[1];\n    }\n    /**\n     * @param providerId - The provider ID to check.\n     * @returns Whether the provider ID corresponds to an OIDC provider.\n     */\n    static isProviderId(providerId) {\n        return validator.isNonEmptyString(providerId) && providerId.indexOf('oidc.') === 0;\n    }\n    /**\n     * Validates the OIDCConfig options object. Throws an error on failure.\n     *\n     * @param options - The options object to validate.\n     * @param ignoreMissingFields - Whether to ignore missing fields.\n     */\n    static validate(options, ignoreMissingFields = false) {\n        const validKeys = {\n            enabled: true,\n            displayName: true,\n            providerId: true,\n            clientId: true,\n            issuer: true,\n            clientSecret: true,\n            responseType: true,\n        };\n        const validResponseTypes = {\n            idToken: true,\n            code: true,\n        };\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"OIDCAuthProviderConfig\" must be a valid non-null object.');\n        }\n        // Check for unsupported top level attributes.\n        for (const key in options) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid OIDC config parameter.`);\n            }\n        }\n        // Required fields.\n        if (validator.isNonEmptyString(options.providerId)) {\n            if (options.providerId.indexOf('oidc.') !== 0) {\n                throw new error_1.FirebaseAuthError(!options.providerId ? error_1.AuthClientErrorCode.MISSING_PROVIDER_ID : error_1.AuthClientErrorCode.INVALID_PROVIDER_ID, '\"OIDCAuthProviderConfig.providerId\" must be a valid non-empty string prefixed with \"oidc.\".');\n            }\n        }\n        else if (!ignoreMissingFields) {\n            throw new error_1.FirebaseAuthError(!options.providerId ? error_1.AuthClientErrorCode.MISSING_PROVIDER_ID : error_1.AuthClientErrorCode.INVALID_PROVIDER_ID, '\"OIDCAuthProviderConfig.providerId\" must be a valid non-empty string prefixed with \"oidc.\".');\n        }\n        if (!(ignoreMissingFields && typeof options.clientId === 'undefined') &&\n            !validator.isNonEmptyString(options.clientId)) {\n            throw new error_1.FirebaseAuthError(!options.clientId ? error_1.AuthClientErrorCode.MISSING_OAUTH_CLIENT_ID : error_1.AuthClientErrorCode.INVALID_OAUTH_CLIENT_ID, '\"OIDCAuthProviderConfig.clientId\" must be a valid non-empty string.');\n        }\n        if (!(ignoreMissingFields && typeof options.issuer === 'undefined') &&\n            !validator.isURL(options.issuer)) {\n            throw new error_1.FirebaseAuthError(!options.issuer ? error_1.AuthClientErrorCode.MISSING_ISSUER : error_1.AuthClientErrorCode.INVALID_CONFIG, '\"OIDCAuthProviderConfig.issuer\" must be a valid URL string.');\n        }\n        if (typeof options.enabled !== 'undefined' &&\n            !validator.isBoolean(options.enabled)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"OIDCAuthProviderConfig.enabled\" must be a boolean.');\n        }\n        if (typeof options.displayName !== 'undefined' &&\n            !validator.isString(options.displayName)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"OIDCAuthProviderConfig.displayName\" must be a valid string.');\n        }\n        if (typeof options.clientSecret !== 'undefined' &&\n            !validator.isNonEmptyString(options.clientSecret)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"OIDCAuthProviderConfig.clientSecret\" must be a valid string.');\n        }\n        if (validator.isNonNullObject(options.responseType) && typeof options.responseType !== 'undefined') {\n            Object.keys(options.responseType).forEach((key) => {\n                if (!(key in validResponseTypes)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid OAuthResponseType parameter.`);\n                }\n            });\n            const idToken = options.responseType.idToken;\n            if (typeof idToken !== 'undefined' && !validator.isBoolean(idToken)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"OIDCAuthProviderConfig.responseType.idToken\" must be a boolean.');\n            }\n            const code = options.responseType.code;\n            if (typeof code !== 'undefined') {\n                if (!validator.isBoolean(code)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"OIDCAuthProviderConfig.responseType.code\" must be a boolean.');\n                }\n                // If code flow is enabled, client secret must be provided.\n                if (code && typeof options.clientSecret === 'undefined') {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISSING_OAUTH_CLIENT_SECRET, 'The OAuth configuration client secret is required to enable OIDC code flow.');\n                }\n            }\n            const allKeys = Object.keys(options.responseType).length;\n            const enabledCount = Object.values(options.responseType).filter(Boolean).length;\n            // Only one of OAuth response types can be set to true.\n            if (allKeys > 1 && enabledCount != 1) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_OAUTH_RESPONSETYPE, 'Only exactly one OAuth responseType should be set to true.');\n            }\n        }\n    }\n    /** @returns The plain object representation of the OIDCConfig. */\n    toJSON() {\n        return {\n            enabled: this.enabled,\n            displayName: this.displayName,\n            providerId: this.providerId,\n            issuer: this.issuer,\n            clientId: this.clientId,\n            clientSecret: (0, deep_copy_1.deepCopy)(this.clientSecret),\n            responseType: (0, deep_copy_1.deepCopy)(this.responseType),\n        };\n    }\n}\nexports.OIDCConfig = OIDCConfig;\n/**\n * Defines the SMSRegionConfig class used for validation.\n *\n * @internal\n */\nclass SmsRegionsAuthConfig {\n    static validate(options) {\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SmsRegionConfig\" must be a non-null object.');\n        }\n        const validKeys = {\n            allowlistOnly: true,\n            allowByDefault: true,\n        };\n        for (const key in options) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid SmsRegionConfig parameter.`);\n            }\n        }\n        // validate mutual exclusiveness of allowByDefault and allowlistOnly\n        if (typeof options.allowByDefault !== 'undefined' && typeof options.allowlistOnly !== 'undefined') {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, 'SmsRegionConfig cannot have both \"allowByDefault\" and \"allowlistOnly\" parameters.');\n        }\n        // validation for allowByDefault type\n        if (typeof options.allowByDefault !== 'undefined') {\n            const allowByDefaultValidKeys = {\n                disallowedRegions: true,\n            };\n            for (const key in options.allowByDefault) {\n                if (!(key in allowByDefaultValidKeys)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid SmsRegionConfig.allowByDefault parameter.`);\n                }\n            }\n            // disallowedRegion can be empty.\n            if (typeof options.allowByDefault.disallowedRegions !== 'undefined'\n                && !validator.isArray(options.allowByDefault.disallowedRegions)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SmsRegionConfig.allowByDefault.disallowedRegions\" must be a valid string array.');\n            }\n        }\n        if (typeof options.allowlistOnly !== 'undefined') {\n            const allowListOnlyValidKeys = {\n                allowedRegions: true,\n            };\n            for (const key in options.allowlistOnly) {\n                if (!(key in allowListOnlyValidKeys)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid SmsRegionConfig.allowlistOnly parameter.`);\n                }\n            }\n            // allowedRegions can be empty\n            if (typeof options.allowlistOnly.allowedRegions !== 'undefined'\n                && !validator.isArray(options.allowlistOnly.allowedRegions)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SmsRegionConfig.allowlistOnly.allowedRegions\" must be a valid string array.');\n            }\n        }\n    }\n}\nexports.SmsRegionsAuthConfig = SmsRegionsAuthConfig;\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tenant = void 0;\nconst validator = require(\"../utils/validator\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\nconst error_1 = require(\"../utils/error\");\nconst auth_config_1 = require(\"./auth-config\");\n/**\n * Represents a tenant configuration.\n *\n * Multi-tenancy support requires Google Cloud's Identity Platform\n * (GCIP). To learn more about GCIP, including pricing and features,\n * see the {@link https://cloud.google.com/identity-platform | GCIP documentation}.\n *\n * Before multi-tenancy can be used on a Google Cloud Identity Platform project,\n * tenants must be allowed on that project via the Cloud Console UI.\n *\n * A tenant configuration provides information such as the display name, tenant\n * identifier and email authentication configuration.\n * For OIDC/SAML provider configuration management, `TenantAwareAuth` instances should\n * be used instead of a `Tenant` to retrieve the list of configured IdPs on a tenant.\n * When configuring these providers, note that tenants will inherit\n * whitelisted domains and authenticated redirect URIs of their parent project.\n *\n * All other settings of a tenant will also be inherited. These will need to be managed\n * from the Cloud Console UI.\n */\nclass Tenant {\n    /**\n     * The Tenant object constructor.\n     *\n     * @param response - The server side response used to initialize the Tenant object.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        const tenantId = Tenant.getTenantIdFromResourceName(response.name);\n        if (!tenantId) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid tenant response');\n        }\n        this.tenantId = tenantId;\n        this.displayName = response.displayName;\n        try {\n            this.emailSignInConfig_ = new auth_config_1.EmailSignInConfig(response);\n        }\n        catch (e) {\n            // If allowPasswordSignup is undefined, it is disabled by default.\n            this.emailSignInConfig_ = new auth_config_1.EmailSignInConfig({\n                allowPasswordSignup: false,\n            });\n        }\n        this.anonymousSignInEnabled = !!response.enableAnonymousUser;\n        if (typeof response.mfaConfig !== 'undefined') {\n            this.multiFactorConfig_ = new auth_config_1.MultiFactorAuthConfig(response.mfaConfig);\n        }\n        if (typeof response.testPhoneNumbers !== 'undefined') {\n            this.testPhoneNumbers = (0, deep_copy_1.deepCopy)(response.testPhoneNumbers || {});\n        }\n        if (typeof response.smsRegionConfig !== 'undefined') {\n            this.smsRegionConfig = (0, deep_copy_1.deepCopy)(response.smsRegionConfig);\n        }\n    }\n    /**\n     * Builds the corresponding server request for a TenantOptions object.\n     *\n     * @param tenantOptions - The properties to convert to a server request.\n     * @param createRequest - Whether this is a create request.\n     * @returns The equivalent server request.\n     *\n     * @internal\n     */\n    static buildServerRequest(tenantOptions, createRequest) {\n        Tenant.validate(tenantOptions, createRequest);\n        let request = {};\n        if (typeof tenantOptions.emailSignInConfig !== 'undefined') {\n            request = auth_config_1.EmailSignInConfig.buildServerRequest(tenantOptions.emailSignInConfig);\n        }\n        if (typeof tenantOptions.displayName !== 'undefined') {\n            request.displayName = tenantOptions.displayName;\n        }\n        if (typeof tenantOptions.anonymousSignInEnabled !== 'undefined') {\n            request.enableAnonymousUser = tenantOptions.anonymousSignInEnabled;\n        }\n        if (typeof tenantOptions.multiFactorConfig !== 'undefined') {\n            request.mfaConfig = auth_config_1.MultiFactorAuthConfig.buildServerRequest(tenantOptions.multiFactorConfig);\n        }\n        if (typeof tenantOptions.testPhoneNumbers !== 'undefined') {\n            // null will clear existing test phone numbers. Translate to empty object.\n            request.testPhoneNumbers = tenantOptions.testPhoneNumbers ?? {};\n        }\n        if (typeof tenantOptions.smsRegionConfig !== 'undefined') {\n            request.smsRegionConfig = tenantOptions.smsRegionConfig;\n        }\n        return request;\n    }\n    /**\n     * Returns the tenant ID corresponding to the resource name if available.\n     *\n     * @param resourceName - The server side resource name\n     * @returns The tenant ID corresponding to the resource, null otherwise.\n     *\n     * @internal\n     */\n    static getTenantIdFromResourceName(resourceName) {\n        // name is of form projects/project1/tenants/tenant1\n        const matchTenantRes = resourceName.match(/\\/tenants\\/(.*)$/);\n        if (!matchTenantRes || matchTenantRes.length < 2) {\n            return null;\n        }\n        return matchTenantRes[1];\n    }\n    /**\n     * Validates a tenant options object. Throws an error on failure.\n     *\n     * @param request - The tenant options object to validate.\n     * @param createRequest - Whether this is a create request.\n     */\n    static validate(request, createRequest) {\n        const validKeys = {\n            displayName: true,\n            emailSignInConfig: true,\n            anonymousSignInEnabled: true,\n            multiFactorConfig: true,\n            testPhoneNumbers: true,\n            smsRegionConfig: true,\n        };\n        const label = createRequest ? 'CreateTenantRequest' : 'UpdateTenantRequest';\n        if (!validator.isNonNullObject(request)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${label}\" must be a valid non-null object.`);\n        }\n        // Check for unsupported top level attributes.\n        for (const key in request) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${key}\" is not a valid ${label} parameter.`);\n            }\n        }\n        // Validate displayName type if provided.\n        if (typeof request.displayName !== 'undefined' &&\n            !validator.isNonEmptyString(request.displayName)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${label}.displayName\" must be a valid non-empty string.`);\n        }\n        // Validate emailSignInConfig type if provided.\n        if (typeof request.emailSignInConfig !== 'undefined') {\n            // This will throw an error if invalid.\n            auth_config_1.EmailSignInConfig.buildServerRequest(request.emailSignInConfig);\n        }\n        // Validate test phone numbers if provided.\n        if (typeof request.testPhoneNumbers !== 'undefined' &&\n            request.testPhoneNumbers !== null) {\n            (0, auth_config_1.validateTestPhoneNumbers)(request.testPhoneNumbers);\n        }\n        else if (request.testPhoneNumbers === null && createRequest) {\n            // null allowed only for update operations.\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${label}.testPhoneNumbers\" must be a non-null object.`);\n        }\n        // Validate multiFactorConfig type if provided.\n        if (typeof request.multiFactorConfig !== 'undefined') {\n            // This will throw an error if invalid.\n            auth_config_1.MultiFactorAuthConfig.buildServerRequest(request.multiFactorConfig);\n        }\n        // Validate SMS Regions Config if provided.\n        if (typeof request.smsRegionConfig != 'undefined') {\n            auth_config_1.SmsRegionsAuthConfig.validate(request.smsRegionConfig);\n        }\n    }\n    /**\n     * The email sign in provider configuration.\n     */\n    get emailSignInConfig() {\n        return this.emailSignInConfig_;\n    }\n    /**\n     * The multi-factor auth configuration on the current tenant.\n     */\n    get multiFactorConfig() {\n        return this.multiFactorConfig_;\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        const json = {\n            tenantId: this.tenantId,\n            displayName: this.displayName,\n            emailSignInConfig: this.emailSignInConfig_?.toJSON(),\n            multiFactorConfig: this.multiFactorConfig_?.toJSON(),\n            anonymousSignInEnabled: this.anonymousSignInEnabled,\n            testPhoneNumbers: this.testPhoneNumbers,\n            smsRegionConfig: (0, deep_copy_1.deepCopy)(this.smsRegionConfig),\n        };\n        if (typeof json.multiFactorConfig === 'undefined') {\n            delete json.multiFactorConfig;\n        }\n        if (typeof json.testPhoneNumbers === 'undefined') {\n            delete json.testPhoneNumbers;\n        }\n        if (typeof json.smsRegionConfig === 'undefined') {\n            delete json.smsRegionConfig;\n        }\n        return json;\n    }\n}\nexports.Tenant = Tenant;\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * Copyright 2020 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isProviderIdentifier = exports.isPhoneIdentifier = exports.isEmailIdentifier = exports.isUidIdentifier = void 0;\n/*\n * User defined type guards. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards\n */\nfunction isUidIdentifier(id) {\n    return id.uid !== undefined;\n}\nexports.isUidIdentifier = isUidIdentifier;\nfunction isEmailIdentifier(id) {\n    return id.email !== undefined;\n}\nexports.isEmailIdentifier = isEmailIdentifier;\nfunction isPhoneIdentifier(id) {\n    return id.phoneNumber !== undefined;\n}\nexports.isPhoneIdentifier = isPhoneIdentifier;\nfunction isProviderIdentifier(id) {\n    const pid = id;\n    return pid.providerId !== undefined && pid.providerUid !== undefined;\n}\nexports.isProviderIdentifier = isProviderIdentifier;\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProjectConfig = void 0;\n/*!\n * Copyright 2022 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst validator = require(\"../utils/validator\");\nconst error_1 = require(\"../utils/error\");\nconst auth_config_1 = require(\"./auth-config\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\n/**\n* Represents a project configuration.\n*/\nclass ProjectConfig {\n    /**\n     * The Project Config object constructor.\n     *\n     * @param response - The server side response used to initialize the Project Config object.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        if (typeof response.smsRegionConfig !== 'undefined') {\n            this.smsRegionConfig = response.smsRegionConfig;\n        }\n    }\n    /**\n     * Validates a project config options object. Throws an error on failure.\n     *\n     * @param request - The project config options object to validate.\n     */\n    static validate(request) {\n        if (!validator.isNonNullObject(request)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"UpdateProjectConfigRequest\" must be a valid non-null object.');\n        }\n        const validKeys = {\n            smsRegionConfig: true,\n        };\n        // Check for unsupported top level attributes.\n        for (const key in request) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${key}\" is not a valid UpdateProjectConfigRequest parameter.`);\n            }\n        }\n        // Validate SMS Regions Config if provided.\n        if (typeof request.smsRegionConfig !== 'undefined') {\n            auth_config_1.SmsRegionsAuthConfig.validate(request.smsRegionConfig);\n        }\n    }\n    /**\n     * Build the corresponding server request for a UpdateProjectConfigRequest object.\n     * @param configOptions - The properties to convert to a server request.\n     * @returns  The equivalent server request.\n     *\n     * @internal\n     */\n    static buildServerRequest(configOptions) {\n        ProjectConfig.validate(configOptions);\n        return configOptions;\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        // JSON serialization\n        const json = {\n            smsRegionConfig: (0, deep_copy_1.deepCopy)(this.smsRegionConfig),\n        };\n        if (typeof json.smsRegionConfig === 'undefined') {\n            delete json.smsRegionConfig;\n        }\n        return json;\n    }\n}\nexports.ProjectConfig = ProjectConfig;\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useEmulator = exports.TenantAwareAuthRequestHandler = exports.AuthRequestHandler = exports.AbstractAuthRequestHandler = exports.FIREBASE_AUTH_SIGN_UP_NEW_USER = exports.FIREBASE_AUTH_SET_ACCOUNT_INFO = exports.FIREBASE_AUTH_BATCH_DELETE_ACCOUNTS = exports.FIREBASE_AUTH_DELETE_ACCOUNT = exports.FIREBASE_AUTH_GET_ACCOUNTS_INFO = exports.FIREBASE_AUTH_GET_ACCOUNT_INFO = exports.FIREBASE_AUTH_DOWNLOAD_ACCOUNT = exports.FIREBASE_AUTH_UPLOAD_ACCOUNT = exports.FIREBASE_AUTH_CREATE_SESSION_COOKIE = exports.EMAIL_ACTION_REQUEST_TYPES = exports.RESERVED_CLAIMS = void 0;\nconst validator = require(\"../utils/validator\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\nconst error_1 = require(\"../utils/error\");\nconst api_request_1 = require(\"../utils/api-request\");\nconst utils = require(\"../utils/index\");\nconst user_import_builder_1 = require(\"./user-import-builder\");\nconst action_code_settings_builder_1 = require(\"./action-code-settings-builder\");\nconst tenant_1 = require(\"./tenant\");\nconst identifier_1 = require(\"./identifier\");\nconst auth_config_1 = require(\"./auth-config\");\nconst project_config_1 = require(\"./project-config\");\n/** Firebase Auth request header. */\nconst FIREBASE_AUTH_HEADER = {\n    'X-Client-Version': `Node/Admin/${utils.getSdkVersion()}`,\n};\n/** Firebase Auth request timeout duration in milliseconds. */\nconst FIREBASE_AUTH_TIMEOUT = 25000;\n/** List of reserved claims which cannot be provided when creating a custom token. */\nexports.RESERVED_CLAIMS = [\n    'acr', 'amr', 'at_hash', 'aud', 'auth_time', 'azp', 'cnf', 'c_hash', 'exp', 'iat',\n    'iss', 'jti', 'nbf', 'nonce', 'sub', 'firebase',\n];\n/** List of supported email action request types. */\nexports.EMAIL_ACTION_REQUEST_TYPES = [\n    'PASSWORD_RESET', 'VERIFY_EMAIL', 'EMAIL_SIGNIN', 'VERIFY_AND_CHANGE_EMAIL',\n];\n/** Maximum allowed number of characters in the custom claims payload. */\nconst MAX_CLAIMS_PAYLOAD_SIZE = 1000;\n/** Maximum allowed number of users to batch download at one time. */\nconst MAX_DOWNLOAD_ACCOUNT_PAGE_SIZE = 1000;\n/** Maximum allowed number of users to batch upload at one time. */\nconst MAX_UPLOAD_ACCOUNT_BATCH_SIZE = 1000;\n/** Maximum allowed number of users to batch get at one time. */\nconst MAX_GET_ACCOUNTS_BATCH_SIZE = 100;\n/** Maximum allowed number of users to batch delete at one time. */\nconst MAX_DELETE_ACCOUNTS_BATCH_SIZE = 1000;\n/** Minimum allowed session cookie duration in seconds (5 minutes). */\nconst MIN_SESSION_COOKIE_DURATION_SECS = 5 * 60;\n/** Maximum allowed session cookie duration in seconds (2 weeks). */\nconst MAX_SESSION_COOKIE_DURATION_SECS = 14 * 24 * 60 * 60;\n/** Maximum allowed number of provider configurations to batch download at one time. */\nconst MAX_LIST_PROVIDER_CONFIGURATION_PAGE_SIZE = 100;\n/** The Firebase Auth backend base URL format. */\nconst FIREBASE_AUTH_BASE_URL_FORMAT = 'https://identitytoolkit.googleapis.com/{version}/projects/{projectId}{api}';\n/** Firebase Auth base URlLformat when using the auth emultor. */\nconst FIREBASE_AUTH_EMULATOR_BASE_URL_FORMAT = 'http://{host}/identitytoolkit.googleapis.com/{version}/projects/{projectId}{api}';\n/** The Firebase Auth backend multi-tenancy base URL format. */\nconst FIREBASE_AUTH_TENANT_URL_FORMAT = FIREBASE_AUTH_BASE_URL_FORMAT.replace('projects/{projectId}', 'projects/{projectId}/tenants/{tenantId}');\n/** Firebase Auth base URL format when using the auth emultor with multi-tenancy. */\nconst FIREBASE_AUTH_EMULATOR_TENANT_URL_FORMAT = FIREBASE_AUTH_EMULATOR_BASE_URL_FORMAT.replace('projects/{projectId}', 'projects/{projectId}/tenants/{tenantId}');\n/** Maximum allowed number of tenants to download at one time. */\nconst MAX_LIST_TENANT_PAGE_SIZE = 1000;\n/**\n * Enum for the user write operation type.\n */\nvar WriteOperationType;\n(function (WriteOperationType) {\n    WriteOperationType[\"Create\"] = \"create\";\n    WriteOperationType[\"Update\"] = \"update\";\n    WriteOperationType[\"Upload\"] = \"upload\";\n})(WriteOperationType || (WriteOperationType = {}));\n/** Defines a base utility to help with resource URL construction. */\nclass AuthResourceUrlBuilder {\n    /**\n     * The resource URL builder constructor.\n     *\n     * @param projectId - The resource project ID.\n     * @param version - The endpoint API version.\n     * @constructor\n     */\n    constructor(app, version = 'v1') {\n        this.app = app;\n        this.version = version;\n        if (useEmulator()) {\n            this.urlFormat = utils.formatString(FIREBASE_AUTH_EMULATOR_BASE_URL_FORMAT, {\n                host: emulatorHost()\n            });\n        }\n        else {\n            this.urlFormat = FIREBASE_AUTH_BASE_URL_FORMAT;\n        }\n    }\n    /**\n     * Returns the resource URL corresponding to the provided parameters.\n     *\n     * @param api - The backend API name.\n     * @param params - The optional additional parameters to substitute in the\n     *     URL path.\n     * @returns The corresponding resource URL.\n     */\n    getUrl(api, params) {\n        return this.getProjectId()\n            .then((projectId) => {\n            const baseParams = {\n                version: this.version,\n                projectId,\n                api: api || '',\n            };\n            const baseUrl = utils.formatString(this.urlFormat, baseParams);\n            // Substitute additional api related parameters.\n            return utils.formatString(baseUrl, params || {});\n        });\n    }\n    getProjectId() {\n        if (this.projectId) {\n            return Promise.resolve(this.projectId);\n        }\n        return utils.findProjectId(this.app)\n            .then((projectId) => {\n            if (!validator.isNonEmptyString(projectId)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CREDENTIAL, 'Failed to determine project ID for Auth. Initialize the '\n                    + 'SDK with service account credentials or set project ID as an app option. '\n                    + 'Alternatively set the GOOGLE_CLOUD_PROJECT environment variable.');\n            }\n            this.projectId = projectId;\n            return projectId;\n        });\n    }\n}\n/** Tenant aware resource builder utility. */\nclass TenantAwareAuthResourceUrlBuilder extends AuthResourceUrlBuilder {\n    /**\n     * The tenant aware resource URL builder constructor.\n     *\n     * @param projectId - The resource project ID.\n     * @param version - The endpoint API version.\n     * @param tenantId - The tenant ID.\n     * @constructor\n     */\n    constructor(app, version, tenantId) {\n        super(app, version);\n        this.app = app;\n        this.version = version;\n        this.tenantId = tenantId;\n        if (useEmulator()) {\n            this.urlFormat = utils.formatString(FIREBASE_AUTH_EMULATOR_TENANT_URL_FORMAT, {\n                host: emulatorHost()\n            });\n        }\n        else {\n            this.urlFormat = FIREBASE_AUTH_TENANT_URL_FORMAT;\n        }\n    }\n    /**\n     * Returns the resource URL corresponding to the provided parameters.\n     *\n     * @param api - The backend API name.\n     * @param params - The optional additional parameters to substitute in the\n     *     URL path.\n     * @returns The corresponding resource URL.\n     */\n    getUrl(api, params) {\n        return super.getUrl(api, params)\n            .then((url) => {\n            return utils.formatString(url, { tenantId: this.tenantId });\n        });\n    }\n}\n/**\n * Auth-specific HTTP client which uses the special \"owner\" token\n * when communicating with the Auth Emulator.\n */\nclass AuthHttpClient extends api_request_1.AuthorizedHttpClient {\n    getToken() {\n        if (useEmulator()) {\n            return Promise.resolve('owner');\n        }\n        return super.getToken();\n    }\n}\n/**\n * Validates an AuthFactorInfo object. All unsupported parameters\n * are removed from the original request. If an invalid field is passed\n * an error is thrown.\n *\n * @param request - The AuthFactorInfo request object.\n */\nfunction validateAuthFactorInfo(request) {\n    const validKeys = {\n        mfaEnrollmentId: true,\n        displayName: true,\n        phoneInfo: true,\n        enrolledAt: true,\n    };\n    // Remove unsupported keys from the original request.\n    for (const key in request) {\n        if (!(key in validKeys)) {\n            delete request[key];\n        }\n    }\n    // No enrollment ID is available for signupNewUser. Use another identifier.\n    const authFactorInfoIdentifier = request.mfaEnrollmentId || request.phoneInfo || JSON.stringify(request);\n    // Enrollment uid may or may not be specified for update operations.\n    if (typeof request.mfaEnrollmentId !== 'undefined' &&\n        !validator.isNonEmptyString(request.mfaEnrollmentId)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID, 'The second factor \"uid\" must be a valid non-empty string.');\n    }\n    if (typeof request.displayName !== 'undefined' &&\n        !validator.isString(request.displayName)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_DISPLAY_NAME, `The second factor \"displayName\" for \"${authFactorInfoIdentifier}\" must be a valid string.`);\n    }\n    // enrolledAt must be a valid UTC date string.\n    if (typeof request.enrolledAt !== 'undefined' &&\n        !validator.isISODateString(request.enrolledAt)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ENROLLMENT_TIME, `The second factor \"enrollmentTime\" for \"${authFactorInfoIdentifier}\" must be a valid ` +\n            'UTC date string.');\n    }\n    // Validate required fields depending on second factor type.\n    if (typeof request.phoneInfo !== 'undefined') {\n        // phoneNumber should be a string and a valid phone number.\n        if (!validator.isPhoneNumber(request.phoneInfo)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PHONE_NUMBER, `The second factor \"phoneNumber\" for \"${authFactorInfoIdentifier}\" must be a non-empty ` +\n                'E.164 standard compliant identifier string.');\n        }\n    }\n    else {\n        // Invalid second factor. For example, a phone second factor may have been provided without\n        // a phone number. A TOTP based second factor may require a secret key, etc.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ENROLLED_FACTORS, 'MFAInfo object provided is invalid.');\n    }\n}\n/**\n * Validates a providerUserInfo object. All unsupported parameters\n * are removed from the original request. If an invalid field is passed\n * an error is thrown.\n *\n * @param request - The providerUserInfo request object.\n */\nfunction validateProviderUserInfo(request) {\n    const validKeys = {\n        rawId: true,\n        providerId: true,\n        email: true,\n        displayName: true,\n        photoUrl: true,\n    };\n    // Remove invalid keys from original request.\n    for (const key in request) {\n        if (!(key in validKeys)) {\n            delete request[key];\n        }\n    }\n    if (!validator.isNonEmptyString(request.providerId)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID);\n    }\n    if (typeof request.displayName !== 'undefined' &&\n        typeof request.displayName !== 'string') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_DISPLAY_NAME, `The provider \"displayName\" for \"${request.providerId}\" must be a valid string.`);\n    }\n    if (!validator.isNonEmptyString(request.rawId)) {\n        // This is called localId on the backend but the developer specifies this as\n        // uid externally. So the error message should use the client facing name.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID, `The provider \"uid\" for \"${request.providerId}\" must be a valid non-empty string.`);\n    }\n    // email should be a string and a valid email.\n    if (typeof request.email !== 'undefined' && !validator.isEmail(request.email)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_EMAIL, `The provider \"email\" for \"${request.providerId}\" must be a valid email string.`);\n    }\n    // photoUrl should be a URL.\n    if (typeof request.photoUrl !== 'undefined' &&\n        !validator.isURL(request.photoUrl)) {\n        // This is called photoUrl on the backend but the developer specifies this as\n        // photoURL externally. So the error message should use the client facing name.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PHOTO_URL, `The provider \"photoURL\" for \"${request.providerId}\" must be a valid URL string.`);\n    }\n}\n/**\n * Validates a create/edit request object. All unsupported parameters\n * are removed from the original request. If an invalid field is passed\n * an error is thrown.\n *\n * @param request - The create/edit request object.\n * @param writeOperationType - The write operation type.\n */\nfunction validateCreateEditRequest(request, writeOperationType) {\n    const uploadAccountRequest = writeOperationType === WriteOperationType.Upload;\n    // Hash set of whitelisted parameters.\n    const validKeys = {\n        displayName: true,\n        localId: true,\n        email: true,\n        password: true,\n        rawPassword: true,\n        emailVerified: true,\n        photoUrl: true,\n        disabled: true,\n        disableUser: true,\n        deleteAttribute: true,\n        deleteProvider: true,\n        sanityCheck: true,\n        phoneNumber: true,\n        customAttributes: true,\n        validSince: true,\n        // Pass linkProviderUserInfo only for updates (i.e. not for uploads.)\n        linkProviderUserInfo: !uploadAccountRequest,\n        // Pass tenantId only for uploadAccount requests.\n        tenantId: uploadAccountRequest,\n        passwordHash: uploadAccountRequest,\n        salt: uploadAccountRequest,\n        createdAt: uploadAccountRequest,\n        lastLoginAt: uploadAccountRequest,\n        providerUserInfo: uploadAccountRequest,\n        mfaInfo: uploadAccountRequest,\n        // Only for non-uploadAccount requests.\n        mfa: !uploadAccountRequest,\n    };\n    // Remove invalid keys from original request.\n    for (const key in request) {\n        if (!(key in validKeys)) {\n            delete request[key];\n        }\n    }\n    if (typeof request.tenantId !== 'undefined' &&\n        !validator.isNonEmptyString(request.tenantId)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TENANT_ID);\n    }\n    // For any invalid parameter, use the external key name in the error description.\n    // displayName should be a string.\n    if (typeof request.displayName !== 'undefined' &&\n        !validator.isString(request.displayName)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_DISPLAY_NAME);\n    }\n    if ((typeof request.localId !== 'undefined' || uploadAccountRequest) &&\n        !validator.isUid(request.localId)) {\n        // This is called localId on the backend but the developer specifies this as\n        // uid externally. So the error message should use the client facing name.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID);\n    }\n    // email should be a string and a valid email.\n    if (typeof request.email !== 'undefined' && !validator.isEmail(request.email)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_EMAIL);\n    }\n    // phoneNumber should be a string and a valid phone number.\n    if (typeof request.phoneNumber !== 'undefined' &&\n        !validator.isPhoneNumber(request.phoneNumber)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PHONE_NUMBER);\n    }\n    // password should be a string and a minimum of 6 chars.\n    if (typeof request.password !== 'undefined' &&\n        !validator.isPassword(request.password)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PASSWORD);\n    }\n    // rawPassword should be a string and a minimum of 6 chars.\n    if (typeof request.rawPassword !== 'undefined' &&\n        !validator.isPassword(request.rawPassword)) {\n        // This is called rawPassword on the backend but the developer specifies this as\n        // password externally. So the error message should use the client facing name.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PASSWORD);\n    }\n    // emailVerified should be a boolean.\n    if (typeof request.emailVerified !== 'undefined' &&\n        typeof request.emailVerified !== 'boolean') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_EMAIL_VERIFIED);\n    }\n    // photoUrl should be a URL.\n    if (typeof request.photoUrl !== 'undefined' &&\n        !validator.isURL(request.photoUrl)) {\n        // This is called photoUrl on the backend but the developer specifies this as\n        // photoURL externally. So the error message should use the client facing name.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PHOTO_URL);\n    }\n    // disabled should be a boolean.\n    if (typeof request.disabled !== 'undefined' &&\n        typeof request.disabled !== 'boolean') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_DISABLED_FIELD);\n    }\n    // validSince should be a number.\n    if (typeof request.validSince !== 'undefined' &&\n        !validator.isNumber(request.validSince)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TOKENS_VALID_AFTER_TIME);\n    }\n    // createdAt should be a number.\n    if (typeof request.createdAt !== 'undefined' &&\n        !validator.isNumber(request.createdAt)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CREATION_TIME);\n    }\n    // lastSignInAt should be a number.\n    if (typeof request.lastLoginAt !== 'undefined' &&\n        !validator.isNumber(request.lastLoginAt)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_LAST_SIGN_IN_TIME);\n    }\n    // disableUser should be a boolean.\n    if (typeof request.disableUser !== 'undefined' &&\n        typeof request.disableUser !== 'boolean') {\n        // This is called disableUser on the backend but the developer specifies this as\n        // disabled externally. So the error message should use the client facing name.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_DISABLED_FIELD);\n    }\n    // customAttributes should be stringified JSON with no blacklisted claims.\n    // The payload should not exceed 1KB.\n    if (typeof request.customAttributes !== 'undefined') {\n        let developerClaims;\n        try {\n            developerClaims = JSON.parse(request.customAttributes);\n        }\n        catch (error) {\n            // JSON parsing error. This should never happen as we stringify the claims internally.\n            // However, we still need to check since setAccountInfo via edit requests could pass\n            // this field.\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CLAIMS, error.message);\n        }\n        const invalidClaims = [];\n        // Check for any invalid claims.\n        exports.RESERVED_CLAIMS.forEach((blacklistedClaim) => {\n            if (Object.prototype.hasOwnProperty.call(developerClaims, blacklistedClaim)) {\n                invalidClaims.push(blacklistedClaim);\n            }\n        });\n        // Throw an error if an invalid claim is detected.\n        if (invalidClaims.length > 0) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.FORBIDDEN_CLAIM, invalidClaims.length > 1 ?\n                `Developer claims \"${invalidClaims.join('\", \"')}\" are reserved and cannot be specified.` :\n                `Developer claim \"${invalidClaims[0]}\" is reserved and cannot be specified.`);\n        }\n        // Check claims payload does not exceed maxmimum size.\n        if (request.customAttributes.length > MAX_CLAIMS_PAYLOAD_SIZE) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.CLAIMS_TOO_LARGE, `Developer claims payload should not exceed ${MAX_CLAIMS_PAYLOAD_SIZE} characters.`);\n        }\n    }\n    // passwordHash has to be a base64 encoded string.\n    if (typeof request.passwordHash !== 'undefined' &&\n        !validator.isString(request.passwordHash)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PASSWORD_HASH);\n    }\n    // salt has to be a base64 encoded string.\n    if (typeof request.salt !== 'undefined' &&\n        !validator.isString(request.salt)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PASSWORD_SALT);\n    }\n    // providerUserInfo has to be an array of valid UserInfo requests.\n    if (typeof request.providerUserInfo !== 'undefined' &&\n        !validator.isArray(request.providerUserInfo)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_DATA);\n    }\n    else if (validator.isArray(request.providerUserInfo)) {\n        request.providerUserInfo.forEach((providerUserInfoEntry) => {\n            validateProviderUserInfo(providerUserInfoEntry);\n        });\n    }\n    // linkProviderUserInfo must be a (single) UserProvider value.\n    if (typeof request.linkProviderUserInfo !== 'undefined') {\n        validateProviderUserInfo(request.linkProviderUserInfo);\n    }\n    // mfaInfo is used for importUsers.\n    // mfa.enrollments is used for setAccountInfo.\n    // enrollments has to be an array of valid AuthFactorInfo requests.\n    let enrollments = null;\n    if (request.mfaInfo) {\n        enrollments = request.mfaInfo;\n    }\n    else if (request.mfa && request.mfa.enrollments) {\n        enrollments = request.mfa.enrollments;\n    }\n    if (enrollments) {\n        if (!validator.isArray(enrollments)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ENROLLED_FACTORS);\n        }\n        enrollments.forEach((authFactorInfoEntry) => {\n            validateAuthFactorInfo(authFactorInfoEntry);\n        });\n    }\n}\n/**\n * Instantiates the createSessionCookie endpoint settings.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_CREATE_SESSION_COOKIE = new api_request_1.ApiSettings(':createSessionCookie', 'POST')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    // Validate the ID token is a non-empty string.\n    if (!validator.isNonEmptyString(request.idToken)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ID_TOKEN);\n    }\n    // Validate the custom session cookie duration.\n    if (!validator.isNumber(request.validDuration) ||\n        request.validDuration < MIN_SESSION_COOKIE_DURATION_SECS ||\n        request.validDuration > MAX_SESSION_COOKIE_DURATION_SECS) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_SESSION_COOKIE_DURATION);\n    }\n})\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain the session cookie.\n    if (!validator.isNonEmptyString(response.sessionCookie)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR);\n    }\n});\n/**\n * Instantiates the uploadAccount endpoint settings.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_UPLOAD_ACCOUNT = new api_request_1.ApiSettings('/accounts:batchCreate', 'POST');\n/**\n * Instantiates the downloadAccount endpoint settings.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_DOWNLOAD_ACCOUNT = new api_request_1.ApiSettings('/accounts:batchGet', 'GET')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    // Validate next page token.\n    if (typeof request.nextPageToken !== 'undefined' &&\n        !validator.isNonEmptyString(request.nextPageToken)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PAGE_TOKEN);\n    }\n    // Validate max results.\n    if (!validator.isNumber(request.maxResults) ||\n        request.maxResults <= 0 ||\n        request.maxResults > MAX_DOWNLOAD_ACCOUNT_PAGE_SIZE) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'Required \"maxResults\" must be a positive integer that does not exceed ' +\n            `${MAX_DOWNLOAD_ACCOUNT_PAGE_SIZE}.`);\n    }\n});\n/**\n * Instantiates the getAccountInfo endpoint settings.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_GET_ACCOUNT_INFO = new api_request_1.ApiSettings('/accounts:lookup', 'POST')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    if (!request.localId && !request.email && !request.phoneNumber && !request.federatedUserId) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server request is missing user identifier');\n    }\n})\n    // Set response validator.\n    .setResponseValidator((response) => {\n    if (!response.users || !response.users.length) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.USER_NOT_FOUND);\n    }\n});\n/**\n * Instantiates the getAccountInfo endpoint settings for use when fetching info\n * for multiple accounts.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_GET_ACCOUNTS_INFO = new api_request_1.ApiSettings('/accounts:lookup', 'POST')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    if (!request.localId && !request.email && !request.phoneNumber && !request.federatedUserId) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server request is missing user identifier');\n    }\n});\n/**\n * Instantiates the deleteAccount endpoint settings.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_DELETE_ACCOUNT = new api_request_1.ApiSettings('/accounts:delete', 'POST')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    if (!request.localId) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server request is missing user identifier');\n    }\n});\n/**\n * @internal\n */\nexports.FIREBASE_AUTH_BATCH_DELETE_ACCOUNTS = new api_request_1.ApiSettings('/accounts:batchDelete', 'POST')\n    .setRequestValidator((request) => {\n    if (!request.localIds) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server request is missing user identifiers');\n    }\n    if (typeof request.force === 'undefined' || request.force !== true) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server request is missing force=true field');\n    }\n})\n    .setResponseValidator((response) => {\n    const errors = response.errors || [];\n    errors.forEach((batchDeleteErrorInfo) => {\n        if (typeof batchDeleteErrorInfo.index === 'undefined') {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server BatchDeleteAccountResponse is missing an errors.index field');\n        }\n        if (!batchDeleteErrorInfo.localId) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server BatchDeleteAccountResponse is missing an errors.localId field');\n        }\n        // Allow the (error) message to be missing/undef.\n    });\n});\n/**\n * Instantiates the setAccountInfo endpoint settings for updating existing accounts.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_SET_ACCOUNT_INFO = new api_request_1.ApiSettings('/accounts:update', 'POST')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    // localId is a required parameter.\n    if (typeof request.localId === 'undefined') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server request is missing user identifier');\n    }\n    // Throw error when tenantId is passed in POST body.\n    if (typeof request.tenantId !== 'undefined') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"tenantId\" is an invalid \"UpdateRequest\" property.');\n    }\n    validateCreateEditRequest(request, WriteOperationType.Update);\n})\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // If the localId is not returned, then the request failed.\n    if (!response.localId) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.USER_NOT_FOUND);\n    }\n});\n/**\n * Instantiates the signupNewUser endpoint settings for creating a new user with or without\n * uid being specified. The backend will create a new one if not provided and return it.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_SIGN_UP_NEW_USER = new api_request_1.ApiSettings('/accounts', 'POST')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    // signupNewUser does not support customAttributes.\n    if (typeof request.customAttributes !== 'undefined') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"customAttributes\" cannot be set when creating a new user.');\n    }\n    // signupNewUser does not support validSince.\n    if (typeof request.validSince !== 'undefined') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"validSince\" cannot be set when creating a new user.');\n    }\n    // Throw error when tenantId is passed in POST body.\n    if (typeof request.tenantId !== 'undefined') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"tenantId\" is an invalid \"CreateRequest\" property.');\n    }\n    validateCreateEditRequest(request, WriteOperationType.Create);\n})\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // If the localId is not returned, then the request failed.\n    if (!response.localId) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to create new user');\n    }\n});\nconst FIREBASE_AUTH_GET_OOB_CODE = new api_request_1.ApiSettings('/accounts:sendOobCode', 'POST')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    if (!validator.isEmail(request.email)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_EMAIL);\n    }\n    if (typeof request.newEmail !== 'undefined' && !validator.isEmail(request.newEmail)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_NEW_EMAIL);\n    }\n    if (exports.EMAIL_ACTION_REQUEST_TYPES.indexOf(request.requestType) === -1) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${request.requestType}\" is not a supported email action request type.`);\n    }\n})\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // If the oobLink is not returned, then the request failed.\n    if (!response.oobLink) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to create the email action link');\n    }\n});\n/**\n * Instantiates the retrieve OIDC configuration endpoint settings.\n *\n * @internal\n */\nconst GET_OAUTH_IDP_CONFIG = new api_request_1.ApiSettings('/oauthIdpConfigs/{providerId}', 'GET')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain the OIDC provider resource name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to get OIDC configuration');\n    }\n});\n/**\n * Instantiates the delete OIDC configuration endpoint settings.\n *\n * @internal\n */\nconst DELETE_OAUTH_IDP_CONFIG = new api_request_1.ApiSettings('/oauthIdpConfigs/{providerId}', 'DELETE');\n/**\n * Instantiates the create OIDC configuration endpoint settings.\n *\n * @internal\n */\nconst CREATE_OAUTH_IDP_CONFIG = new api_request_1.ApiSettings('/oauthIdpConfigs?oauthIdpConfigId={providerId}', 'POST')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain the OIDC provider resource name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to create new OIDC configuration');\n    }\n});\n/**\n * Instantiates the update OIDC configuration endpoint settings.\n *\n * @internal\n */\nconst UPDATE_OAUTH_IDP_CONFIG = new api_request_1.ApiSettings('/oauthIdpConfigs/{providerId}?updateMask={updateMask}', 'PATCH')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain the configuration resource name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to update OIDC configuration');\n    }\n});\n/**\n * Instantiates the list OIDC configuration endpoint settings.\n *\n * @internal\n */\nconst LIST_OAUTH_IDP_CONFIGS = new api_request_1.ApiSettings('/oauthIdpConfigs', 'GET')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    // Validate next page token.\n    if (typeof request.pageToken !== 'undefined' &&\n        !validator.isNonEmptyString(request.pageToken)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PAGE_TOKEN);\n    }\n    // Validate max results.\n    if (!validator.isNumber(request.pageSize) ||\n        request.pageSize <= 0 ||\n        request.pageSize > MAX_LIST_PROVIDER_CONFIGURATION_PAGE_SIZE) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'Required \"maxResults\" must be a positive integer that does not exceed ' +\n            `${MAX_LIST_PROVIDER_CONFIGURATION_PAGE_SIZE}.`);\n    }\n});\n/**\n * Instantiates the retrieve SAML configuration endpoint settings.\n *\n * @internal\n */\nconst GET_INBOUND_SAML_CONFIG = new api_request_1.ApiSettings('/inboundSamlConfigs/{providerId}', 'GET')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain the SAML provider resource name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to get SAML configuration');\n    }\n});\n/**\n * Instantiates the delete SAML configuration endpoint settings.\n *\n * @internal\n */\nconst DELETE_INBOUND_SAML_CONFIG = new api_request_1.ApiSettings('/inboundSamlConfigs/{providerId}', 'DELETE');\n/**\n * Instantiates the create SAML configuration endpoint settings.\n *\n * @internal\n */\nconst CREATE_INBOUND_SAML_CONFIG = new api_request_1.ApiSettings('/inboundSamlConfigs?inboundSamlConfigId={providerId}', 'POST')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain the SAML provider resource name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to create new SAML configuration');\n    }\n});\n/**\n * Instantiates the update SAML configuration endpoint settings.\n *\n * @internal\n */\nconst UPDATE_INBOUND_SAML_CONFIG = new api_request_1.ApiSettings('/inboundSamlConfigs/{providerId}?updateMask={updateMask}', 'PATCH')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain the configuration resource name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to update SAML configuration');\n    }\n});\n/**\n * Instantiates the list SAML configuration endpoint settings.\n *\n * @internal\n */\nconst LIST_INBOUND_SAML_CONFIGS = new api_request_1.ApiSettings('/inboundSamlConfigs', 'GET')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    // Validate next page token.\n    if (typeof request.pageToken !== 'undefined' &&\n        !validator.isNonEmptyString(request.pageToken)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PAGE_TOKEN);\n    }\n    // Validate max results.\n    if (!validator.isNumber(request.pageSize) ||\n        request.pageSize <= 0 ||\n        request.pageSize > MAX_LIST_PROVIDER_CONFIGURATION_PAGE_SIZE) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'Required \"maxResults\" must be a positive integer that does not exceed ' +\n            `${MAX_LIST_PROVIDER_CONFIGURATION_PAGE_SIZE}.`);\n    }\n});\n/**\n * Class that provides the mechanism to send requests to the Firebase Auth backend endpoints.\n *\n * @internal\n */\nclass AbstractAuthRequestHandler {\n    /**\n     * @param app - The app used to fetch access tokens to sign API requests.\n     * @constructor\n     */\n    constructor(app) {\n        this.app = app;\n        if (typeof app !== 'object' || app === null || !('options' in app)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'First argument passed to admin.auth() must be a valid Firebase app instance.');\n        }\n        this.httpClient = new AuthHttpClient(app);\n    }\n    /**\n     * @param response - The response to check for errors.\n     * @returns The error code if present; null otherwise.\n     */\n    static getErrorCode(response) {\n        return (validator.isNonNullObject(response) && response.error && response.error.message) || null;\n    }\n    static addUidToRequest(id, request) {\n        if (!validator.isUid(id.uid)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID);\n        }\n        request.localId ? request.localId.push(id.uid) : request.localId = [id.uid];\n        return request;\n    }\n    static addEmailToRequest(id, request) {\n        if (!validator.isEmail(id.email)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_EMAIL);\n        }\n        request.email ? request.email.push(id.email) : request.email = [id.email];\n        return request;\n    }\n    static addPhoneToRequest(id, request) {\n        if (!validator.isPhoneNumber(id.phoneNumber)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PHONE_NUMBER);\n        }\n        request.phoneNumber ? request.phoneNumber.push(id.phoneNumber) : request.phoneNumber = [id.phoneNumber];\n        return request;\n    }\n    static addProviderToRequest(id, request) {\n        if (!validator.isNonEmptyString(id.providerId)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID);\n        }\n        if (!validator.isNonEmptyString(id.providerUid)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_UID);\n        }\n        const federatedUserId = {\n            providerId: id.providerId,\n            rawId: id.providerUid,\n        };\n        request.federatedUserId\n            ? request.federatedUserId.push(federatedUserId)\n            : request.federatedUserId = [federatedUserId];\n        return request;\n    }\n    /**\n     * Creates a new Firebase session cookie with the specified duration that can be used for\n     * session management (set as a server side session cookie with custom cookie policy).\n     * The session cookie JWT will have the same payload claims as the provided ID token.\n     *\n     * @param idToken - The Firebase ID token to exchange for a session cookie.\n     * @param expiresIn - The session cookie duration in milliseconds.\n     *\n     * @returns A promise that resolves on success with the created session cookie.\n     */\n    createSessionCookie(idToken, expiresIn) {\n        const request = {\n            idToken,\n            // Convert to seconds.\n            validDuration: expiresIn / 1000,\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_CREATE_SESSION_COOKIE, request)\n            .then((response) => response.sessionCookie);\n    }\n    /**\n     * Looks up a user by uid.\n     *\n     * @param uid - The uid of the user to lookup.\n     * @returns A promise that resolves with the user information.\n     */\n    getAccountInfoByUid(uid) {\n        if (!validator.isUid(uid)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID));\n        }\n        const request = {\n            localId: [uid],\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_GET_ACCOUNT_INFO, request);\n    }\n    /**\n     * Looks up a user by email.\n     *\n     * @param email - The email of the user to lookup.\n     * @returns A promise that resolves with the user information.\n     */\n    getAccountInfoByEmail(email) {\n        if (!validator.isEmail(email)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_EMAIL));\n        }\n        const request = {\n            email: [email],\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_GET_ACCOUNT_INFO, request);\n    }\n    /**\n     * Looks up a user by phone number.\n     *\n     * @param phoneNumber - The phone number of the user to lookup.\n     * @returns A promise that resolves with the user information.\n     */\n    getAccountInfoByPhoneNumber(phoneNumber) {\n        if (!validator.isPhoneNumber(phoneNumber)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PHONE_NUMBER));\n        }\n        const request = {\n            phoneNumber: [phoneNumber],\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_GET_ACCOUNT_INFO, request);\n    }\n    getAccountInfoByFederatedUid(providerId, rawId) {\n        if (!validator.isNonEmptyString(providerId) || !validator.isNonEmptyString(rawId)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID);\n        }\n        const request = {\n            federatedUserId: [{\n                    providerId,\n                    rawId,\n                }],\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_GET_ACCOUNT_INFO, request);\n    }\n    /**\n     * Looks up multiple users by their identifiers (uid, email, etc).\n     *\n     * @param identifiers - The identifiers indicating the users\n     *     to be looked up. Must have <= 100 entries.\n     * @param A - promise that resolves with the set of successfully\n     *     looked up users. Possibly empty if no users were looked up.\n     */\n    getAccountInfoByIdentifiers(identifiers) {\n        if (identifiers.length === 0) {\n            return Promise.resolve({ users: [] });\n        }\n        else if (identifiers.length > MAX_GET_ACCOUNTS_BATCH_SIZE) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MAXIMUM_USER_COUNT_EXCEEDED, '`identifiers` parameter must have <= ' + MAX_GET_ACCOUNTS_BATCH_SIZE + ' entries.');\n        }\n        let request = {};\n        for (const id of identifiers) {\n            if ((0, identifier_1.isUidIdentifier)(id)) {\n                request = AbstractAuthRequestHandler.addUidToRequest(id, request);\n            }\n            else if ((0, identifier_1.isEmailIdentifier)(id)) {\n                request = AbstractAuthRequestHandler.addEmailToRequest(id, request);\n            }\n            else if ((0, identifier_1.isPhoneIdentifier)(id)) {\n                request = AbstractAuthRequestHandler.addPhoneToRequest(id, request);\n            }\n            else if ((0, identifier_1.isProviderIdentifier)(id)) {\n                request = AbstractAuthRequestHandler.addProviderToRequest(id, request);\n            }\n            else {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'Unrecognized identifier: ' + id);\n            }\n        }\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_GET_ACCOUNTS_INFO, request);\n    }\n    /**\n     * Exports the users (single batch only) with a size of maxResults and starting from\n     * the offset as specified by pageToken.\n     *\n     * @param maxResults - The page size, 1000 if undefined. This is also the maximum\n     *     allowed limit.\n     * @param pageToken - The next page token. If not specified, returns users starting\n     *     without any offset. Users are returned in the order they were created from oldest to\n     *     newest, relative to the page token offset.\n     * @returns A promise that resolves with the current batch of downloaded\n     *     users and the next page token if available. For the last page, an empty list of users\n     *     and no page token are returned.\n     */\n    downloadAccount(maxResults = MAX_DOWNLOAD_ACCOUNT_PAGE_SIZE, pageToken) {\n        // Construct request.\n        const request = {\n            maxResults,\n            nextPageToken: pageToken,\n        };\n        // Remove next page token if not provided.\n        if (typeof request.nextPageToken === 'undefined') {\n            delete request.nextPageToken;\n        }\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_DOWNLOAD_ACCOUNT, request)\n            .then((response) => {\n            // No more users available.\n            if (!response.users) {\n                response.users = [];\n            }\n            return response;\n        });\n    }\n    /**\n     * Imports the list of users provided to Firebase Auth. This is useful when\n     * migrating from an external authentication system without having to use the Firebase CLI SDK.\n     * At most, 1000 users are allowed to be imported one at a time.\n     * When importing a list of password users, UserImportOptions are required to be specified.\n     *\n     * @param users - The list of user records to import to Firebase Auth.\n     * @param options - The user import options, required when the users provided\n     *     include password credentials.\n     * @returns A promise that resolves when the operation completes\n     *     with the result of the import. This includes the number of successful imports, the number\n     *     of failed uploads and their corresponding errors.\n     */\n    uploadAccount(users, options) {\n        // This will throw if any error is detected in the hash options.\n        // For errors in the list of users, this will not throw and will report the errors and the\n        // corresponding user index in the user import generated response below.\n        // No need to validate raw request or raw response as this is done in UserImportBuilder.\n        const userImportBuilder = new user_import_builder_1.UserImportBuilder(users, options, (userRequest) => {\n            // Pass true to validate the uploadAccount specific fields.\n            validateCreateEditRequest(userRequest, WriteOperationType.Upload);\n        });\n        const request = userImportBuilder.buildRequest();\n        // Fail quickly if more users than allowed are to be imported.\n        if (validator.isArray(users) && users.length > MAX_UPLOAD_ACCOUNT_BATCH_SIZE) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MAXIMUM_USER_COUNT_EXCEEDED, `A maximum of ${MAX_UPLOAD_ACCOUNT_BATCH_SIZE} users can be imported at once.`);\n        }\n        // If no remaining user in request after client side processing, there is no need\n        // to send the request to the server.\n        if (!request.users || request.users.length === 0) {\n            return Promise.resolve(userImportBuilder.buildResponse([]));\n        }\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_UPLOAD_ACCOUNT, request)\n            .then((response) => {\n            // No error object is returned if no error encountered.\n            const failedUploads = (response.error || []);\n            // Rewrite response as UserImportResult and re-insert client previously detected errors.\n            return userImportBuilder.buildResponse(failedUploads);\n        });\n    }\n    /**\n     * Deletes an account identified by a uid.\n     *\n     * @param uid - The uid of the user to delete.\n     * @returns A promise that resolves when the user is deleted.\n     */\n    deleteAccount(uid) {\n        if (!validator.isUid(uid)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID));\n        }\n        const request = {\n            localId: uid,\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_DELETE_ACCOUNT, request);\n    }\n    deleteAccounts(uids, force) {\n        if (uids.length === 0) {\n            return Promise.resolve({});\n        }\n        else if (uids.length > MAX_DELETE_ACCOUNTS_BATCH_SIZE) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MAXIMUM_USER_COUNT_EXCEEDED, '`uids` parameter must have <= ' + MAX_DELETE_ACCOUNTS_BATCH_SIZE + ' entries.');\n        }\n        const request = {\n            localIds: [],\n            force,\n        };\n        uids.forEach((uid) => {\n            if (!validator.isUid(uid)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID);\n            }\n            request.localIds.push(uid);\n        });\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_BATCH_DELETE_ACCOUNTS, request);\n    }\n    /**\n     * Sets additional developer claims on an existing user identified by provided UID.\n     *\n     * @param uid - The user to edit.\n     * @param customUserClaims - The developer claims to set.\n     * @returns A promise that resolves when the operation completes\n     *     with the user id that was edited.\n     */\n    setCustomUserClaims(uid, customUserClaims) {\n        // Validate user UID.\n        if (!validator.isUid(uid)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID));\n        }\n        else if (!validator.isObject(customUserClaims)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'CustomUserClaims argument must be an object or null.'));\n        }\n        // Delete operation. Replace null with an empty object.\n        if (customUserClaims === null) {\n            customUserClaims = {};\n        }\n        // Construct custom user attribute editting request.\n        const request = {\n            localId: uid,\n            customAttributes: JSON.stringify(customUserClaims),\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_SET_ACCOUNT_INFO, request)\n            .then((response) => {\n            return response.localId;\n        });\n    }\n    /**\n     * Edits an existing user.\n     *\n     * @param uid - The user to edit.\n     * @param properties - The properties to set on the user.\n     * @returns A promise that resolves when the operation completes\n     *     with the user id that was edited.\n     */\n    updateExistingAccount(uid, properties) {\n        if (!validator.isUid(uid)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID));\n        }\n        else if (!validator.isNonNullObject(properties)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'Properties argument must be a non-null object.'));\n        }\n        else if (validator.isNonNullObject(properties.providerToLink)) {\n            // TODO(rsgowman): These checks overlap somewhat with\n            // validateProviderUserInfo. It may be possible to refactor a bit.\n            if (!validator.isNonEmptyString(properties.providerToLink.providerId)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'providerToLink.providerId of properties argument must be a non-empty string.');\n            }\n            if (!validator.isNonEmptyString(properties.providerToLink.uid)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'providerToLink.uid of properties argument must be a non-empty string.');\n            }\n        }\n        else if (typeof properties.providersToUnlink !== 'undefined') {\n            if (!validator.isArray(properties.providersToUnlink)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'providersToUnlink of properties argument must be an array of strings.');\n            }\n            properties.providersToUnlink.forEach((providerId) => {\n                if (!validator.isNonEmptyString(providerId)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'providersToUnlink of properties argument must be an array of strings.');\n                }\n            });\n        }\n        // Build the setAccountInfo request.\n        const request = (0, deep_copy_1.deepCopy)(properties);\n        request.localId = uid;\n        // For deleting displayName or photoURL, these values must be passed as null.\n        // They will be removed from the backend request and an additional parameter\n        // deleteAttribute: ['PHOTO_URL', 'DISPLAY_NAME']\n        // with an array of the parameter names to delete will be passed.\n        // Parameters that are deletable and their deleteAttribute names.\n        // Use client facing names, photoURL instead of photoUrl.\n        const deletableParams = {\n            displayName: 'DISPLAY_NAME',\n            photoURL: 'PHOTO_URL',\n        };\n        // Properties to delete if available.\n        request.deleteAttribute = [];\n        for (const key in deletableParams) {\n            if (request[key] === null) {\n                // Add property identifier to list of attributes to delete.\n                request.deleteAttribute.push(deletableParams[key]);\n                // Remove property from request.\n                delete request[key];\n            }\n        }\n        if (request.deleteAttribute.length === 0) {\n            delete request.deleteAttribute;\n        }\n        // For deleting phoneNumber, this value must be passed as null.\n        // It will be removed from the backend request and an additional parameter\n        // deleteProvider: ['phone'] with an array of providerIds (phone in this case),\n        // will be passed.\n        if (request.phoneNumber === null) {\n            request.deleteProvider ? request.deleteProvider.push('phone') : request.deleteProvider = ['phone'];\n            delete request.phoneNumber;\n        }\n        if (typeof (request.providerToLink) !== 'undefined') {\n            request.linkProviderUserInfo = (0, deep_copy_1.deepCopy)(request.providerToLink);\n            delete request.providerToLink;\n            request.linkProviderUserInfo.rawId = request.linkProviderUserInfo.uid;\n            delete request.linkProviderUserInfo.uid;\n        }\n        if (typeof (request.providersToUnlink) !== 'undefined') {\n            if (!validator.isArray(request.deleteProvider)) {\n                request.deleteProvider = [];\n            }\n            request.deleteProvider = request.deleteProvider.concat(request.providersToUnlink);\n            delete request.providersToUnlink;\n        }\n        // Rewrite photoURL to photoUrl.\n        if (typeof request.photoURL !== 'undefined') {\n            request.photoUrl = request.photoURL;\n            delete request.photoURL;\n        }\n        // Rewrite disabled to disableUser.\n        if (typeof request.disabled !== 'undefined') {\n            request.disableUser = request.disabled;\n            delete request.disabled;\n        }\n        // Construct mfa related user data.\n        if (validator.isNonNullObject(request.multiFactor)) {\n            if (request.multiFactor.enrolledFactors === null) {\n                // Remove all second factors.\n                request.mfa = {};\n            }\n            else if (validator.isArray(request.multiFactor.enrolledFactors)) {\n                request.mfa = {\n                    enrollments: [],\n                };\n                try {\n                    request.multiFactor.enrolledFactors.forEach((multiFactorInfo) => {\n                        request.mfa.enrollments.push((0, user_import_builder_1.convertMultiFactorInfoToServerFormat)(multiFactorInfo));\n                    });\n                }\n                catch (e) {\n                    return Promise.reject(e);\n                }\n                if (request.mfa.enrollments.length === 0) {\n                    delete request.mfa.enrollments;\n                }\n            }\n            delete request.multiFactor;\n        }\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_SET_ACCOUNT_INFO, request)\n            .then((response) => {\n            return response.localId;\n        });\n    }\n    /**\n     * Revokes all refresh tokens for the specified user identified by the uid provided.\n     * In addition to revoking all refresh tokens for a user, all ID tokens issued\n     * before revocation will also be revoked on the Auth backend. Any request with an\n     * ID token generated before revocation will be rejected with a token expired error.\n     * Note that due to the fact that the timestamp is stored in seconds, any tokens minted in\n     * the same second as the revocation will still be valid. If there is a chance that a token\n     * was minted in the last second, delay for 1 second before revoking.\n     *\n     * @param uid - The user whose tokens are to be revoked.\n     * @returns A promise that resolves when the operation completes\n     *     successfully with the user id of the corresponding user.\n     */\n    revokeRefreshTokens(uid) {\n        // Validate user UID.\n        if (!validator.isUid(uid)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID));\n        }\n        const request = {\n            localId: uid,\n            // validSince is in UTC seconds.\n            validSince: Math.floor(new Date().getTime() / 1000),\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_SET_ACCOUNT_INFO, request)\n            .then((response) => {\n            return response.localId;\n        });\n    }\n    /**\n     * Create a new user with the properties supplied.\n     *\n     * @param properties - The properties to set on the user.\n     * @returns A promise that resolves when the operation completes\n     *     with the user id that was created.\n     */\n    createNewAccount(properties) {\n        if (!validator.isNonNullObject(properties)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'Properties argument must be a non-null object.'));\n        }\n        const request = (0, deep_copy_1.deepCopy)(properties);\n        // Rewrite photoURL to photoUrl.\n        if (typeof request.photoURL !== 'undefined') {\n            request.photoUrl = request.photoURL;\n            delete request.photoURL;\n        }\n        // Rewrite uid to localId if it exists.\n        if (typeof request.uid !== 'undefined') {\n            request.localId = request.uid;\n            delete request.uid;\n        }\n        // Construct mfa related user data.\n        if (validator.isNonNullObject(request.multiFactor)) {\n            if (validator.isNonEmptyArray(request.multiFactor.enrolledFactors)) {\n                const mfaInfo = [];\n                try {\n                    request.multiFactor.enrolledFactors.forEach((multiFactorInfo) => {\n                        // Enrollment time and uid are not allowed for signupNewUser endpoint.\n                        // They will automatically be provisioned server side.\n                        if ('enrollmentTime' in multiFactorInfo) {\n                            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"enrollmentTime\" is not supported when adding second factors via \"createUser()\"');\n                        }\n                        else if ('uid' in multiFactorInfo) {\n                            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"uid\" is not supported when adding second factors via \"createUser()\"');\n                        }\n                        mfaInfo.push((0, user_import_builder_1.convertMultiFactorInfoToServerFormat)(multiFactorInfo));\n                    });\n                }\n                catch (e) {\n                    return Promise.reject(e);\n                }\n                request.mfaInfo = mfaInfo;\n            }\n            delete request.multiFactor;\n        }\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_SIGN_UP_NEW_USER, request)\n            .then((response) => {\n            // Return the user id.\n            return response.localId;\n        });\n    }\n    /**\n     * Generates the out of band email action link for the email specified using the action code settings provided.\n     * Returns a promise that resolves with the generated link.\n     *\n     * @param requestType - The request type. This could be either used for password reset,\n     *     email verification, email link sign-in.\n     * @param email - The email of the user the link is being sent to.\n     * @param actionCodeSettings - The optional action code setings which defines whether\n     *     the link is to be handled by a mobile app and the additional state information to be passed in the\n     *     deep link, etc. Required when requestType == 'EMAIL_SIGNIN'\n     * @param newEmail - The email address the account is being updated to.\n     *     Required only for VERIFY_AND_CHANGE_EMAIL requests.\n     * @returns A promise that resolves with the email action link.\n     */\n    getEmailActionLink(requestType, email, actionCodeSettings, newEmail) {\n        let request = {\n            requestType,\n            email,\n            returnOobLink: true,\n            ...(typeof newEmail !== 'undefined') && { newEmail },\n        };\n        // ActionCodeSettings required for email link sign-in to determine the url where the sign-in will\n        // be completed.\n        if (typeof actionCodeSettings === 'undefined' && requestType === 'EMAIL_SIGNIN') {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, \"`actionCodeSettings` is required when `requestType` === 'EMAIL_SIGNIN'\"));\n        }\n        if (typeof actionCodeSettings !== 'undefined' || requestType === 'EMAIL_SIGNIN') {\n            try {\n                const builder = new action_code_settings_builder_1.ActionCodeSettingsBuilder(actionCodeSettings);\n                request = (0, deep_copy_1.deepExtend)(request, builder.buildRequest());\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        }\n        if (requestType === 'VERIFY_AND_CHANGE_EMAIL' && typeof newEmail === 'undefined') {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, \"`newEmail` is required when `requestType` === 'VERIFY_AND_CHANGE_EMAIL'\"));\n        }\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), FIREBASE_AUTH_GET_OOB_CODE, request)\n            .then((response) => {\n            // Return the link.\n            return response.oobLink;\n        });\n    }\n    /**\n     * Looks up an OIDC provider configuration by provider ID.\n     *\n     * @param providerId - The provider identifier of the configuration to lookup.\n     * @returns A promise that resolves with the provider configuration information.\n     */\n    getOAuthIdpConfig(providerId) {\n        if (!auth_config_1.OIDCConfig.isProviderId(providerId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n        }\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), GET_OAUTH_IDP_CONFIG, {}, { providerId });\n    }\n    /**\n     * Lists the OIDC configurations (single batch only) with a size of maxResults and starting from\n     * the offset as specified by pageToken.\n     *\n     * @param maxResults - The page size, 100 if undefined. This is also the maximum\n     *     allowed limit.\n     * @param pageToken - The next page token. If not specified, returns OIDC configurations\n     *     without any offset. Configurations are returned in the order they were created from oldest to\n     *     newest, relative to the page token offset.\n     * @returns A promise that resolves with the current batch of downloaded\n     *     OIDC configurations and the next page token if available. For the last page, an empty list of provider\n     *     configuration and no page token are returned.\n     */\n    listOAuthIdpConfigs(maxResults = MAX_LIST_PROVIDER_CONFIGURATION_PAGE_SIZE, pageToken) {\n        const request = {\n            pageSize: maxResults,\n        };\n        // Add next page token if provided.\n        if (typeof pageToken !== 'undefined') {\n            request.pageToken = pageToken;\n        }\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), LIST_OAUTH_IDP_CONFIGS, request)\n            .then((response) => {\n            if (!response.oauthIdpConfigs) {\n                response.oauthIdpConfigs = [];\n                delete response.nextPageToken;\n            }\n            return response;\n        });\n    }\n    /**\n     * Deletes an OIDC configuration identified by a providerId.\n     *\n     * @param providerId - The identifier of the OIDC configuration to delete.\n     * @returns A promise that resolves when the OIDC provider is deleted.\n     */\n    deleteOAuthIdpConfig(providerId) {\n        if (!auth_config_1.OIDCConfig.isProviderId(providerId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n        }\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), DELETE_OAUTH_IDP_CONFIG, {}, { providerId })\n            .then(() => {\n            // Return nothing.\n        });\n    }\n    /**\n     * Creates a new OIDC provider configuration with the properties provided.\n     *\n     * @param options - The properties to set on the new OIDC provider configuration to be created.\n     * @returns A promise that resolves with the newly created OIDC\n     *     configuration.\n     */\n    createOAuthIdpConfig(options) {\n        // Construct backend request.\n        let request;\n        try {\n            request = auth_config_1.OIDCConfig.buildServerRequest(options) || {};\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n        const providerId = options.providerId;\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), CREATE_OAUTH_IDP_CONFIG, request, { providerId })\n            .then((response) => {\n            if (!auth_config_1.OIDCConfig.getProviderIdFromResourceName(response.name)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to create new OIDC provider configuration');\n            }\n            return response;\n        });\n    }\n    /**\n     * Updates an existing OIDC provider configuration with the properties provided.\n     *\n     * @param providerId - The provider identifier of the OIDC configuration to update.\n     * @param options - The properties to update on the existing configuration.\n     * @returns A promise that resolves with the modified provider\n     *     configuration.\n     */\n    updateOAuthIdpConfig(providerId, options) {\n        if (!auth_config_1.OIDCConfig.isProviderId(providerId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n        }\n        // Construct backend request.\n        let request;\n        try {\n            request = auth_config_1.OIDCConfig.buildServerRequest(options, true) || {};\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n        const updateMask = utils.generateUpdateMask(request);\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), UPDATE_OAUTH_IDP_CONFIG, request, { providerId, updateMask: updateMask.join(',') })\n            .then((response) => {\n            if (!auth_config_1.OIDCConfig.getProviderIdFromResourceName(response.name)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to update OIDC provider configuration');\n            }\n            return response;\n        });\n    }\n    /**\n     * Looks up an SAML provider configuration by provider ID.\n     *\n     * @param providerId - The provider identifier of the configuration to lookup.\n     * @returns A promise that resolves with the provider configuration information.\n     */\n    getInboundSamlConfig(providerId) {\n        if (!auth_config_1.SAMLConfig.isProviderId(providerId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n        }\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), GET_INBOUND_SAML_CONFIG, {}, { providerId });\n    }\n    /**\n     * Lists the SAML configurations (single batch only) with a size of maxResults and starting from\n     * the offset as specified by pageToken.\n     *\n     * @param maxResults - The page size, 100 if undefined. This is also the maximum\n     *     allowed limit.\n     * @param pageToken - The next page token. If not specified, returns SAML configurations starting\n     *     without any offset. Configurations are returned in the order they were created from oldest to\n     *     newest, relative to the page token offset.\n     * @returns A promise that resolves with the current batch of downloaded\n     *     SAML configurations and the next page token if available. For the last page, an empty list of provider\n     *     configuration and no page token are returned.\n     */\n    listInboundSamlConfigs(maxResults = MAX_LIST_PROVIDER_CONFIGURATION_PAGE_SIZE, pageToken) {\n        const request = {\n            pageSize: maxResults,\n        };\n        // Add next page token if provided.\n        if (typeof pageToken !== 'undefined') {\n            request.pageToken = pageToken;\n        }\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), LIST_INBOUND_SAML_CONFIGS, request)\n            .then((response) => {\n            if (!response.inboundSamlConfigs) {\n                response.inboundSamlConfigs = [];\n                delete response.nextPageToken;\n            }\n            return response;\n        });\n    }\n    /**\n     * Deletes a SAML configuration identified by a providerId.\n     *\n     * @param providerId - The identifier of the SAML configuration to delete.\n     * @returns A promise that resolves when the SAML provider is deleted.\n     */\n    deleteInboundSamlConfig(providerId) {\n        if (!auth_config_1.SAMLConfig.isProviderId(providerId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n        }\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), DELETE_INBOUND_SAML_CONFIG, {}, { providerId })\n            .then(() => {\n            // Return nothing.\n        });\n    }\n    /**\n     * Creates a new SAML provider configuration with the properties provided.\n     *\n     * @param options - The properties to set on the new SAML provider configuration to be created.\n     * @returns A promise that resolves with the newly created SAML\n     *     configuration.\n     */\n    createInboundSamlConfig(options) {\n        // Construct backend request.\n        let request;\n        try {\n            request = auth_config_1.SAMLConfig.buildServerRequest(options) || {};\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n        const providerId = options.providerId;\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), CREATE_INBOUND_SAML_CONFIG, request, { providerId })\n            .then((response) => {\n            if (!auth_config_1.SAMLConfig.getProviderIdFromResourceName(response.name)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to create new SAML provider configuration');\n            }\n            return response;\n        });\n    }\n    /**\n     * Updates an existing SAML provider configuration with the properties provided.\n     *\n     * @param providerId - The provider identifier of the SAML configuration to update.\n     * @param options - The properties to update on the existing configuration.\n     * @returns A promise that resolves with the modified provider\n     *     configuration.\n     */\n    updateInboundSamlConfig(providerId, options) {\n        if (!auth_config_1.SAMLConfig.isProviderId(providerId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n        }\n        // Construct backend request.\n        let request;\n        try {\n            request = auth_config_1.SAMLConfig.buildServerRequest(options, true) || {};\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n        const updateMask = utils.generateUpdateMask(request);\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), UPDATE_INBOUND_SAML_CONFIG, request, { providerId, updateMask: updateMask.join(',') })\n            .then((response) => {\n            if (!auth_config_1.SAMLConfig.getProviderIdFromResourceName(response.name)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to update SAML provider configuration');\n            }\n            return response;\n        });\n    }\n    /**\n     * Invokes the request handler based on the API settings object passed.\n     *\n     * @param urlBuilder - The URL builder for Auth endpoints.\n     * @param apiSettings - The API endpoint settings to apply to request and response.\n     * @param requestData - The request data.\n     * @param additionalResourceParams - Additional resource related params if needed.\n     * @returns A promise that resolves with the response.\n     */\n    invokeRequestHandler(urlBuilder, apiSettings, requestData, additionalResourceParams) {\n        return urlBuilder.getUrl(apiSettings.getEndpoint(), additionalResourceParams)\n            .then((url) => {\n            // Validate request.\n            if (requestData) {\n                const requestValidator = apiSettings.getRequestValidator();\n                requestValidator(requestData);\n            }\n            // Process request.\n            const req = {\n                method: apiSettings.getHttpMethod(),\n                url,\n                headers: FIREBASE_AUTH_HEADER,\n                data: requestData,\n                timeout: FIREBASE_AUTH_TIMEOUT,\n            };\n            return this.httpClient.send(req);\n        })\n            .then((response) => {\n            // Validate response.\n            const responseValidator = apiSettings.getResponseValidator();\n            responseValidator(response.data);\n            // Return entire response.\n            return response.data;\n        })\n            .catch((err) => {\n            if (err instanceof api_request_1.HttpError) {\n                const error = err.response.data;\n                const errorCode = AbstractAuthRequestHandler.getErrorCode(error);\n                if (!errorCode) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'Error returned from server: ' + error + '. Additionally, an ' +\n                        'internal error occurred while attempting to extract the ' +\n                        'errorcode from the error.');\n                }\n                throw error_1.FirebaseAuthError.fromServerError(errorCode, /* message */ undefined, error);\n            }\n            throw err;\n        });\n    }\n    /**\n     * @returns The current Auth user management resource URL builder.\n     */\n    getAuthUrlBuilder() {\n        if (!this.authUrlBuilder) {\n            this.authUrlBuilder = this.newAuthUrlBuilder();\n        }\n        return this.authUrlBuilder;\n    }\n    /**\n     * @returns The current project config resource URL builder.\n     */\n    getProjectConfigUrlBuilder() {\n        if (!this.projectConfigUrlBuilder) {\n            this.projectConfigUrlBuilder = this.newProjectConfigUrlBuilder();\n        }\n        return this.projectConfigUrlBuilder;\n    }\n}\nexports.AbstractAuthRequestHandler = AbstractAuthRequestHandler;\n/** Instantiates the getConfig endpoint settings. */\nconst GET_PROJECT_CONFIG = new api_request_1.ApiSettings('/config', 'GET')\n    .setResponseValidator((response) => {\n    // Response should always contain at least the config name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to get project config');\n    }\n});\n/** Instantiates the updateConfig endpoint settings. */\nconst UPDATE_PROJECT_CONFIG = new api_request_1.ApiSettings('/config?updateMask={updateMask}', 'PATCH')\n    .setResponseValidator((response) => {\n    // Response should always contain at least the config name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to update project config');\n    }\n});\n/** Instantiates the getTenant endpoint settings. */\nconst GET_TENANT = new api_request_1.ApiSettings('/tenants/{tenantId}', 'GET')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain at least the tenant name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to get tenant');\n    }\n});\n/** Instantiates the deleteTenant endpoint settings. */\nconst DELETE_TENANT = new api_request_1.ApiSettings('/tenants/{tenantId}', 'DELETE');\n/** Instantiates the updateTenant endpoint settings. */\nconst UPDATE_TENANT = new api_request_1.ApiSettings('/tenants/{tenantId}?updateMask={updateMask}', 'PATCH')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain at least the tenant name.\n    if (!validator.isNonEmptyString(response.name) ||\n        !tenant_1.Tenant.getTenantIdFromResourceName(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to update tenant');\n    }\n});\n/** Instantiates the listTenants endpoint settings. */\nconst LIST_TENANTS = new api_request_1.ApiSettings('/tenants', 'GET')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    // Validate next page token.\n    if (typeof request.pageToken !== 'undefined' &&\n        !validator.isNonEmptyString(request.pageToken)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PAGE_TOKEN);\n    }\n    // Validate max results.\n    if (!validator.isNumber(request.pageSize) ||\n        request.pageSize <= 0 ||\n        request.pageSize > MAX_LIST_TENANT_PAGE_SIZE) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'Required \"maxResults\" must be a positive non-zero number that does not exceed ' +\n            `the allowed ${MAX_LIST_TENANT_PAGE_SIZE}.`);\n    }\n});\n/** Instantiates the createTenant endpoint settings. */\nconst CREATE_TENANT = new api_request_1.ApiSettings('/tenants', 'POST')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain at least the tenant name.\n    if (!validator.isNonEmptyString(response.name) ||\n        !tenant_1.Tenant.getTenantIdFromResourceName(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to create new tenant');\n    }\n});\n/**\n * Utility for sending requests to Auth server that are Auth instance related. This includes user, tenant,\n * and project config management related APIs. This extends the BaseFirebaseAuthRequestHandler class and defines\n * additional tenant management related APIs.\n */\nclass AuthRequestHandler extends AbstractAuthRequestHandler {\n    /**\n     * The FirebaseAuthRequestHandler constructor used to initialize an instance using a FirebaseApp.\n     *\n     * @param app - The app used to fetch access tokens to sign API requests.\n     * @constructor.\n     */\n    constructor(app) {\n        super(app);\n        this.authResourceUrlBuilder = new AuthResourceUrlBuilder(app, 'v2');\n    }\n    /**\n     * @returns A new Auth user management resource URL builder instance.\n     */\n    newAuthUrlBuilder() {\n        return new AuthResourceUrlBuilder(this.app, 'v1');\n    }\n    /**\n     * @returns A new project config resource URL builder instance.\n     */\n    newProjectConfigUrlBuilder() {\n        return new AuthResourceUrlBuilder(this.app, 'v2');\n    }\n    /**\n     * Get the current project's config\n     * @returns A promise that resolves with the project config information.\n     */\n    getProjectConfig() {\n        return this.invokeRequestHandler(this.authResourceUrlBuilder, GET_PROJECT_CONFIG, {}, {})\n            .then((response) => {\n            return response;\n        });\n    }\n    /**\n     * Update the current project's config.\n     * @returns A promise that resolves with the project config information.\n     */\n    updateProjectConfig(options) {\n        try {\n            const request = project_config_1.ProjectConfig.buildServerRequest(options);\n            const updateMask = utils.generateUpdateMask(request);\n            return this.invokeRequestHandler(this.authResourceUrlBuilder, UPDATE_PROJECT_CONFIG, request, { updateMask: updateMask.join(',') })\n                .then((response) => {\n                return response;\n            });\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * Looks up a tenant by tenant ID.\n     *\n     * @param tenantId - The tenant identifier of the tenant to lookup.\n     * @returns A promise that resolves with the tenant information.\n     */\n    getTenant(tenantId) {\n        if (!validator.isNonEmptyString(tenantId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TENANT_ID));\n        }\n        return this.invokeRequestHandler(this.authResourceUrlBuilder, GET_TENANT, {}, { tenantId })\n            .then((response) => {\n            return response;\n        });\n    }\n    /**\n     * Exports the tenants (single batch only) with a size of maxResults and starting from\n     * the offset as specified by pageToken.\n     *\n     * @param maxResults - The page size, 1000 if undefined. This is also the maximum\n     *     allowed limit.\n     * @param pageToken - The next page token. If not specified, returns tenants starting\n     *     without any offset. Tenants are returned in the order they were created from oldest to\n     *     newest, relative to the page token offset.\n     * @returns A promise that resolves with the current batch of downloaded\n     *     tenants and the next page token if available. For the last page, an empty list of tenants\n     *     and no page token are returned.\n     */\n    listTenants(maxResults = MAX_LIST_TENANT_PAGE_SIZE, pageToken) {\n        const request = {\n            pageSize: maxResults,\n            pageToken,\n        };\n        // Remove next page token if not provided.\n        if (typeof request.pageToken === 'undefined') {\n            delete request.pageToken;\n        }\n        return this.invokeRequestHandler(this.authResourceUrlBuilder, LIST_TENANTS, request)\n            .then((response) => {\n            if (!response.tenants) {\n                response.tenants = [];\n                delete response.nextPageToken;\n            }\n            return response;\n        });\n    }\n    /**\n     * Deletes a tenant identified by a tenantId.\n     *\n     * @param tenantId - The identifier of the tenant to delete.\n     * @returns A promise that resolves when the tenant is deleted.\n     */\n    deleteTenant(tenantId) {\n        if (!validator.isNonEmptyString(tenantId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TENANT_ID));\n        }\n        return this.invokeRequestHandler(this.authResourceUrlBuilder, DELETE_TENANT, undefined, { tenantId })\n            .then(() => {\n            // Return nothing.\n        });\n    }\n    /**\n     * Creates a new tenant with the properties provided.\n     *\n     * @param tenantOptions - The properties to set on the new tenant to be created.\n     * @returns A promise that resolves with the newly created tenant object.\n     */\n    createTenant(tenantOptions) {\n        try {\n            // Construct backend request.\n            const request = tenant_1.Tenant.buildServerRequest(tenantOptions, true);\n            return this.invokeRequestHandler(this.authResourceUrlBuilder, CREATE_TENANT, request)\n                .then((response) => {\n                return response;\n            });\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * Updates an existing tenant with the properties provided.\n     *\n     * @param tenantId - The tenant identifier of the tenant to update.\n     * @param tenantOptions - The properties to update on the existing tenant.\n     * @returns A promise that resolves with the modified tenant object.\n     */\n    updateTenant(tenantId, tenantOptions) {\n        if (!validator.isNonEmptyString(tenantId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TENANT_ID));\n        }\n        try {\n            // Construct backend request.\n            const request = tenant_1.Tenant.buildServerRequest(tenantOptions, false);\n            // Do not traverse deep into testPhoneNumbers. The entire content should be replaced\n            // and not just specific phone numbers.\n            const updateMask = utils.generateUpdateMask(request, ['testPhoneNumbers']);\n            return this.invokeRequestHandler(this.authResourceUrlBuilder, UPDATE_TENANT, request, { tenantId, updateMask: updateMask.join(',') })\n                .then((response) => {\n                return response;\n            });\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\nexports.AuthRequestHandler = AuthRequestHandler;\n/**\n * Utility for sending requests to Auth server that are tenant Auth instance related. This includes user\n * management related APIs for specified tenants.\n * This extends the BaseFirebaseAuthRequestHandler class.\n */\nclass TenantAwareAuthRequestHandler extends AbstractAuthRequestHandler {\n    /**\n     * The FirebaseTenantRequestHandler constructor used to initialize an instance using a\n     * FirebaseApp and a tenant ID.\n     *\n     * @param app - The app used to fetch access tokens to sign API requests.\n     * @param tenantId - The request handler's tenant ID.\n     * @constructor\n     */\n    constructor(app, tenantId) {\n        super(app);\n        this.tenantId = tenantId;\n    }\n    /**\n     * @returns A new Auth user management resource URL builder instance.\n     */\n    newAuthUrlBuilder() {\n        return new TenantAwareAuthResourceUrlBuilder(this.app, 'v1', this.tenantId);\n    }\n    /**\n     * @returns A new project config resource URL builder instance.\n     */\n    newProjectConfigUrlBuilder() {\n        return new TenantAwareAuthResourceUrlBuilder(this.app, 'v2', this.tenantId);\n    }\n    /**\n     * Imports the list of users provided to Firebase Auth. This is useful when\n     * migrating from an external authentication system without having to use the Firebase CLI SDK.\n     * At most, 1000 users are allowed to be imported one at a time.\n     * When importing a list of password users, UserImportOptions are required to be specified.\n     *\n     * Overrides the superclass methods by adding an additional check to match tenant IDs of\n     * imported user records if present.\n     *\n     * @param users - The list of user records to import to Firebase Auth.\n     * @param options - The user import options, required when the users provided\n     *     include password credentials.\n     * @returns A promise that resolves when the operation completes\n     *     with the result of the import. This includes the number of successful imports, the number\n     *     of failed uploads and their corresponding errors.\n     */\n    uploadAccount(users, options) {\n        // Add additional check to match tenant ID of imported user records.\n        users.forEach((user, index) => {\n            if (validator.isNonEmptyString(user.tenantId) &&\n                user.tenantId !== this.tenantId) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISMATCHING_TENANT_ID, `UserRecord of index \"${index}\" has mismatching tenant ID \"${user.tenantId}\"`);\n            }\n        });\n        return super.uploadAccount(users, options);\n    }\n}\nexports.TenantAwareAuthRequestHandler = TenantAwareAuthRequestHandler;\nfunction emulatorHost() {\n    return process.env.FIREBASE_AUTH_EMULATOR_HOST;\n}\n/**\n * When true the SDK should communicate with the Auth Emulator for all API\n * calls and also produce unsigned tokens.\n */\nfunction useEmulator() {\n    return !!emulatorHost();\n}\nexports.useEmulator = useEmulator;\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CryptoSignerErrorCode = exports.CryptoSignerError = exports.cryptoSignerFromApp = exports.IAMSigner = exports.ServiceAccountSigner = void 0;\nconst credential_internal_1 = require(\"../app/credential-internal\");\nconst api_request_1 = require(\"./api-request\");\nconst validator = require(\"../utils/validator\");\nconst ALGORITHM_RS256 = 'RS256';\n/**\n * A CryptoSigner implementation that uses an explicitly specified service account private key to\n * sign data. Performs all operations locally, and does not make any RPC calls.\n */\nclass ServiceAccountSigner {\n    /**\n     * Creates a new CryptoSigner instance from the given service account credential.\n     *\n     * @param credential - A service account credential.\n     */\n    constructor(credential) {\n        this.credential = credential;\n        this.algorithm = ALGORITHM_RS256;\n        if (!credential) {\n            throw new CryptoSignerError({\n                code: CryptoSignerErrorCode.INVALID_CREDENTIAL,\n                message: 'INTERNAL ASSERT: Must provide a service account credential to initialize ServiceAccountSigner.',\n            });\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    sign(buffer) {\n        const crypto = require('crypto'); // eslint-disable-line @typescript-eslint/no-var-requires\n        const sign = crypto.createSign('RSA-SHA256');\n        sign.update(buffer);\n        return Promise.resolve(sign.sign(this.credential.privateKey));\n    }\n    /**\n     * @inheritDoc\n     */\n    getAccountId() {\n        return Promise.resolve(this.credential.clientEmail);\n    }\n}\nexports.ServiceAccountSigner = ServiceAccountSigner;\n/**\n * A CryptoSigner implementation that uses the remote IAM service to sign data. If initialized without\n * a service account ID, attempts to discover a service account ID by consulting the local Metadata\n * service. This will succeed in managed environments like Google Cloud Functions and App Engine.\n *\n * @see https://cloud.google.com/iam/reference/rest/v1/projects.serviceAccounts/signBlob\n * @see https://cloud.google.com/compute/docs/storing-retrieving-metadata\n */\nclass IAMSigner {\n    constructor(httpClient, serviceAccountId) {\n        this.algorithm = ALGORITHM_RS256;\n        if (!httpClient) {\n            throw new CryptoSignerError({\n                code: CryptoSignerErrorCode.INVALID_ARGUMENT,\n                message: 'INTERNAL ASSERT: Must provide a HTTP client to initialize IAMSigner.',\n            });\n        }\n        if (typeof serviceAccountId !== 'undefined' && !validator.isNonEmptyString(serviceAccountId)) {\n            throw new CryptoSignerError({\n                code: CryptoSignerErrorCode.INVALID_ARGUMENT,\n                message: 'INTERNAL ASSERT: Service account ID must be undefined or a non-empty string.',\n            });\n        }\n        this.httpClient = httpClient;\n        this.serviceAccountId = serviceAccountId;\n    }\n    /**\n     * @inheritDoc\n     */\n    sign(buffer) {\n        return this.getAccountId().then((serviceAccount) => {\n            const request = {\n                method: 'POST',\n                url: `https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/${serviceAccount}:signBlob`,\n                data: { payload: buffer.toString('base64') },\n            };\n            return this.httpClient.send(request);\n        }).then((response) => {\n            // Response from IAM is base64 encoded. Decode it into a buffer and return.\n            return Buffer.from(response.data.signedBlob, 'base64');\n        }).catch((err) => {\n            if (err instanceof api_request_1.HttpError) {\n                throw new CryptoSignerError({\n                    code: CryptoSignerErrorCode.SERVER_ERROR,\n                    message: err.message,\n                    cause: err\n                });\n            }\n            throw err;\n        });\n    }\n    /**\n     * @inheritDoc\n     */\n    getAccountId() {\n        if (validator.isNonEmptyString(this.serviceAccountId)) {\n            return Promise.resolve(this.serviceAccountId);\n        }\n        const request = {\n            method: 'GET',\n            url: 'http://metadata/computeMetadata/v1/instance/service-accounts/default/email',\n            headers: {\n                'Metadata-Flavor': 'Google',\n            },\n        };\n        const client = new api_request_1.HttpClient();\n        return client.send(request).then((response) => {\n            if (!response.text) {\n                throw new CryptoSignerError({\n                    code: CryptoSignerErrorCode.INTERNAL_ERROR,\n                    message: 'HTTP Response missing payload',\n                });\n            }\n            this.serviceAccountId = response.text;\n            return response.text;\n        }).catch((err) => {\n            throw new CryptoSignerError({\n                code: CryptoSignerErrorCode.INVALID_CREDENTIAL,\n                message: 'Failed to determine service account. Make sure to initialize ' +\n                    'the SDK with a service account credential. Alternatively specify a service ' +\n                    `account with iam.serviceAccounts.signBlob permission. Original error: ${err}`,\n            });\n        });\n    }\n}\nexports.IAMSigner = IAMSigner;\n/**\n * Creates a new CryptoSigner instance for the given app. If the app has been initialized with a\n * service account credential, creates a ServiceAccountSigner.\n *\n * @param app - A FirebaseApp instance.\n * @returns A CryptoSigner instance.\n */\nfunction cryptoSignerFromApp(app) {\n    const credential = app.options.credential;\n    if (credential instanceof credential_internal_1.ServiceAccountCredential) {\n        return new ServiceAccountSigner(credential);\n    }\n    return new IAMSigner(new api_request_1.AuthorizedHttpClient(app), app.options.serviceAccountId);\n}\nexports.cryptoSignerFromApp = cryptoSignerFromApp;\n/**\n * CryptoSigner error code structure.\n *\n * @param errorInfo - The error information (code and message).\n * @constructor\n */\nclass CryptoSignerError extends Error {\n    constructor(errorInfo) {\n        super(errorInfo.message);\n        this.errorInfo = errorInfo;\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        this.__proto__ = CryptoSignerError.prototype;\n    }\n    /** @returns The error code. */\n    get code() {\n        return this.errorInfo.code;\n    }\n    /** @returns The error message. */\n    get message() {\n        return this.errorInfo.message;\n    }\n    /** @returns The error data. */\n    get cause() {\n        return this.errorInfo.cause;\n    }\n}\nexports.CryptoSignerError = CryptoSignerError;\n/**\n * Crypto Signer error codes and their default messages.\n */\nclass CryptoSignerErrorCode {\n}\nexports.CryptoSignerErrorCode = CryptoSignerErrorCode;\nCryptoSignerErrorCode.INVALID_ARGUMENT = 'invalid-argument';\nCryptoSignerErrorCode.INTERNAL_ERROR = 'internal-error';\nCryptoSignerErrorCode.INVALID_CREDENTIAL = 'invalid-credential';\nCryptoSignerErrorCode.SERVER_ERROR = 'server-error';\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.handleCryptoSignerError = exports.FirebaseTokenGenerator = exports.EmulatedSigner = exports.BLACKLISTED_CLAIMS = void 0;\nconst error_1 = require(\"../utils/error\");\nconst crypto_signer_1 = require(\"../utils/crypto-signer\");\nconst validator = require(\"../utils/validator\");\nconst utils_1 = require(\"../utils\");\nconst ALGORITHM_NONE = 'none';\nconst ONE_HOUR_IN_SECONDS = 60 * 60;\n// List of blacklisted claims which cannot be provided when creating a custom token\nexports.BLACKLISTED_CLAIMS = [\n    'acr', 'amr', 'at_hash', 'aud', 'auth_time', 'azp', 'cnf', 'c_hash', 'exp', 'iat', 'iss', 'jti',\n    'nbf', 'nonce',\n];\n// Audience to use for Firebase Auth Custom tokens\nconst FIREBASE_AUDIENCE = 'https://identitytoolkit.googleapis.com/google.identity.identitytoolkit.v1.IdentityToolkit';\n/**\n * A CryptoSigner implementation that is used when communicating with the Auth emulator.\n * It produces unsigned tokens.\n */\nclass EmulatedSigner {\n    constructor() {\n        this.algorithm = ALGORITHM_NONE;\n    }\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    sign(buffer) {\n        return Promise.resolve(Buffer.from(''));\n    }\n    /**\n     * @inheritDoc\n     */\n    getAccountId() {\n        return Promise.resolve('firebase-auth-emulator@example.com');\n    }\n}\nexports.EmulatedSigner = EmulatedSigner;\n/**\n * Class for generating different types of Firebase Auth tokens (JWTs).\n *\n * @internal\n */\nclass FirebaseTokenGenerator {\n    /**\n     * @param tenantId - The tenant ID to use for the generated Firebase Auth\n     *     Custom token. If absent, then no tenant ID claim will be set in the\n     *     resulting JWT.\n     */\n    constructor(signer, tenantId) {\n        this.tenantId = tenantId;\n        if (!validator.isNonNullObject(signer)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CREDENTIAL, 'INTERNAL ASSERT: Must provide a CryptoSigner to use FirebaseTokenGenerator.');\n        }\n        if (typeof this.tenantId !== 'undefined' && !validator.isNonEmptyString(this.tenantId)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '`tenantId` argument must be a non-empty string.');\n        }\n        this.signer = signer;\n    }\n    /**\n     * Creates a new Firebase Auth Custom token.\n     *\n     * @param uid - The user ID to use for the generated Firebase Auth Custom token.\n     * @param developerClaims - Optional developer claims to include in the generated Firebase\n     *     Auth Custom token.\n     * @returns A Promise fulfilled with a Firebase Auth Custom token signed with a\n     *     service account key and containing the provided payload.\n     */\n    createCustomToken(uid, developerClaims) {\n        let errorMessage;\n        if (!validator.isNonEmptyString(uid)) {\n            errorMessage = '`uid` argument must be a non-empty string uid.';\n        }\n        else if (uid.length > 128) {\n            errorMessage = '`uid` argument must a uid with less than or equal to 128 characters.';\n        }\n        else if (!this.isDeveloperClaimsValid_(developerClaims)) {\n            errorMessage = '`developerClaims` argument must be a valid, non-null object containing the developer claims.';\n        }\n        if (errorMessage) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, errorMessage);\n        }\n        const claims = {};\n        if (typeof developerClaims !== 'undefined') {\n            for (const key in developerClaims) {\n                /* istanbul ignore else */\n                if (Object.prototype.hasOwnProperty.call(developerClaims, key)) {\n                    if (exports.BLACKLISTED_CLAIMS.indexOf(key) !== -1) {\n                        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `Developer claim \"${key}\" is reserved and cannot be specified.`);\n                    }\n                    claims[key] = developerClaims[key];\n                }\n            }\n        }\n        return this.signer.getAccountId().then((account) => {\n            const header = {\n                alg: this.signer.algorithm,\n                typ: 'JWT',\n            };\n            const iat = Math.floor(Date.now() / 1000);\n            const body = {\n                aud: FIREBASE_AUDIENCE,\n                iat,\n                exp: iat + ONE_HOUR_IN_SECONDS,\n                iss: account,\n                sub: account,\n                uid,\n            };\n            if (this.tenantId) {\n                body.tenant_id = this.tenantId;\n            }\n            if (Object.keys(claims).length > 0) {\n                body.claims = claims;\n            }\n            const token = `${this.encodeSegment(header)}.${this.encodeSegment(body)}`;\n            const signPromise = this.signer.sign(Buffer.from(token));\n            return Promise.all([token, signPromise]);\n        }).then(([token, signature]) => {\n            return `${token}.${this.encodeSegment(signature)}`;\n        }).catch((err) => {\n            throw handleCryptoSignerError(err);\n        });\n    }\n    encodeSegment(segment) {\n        const buffer = (segment instanceof Buffer) ? segment : Buffer.from(JSON.stringify(segment));\n        return (0, utils_1.toWebSafeBase64)(buffer).replace(/=+$/, '');\n    }\n    /**\n     * Returns whether or not the provided developer claims are valid.\n     *\n     * @param developerClaims - Optional developer claims to validate.\n     * @returns True if the provided claims are valid; otherwise, false.\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    isDeveloperClaimsValid_(developerClaims) {\n        if (typeof developerClaims === 'undefined') {\n            return true;\n        }\n        return validator.isNonNullObject(developerClaims);\n    }\n}\nexports.FirebaseTokenGenerator = FirebaseTokenGenerator;\n/**\n * Creates a new FirebaseAuthError by extracting the error code, message and other relevant\n * details from a CryptoSignerError.\n *\n * @param err - The Error to convert into a FirebaseAuthError error\n * @returns A Firebase Auth error that can be returned to the user.\n */\nfunction handleCryptoSignerError(err) {\n    if (!(err instanceof crypto_signer_1.CryptoSignerError)) {\n        return err;\n    }\n    if (err.code === crypto_signer_1.CryptoSignerErrorCode.SERVER_ERROR && validator.isNonNullObject(err.cause)) {\n        const httpError = err.cause;\n        const errorResponse = httpError.response.data;\n        if (validator.isNonNullObject(errorResponse) && errorResponse.error) {\n            const errorCode = errorResponse.error.status;\n            const description = 'Please refer to https://firebase.google.com/docs/auth/admin/create-custom-tokens ' +\n                'for more details on how to use and troubleshoot this feature.';\n            const errorMsg = `${errorResponse.error.message}; ${description}`;\n            return error_1.FirebaseAuthError.fromServerError(errorCode, errorMsg, errorResponse);\n        }\n        return new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'Error returned from server: ' + errorResponse + '. Additionally, an ' +\n            'internal error occurred while attempting to extract the ' +\n            'errorcode from the error.');\n    }\n    return new error_1.FirebaseAuthError(mapToAuthClientErrorCode(err.code), err.message);\n}\nexports.handleCryptoSignerError = handleCryptoSignerError;\nfunction mapToAuthClientErrorCode(code) {\n    switch (code) {\n        case crypto_signer_1.CryptoSignerErrorCode.INVALID_CREDENTIAL:\n            return error_1.AuthClientErrorCode.INVALID_CREDENTIAL;\n        case crypto_signer_1.CryptoSignerErrorCode.INVALID_ARGUMENT:\n            return error_1.AuthClientErrorCode.INVALID_ARGUMENT;\n        default:\n            return error_1.AuthClientErrorCode.INTERNAL_ERROR;\n    }\n}\n", "module.exports.KEYOBJECT = Symbol('KEYOBJECT')\nmodule.exports.PRIVATE_MEMBERS = Symbol('PRIVATE_MEMBERS')\nmodule.exports.PUBLIC_MEMBERS = Symbol('PUBLIC_MEMBERS')\nmodule.exports.THUMBPRINT_MATERIAL = Symbol('THUMBPRINT_MATERIAL')\nmodule.exports.JWK_MEMBERS = Symbol('JWK_MEMBERS')\nmodule.exports.KEY_MANAGEMENT_ENCRYPT = Symbol('KEY_MANAGEMENT_ENCRYPT')\nmodule.exports.KEY_MANAGEMENT_DECRYPT = Symbol('KEY_MANAGEMENT_DECRYPT')\n\nconst USES_MAPPING = {\n  sig: new Set(['sign', 'verify']),\n  enc: new Set(['encrypt', 'decrypt', 'wrapKey', 'unwrapKey', 'deriveKey'])\n}\nconst OPS = new Set([...USES_MAPPING.sig, ...USES_MAPPING.enc])\nconst USES = new Set(Object.keys(USES_MAPPING))\n\nmodule.exports.USES_MAPPING = USES_MAPPING\nmodule.exports.OPS = OPS\nmodule.exports.USES = USES\n", "const { getCurves } = require('crypto')\n\nconst curves = new Set()\n\nif (getCurves().includes('prime256v1')) {\n  curves.add('P-256')\n}\n\nif (getCurves().includes('secp256k1')) {\n  curves.add('secp256k1')\n}\n\nif (getCurves().includes('secp384r1')) {\n  curves.add('P-384')\n}\n\nif (getCurves().includes('secp521r1')) {\n  curves.add('P-521')\n}\n\nmodule.exports = curves\n", "module.exports = new Map([\n  ['A128CBC-HS256', 128],\n  ['A128GCM', 96],\n  ['A128GCMKW', 96],\n  ['A192CBC-HS384', 128],\n  ['A192GCM', 96],\n  ['A192GCMKW', 96],\n  ['A256CBC-HS512', 128],\n  ['A256GCM', 96],\n  ['A256GCMKW', 96]\n])\n", "module.exports = {\n  sign: new Map(),\n  verify: new Map(),\n  keyManagementEncrypt: new Map(),\n  keyManagementDecrypt: new Map(),\n  encrypt: new Map(),\n  decrypt: new Map()\n}\n", "module.exports = {\n  oct: {\n    decrypt: {},\n    deriveKey: {},\n    encrypt: {},\n    sign: {},\n    unwrapKey: {},\n    verify: {},\n    wrapKey: {}\n  },\n  EC: {\n    decrypt: {},\n    deriveKey: {},\n    encrypt: {},\n    sign: {},\n    unwrapKey: {},\n    verify: {},\n    wrapKey: {}\n  },\n  RSA: {\n    decrypt: {},\n    deriveKey: {},\n    encrypt: {},\n    sign: {},\n    unwrapKey: {},\n    verify: {},\n    wrapKey: {}\n  },\n  OKP: {\n    decrypt: {},\n    deriveKey: {},\n    encrypt: {},\n    sign: {},\n    unwrapKey: {},\n    verify: {},\n    wrapKey: {}\n  }\n}\n", "module.exports = new Map([\n  ['A128CBC-HS256', 256],\n  ['A128GCM', 128],\n  ['A192CBC-HS384', 384],\n  ['A192GCM', 192],\n  ['A256CBC-HS512', 512],\n  ['A256GCM', 256]\n])\n", "const curves = new Set(['Ed25519'])\n\nif (!('electron' in process.versions)) {\n  curves.add('Ed448')\n  curves.add('X25519')\n  curves.add('X448')\n}\n\nmodule.exports = curves\n", "module.exports = new Map()\n", "const EC_CURVES = require('./ec_curves')\nconst IVLENGTHS = require('./iv_lengths')\nconst JWA = require('./jwa')\nconst JWK = require('./jwk')\nconst KEYLENGTHS = require('./key_lengths')\nconst OKP_CURVES = require('./okp_curves')\nconst ECDH_DERIVE_LENGTHS = require('./ecdh_derive_lengths')\n\nmodule.exports = {\n  EC_CURVES,\n  ECDH_DERIVE_LENGTHS,\n  IVLENGTHS,\n  JWA,\n  JWK,\n  KEYLENGTHS,\n  OKP_CURVES\n}\n", "const { randomBytes } = require('crypto')\n\nconst { IVLENGTHS } = require('../registry')\n\nmodule.exports = alg => randomBytes(IVLENGTHS.get(alg) / 8)\n", "let encode\nlet encodeBuffer\nif (Buffer.isEncoding('base64url')) {\n  encode = (input, encoding = 'utf8') => Buffer.from(input, encoding).toString('base64url')\n  encodeBuffer = (buf) => buf.toString('base64url')\n} else {\n  const fromBase64 = (base64) => base64.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n  encode = (input, encoding = 'utf8') => fromBase64(Buffer.from(input, encoding).toString('base64'))\n  encodeBuffer = (buf) => fromBase64(buf.toString('base64'))\n}\n\nconst decodeToBuffer = (input) => {\n  return Buffer.from(input, 'base64')\n}\n\nconst decode = (input, encoding = 'utf8') => {\n  return decodeToBuffer(input).toString(encoding)\n}\n\nconst b64uJSON = {\n  encode: (input) => {\n    return encode(JSON.stringify(input))\n  },\n  decode: (input, encoding = 'utf8') => {\n    return JSON.parse(decode(input, encoding))\n  }\n}\n\nb64uJSON.decode.try = (input, encoding = 'utf8') => {\n  try {\n    return b64uJSON.decode(input, encoding)\n  } catch (err) {\n    return decode(input, encoding)\n  }\n}\n\nconst bnToBuf = (bn) => {\n  let hex = BigInt(bn).toString(16)\n  if (hex.length % 2) {\n    hex = `0${hex}`\n  }\n\n  const len = hex.length / 2\n  const u8 = new Uint8Array(len)\n\n  let i = 0\n  let j = 0\n  while (i < len) {\n    u8[i] = parseInt(hex.slice(j, j + 2), 16)\n    i += 1\n    j += 2\n  }\n\n  return u8\n}\n\nconst encodeBigInt = (bn) => encodeBuffer(Buffer.from(bnToBuf(bn)))\n\nmodule.exports.decode = decode\nmodule.exports.decodeToBuffer = decodeToBuffer\nmodule.exports.encode = encode\nmodule.exports.encodeBuffer = encodeBuffer\nmodule.exports.JSON = b64uJSON\nmodule.exports.encodeBigInt = encodeBigInt\n", "const CODES = {\n  JOSEAlgNotWhitelisted: 'ERR_JOSE_ALG_NOT_WHITELISTED',\n  JOSECritNotUnderstood: 'ERR_JOSE_CRIT_NOT_UNDERSTOOD',\n  JOSEInvalidEncoding: 'ERR_JOSE_INVALID_ENCODING',\n  JOSEMultiError: 'ERR_JOSE_MULTIPLE_ERRORS',\n  JOSENotSupported: 'ERR_JOSE_NOT_SUPPORTED',\n  JWEDecryptionFailed: 'ERR_JWE_DECRYPTION_FAILED',\n  JWEInvalid: 'ERR_JWE_INVALID',\n  JWKImportFailed: 'ERR_JWK_IMPORT_FAILED',\n  JWKInvalid: 'ERR_JWK_INVALID',\n  JWKKeySupport: 'ERR_JWK_KEY_SUPPORT',\n  JWKSNoMatchingKey: 'ERR_JWKS_NO_MATCHING_KEY',\n  JWSInvalid: 'ERR_JWS_INVALID',\n  JWSVerificationFailed: 'ERR_JWS_VERIFICATION_FAILED',\n  JWTClaimInvalid: 'ERR_JWT_CLAIM_INVALID',\n  JWTExpired: 'ERR_JWT_EXPIRED',\n  JWTMalformed: 'ERR_JWT_MALFORMED'\n}\n\nconst DEFAULT_MESSAGES = {\n  JWEDecryptionFailed: 'decryption operation failed',\n  JWEInvalid: 'JWE invalid',\n  JWKSNoMatchingKey: 'no matching key found in the KeyStore',\n  JWSInvalid: 'JWS invalid',\n  JWSVerificationFailed: 'signature verification failed'\n}\n\nclass JOSEError extends Error {\n  constructor (message) {\n    super(message)\n    if (message === undefined) {\n      this.message = DEFAULT_MESSAGES[this.constructor.name]\n    }\n    this.name = this.constructor.name\n    this.code = CODES[this.constructor.name]\n    Error.captureStackTrace(this, this.constructor)\n  }\n}\n\nconst isMulti = e => e instanceof JOSEMultiError\nclass JOSEMultiError extends JOSEError {\n  constructor (errors) {\n    super()\n    let i\n    while ((i = errors.findIndex(isMulti)) && i !== -1) {\n      errors.splice(i, 1, ...errors[i])\n    }\n    Object.defineProperty(this, 'errors', { value: errors })\n  }\n\n  * [Symbol.iterator] () {\n    for (const error of this.errors) {\n      yield error\n    }\n  }\n}\nmodule.exports.JOSEError = JOSEError\n\nmodule.exports.JOSEAlgNotWhitelisted = class JOSEAlgNotWhitelisted extends JOSEError {}\nmodule.exports.JOSECritNotUnderstood = class JOSECritNotUnderstood extends JOSEError {}\nmodule.exports.JOSEInvalidEncoding = class JOSEInvalidEncoding extends JOSEError {}\nmodule.exports.JOSEMultiError = JOSEMultiError\nmodule.exports.JOSENotSupported = class JOSENotSupported extends JOSEError {}\n\nmodule.exports.JWEDecryptionFailed = class JWEDecryptionFailed extends JOSEError {}\nmodule.exports.JWEInvalid = class JWEInvalid extends JOSEError {}\n\nmodule.exports.JWKImportFailed = class JWKImportFailed extends JOSEError {}\nmodule.exports.JWKInvalid = class JWKInvalid extends JOSEError {}\nmodule.exports.JWKKeySupport = class JWKKeySupport extends JOSEError {}\n\nmodule.exports.JWKSNoMatchingKey = class JWKSNoMatchingKey extends JOSEError {}\n\nmodule.exports.JWSInvalid = class JWSInvalid extends JOSEError {}\nmodule.exports.JWSVerificationFailed = class JWSVerificationFailed extends JOSEError {}\n\nclass JWTClaimInvalid extends JOSEError {\n  constructor (message, claim = 'unspecified', reason = 'unspecified') {\n    super(message)\n    this.claim = claim\n    this.reason = reason\n  }\n}\nmodule.exports.JWTClaimInvalid = JWTClaimInvalid\nmodule.exports.JWTExpired = class JWTExpired extends JWTClaimInvalid {}\nmodule.exports.JWTMalformed = class JWTMalformed extends JOSEError {}\n", "const { diffieHellman, KeyObject, sign, verify } = require('crypto')\n\nconst [major, minor] = process.version.substr(1).split('.').map(x => parseInt(x, 10))\n\nmodule.exports = {\n  oaepHashSupported: major > 12 || (major === 12 && minor >= 9),\n  keyObjectSupported: !!KeyObject && major >= 12,\n  edDSASupported: !!sign && !!verify,\n  dsaEncodingSupported: major > 13 || (major === 13 && minor >= 2) || (major === 12 && minor >= 16),\n  improvedDH: !!diffieHellman\n}\n", "module.exports = a => !!a && a.constructor === Object\n", "const { inherits } = require('util')\n\nfunction Reporter (options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  }\n}\n\nReporter.prototype.isError = function isError (obj) {\n  return obj instanceof ReporterError\n}\n\nReporter.prototype.save = function save () {\n  const state = this._reporterState\n\n  return { obj: state.obj, pathLen: state.path.length }\n}\n\nReporter.prototype.restore = function restore (data) {\n  const state = this._reporterState\n\n  state.obj = data.obj\n  state.path = state.path.slice(0, data.pathLen)\n}\n\nReporter.prototype.enterKey = function enterKey (key) {\n  return this._reporterState.path.push(key)\n}\n\nReporter.prototype.exitKey = function exitKey (index) {\n  const state = this._reporterState\n\n  state.path = state.path.slice(0, index - 1)\n}\n\nReporter.prototype.leaveKey = function leaveKey (index, key, value) {\n  const state = this._reporterState\n\n  this.exitKey(index)\n  if (state.obj !== null) { state.obj[key] = value }\n}\n\nReporter.prototype.path = function path () {\n  return this._reporterState.path.join('/')\n}\n\nReporter.prototype.enterObject = function enterObject () {\n  const state = this._reporterState\n\n  const prev = state.obj\n  state.obj = {}\n  return prev\n}\n\nReporter.prototype.leaveObject = function leaveObject (prev) {\n  const state = this._reporterState\n\n  const now = state.obj\n  state.obj = prev\n  return now\n}\n\nReporter.prototype.error = function error (msg) {\n  let err\n  const state = this._reporterState\n\n  const inherited = msg instanceof ReporterError\n  if (inherited) {\n    err = msg\n  } else {\n    err = new ReporterError(state.path.map(function (elem) {\n      return `[${JSON.stringify(elem)}]`\n    }).join(''), msg.message || msg, msg.stack)\n  }\n\n  if (!state.options.partial) { throw err }\n\n  if (!inherited) { state.errors.push(err) }\n\n  return err\n}\n\nReporter.prototype.wrapResult = function wrapResult (result) {\n  const state = this._reporterState\n  if (!state.options.partial) { return result }\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  }\n}\n\nfunction ReporterError (path, msg) {\n  this.path = path\n  this.rethrow(msg)\n}\ninherits(ReporterError, Error)\n\nReporterError.prototype.rethrow = function rethrow (msg) {\n  this.message = `${msg} at: ${this.path || '(shallow)'}`\n  if (Error.captureStackTrace) { Error.captureStackTrace(this, ReporterError) }\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message)\n    } catch (e) {\n      this.stack = e.stack\n    }\n  }\n  return this\n}\n\nexports.Reporter = Reporter\n", "const { inherits } = require('util')\n\nconst { Reporter } = require('../base/reporter')\n\nfunction DecoderBuffer (base, options) {\n  Reporter.call(this, options)\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer')\n    return\n  }\n\n  this.base = base\n  this.offset = 0\n  this.length = base.length\n}\ninherits(DecoderBuffer, Reporter)\n\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer (data) {\n  if (data instanceof DecoderBuffer) {\n    return true\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    Buffer.isBuffer(data.base) &&\n    data.constructor.name === 'DecoderBuffer' &&\n    typeof data.offset === 'number' &&\n    typeof data.length === 'number' &&\n    typeof data.save === 'function' &&\n    typeof data.restore === 'function' &&\n    typeof data.isEmpty === 'function' &&\n    typeof data.readUInt8 === 'function' &&\n    typeof data.skip === 'function' &&\n    typeof data.raw === 'function'\n\n  return isCompatible\n}\n\nDecoderBuffer.prototype.save = function save () {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) }\n}\n\nDecoderBuffer.prototype.restore = function restore (save) {\n  // Return skipped data\n  const res = new DecoderBuffer(this.base)\n  res.offset = save.offset\n  res.length = this.offset\n\n  this.offset = save.offset\n  Reporter.prototype.restore.call(this, save.reporter)\n\n  return res\n}\n\nDecoderBuffer.prototype.isEmpty = function isEmpty () {\n  return this.offset === this.length\n}\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8 (fail) {\n  if (this.offset + 1 <= this.length) { return this.base.readUInt8(this.offset++, true) } else { return this.error(fail || 'DecoderBuffer overrun') }\n}\n\nDecoderBuffer.prototype.skip = function skip (bytes, fail) {\n  if (!(this.offset + bytes <= this.length)) { return this.error(fail || 'DecoderBuffer overrun') }\n\n  const res = new DecoderBuffer(this.base)\n\n  // Share reporter state\n  res._reporterState = this._reporterState\n\n  res.offset = this.offset\n  res.length = this.offset + bytes\n  this.offset += bytes\n  return res\n}\n\nDecoderBuffer.prototype.raw = function raw (save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length)\n}\n\nfunction EncoderBuffer (value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0\n    this.value = value.map(function (item) {\n      if (!EncoderBuffer.isEncoderBuffer(item)) { item = new EncoderBuffer(item, reporter) }\n      this.length += item.length\n      return item\n    }, this)\n  } else if (typeof value === 'number') {\n    if (!(value >= 0 && value <= 0xff)) { return reporter.error('non-byte EncoderBuffer value') }\n    this.value = value\n    this.length = 1\n  } else if (typeof value === 'string') {\n    this.value = value\n    this.length = Buffer.byteLength(value)\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value\n    this.length = value.length\n  } else {\n    return reporter.error(`Unsupported type: ${typeof value}`)\n  }\n}\n\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer (data) {\n  if (data instanceof EncoderBuffer) {\n    return true\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    data.constructor.name === 'EncoderBuffer' &&\n    typeof data.length === 'number' &&\n    typeof data.join === 'function'\n\n  return isCompatible\n}\n\nEncoderBuffer.prototype.join = function join (out, offset) {\n  if (!out) { out = Buffer.alloc(this.length) }\n  if (!offset) { offset = 0 }\n\n  if (this.length === 0) { return out }\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function (item) {\n      item.join(out, offset)\n      offset += item.length\n    })\n  } else {\n    if (typeof this.value === 'number') { out[offset] = this.value } else if (typeof this.value === 'string') { out.write(this.value, offset) } else if (Buffer.isBuffer(this.value)) { this.value.copy(out, offset) }\n    offset += this.length\n  }\n\n  return out\n}\n\nmodule.exports = {\n  DecoderBuffer,\n  EncoderBuffer\n}\n", "const { strict: assert } = require('assert')\n\nconst { Reporter } = require('../base/reporter')\nconst { DecoderBuffer, EncoderBuffer } = require('../base/buffer')\n\n// Supported tags\nconst tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n]\n\n// Public methods list\nconst methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags)\n\n// Overrided methods list\nconst overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n]\n\nfunction Node (enc, parent, name) {\n  const state = {}\n  this._baseState = state\n\n  state.name = name\n  state.enc = enc\n\n  state.parent = parent || null\n  state.children = null\n\n  // State\n  state.tag = null\n  state.args = null\n  state.reverseArgs = null\n  state.choice = null\n  state.optional = false\n  state.any = false\n  state.obj = false\n  state.use = null\n  state.useDecoder = null\n  state.key = null\n  state.default = null\n  state.explicit = null\n  state.implicit = null\n  state.contains = null\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = []\n    this._wrap()\n  }\n}\n\nconst stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n]\n\nNode.prototype.clone = function clone () {\n  const state = this._baseState\n  const cstate = {}\n  stateProps.forEach(function (prop) {\n    cstate[prop] = state[prop]\n  })\n  const res = new this.constructor(cstate.parent)\n  res._baseState = cstate\n  return res\n}\n\nNode.prototype._wrap = function wrap () {\n  const state = this._baseState\n  methods.forEach(function (method) {\n    this[method] = function _wrappedMethod () {\n      const clone = new this.constructor(this)\n      state.children.push(clone)\n      return clone[method].apply(clone, arguments)\n    }\n  }, this)\n}\n\nNode.prototype._init = function init (body) {\n  const state = this._baseState\n\n  assert(state.parent === null)\n  body.call(this)\n\n  // Filter children\n  state.children = state.children.filter(function (child) {\n    return child._baseState.parent === this\n  }, this)\n  assert.equal(state.children.length, 1, 'Root node can have only one child')\n}\n\nNode.prototype._useArgs = function useArgs (args) {\n  const state = this._baseState\n\n  // Filter children and args\n  const children = args.filter(function (arg) {\n    return arg instanceof this.constructor\n  }, this)\n  args = args.filter(function (arg) {\n    return !(arg instanceof this.constructor)\n  }, this)\n\n  if (children.length !== 0) {\n    assert(state.children === null)\n    state.children = children\n\n    // Replace parent to maintain backward link\n    children.forEach(function (child) {\n      child._baseState.parent = this\n    }, this)\n  }\n  if (args.length !== 0) {\n    assert(state.args === null)\n    state.args = args\n    state.reverseArgs = args.map(function (arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object) { return arg }\n\n      const res = {}\n      Object.keys(arg).forEach(function (key) {\n        if (key == (key | 0)) { key |= 0 } // eslint-disable-line eqeqeq\n        const value = arg[key]\n        res[value] = key\n      })\n      return res\n    })\n  }\n}\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function (method) {\n  Node.prototype[method] = function _overrided () {\n    const state = this._baseState\n    throw new Error(`${method} not implemented for encoding: ${state.enc}`)\n  }\n})\n\n//\n// Public methods\n//\n\ntags.forEach(function (tag) {\n  Node.prototype[tag] = function _tagMethod () {\n    const state = this._baseState\n    const args = Array.prototype.slice.call(arguments)\n\n    assert(state.tag === null)\n    state.tag = tag\n\n    this._useArgs(args)\n\n    return this\n  }\n})\n\nNode.prototype.use = function use (item) {\n  assert(item)\n  const state = this._baseState\n\n  assert(state.use === null)\n  state.use = item\n\n  return this\n}\n\nNode.prototype.optional = function optional () {\n  const state = this._baseState\n\n  state.optional = true\n\n  return this\n}\n\nNode.prototype.def = function def (val) {\n  const state = this._baseState\n\n  assert(state.default === null)\n  state.default = val\n  state.optional = true\n\n  return this\n}\n\nNode.prototype.explicit = function explicit (num) {\n  const state = this._baseState\n\n  assert(state.explicit === null && state.implicit === null)\n  state.explicit = num\n\n  return this\n}\n\nNode.prototype.implicit = function implicit (num) {\n  const state = this._baseState\n\n  assert(state.explicit === null && state.implicit === null)\n  state.implicit = num\n\n  return this\n}\n\nNode.prototype.obj = function obj () {\n  const state = this._baseState\n  const args = Array.prototype.slice.call(arguments)\n\n  state.obj = true\n\n  if (args.length !== 0) { this._useArgs(args) }\n\n  return this\n}\n\nNode.prototype.key = function key (newKey) {\n  const state = this._baseState\n\n  assert(state.key === null)\n  state.key = newKey\n\n  return this\n}\n\nNode.prototype.any = function any () {\n  const state = this._baseState\n\n  state.any = true\n\n  return this\n}\n\nNode.prototype.choice = function choice (obj) {\n  const state = this._baseState\n\n  assert(state.choice === null)\n  state.choice = obj\n  this._useArgs(Object.keys(obj).map(function (key) {\n    return obj[key]\n  }))\n\n  return this\n}\n\nNode.prototype.contains = function contains (item) {\n  const state = this._baseState\n\n  assert(state.use === null)\n  state.contains = item\n\n  return this\n}\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode (input, options) {\n  const state = this._baseState\n\n  // Decode root node\n  if (state.parent === null) { return input.wrapResult(state.children[0]._decode(input, options)) }\n\n  let result = state.default\n  let present = true\n\n  let prevKey = null\n  if (state.key !== null) { prevKey = input.enterKey(state.key) }\n\n  // Check if tag is there\n  if (state.optional) {\n    let tag = null\n    if (state.explicit !== null) { tag = state.explicit } else if (state.implicit !== null) { tag = state.implicit } else if (state.tag !== null) { tag = state.tag }\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save()\n      try {\n        if (state.choice === null) { this._decodeGeneric(state.tag, input, options) } else { this._decodeChoice(input, options) }\n        present = true\n      } catch (e) {\n        present = false\n      }\n      input.restore(save)\n    } else {\n      present = this._peekTag(input, tag, state.any)\n\n      if (input.isError(present)) { return present }\n    }\n  }\n\n  // Push object on stack\n  let prevObj\n  if (state.obj && present) { prevObj = input.enterObject() }\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit)\n      if (input.isError(explicit)) { return explicit }\n      input = explicit\n    }\n\n    const start = input.offset\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      let save\n      if (state.any) { save = input.save() }\n      const body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      )\n      if (input.isError(body)) { return body }\n\n      if (state.any) { result = input.raw(save) } else { input = body }\n    }\n\n    if (options && options.track && state.tag !== null) { options.track(input.path(), start, input.length, 'tagged') }\n\n    if (options && options.track && state.tag !== null) { options.track(input.path(), input.offset, input.length, 'content') }\n\n    // Select proper method for tag\n    if (state.any) {\n      // no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options)\n    } else {\n      result = this._decodeChoice(input, options)\n    }\n\n    if (input.isError(result)) { return result }\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren (child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options)\n      })\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result)\n      result = this._getUse(state.contains, input._reporterState.obj)\n        ._decode(data, options)\n    }\n  }\n\n  // Pop object\n  if (state.obj && present) { result = input.leaveObject(prevObj) }\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true)) { input.leaveKey(prevKey, state.key, result) } else if (prevKey !== null) { input.exitKey(prevKey) }\n\n  return result\n}\n\nNode.prototype._decodeGeneric = function decodeGeneric (tag, input, options) {\n  const state = this._baseState\n\n  if (tag === 'seq' || tag === 'set') { return null }\n  if (tag === 'seqof' || tag === 'setof') { return this._decodeList(input, tag, state.args[0], options) } else if (/str$/.test(tag)) { return this._decodeStr(input, tag, options) } else if (tag === 'objid' && state.args) { return this._decodeObjid(input, state.args[0], state.args[1], options) } else if (tag === 'objid') { return this._decodeObjid(input, null, null, options) } else if (tag === 'gentime' || tag === 'utctime') { return this._decodeTime(input, tag, options) } else if (tag === 'null_') { return this._decodeNull(input, options) } else if (tag === 'bool') { return this._decodeBool(input, options) } else if (tag === 'objDesc') { return this._decodeStr(input, tag, options) } else if (tag === 'int' || tag === 'enum') { return this._decodeInt(input, state.args && state.args[0], options) }\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n      ._decode(input, options)\n  } else {\n    return input.error(`unknown tag: ${tag}`)\n  }\n}\n\nNode.prototype._getUse = function _getUse (entity, obj) {\n  const state = this._baseState\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj)\n  assert(state.useDecoder._baseState.parent === null)\n  state.useDecoder = state.useDecoder._baseState.children[0]\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone()\n    state.useDecoder._baseState.implicit = state.implicit\n  }\n  return state.useDecoder\n}\n\nNode.prototype._decodeChoice = function decodeChoice (input, options) {\n  const state = this._baseState\n  let result = null\n  let match = false\n\n  Object.keys(state.choice).some(function (key) {\n    const save = input.save()\n    const node = state.choice[key]\n    try {\n      const value = node._decode(input, options)\n      if (input.isError(value)) { return false }\n\n      result = { type: key, value: value }\n      match = true\n    } catch (e) {\n      input.restore(save)\n      return false\n    }\n    return true\n  }, this)\n\n  if (!match) { return input.error('Choice not matched') }\n\n  return result\n}\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer (data) {\n  return new EncoderBuffer(data, this.reporter)\n}\n\nNode.prototype._encode = function encode (data, reporter, parent) {\n  const state = this._baseState\n  if (state.default !== null && state.default === data) { return }\n\n  const result = this._encodeValue(data, reporter, parent)\n  if (result === undefined) { return }\n\n  if (this._skipDefault(result, reporter, parent)) { return }\n\n  return result\n}\n\nNode.prototype._encodeValue = function encode (data, reporter, parent) {\n  const state = this._baseState\n\n  // Decode root node\n  if (state.parent === null) { return state.children[0]._encode(data, reporter || new Reporter()) }\n\n  let result = null\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state.default !== null) { data = state.default } else { return }\n  }\n\n  // Encode children first\n  let content = null\n  let primitive = false\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data)\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter)\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter)\n    primitive = true\n  } else if (state.children) {\n    content = state.children.map(function (child) {\n      if (child._baseState.tag === 'null_') { return child._encode(null, reporter, data) }\n\n      if (child._baseState.key === null) { return reporter.error('Child should have a key') }\n      const prevKey = reporter.enterKey(child._baseState.key)\n\n      if (typeof data !== 'object') { return reporter.error('Child expected, but input is not object') }\n\n      const res = child._encode(data[child._baseState.key], reporter, data)\n      reporter.leaveKey(prevKey)\n\n      return res\n    }, this).filter(function (child) {\n      return child\n    })\n    content = this._createEncoderBuffer(content)\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      if (!(state.args && state.args.length === 1)) { return reporter.error(`Too many args for: ${state.tag}`) }\n\n      if (!Array.isArray(data)) { return reporter.error('seqof/setof, but data is not Array') }\n\n      const child = this.clone()\n      child._baseState.implicit = null\n      content = this._createEncoderBuffer(data.map(function (item) {\n        const state = this._baseState\n\n        return this._getUse(state.args[0], data)._encode(item, reporter)\n      }, child))\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter)\n    } else {\n      content = this._encodePrimitive(state.tag, data)\n      primitive = true\n    }\n  }\n\n  // Encode data itself\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag\n    const cls = state.implicit === null ? 'universal' : 'context'\n\n    if (tag === null) {\n      if (state.use === null) { reporter.error('Tag could be omitted only for .use()') }\n    } else {\n      if (state.use === null) { result = this._encodeComposite(tag, primitive, cls, content) }\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null) { result = this._encodeComposite(state.explicit, false, 'context', result) }\n\n  return result\n}\n\nNode.prototype._encodeChoice = function encodeChoice (data, reporter) {\n  const state = this._baseState\n\n  const node = state.choice[data.type]\n  if (!node) {\n    assert(\n      false,\n      `${data.type} not found in ${JSON.stringify(Object.keys(state.choice))}`\n    )\n  }\n  return node._encode(data.value, reporter)\n}\n\nNode.prototype._encodePrimitive = function encodePrimitive (tag, data) {\n  const state = this._baseState\n\n  if (/str$/.test(tag)) { return this._encodeStr(data, tag) } else if (tag === 'objid' && state.args) { return this._encodeObjid(data, state.reverseArgs[0], state.args[1]) } else if (tag === 'objid') { return this._encodeObjid(data, null, null) } else if (tag === 'gentime' || tag === 'utctime') { return this._encodeTime(data, tag) } else if (tag === 'null_') { return this._encodeNull() } else if (tag === 'int' || tag === 'enum') { return this._encodeInt(data, state.args && state.reverseArgs[0]) } else if (tag === 'bool') { return this._encodeBool(data) } else if (tag === 'objDesc') { return this._encodeStr(data, tag) } else { throw new Error(`Unsupported tag: ${tag}`) }\n}\n\nNode.prototype._isNumstr = function isNumstr (str) {\n  return /^[0-9 ]*$/.test(str)\n}\n\nNode.prototype._isPrintstr = function isPrintstr (str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str)\n}\n\nmodule.exports = Node\n", "// Helper\nfunction reverse (map) {\n  const res = {}\n\n  Object.keys(map).forEach(function (key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key) { key = key | 0 } // eslint-disable-line eqeqeq\n\n    const value = map[key]\n    res[value] = key\n  })\n\n  return res\n}\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n}\nexports.tagClassByName = reverse(exports.tagClass)\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n}\nexports.tagByName = reverse(exports.tag)\n", "/* global BigInt */\nconst { inherits } = require('util')\n\nconst Node = require('../base/node')\nconst der = require('../constants/der')\n\nfunction DEREncoder (entity) {\n  this.enc = 'der'\n  this.name = entity.name\n  this.entity = entity\n\n  // Construct base tree\n  this.tree = new DERNode()\n  this.tree._init(entity.body)\n}\n\nDEREncoder.prototype.encode = function encode (data, reporter) {\n  return this.tree._encode(data, reporter).join()\n}\n\n// Tree methods\n\nfunction DERNode (parent) {\n  Node.call(this, 'der', parent)\n}\ninherits(DERNode, Node)\n\nDERNode.prototype._encodeComposite = function encodeComposite (tag,\n  primitive,\n  cls,\n  content) {\n  const encodedTag = encodeTag(tag, primitive, cls, this.reporter)\n\n  // Short form\n  if (content.length < 0x80) {\n    const header = Buffer.alloc(2)\n    header[0] = encodedTag\n    header[1] = content.length\n    return this._createEncoderBuffer([header, content])\n  }\n\n  // Long form\n  // Count octets required to store length\n  let lenOctets = 1\n  for (let i = content.length; i >= 0x100; i >>= 8) { lenOctets++ }\n\n  const header = Buffer.alloc(1 + 1 + lenOctets)\n  header[0] = encodedTag\n  header[1] = 0x80 | lenOctets\n\n  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8) { header[i] = j & 0xff }\n\n  return this._createEncoderBuffer([header, content])\n}\n\nDERNode.prototype._encodeStr = function encodeStr (str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([str.unused | 0, str.data])\n  } else if (tag === 'bmpstr') {\n    const buf = Buffer.alloc(str.length * 2)\n    for (let i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2)\n    }\n    return this._createEncoderBuffer(buf)\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports only digits and space')\n    }\n    return this._createEncoderBuffer(str)\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark')\n    }\n    return this._createEncoderBuffer(str)\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str)\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str)\n  } else {\n    return this.reporter.error(`Encoding of string type: ${tag} unsupported`)\n  }\n}\n\nDERNode.prototype._encodeObjid = function encodeObjid (id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values) { return this.reporter.error('string objid given, but no values map found') }\n    if (!Object.prototype.hasOwnProperty.call(values, id)) { return this.reporter.error('objid not found in values map') }\n    id = values[id].split(/[\\s.]+/g)\n    for (let i = 0; i < id.length; i++) { id[i] |= 0 }\n  } else if (Array.isArray(id)) {\n    id = id.slice()\n    for (let i = 0; i < id.length; i++) { id[i] |= 0 }\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error(`objid() should be either array or string, got: ${JSON.stringify(id)}`)\n  }\n\n  if (!relative) {\n    if (id[1] >= 40) { return this.reporter.error('Second objid identifier OOB') }\n    id.splice(0, 2, id[0] * 40 + id[1])\n  }\n\n  // Count number of octets\n  let size = 0\n  for (let i = 0; i < id.length; i++) {\n    let ident = id[i]\n    for (size++; ident >= 0x80; ident >>= 7) { size++ }\n  }\n\n  const objid = Buffer.alloc(size)\n  let offset = objid.length - 1\n  for (let i = id.length - 1; i >= 0; i--) {\n    let ident = id[i]\n    objid[offset--] = ident & 0x7f\n    while ((ident >>= 7) > 0) { objid[offset--] = 0x80 | (ident & 0x7f) }\n  }\n\n  return this._createEncoderBuffer(objid)\n}\n\nfunction two (num) {\n  if (num < 10) { return `0${num}` } else { return num }\n}\n\nDERNode.prototype._encodeTime = function encodeTime (time, tag) {\n  let str\n  const date = new Date(time)\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getUTCFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('')\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getUTCFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('')\n  } else {\n    this.reporter.error(`Encoding ${tag} time is not supported yet`)\n  }\n\n  return this._encodeStr(str, 'octstr')\n}\n\nDERNode.prototype._encodeNull = function encodeNull () {\n  return this._createEncoderBuffer('')\n}\n\nfunction bnToBuf (bn) {\n  var hex = BigInt(bn).toString(16)\n  if (hex.length % 2) { hex = '0' + hex }\n\n  var len = hex.length / 2\n  var u8 = new Uint8Array(len)\n\n  var i = 0\n  var j = 0\n  while (i < len) {\n    u8[i] = parseInt(hex.slice(j, j + 2), 16)\n    i += 1\n    j += 2\n  }\n\n  return u8\n}\n\nDERNode.prototype._encodeInt = function encodeInt (num, values) {\n  if (typeof num === 'string') {\n    if (!values) { return this.reporter.error('String int or enum given, but no values map') }\n    if (!Object.prototype.hasOwnProperty.call(values, num)) {\n      return this.reporter.error(`Values map doesn't contain: ${JSON.stringify(num)}`)\n    }\n    num = values[num]\n  }\n\n  if (typeof num === 'bigint') {\n    const numArray = [...bnToBuf(num)]\n    if (numArray[0] & 0x80) {\n      numArray.unshift(0)\n    }\n    num = Buffer.from(numArray)\n  }\n\n  if (Buffer.isBuffer(num)) {\n    let size = num.length\n    if (num.length === 0) { size++ }\n\n    const out = Buffer.alloc(size)\n    num.copy(out)\n    if (num.length === 0) { out[0] = 0 }\n    return this._createEncoderBuffer(out)\n  }\n\n  if (num < 0x80) { return this._createEncoderBuffer(num) }\n\n  if (num < 0x100) { return this._createEncoderBuffer([0, num]) }\n\n  let size = 1\n  for (let i = num; i >= 0x100; i >>= 8) { size++ }\n\n  const out = new Array(size)\n  for (let i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff\n    num >>= 8\n  }\n  if (out[0] & 0x80) {\n    out.unshift(0)\n  }\n\n  return this._createEncoderBuffer(Buffer.from(out))\n}\n\nDERNode.prototype._encodeBool = function encodeBool (value) {\n  return this._createEncoderBuffer(value ? 0xff : 0)\n}\n\nDERNode.prototype._use = function use (entity, obj) {\n  if (typeof entity === 'function') { entity = entity(obj) }\n  return entity._getEncoder('der').tree\n}\n\nDERNode.prototype._skipDefault = function skipDefault (dataBuffer, reporter, parent) {\n  const state = this._baseState\n  let i\n  if (state.default === null) { return false }\n\n  const data = dataBuffer.join()\n  if (state.defaultBuffer === undefined) { state.defaultBuffer = this._encodeValue(state.default, reporter, parent).join() }\n\n  if (data.length !== state.defaultBuffer.length) { return false }\n\n  for (i = 0; i < data.length; i++) {\n    if (data[i] !== state.defaultBuffer[i]) { return false }\n  }\n\n  return true\n}\n\n// Utility methods\n\nfunction encodeTag (tag, primitive, cls, reporter) {\n  let res\n\n  if (tag === 'seqof') { tag = 'seq' } else if (tag === 'setof') { tag = 'set' }\n\n  if (Object.prototype.hasOwnProperty.call(der.tagByName, tag)) { res = der.tagByName[tag] } else if (typeof tag === 'number' && (tag | 0) === tag) { res = tag } else { return reporter.error(`Unknown tag: ${tag}`) }\n\n  if (res >= 0x1f) { return reporter.error('Multi-octet tag encoding unsupported') }\n\n  if (!primitive) { res |= 0x20 }\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6)\n\n  return res\n}\n\nmodule.exports = DEREncoder\n", "const { inherits } = require('util')\n\nconst DEREncoder = require('./der')\n\nfunction PEMEncoder (entity) {\n  DEREncoder.call(this, entity)\n  this.enc = 'pem'\n}\ninherits(PEMEncoder, DEREncoder)\n\nPEMEncoder.prototype.encode = function encode (data, options) {\n  const buf = DEREncoder.prototype.encode.call(this, data)\n\n  const p = buf.toString('base64')\n  const out = [`-----BEGIN ${options.label}-----`]\n  for (let i = 0; i < p.length; i += 64) { out.push(p.slice(i, i + 64)) }\n  out.push(`-----END ${options.label}-----`)\n  return out.join('\\n')\n}\n\nmodule.exports = PEMEncoder\n", "module.exports = {\n  der: require('./der'),\n  pem: require('./pem')\n}\n", "/* global BigInt */\nconst { inherits } = require('util')\n\nconst { DecoderBuffer } = require('../base/buffer')\nconst Node = require('../base/node')\n\n// Import DER constants\nconst der = require('../constants/der')\n\nfunction DERDecoder (entity) {\n  this.enc = 'der'\n  this.name = entity.name\n  this.entity = entity\n\n  // Construct base tree\n  this.tree = new DERNode()\n  this.tree._init(entity.body)\n}\n\nDERDecoder.prototype.decode = function decode (data, options) {\n  if (!DecoderBuffer.isDecoderBuffer(data)) {\n    data = new DecoderBuffer(data, options)\n  }\n\n  return this.tree._decode(data, options)\n}\n\n// Tree methods\n\nfunction DERNode (parent) {\n  Node.call(this, 'der', parent)\n}\ninherits(DERNode, Node)\n\nDERNode.prototype._peekTag = function peekTag (buffer, tag, any) {\n  if (buffer.isEmpty()) { return false }\n\n  const state = buffer.save()\n  const decodedTag = derDecodeTag(buffer, `Failed to peek tag: \"${tag}\"`)\n  if (buffer.isError(decodedTag)) { return decodedTag }\n\n  buffer.restore(state)\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag || (decodedTag.tagStr + 'of') === tag || any\n}\n\nDERNode.prototype._decodeTag = function decodeTag (buffer, tag, any) {\n  const decodedTag = derDecodeTag(buffer,\n    `Failed to decode tag of \"${tag}\"`)\n  if (buffer.isError(decodedTag)) { return decodedTag }\n\n  let len = derDecodeLen(buffer,\n    decodedTag.primitive,\n    `Failed to get length of \"${tag}\"`)\n\n  // Failure\n  if (buffer.isError(len)) { return len }\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error(`Failed to match tag: \"${tag}\"`)\n  }\n\n  if (decodedTag.primitive || len !== null) { return buffer.skip(len, `Failed to match body of: \"${tag}\"`) }\n\n  // Indefinite length... find END tag\n  const state = buffer.save()\n  const res = this._skipUntilEnd(\n    buffer,\n    `Failed to skip indefinite length body: \"${this.tag}\"`)\n  if (buffer.isError(res)) { return res }\n\n  len = buffer.offset - state.offset\n  buffer.restore(state)\n  return buffer.skip(len, `Failed to match body of: \"${tag}\"`)\n}\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd (buffer, fail) {\n  for (;;) {\n    const tag = derDecodeTag(buffer, fail)\n    if (buffer.isError(tag)) { return tag }\n    const len = derDecodeLen(buffer, tag.primitive, fail)\n    if (buffer.isError(len)) { return len }\n\n    let res\n    if (tag.primitive || len !== null) { res = buffer.skip(len) } else { res = this._skipUntilEnd(buffer, fail) }\n\n    // Failure\n    if (buffer.isError(res)) { return res }\n\n    if (tag.tagStr === 'end') { break }\n  }\n}\n\nDERNode.prototype._decodeList = function decodeList (buffer, tag, decoder,\n  options) {\n  const result = []\n  while (!buffer.isEmpty()) {\n    const possibleEnd = this._peekTag(buffer, 'end')\n    if (buffer.isError(possibleEnd)) { return possibleEnd }\n\n    const res = decoder.decode(buffer, 'der', options)\n    if (buffer.isError(res) && possibleEnd) { break }\n    result.push(res)\n  }\n  return result\n}\n\nDERNode.prototype._decodeStr = function decodeStr (buffer, tag) {\n  if (tag === 'bitstr') {\n    const unused = buffer.readUInt8()\n    if (buffer.isError(unused)) { return unused }\n    return { unused: unused, data: buffer.raw() }\n  } else if (tag === 'bmpstr') {\n    const raw = buffer.raw()\n    if (raw.length % 2 === 1) { return buffer.error('Decoding of string type: bmpstr length mismatch') }\n\n    let str = ''\n    for (let i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2))\n    }\n    return str\n  } else if (tag === 'numstr') {\n    const numstr = buffer.raw().toString('ascii')\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: numstr unsupported characters')\n    }\n    return numstr\n  } else if (tag === 'octstr') {\n    return buffer.raw()\n  } else if (tag === 'objDesc') {\n    return buffer.raw()\n  } else if (tag === 'printstr') {\n    const printstr = buffer.raw().toString('ascii')\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: printstr unsupported characters')\n    }\n    return printstr\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString()\n  } else {\n    return buffer.error(`Decoding of string type: ${tag} unsupported`)\n  }\n}\n\nDERNode.prototype._decodeObjid = function decodeObjid (buffer, values, relative) {\n  let result\n  const identifiers = []\n  let ident = 0\n  let subident = 0\n  while (!buffer.isEmpty()) {\n    subident = buffer.readUInt8()\n    ident <<= 7\n    ident |= subident & 0x7f\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident)\n      ident = 0\n    }\n  }\n  if (subident & 0x80) { identifiers.push(ident) }\n\n  const first = (identifiers[0] / 40) | 0\n  const second = identifiers[0] % 40\n\n  if (relative) { result = identifiers } else { result = [first, second].concat(identifiers.slice(1)) }\n\n  if (values) {\n    let tmp = values[result.join(' ')]\n    if (tmp === undefined) { tmp = values[result.join('.')] }\n    if (tmp !== undefined) { result = tmp }\n  }\n\n  return result\n}\n\nDERNode.prototype._decodeTime = function decodeTime (buffer, tag) {\n  const str = buffer.raw().toString()\n\n  let year\n  let mon\n  let day\n  let hour\n  let min\n  let sec\n  if (tag === 'gentime') {\n    year = str.slice(0, 4) | 0\n    mon = str.slice(4, 6) | 0\n    day = str.slice(6, 8) | 0\n    hour = str.slice(8, 10) | 0\n    min = str.slice(10, 12) | 0\n    sec = str.slice(12, 14) | 0\n  } else if (tag === 'utctime') {\n    year = str.slice(0, 2) | 0\n    mon = str.slice(2, 4) | 0\n    day = str.slice(4, 6) | 0\n    hour = str.slice(6, 8) | 0\n    min = str.slice(8, 10) | 0\n    sec = str.slice(10, 12) | 0\n    if (year < 70) { year = 2000 + year } else { year = 1900 + year }\n  } else {\n    return buffer.error(`Decoding ${tag} time is not supported yet`)\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0)\n}\n\nDERNode.prototype._decodeNull = function decodeNull () {\n  return null\n}\n\nDERNode.prototype._decodeBool = function decodeBool (buffer) {\n  const res = buffer.readUInt8()\n  if (buffer.isError(res)) { return res } else { return res !== 0 }\n}\n\nDERNode.prototype._decodeInt = function decodeInt (buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  const raw = buffer.raw()\n  let res = BigInt(`0x${raw.toString('hex')}`)\n\n  if (values) {\n    res = values[res.toString(10)] || res\n  }\n\n  return res\n}\n\nDERNode.prototype._use = function use (entity, obj) {\n  if (typeof entity === 'function') { entity = entity(obj) }\n  return entity._getDecoder('der').tree\n}\n\n// Utility methods\n\nfunction derDecodeTag (buf, fail) {\n  let tag = buf.readUInt8(fail)\n  if (buf.isError(tag)) { return tag }\n\n  const cls = der.tagClass[tag >> 6]\n  const primitive = (tag & 0x20) === 0\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    let oct = tag\n    tag = 0\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail)\n      if (buf.isError(oct)) { return oct }\n\n      tag <<= 7\n      tag |= oct & 0x7f\n    }\n  } else {\n    tag &= 0x1f\n  }\n  const tagStr = der.tag[tag]\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  }\n}\n\nfunction derDecodeLen (buf, primitive, fail) {\n  let len = buf.readUInt8(fail)\n  if (buf.isError(len)) { return len }\n\n  // Indefinite form\n  if (!primitive && len === 0x80) { return null }\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len\n  }\n\n  // Long form\n  const num = len & 0x7f\n  if (num > 4) { return buf.error('length octect is too long') }\n\n  len = 0\n  for (let i = 0; i < num; i++) {\n    len <<= 8\n    const j = buf.readUInt8(fail)\n    if (buf.isError(j)) { return j }\n    len |= j\n  }\n\n  return len\n}\n\nmodule.exports = DERDecoder\n", "const { inherits } = require('util')\n\nconst DERDecoder = require('./der')\n\nfunction PEMDecoder (entity) {\n  DERDecoder.call(this, entity)\n  this.enc = 'pem'\n}\ninherits(PEMDecoder, DERDecoder)\n\nPEMDecoder.prototype.decode = function decode (data, options) {\n  const lines = data.toString().split(/[\\r\\n]+/g)\n\n  const label = options.label.toUpperCase()\n\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/\n  let start = -1\n  let end = -1\n  for (let i = 0; i < lines.length; i++) {\n    const match = lines[i].match(re)\n    if (match === null) { continue }\n\n    if (match[2] !== label) { continue }\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN') { break }\n      start = i\n    } else {\n      if (match[1] !== 'END') { break }\n      end = i\n      break\n    }\n  }\n  if (start === -1 || end === -1) { throw new Error(`PEM section not found for: ${label}`) }\n\n  const base64 = lines.slice(start + 1, end).join('')\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9+/=]+/gi, '')\n\n  const input = Buffer.from(base64, 'base64')\n  return DERDecoder.prototype.decode.call(this, input, options)\n}\n\nmodule.exports = PEMDecoder\n", "module.exports = {\n  der: require('./der'),\n  pem: require('./pem')\n}\n", "const { inherits } = require('util')\nconst encoders = require('./encoders')\nconst decoders = require('./decoders')\n\nmodule.exports.define = function define (name, body) {\n  return new Entity(name, body)\n}\n\nfunction Entity (name, body) {\n  this.name = name\n  this.body = body\n\n  this.decoders = {}\n  this.encoders = {}\n}\n\nEntity.prototype._createNamed = function createNamed (Base) {\n  const name = this.name\n\n  function Generated (entity) {\n    this._initNamed(entity, name)\n  }\n  inherits(Generated, Base)\n  Generated.prototype._initNamed = function _initNamed (entity, name) {\n    Base.call(this, entity, name)\n  }\n\n  return new Generated(this)\n}\n\nEntity.prototype._getDecoder = function _getDecoder (enc) {\n  enc = enc || 'der'\n  // Lazily create decoder\n  if (!Object.prototype.hasOwnProperty.call(this.decoders, enc)) { this.decoders[enc] = this._createNamed(decoders[enc]) }\n  return this.decoders[enc]\n}\n\nEntity.prototype.decode = function decode (data, enc, options) {\n  return this._getDecoder(enc).decode(data, options)\n}\n\nEntity.prototype._getEncoder = function _getEncoder (enc) {\n  enc = enc || 'der'\n  // Lazily create encoder\n  if (!Object.prototype.hasOwnProperty.call(this.encoders, enc)) { this.encoders[enc] = this._createNamed(encoders[enc]) }\n  return this.encoders[enc]\n}\n\nEntity.prototype.encode = function encode (data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter)\n}\n", "const { Reporter } = require('./reporter')\nconst { DecoderBuffer, EncoderBuffer } = require('./buffer')\nconst Node = require('./node')\n\nmodule.exports = {\n  DecoderBuffer,\n  EncoderBuffer,\n  Node,\n  Reporter\n}\n", "module.exports = {\n  der: require('./der')\n}\n", "const { define } = require('./asn1/api')\nconst base = require('./asn1/base')\nconst constants = require('./asn1/constants')\nconst decoders = require('./asn1/decoders')\nconst encoders = require('./asn1/encoders')\n\nmodule.exports = {\n  base,\n  constants,\n  decoders,\n  define,\n  encoders\n}\n", "const oids = {\n  '1 2 840 10045 3 1 7': 'P-256',\n  '1 3 132 0 10': 'secp256k1',\n  '1 3 132 0 34': 'P-384',\n  '1 3 132 0 35': 'P-521',\n  '1 2 840 10045 2 1': 'ecPublicKey',\n  '1 2 840 113549 1 1 1': 'rsaEncryption',\n  '1 3 101 110': 'X25519',\n  '1 3 101 111': 'X448',\n  '1 3 101 112': 'Ed25519',\n  '1 3 101 113': 'Ed448'\n}\n\nmodule.exports = oids\n", "const oids = require('./oids')\n\nmodule.exports = function () {\n  this.seq().obj(\n    this.key('algorithm').objid(oids),\n    this.key('parameters').optional().choice({ namedCurve: this.objid(oids), null: this.null_() })\n  )\n}\n", "const oids = require('./oids')\n\nmodule.exports = function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('privateKey').octstr(),\n    this.key('parameters').explicit(0).optional().choice({ namedCurve: this.objid(oids) }),\n    this.key('publicKey').explicit(1).optional().bitstr()\n  )\n}\n", "module.exports = (AlgorithmIdentifier) => function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('privateKey').octstr()\n  )\n}\n", "module.exports = AlgorithmIdentifier => function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('publicKey').bitstr()\n  )\n}\n", "module.exports = function () {\n  this.octstr().contains().obj(\n    this.key('privateKey').octstr()\n  )\n}\n", "module.exports = (AlgorithmIdentifier, PrivateKey) => function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('privateKey').use(PrivateKey)\n  )\n}\n", "module.exports = function () {\n  this.seq().obj(\n    this.key('version').int({ 0: 'two-prime', 1: 'multi' }),\n    this.key('n').int(),\n    this.key('e').int(),\n    this.key('d').int(),\n    this.key('p').int(),\n    this.key('q').int(),\n    this.key('dp').int(),\n    this.key('dq').int(),\n    this.key('qi').int()\n  )\n}\n", "module.exports = function () {\n  this.seq().obj(\n    this.key('n').int(),\n    this.key('e').int()\n  )\n}\n", "const asn1 = require('@panva/asn1.js')\n\nconst types = new Map()\n\nconst AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', require('./algorithm_identifier'))\ntypes.set('AlgorithmIdentifier', AlgorithmIdentifier)\n\nconst ECPrivateKey = asn1.define('ECPrivateKey', require('./ec_private_key'))\ntypes.set('ECPrivateKey', ECPrivateKey)\n\nconst PrivateKeyInfo = asn1.define('PrivateKeyInfo', require('./private_key_info')(AlgorithmIdentifier))\ntypes.set('PrivateKeyInfo', PrivateKeyInfo)\n\nconst PublicKeyInfo = asn1.define('PublicKeyInfo', require('./public_key_info')(AlgorithmIdentifier))\ntypes.set('PublicKeyInfo', PublicKeyInfo)\n\nconst PrivateKey = asn1.define('PrivateKey', require('./private_key'))\ntypes.set('PrivateKey', PrivateKey)\n\nconst OneAsymmetricKey = asn1.define('OneAsymmetricKey', require('./one_asymmetric_key')(AlgorithmIdentifier, PrivateKey))\ntypes.set('OneAsymmetricKey', OneAsymmetricKey)\n\nconst RSAPrivateKey = asn1.define('RSAPrivateKey', require('./rsa_private_key'))\ntypes.set('RSAPrivateKey', RSAPrivateKey)\n\nconst RSAPublicKey = asn1.define('RSAPublicKey', require('./rsa_public_key'))\ntypes.set('RSAPublicKey', RSAPublicKey)\n\nmodule.exports = types\n", "const { keyObjectSupported } = require('./runtime_support')\n\nlet createPublicKey\nlet createPrivateKey\nlet createSecretKey\nlet KeyObject\nlet asInput\n\nif (keyObjectSupported) {\n  ({ createPublicKey, createPrivateKey, createSecretKey, KeyObject } = require('crypto'))\n  asInput = (input) => input\n} else {\n  const { EOL } = require('os')\n\n  const errors = require('../errors')\n  const isObject = require('./is_object')\n  const asn1 = require('./asn1')\n  const toInput = Symbol('toInput')\n\n  const namedCurve = Symbol('namedCurve')\n\n  asInput = (keyObject, needsPublic) => {\n    if (keyObject instanceof KeyObject) {\n      return keyObject[toInput](needsPublic)\n    }\n\n    return createSecretKey(keyObject)[toInput](needsPublic)\n  }\n\n  const pemToDer = pem => Buffer.from(pem.replace(/(?:-----(?:BEGIN|END)(?: (?:RSA|EC))? (?:PRIVATE|PUBLIC) KEY-----|\\s)/g, ''), 'base64')\n  const derToPem = (der, label) => `-----BEGIN ${label}-----${EOL}${(der.toString('base64').match(/.{1,64}/g) || []).join(EOL)}${EOL}-----END ${label}-----`\n  const unsupported = (input) => {\n    const label = typeof input === 'string' ? input : `OID ${input.join('.')}`\n    throw new errors.JOSENotSupported(`${label} is not supported in your Node.js runtime version`)\n  }\n\n  KeyObject = class KeyObject {\n    export ({ cipher, passphrase, type, format } = {}) {\n      if (this._type === 'secret') {\n        return this._buffer\n      }\n\n      if (this._type === 'public') {\n        if (this.asymmetricKeyType === 'rsa') {\n          switch (type) {\n            case 'pkcs1':\n              if (format === 'pem') {\n                return this._pem\n              }\n\n              return pemToDer(this._pem)\n            case 'spki': {\n              const PublicKeyInfo = asn1.get('PublicKeyInfo')\n              const pem = PublicKeyInfo.encode({\n                algorithm: {\n                  algorithm: 'rsaEncryption',\n                  parameters: { type: 'null' }\n                },\n                publicKey: {\n                  unused: 0,\n                  data: pemToDer(this._pem)\n                }\n              }, 'pem', { label: 'PUBLIC KEY' })\n\n              return format === 'pem' ? pem : pemToDer(pem)\n            }\n            default:\n              throw new TypeError(`The value ${type} is invalid for option \"type\"`)\n          }\n        }\n\n        if (this.asymmetricKeyType === 'ec') {\n          if (type !== 'spki') {\n            throw new TypeError(`The value ${type} is invalid for option \"type\"`)\n          }\n\n          if (format === 'pem') {\n            return this._pem\n          }\n\n          return pemToDer(this._pem)\n        }\n      }\n\n      if (this._type === 'private') {\n        if (passphrase !== undefined || cipher !== undefined) {\n          throw new errors.JOSENotSupported('encrypted private keys are not supported in your Node.js runtime version')\n        }\n\n        if (type === 'pkcs8') {\n          if (this._pkcs8) {\n            if (format === 'der' && typeof this._pkcs8 === 'string') {\n              return pemToDer(this._pkcs8)\n            }\n\n            if (format === 'pem' && Buffer.isBuffer(this._pkcs8)) {\n              return derToPem(this._pkcs8, 'PRIVATE KEY')\n            }\n\n            return this._pkcs8\n          }\n\n          if (this.asymmetricKeyType === 'rsa') {\n            const parsed = this._asn1\n            const RSAPrivateKey = asn1.get('RSAPrivateKey')\n            const privateKey = RSAPrivateKey.encode(parsed)\n            const PrivateKeyInfo = asn1.get('PrivateKeyInfo')\n            const pkcs8 = PrivateKeyInfo.encode({\n              version: 0,\n              privateKey,\n              algorithm: {\n                algorithm: 'rsaEncryption',\n                parameters: { type: 'null' }\n              }\n            })\n\n            this._pkcs8 = pkcs8\n\n            return this.export({ type, format })\n          }\n\n          if (this.asymmetricKeyType === 'ec') {\n            const parsed = this._asn1\n            const ECPrivateKey = asn1.get('ECPrivateKey')\n            const privateKey = ECPrivateKey.encode({\n              version: parsed.version,\n              privateKey: parsed.privateKey,\n              publicKey: parsed.publicKey\n            })\n            const PrivateKeyInfo = asn1.get('PrivateKeyInfo')\n            const pkcs8 = PrivateKeyInfo.encode({\n              version: 0,\n              privateKey,\n              algorithm: {\n                algorithm: 'ecPublicKey',\n                parameters: this._asn1.parameters\n              }\n            })\n\n            this._pkcs8 = pkcs8\n\n            return this.export({ type, format })\n          }\n        }\n\n        if (this.asymmetricKeyType === 'rsa' && type === 'pkcs1') {\n          if (format === 'pem') {\n            return this._pem\n          }\n\n          return pemToDer(this._pem)\n        } else if (this.asymmetricKeyType === 'ec' && type === 'sec1') {\n          if (format === 'pem') {\n            return this._pem\n          }\n\n          return pemToDer(this._pem)\n        } else {\n          throw new TypeError(`The value ${type} is invalid for option \"type\"`)\n        }\n      }\n    }\n\n    get type () {\n      return this._type\n    }\n\n    get asymmetricKeyType () {\n      return this._asymmetricKeyType\n    }\n\n    get symmetricKeySize () {\n      return this._symmetricKeySize\n    }\n\n    [toInput] (needsPublic) {\n      switch (this._type) {\n        case 'secret':\n          return this._buffer\n        case 'public':\n          return this._pem\n        default:\n          if (needsPublic) {\n            if (!('_pub' in this)) {\n              this._pub = createPublicKey(this)\n            }\n\n            return this._pub[toInput](false)\n          }\n\n          return this._pem\n      }\n    }\n  }\n\n  createSecretKey = (buffer) => {\n    if (!Buffer.isBuffer(buffer) || !buffer.length) {\n      throw new TypeError('input must be a non-empty Buffer instance')\n    }\n\n    const keyObject = new KeyObject()\n    keyObject._buffer = Buffer.from(buffer)\n    keyObject._symmetricKeySize = buffer.length\n    keyObject._type = 'secret'\n\n    return keyObject\n  }\n\n  createPublicKey = (input) => {\n    if (input instanceof KeyObject) {\n      if (input.type !== 'private') {\n        throw new TypeError(`Invalid key object type ${input.type}, expected private.`)\n      }\n\n      switch (input.asymmetricKeyType) {\n        case 'ec': {\n          const PublicKeyInfo = asn1.get('PublicKeyInfo')\n          const key = PublicKeyInfo.encode({\n            algorithm: {\n              algorithm: 'ecPublicKey',\n              parameters: input._asn1.parameters\n            },\n            publicKey: input._asn1.publicKey\n          })\n\n          return createPublicKey({ key, format: 'der', type: 'spki' })\n        }\n        case 'rsa': {\n          const RSAPublicKey = asn1.get('RSAPublicKey')\n          const key = RSAPublicKey.encode(input._asn1)\n          return createPublicKey({ key, format: 'der', type: 'pkcs1' })\n        }\n      }\n    }\n\n    if (typeof input === 'string' || Buffer.isBuffer(input)) {\n      input = { key: input, format: 'pem' }\n    }\n\n    if (!isObject(input)) {\n      throw new TypeError('input must be a string, Buffer or an object')\n    }\n\n    const { format, passphrase } = input\n    let { key, type } = input\n\n    if (typeof key !== 'string' && !Buffer.isBuffer(key)) {\n      throw new TypeError('key must be a string or Buffer')\n    }\n\n    if (format !== 'pem' && format !== 'der') {\n      throw new TypeError('format must be one of \"pem\" or \"der\"')\n    }\n\n    let label\n    if (format === 'pem') {\n      key = key.toString()\n      switch (key.split(/\\r?\\n/g)[0].toString()) {\n        case '-----BEGIN PUBLIC KEY-----':\n          type = 'spki'\n          label = 'PUBLIC KEY'\n          break\n        case '-----BEGIN RSA PUBLIC KEY-----':\n          type = 'pkcs1'\n          label = 'RSA PUBLIC KEY'\n          break\n        case '-----BEGIN CERTIFICATE-----':\n          throw new errors.JOSENotSupported('X.509 certificates are not supported in your Node.js runtime version')\n        case '-----BEGIN PRIVATE KEY-----':\n        case '-----BEGIN EC PRIVATE KEY-----':\n        case '-----BEGIN RSA PRIVATE KEY-----':\n          return createPublicKey(createPrivateKey(key))\n        default:\n          throw new TypeError('unknown/unsupported PEM type')\n      }\n    }\n\n    switch (type) {\n      case 'spki': {\n        const PublicKeyInfo = asn1.get('PublicKeyInfo')\n        const parsed = PublicKeyInfo.decode(key, format, { label })\n\n        let type, keyObject\n        switch (parsed.algorithm.algorithm) {\n          case 'ecPublicKey': {\n            keyObject = new KeyObject()\n            keyObject._asn1 = parsed\n            keyObject._asymmetricKeyType = 'ec'\n            keyObject._type = 'public'\n            keyObject._pem = PublicKeyInfo.encode(parsed, 'pem', { label: 'PUBLIC KEY' })\n\n            break\n          }\n          case 'rsaEncryption': {\n            type = 'pkcs1'\n            keyObject = createPublicKey({ type, key: parsed.publicKey.data, format: 'der' })\n            break\n          }\n          default:\n            unsupported(parsed.algorithm.algorithm)\n        }\n\n        return keyObject\n      }\n      case 'pkcs1': {\n        const RSAPublicKey = asn1.get('RSAPublicKey')\n        const parsed = RSAPublicKey.decode(key, format, { label })\n\n        // special case when private pkcs1 PEM / DER is used with createPublicKey\n        if (parsed.n === BigInt(0)) {\n          return createPublicKey(createPrivateKey({ key, format, type, passphrase }))\n        }\n\n        const keyObject = new KeyObject()\n        keyObject._asn1 = parsed\n        keyObject._asymmetricKeyType = 'rsa'\n        keyObject._type = 'public'\n        keyObject._pem = RSAPublicKey.encode(parsed, 'pem', { label: 'RSA PUBLIC KEY' })\n\n        return keyObject\n      }\n      case 'pkcs8':\n      case 'sec1':\n        return createPublicKey(createPrivateKey({ format, key, type, passphrase }))\n      default:\n        throw new TypeError(`The value ${type} is invalid for option \"type\"`)\n    }\n  }\n\n  createPrivateKey = (input, hints) => {\n    if (typeof input === 'string' || Buffer.isBuffer(input)) {\n      input = { key: input, format: 'pem' }\n    }\n\n    if (!isObject(input)) {\n      throw new TypeError('input must be a string, Buffer or an object')\n    }\n\n    const { format, passphrase } = input\n    let { key, type } = input\n\n    if (typeof key !== 'string' && !Buffer.isBuffer(key)) {\n      throw new TypeError('key must be a string or Buffer')\n    }\n\n    if (passphrase !== undefined) {\n      throw new errors.JOSENotSupported('encrypted private keys are not supported in your Node.js runtime version')\n    }\n\n    if (format !== 'pem' && format !== 'der') {\n      throw new TypeError('format must be one of \"pem\" or \"der\"')\n    }\n\n    let label\n    if (format === 'pem') {\n      key = key.toString()\n      switch (key.split(/\\r?\\n/g)[0].toString()) {\n        case '-----BEGIN PRIVATE KEY-----':\n          type = 'pkcs8'\n          label = 'PRIVATE KEY'\n          break\n        case '-----BEGIN EC PRIVATE KEY-----':\n          type = 'sec1'\n          label = 'EC PRIVATE KEY'\n          break\n        case '-----BEGIN RSA PRIVATE KEY-----':\n          type = 'pkcs1'\n          label = 'RSA PRIVATE KEY'\n          break\n        default:\n          throw new TypeError('unknown/unsupported PEM type')\n      }\n    }\n\n    switch (type) {\n      case 'pkcs8': {\n        const PrivateKeyInfo = asn1.get('PrivateKeyInfo')\n        const parsed = PrivateKeyInfo.decode(key, format, { label })\n\n        let type, keyObject\n        switch (parsed.algorithm.algorithm) {\n          case 'ecPublicKey': {\n            type = 'sec1'\n            keyObject = createPrivateKey({ type, key: parsed.privateKey, format: 'der' }, { [namedCurve]: parsed.algorithm.parameters.value })\n            break\n          }\n          case 'rsaEncryption': {\n            type = 'pkcs1'\n            keyObject = createPrivateKey({ type, key: parsed.privateKey, format: 'der' })\n            break\n          }\n          default:\n            unsupported(parsed.algorithm.algorithm)\n        }\n\n        keyObject._pkcs8 = key\n        return keyObject\n      }\n      case 'pkcs1': {\n        const RSAPrivateKey = asn1.get('RSAPrivateKey')\n        const parsed = RSAPrivateKey.decode(key, format, { label })\n\n        const keyObject = new KeyObject()\n        keyObject._asn1 = parsed\n        keyObject._asymmetricKeyType = 'rsa'\n        keyObject._type = 'private'\n        keyObject._pem = RSAPrivateKey.encode(parsed, 'pem', { label: 'RSA PRIVATE KEY' })\n\n        return keyObject\n      }\n      case 'sec1': {\n        const ECPrivateKey = asn1.get('ECPrivateKey')\n        let parsed = ECPrivateKey.decode(key, format, { label })\n\n        if (!('parameters' in parsed) && !hints[namedCurve]) {\n          throw new Error('invalid sec1')\n        } else if (!('parameters' in parsed)) {\n          parsed = { ...parsed, parameters: { type: 'namedCurve', value: hints[namedCurve] } }\n        }\n\n        const keyObject = new KeyObject()\n        keyObject._asn1 = parsed\n        keyObject._asymmetricKeyType = 'ec'\n        keyObject._type = 'private'\n        keyObject._pem = ECPrivateKey.encode(parsed, 'pem', { label: 'EC PRIVATE KEY' })\n\n        return keyObject\n      }\n      default:\n        throw new TypeError(`The value ${type} is invalid for option \"type\"`)\n    }\n  }\n}\n\nmodule.exports = { createPublicKey, createPrivateKey, createSecretKey, KeyObject, asInput }\n", "const { randomBytes } = require('crypto')\n\nconst base64url = require('./base64url')\nconst errors = require('../errors')\n\nconst ZERO = BigInt(0)\nconst ONE = BigInt(1)\nconst TWO = BigInt(2)\n\nconst toJWKParameter = (n) => {\n  const hex = n.toString(16)\n  return base64url.encodeBuffer(Buffer.from(hex.length % 2 ? `0${hex}` : hex, 'hex'))\n}\nconst fromBuffer = buf => BigInt(`0x${buf.toString('hex')}`)\nconst bitLength = n => n.toString(2).length\n\nconst eGcdX = (a, b) => {\n  let x = ZERO\n  let y = ONE\n  let u = ONE\n  let v = ZERO\n\n  while (a !== ZERO) {\n    const q = b / a\n    const r = b % a\n    const m = x - (u * q)\n    const n = y - (v * q)\n    b = a\n    a = r\n    x = u\n    y = v\n    u = m\n    v = n\n  }\n  return x\n}\n\nconst gcd = (a, b) => {\n  let shift = ZERO\n  while (!((a | b) & ONE)) {\n    a >>= ONE\n    b >>= ONE\n    shift++\n  }\n  while (!(a & ONE)) {\n    a >>= ONE\n  }\n  do {\n    while (!(b & ONE)) {\n      b >>= ONE\n    }\n    if (a > b) {\n      const x = a\n      a = b\n      b = x\n    }\n    b -= a\n  } while (b)\n\n  return a << shift\n}\n\nconst modPow = (a, b, n) => {\n  a = toZn(a, n)\n  let result = ONE\n  let x = a\n  while (b > 0) {\n    const leastSignificantBit = b % TWO\n    b = b / TWO\n    if (leastSignificantBit === ONE) {\n      result = result * x\n      result = result % n\n    }\n    x = x * x\n    x = x % n\n  }\n  return result\n}\n\nconst randBetween = (min, max) => {\n  const interval = max - min\n  const bitLen = bitLength(interval)\n  let rnd\n  do {\n    rnd = fromBuffer(randBits(bitLen))\n  } while (rnd > interval)\n  return rnd + min\n}\n\nconst randBits = (bitLength) => {\n  const byteLength = Math.ceil(bitLength / 8)\n  const rndBytes = randomBytes(byteLength)\n  // Fill with 0's the extra bits\n  rndBytes[0] = rndBytes[0] & (2 ** (bitLength % 8) - 1)\n  return rndBytes\n}\n\nconst toZn = (a, n) => {\n  a = a % n\n  return (a < 0) ? a + n : a\n}\n\nconst odd = (n) => {\n  let r = n\n  while (r % TWO === ZERO) {\n    r = r / TWO\n  }\n  return r\n}\n\n// not sold on these values\nconst maxCountWhileNoY = 30\nconst maxCountWhileInot0 = 22\n\nconst getPrimeFactors = (e, d, n) => {\n  const r = odd(e * d - ONE)\n\n  let countWhileNoY = 0\n  let y\n  do {\n    countWhileNoY++\n    if (countWhileNoY === maxCountWhileNoY) {\n      throw new errors.JWKImportFailed('failed to calculate missing primes')\n    }\n\n    let countWhileInot0 = 0\n    let i = modPow(randBetween(TWO, n), r, n)\n    let o = ZERO\n    while (i !== ONE) {\n      countWhileInot0++\n      if (countWhileInot0 === maxCountWhileInot0) {\n        throw new errors.JWKImportFailed('failed to calculate missing primes')\n      }\n      o = i\n      i = (i * i) % n\n    }\n    if (o !== (n - ONE)) {\n      y = o\n    }\n  } while (!y)\n\n  const p = gcd(y - ONE, n)\n  const q = n / p\n\n  return p > q ? { p, q } : { p: q, q: p }\n}\n\nmodule.exports = (jwk) => {\n  const e = fromBuffer(base64url.decodeToBuffer(jwk.e))\n  const d = fromBuffer(base64url.decodeToBuffer(jwk.d))\n  const n = fromBuffer(base64url.decodeToBuffer(jwk.n))\n\n  if (d >= n) {\n    throw new errors.JWKInvalid('invalid RSA private exponent')\n  }\n\n  const { p, q } = getPrimeFactors(e, d, n)\n  const dp = d % (p - ONE)\n  const dq = d % (q - ONE)\n  const qi = toZn(eGcdX(toZn(q, p), p), p)\n\n  return {\n    ...jwk,\n    p: toJWKParameter(p),\n    q: toJWKParameter(q),\n    dp: toJWKParameter(dp),\n    dq: toJWKParameter(dq),\n    qi: toJWKParameter(qi)\n  }\n}\n", "const { EOL } = require('os')\n\nconst errors = require('../errors')\n\nconst { keyObjectSupported } = require('./runtime_support')\nconst { createPublicKey } = require('./key_object')\nconst base64url = require('./base64url')\nconst asn1 = require('./asn1')\nconst computePrimes = require('./rsa_primes')\nconst { OKP_CURVES, EC_CURVES } = require('../registry')\n\nconst formatPem = (base64pem, descriptor) => `-----BEGIN ${descriptor} KEY-----${EOL}${(base64pem.match(/.{1,64}/g) || []).join(EOL)}${EOL}-----END ${descriptor} KEY-----`\n\nconst okpToJWK = {\n  private (crv, keyObject) {\n    const der = keyObject.export({ type: 'pkcs8', format: 'der' })\n    const OneAsymmetricKey = asn1.get('OneAsymmetricKey')\n    const { privateKey: { privateKey: d } } = OneAsymmetricKey.decode(der)\n\n    return {\n      ...okpToJWK.public(crv, createPublicKey(keyObject)),\n      d: base64url.encodeBuffer(d)\n    }\n  },\n  public (crv, keyObject) {\n    const der = keyObject.export({ type: 'spki', format: 'der' })\n\n    const PublicKeyInfo = asn1.get('PublicKeyInfo')\n\n    const { publicKey: { data: x } } = PublicKeyInfo.decode(der)\n\n    return {\n      kty: 'OKP',\n      crv,\n      x: base64url.encodeBuffer(x)\n    }\n  }\n}\n\nconst keyObjectToJWK = {\n  rsa: {\n    private (keyObject) {\n      const der = keyObject.export({ type: 'pkcs8', format: 'der' })\n\n      const PrivateKeyInfo = asn1.get('PrivateKeyInfo')\n      const RSAPrivateKey = asn1.get('RSAPrivateKey')\n\n      const { privateKey } = PrivateKeyInfo.decode(der)\n      const { version, n, e, d, p, q, dp, dq, qi } = RSAPrivateKey.decode(privateKey)\n\n      if (version !== 'two-prime') {\n        throw new errors.JOSENotSupported('Private RSA keys with more than two primes are not supported')\n      }\n\n      return {\n        kty: 'RSA',\n        n: base64url.encodeBigInt(n),\n        e: base64url.encodeBigInt(e),\n        d: base64url.encodeBigInt(d),\n        p: base64url.encodeBigInt(p),\n        q: base64url.encodeBigInt(q),\n        dp: base64url.encodeBigInt(dp),\n        dq: base64url.encodeBigInt(dq),\n        qi: base64url.encodeBigInt(qi)\n      }\n    },\n    public (keyObject) {\n      const der = keyObject.export({ type: 'spki', format: 'der' })\n\n      const PublicKeyInfo = asn1.get('PublicKeyInfo')\n      const RSAPublicKey = asn1.get('RSAPublicKey')\n\n      const { publicKey: { data: publicKey } } = PublicKeyInfo.decode(der)\n      const { n, e } = RSAPublicKey.decode(publicKey)\n\n      return {\n        kty: 'RSA',\n        n: base64url.encodeBigInt(n),\n        e: base64url.encodeBigInt(e)\n      }\n    }\n  },\n  ec: {\n    private (keyObject) {\n      const der = keyObject.export({ type: 'pkcs8', format: 'der' })\n\n      const PrivateKeyInfo = asn1.get('PrivateKeyInfo')\n      const ECPrivateKey = asn1.get('ECPrivateKey')\n\n      const { privateKey, algorithm: { parameters: { value: crv } } } = PrivateKeyInfo.decode(der)\n      const { privateKey: d, publicKey } = ECPrivateKey.decode(privateKey)\n\n      if (typeof publicKey === 'undefined') {\n        if (keyObjectSupported) {\n          return {\n            ...keyObjectToJWK.ec.public(createPublicKey(keyObject)),\n            d: base64url.encodeBuffer(d)\n          }\n        }\n\n        throw new errors.JOSENotSupported('Private EC keys without the public key embedded are not supported in your Node.js runtime version')\n      }\n\n      const x = publicKey.data.slice(1, ((publicKey.data.length - 1) / 2) + 1)\n      const y = publicKey.data.slice(((publicKey.data.length - 1) / 2) + 1)\n\n      return {\n        kty: 'EC',\n        crv,\n        d: base64url.encodeBuffer(d),\n        x: base64url.encodeBuffer(x),\n        y: base64url.encodeBuffer(y)\n      }\n    },\n    public (keyObject) {\n      const der = keyObject.export({ type: 'spki', format: 'der' })\n\n      const PublicKeyInfo = asn1.get('PublicKeyInfo')\n\n      const { publicKey: { data: publicKey }, algorithm: { parameters: { value: crv } } } = PublicKeyInfo.decode(der)\n\n      const x = publicKey.slice(1, ((publicKey.length - 1) / 2) + 1)\n      const y = publicKey.slice(((publicKey.length - 1) / 2) + 1)\n\n      return {\n        kty: 'EC',\n        crv,\n        x: base64url.encodeBuffer(x),\n        y: base64url.encodeBuffer(y)\n      }\n    }\n  },\n  ed25519: {\n    private (keyObject) {\n      return okpToJWK.private('Ed25519', keyObject)\n    },\n    public (keyObject) {\n      return okpToJWK.public('Ed25519', keyObject)\n    }\n  },\n  ed448: {\n    private (keyObject) {\n      return okpToJWK.private('Ed448', keyObject)\n    },\n    public (keyObject) {\n      return okpToJWK.public('Ed448', keyObject)\n    }\n  },\n  x25519: {\n    private (keyObject) {\n      return okpToJWK.private('X25519', keyObject)\n    },\n    public (keyObject) {\n      return okpToJWK.public('X25519', keyObject)\n    }\n  },\n  x448: {\n    private (keyObject) {\n      return okpToJWK.private('X448', keyObject)\n    },\n    public (keyObject) {\n      return okpToJWK.public('X448', keyObject)\n    }\n  }\n}\n\nmodule.exports.keyObjectToJWK = (keyObject) => {\n  if (keyObject.type === 'private') {\n    return keyObjectToJWK[keyObject.asymmetricKeyType].private(keyObject)\n  }\n\n  return keyObjectToJWK[keyObject.asymmetricKeyType].public(keyObject)\n}\n\nconst concatEcPublicKey = (x, y) => ({\n  unused: 0,\n  data: Buffer.concat([\n    Buffer.alloc(1, 4),\n    base64url.decodeToBuffer(x),\n    base64url.decodeToBuffer(y)\n  ])\n})\n\nconst jwkToPem = {\n  RSA: {\n    private (jwk, { calculateMissingRSAPrimes }) {\n      const RSAPrivateKey = asn1.get('RSAPrivateKey')\n\n      if ('oth' in jwk) {\n        throw new errors.JOSENotSupported('Private RSA keys with more than two primes are not supported')\n      }\n\n      if (jwk.p || jwk.q || jwk.dp || jwk.dq || jwk.qi) {\n        if (!(jwk.p && jwk.q && jwk.dp && jwk.dq && jwk.qi)) {\n          throw new errors.JWKInvalid('all other private key parameters must be present when any one of them is present')\n        }\n      } else if (calculateMissingRSAPrimes) {\n        jwk = computePrimes(jwk)\n      } else if (!calculateMissingRSAPrimes) {\n        throw new errors.JOSENotSupported('importing private RSA keys without all other private key parameters is not enabled, see documentation and its advisory on how and when its ok to enable it')\n      }\n\n      return RSAPrivateKey.encode({\n        version: 0,\n        n: BigInt(`0x${base64url.decodeToBuffer(jwk.n).toString('hex')}`),\n        e: BigInt(`0x${base64url.decodeToBuffer(jwk.e).toString('hex')}`),\n        d: BigInt(`0x${base64url.decodeToBuffer(jwk.d).toString('hex')}`),\n        p: BigInt(`0x${base64url.decodeToBuffer(jwk.p).toString('hex')}`),\n        q: BigInt(`0x${base64url.decodeToBuffer(jwk.q).toString('hex')}`),\n        dp: BigInt(`0x${base64url.decodeToBuffer(jwk.dp).toString('hex')}`),\n        dq: BigInt(`0x${base64url.decodeToBuffer(jwk.dq).toString('hex')}`),\n        qi: BigInt(`0x${base64url.decodeToBuffer(jwk.qi).toString('hex')}`)\n      }, 'pem', { label: 'RSA PRIVATE KEY' })\n    },\n    public (jwk) {\n      const RSAPublicKey = asn1.get('RSAPublicKey')\n\n      return RSAPublicKey.encode({\n        version: 0,\n        n: BigInt(`0x${base64url.decodeToBuffer(jwk.n).toString('hex')}`),\n        e: BigInt(`0x${base64url.decodeToBuffer(jwk.e).toString('hex')}`)\n      }, 'pem', { label: 'RSA PUBLIC KEY' })\n    }\n  },\n  EC: {\n    private (jwk) {\n      const ECPrivateKey = asn1.get('ECPrivateKey')\n\n      return ECPrivateKey.encode({\n        version: 1,\n        privateKey: base64url.decodeToBuffer(jwk.d),\n        parameters: { type: 'namedCurve', value: jwk.crv },\n        publicKey: concatEcPublicKey(jwk.x, jwk.y)\n      }, 'pem', { label: 'EC PRIVATE KEY' })\n    },\n    public (jwk) {\n      const PublicKeyInfo = asn1.get('PublicKeyInfo')\n\n      return PublicKeyInfo.encode({\n        algorithm: {\n          algorithm: 'ecPublicKey',\n          parameters: { type: 'namedCurve', value: jwk.crv }\n        },\n        publicKey: concatEcPublicKey(jwk.x, jwk.y)\n      }, 'pem', { label: 'PUBLIC KEY' })\n    }\n  },\n  OKP: {\n    private (jwk) {\n      const OneAsymmetricKey = asn1.get('OneAsymmetricKey')\n\n      const b64 = OneAsymmetricKey.encode({\n        version: 0,\n        privateKey: { privateKey: base64url.decodeToBuffer(jwk.d) },\n        algorithm: { algorithm: jwk.crv }\n      }, 'der')\n\n      // TODO: WHYYY? https://github.com/indutny/asn1.js/issues/110\n      b64.write('04', 12, 1, 'hex')\n\n      return formatPem(b64.toString('base64'), 'PRIVATE')\n    },\n    public (jwk) {\n      const PublicKeyInfo = asn1.get('PublicKeyInfo')\n\n      return PublicKeyInfo.encode({\n        algorithm: { algorithm: jwk.crv },\n        publicKey: {\n          unused: 0,\n          data: base64url.decodeToBuffer(jwk.x)\n        }\n      }, 'pem', { label: 'PUBLIC KEY' })\n    }\n  }\n}\n\nmodule.exports.jwkToPem = (jwk, { calculateMissingRSAPrimes = false } = {}) => {\n  switch (jwk.kty) {\n    case 'EC':\n      if (!EC_CURVES.has(jwk.crv)) {\n        throw new errors.JOSENotSupported(`unsupported EC key curve: ${jwk.crv}`)\n      }\n      break\n    case 'OKP':\n      if (!OKP_CURVES.has(jwk.crv)) {\n        throw new errors.JOSENotSupported(`unsupported OKP key curve: ${jwk.crv}`)\n      }\n      break\n    case 'RSA':\n      break\n    default:\n      throw new errors.JOSENotSupported(`unsupported key type: ${jwk.kty}`)\n  }\n\n  if (jwk.d) {\n    return jwkToPem[jwk.kty].private(jwk, { calculateMissingRSAPrimes })\n  }\n\n  return jwkToPem[jwk.kty].public(jwk)\n}\n", "const { createHash } = require('crypto')\n\nconst base64url = require('../help/base64url')\n\nconst x5t = (hash, cert) => base64url.encodeBuffer(createHash(hash).update(Buffer.from(cert, 'base64')).digest())\n\nmodule.exports.kid = components => base64url.encodeBuffer(createHash('sha256').update(JSON.stringify(components)).digest())\nmodule.exports.x5t = x5t.bind(undefined, 'sha1')\nmodule.exports['x5t#S256'] = x5t.bind(undefined, 'sha256')\n", "const { strict: assert } = require('assert')\nconst { inspect } = require('util')\nconst { EOL } = require('os')\n\nconst { keyObjectSupported } = require('../../help/runtime_support')\nconst { createPublicKey } = require('../../help/key_object')\nconst { keyObjectToJWK } = require('../../help/key_utils')\nconst {\n  THUMBPRINT_MATERIAL, PUBLIC_MEMBERS, PRIVATE_MEMBERS, JWK_MEMBERS, KEYOBJECT,\n  USES_MAPPING, OPS, USES\n} = require('../../help/consts')\nconst isObject = require('../../help/is_object')\nconst thumbprint = require('../thumbprint')\nconst errors = require('../../errors')\n\nconst privateApi = Symbol('privateApi')\nconst { JWK } = require('../../registry')\n\nclass Key {\n  constructor (keyObject, { alg, use, kid, key_ops: ops, x5c, x5t, 'x5t#S256': x5t256 } = {}) {\n    if (use !== undefined) {\n      if (typeof use !== 'string' || !USES.has(use)) {\n        throw new TypeError('`use` must be either \"sig\" or \"enc\" string when provided')\n      }\n    }\n\n    if (alg !== undefined) {\n      if (typeof alg !== 'string' || !alg) {\n        throw new TypeError('`alg` must be a non-empty string when provided')\n      }\n    }\n\n    if (kid !== undefined) {\n      if (typeof kid !== 'string' || !kid) {\n        throw new TypeError('`kid` must be a non-empty string when provided')\n      }\n    }\n\n    if (ops !== undefined) {\n      if (!Array.isArray(ops) || !ops.length || ops.some(o => typeof o !== 'string')) {\n        throw new TypeError('`key_ops` must be a non-empty array of strings when provided')\n      }\n      ops = Array.from(new Set(ops)).filter(x => OPS.has(x))\n    }\n\n    if (ops && use) {\n      if (\n        (use === 'enc' && ops.some(x => USES_MAPPING.sig.has(x))) ||\n        (use === 'sig' && ops.some(x => USES_MAPPING.enc.has(x)))\n      ) {\n        throw new errors.JWKInvalid('inconsistent JWK \"use\" and \"key_ops\"')\n      }\n    }\n\n    if (keyObjectSupported && x5c !== undefined) {\n      if (!Array.isArray(x5c) || !x5c.length || x5c.some(c => typeof c !== 'string')) {\n        throw new TypeError('`x5c` must be an array of one or more PKIX certificates when provided')\n      }\n\n      x5c.forEach((cert, i) => {\n        let publicKey\n        try {\n          publicKey = createPublicKey({\n            key: `-----BEGIN CERTIFICATE-----${EOL}${(cert.match(/.{1,64}/g) || []).join(EOL)}${EOL}-----END CERTIFICATE-----`, format: 'pem'\n          })\n        } catch (err) {\n          throw new errors.JWKInvalid(`\\`x5c\\` member at index ${i} is not a valid base64-encoded DER PKIX certificate`)\n        }\n        if (i === 0) {\n          try {\n            assert.deepEqual(\n              publicKey.export({ type: 'spki', format: 'der' }),\n              (keyObject.type === 'public' ? keyObject : createPublicKey(keyObject)).export({ type: 'spki', format: 'der' })\n            )\n          } catch (err) {\n            throw new errors.JWKInvalid('The key in the first `x5c` certificate MUST match the public key represented by the JWK')\n          }\n        }\n      })\n    }\n\n    Object.defineProperties(this, {\n      [KEYOBJECT]: { value: isObject(keyObject) ? undefined : keyObject },\n      keyObject: {\n        get () {\n          if (!keyObjectSupported) {\n            throw new errors.JOSENotSupported('KeyObject class is not supported in your Node.js runtime version')\n          }\n\n          return this[KEYOBJECT]\n        }\n      },\n      type: { value: keyObject.type },\n      private: { value: keyObject.type === 'private' },\n      public: { value: keyObject.type === 'public' },\n      secret: { value: keyObject.type === 'secret' },\n      alg: { value: alg, enumerable: alg !== undefined },\n      use: { value: use, enumerable: use !== undefined },\n      x5c: {\n        enumerable: x5c !== undefined,\n        ...(x5c ? { get () { return [...x5c] } } : { value: undefined })\n      },\n      key_ops: {\n        enumerable: ops !== undefined,\n        ...(ops ? { get () { return [...ops] } } : { value: undefined })\n      },\n      kid: {\n        enumerable: true,\n        ...(kid\n          ? { value: kid }\n          : {\n              get () {\n                Object.defineProperty(this, 'kid', { value: this.thumbprint, configurable: false })\n                return this.kid\n              },\n              configurable: true\n            })\n      },\n      ...(x5c\n        ? {\n            x5t: {\n              enumerable: true,\n              ...(x5t\n                ? { value: x5t }\n                : {\n                    get () {\n                      Object.defineProperty(this, 'x5t', { value: thumbprint.x5t(this.x5c[0]), configurable: false })\n                      return this.x5t\n                    },\n                    configurable: true\n                  })\n            }\n          }\n        : undefined),\n      ...(x5c\n        ? {\n            'x5t#S256': {\n              enumerable: true,\n              ...(x5t256\n                ? { value: x5t256 }\n                : {\n                    get () {\n                      Object.defineProperty(this, 'x5t#S256', { value: thumbprint['x5t#S256'](this.x5c[0]), configurable: false })\n                      return this['x5t#S256']\n                    },\n                    configurable: true\n                  })\n            }\n          }\n        : undefined),\n      thumbprint: {\n        get () {\n          Object.defineProperty(this, 'thumbprint', { value: thumbprint.kid(this[THUMBPRINT_MATERIAL]()), configurable: false })\n          return this.thumbprint\n        },\n        configurable: true\n      }\n    })\n  }\n\n  toPEM (priv = false, encoding = {}) {\n    if (this.secret) {\n      throw new TypeError('symmetric keys cannot be exported as PEM')\n    }\n\n    if (priv && this.public === true) {\n      throw new TypeError('public key cannot be exported as private')\n    }\n\n    const { type = priv ? 'pkcs8' : 'spki', cipher, passphrase } = encoding\n\n    let keyObject = this[KEYOBJECT]\n\n    if (!priv) {\n      if (this.private) {\n        keyObject = createPublicKey(keyObject)\n      }\n      if (cipher || passphrase) {\n        throw new TypeError('cipher and passphrase can only be applied when exporting private keys')\n      }\n    }\n\n    if (priv) {\n      return keyObject.export({ format: 'pem', type, cipher, passphrase })\n    }\n\n    return keyObject.export({ format: 'pem', type })\n  }\n\n  toJWK (priv = false) {\n    if (priv && this.public === true) {\n      throw new TypeError('public key cannot be exported as private')\n    }\n\n    const components = [...this.constructor[priv ? PRIVATE_MEMBERS : PUBLIC_MEMBERS]]\n      .map(k => [k, this[k]])\n\n    const result = {}\n\n    Object.keys(components).forEach((key) => {\n      const [k, v] = components[key]\n\n      result[k] = v\n    })\n\n    result.kty = this.kty\n    result.kid = this.kid\n\n    if (this.alg) {\n      result.alg = this.alg\n    }\n\n    if (this.key_ops && this.key_ops.length) {\n      result.key_ops = this.key_ops\n    }\n\n    if (this.use) {\n      result.use = this.use\n    }\n\n    if (this.x5c) {\n      result.x5c = this.x5c\n    }\n\n    if (this.x5t) {\n      result.x5t = this.x5t\n    }\n\n    if (this['x5t#S256']) {\n      result['x5t#S256'] = this['x5t#S256']\n    }\n\n    return result\n  }\n\n  [JWK_MEMBERS] () {\n    const props = this[KEYOBJECT].type === 'private' ? this.constructor[PRIVATE_MEMBERS] : this.constructor[PUBLIC_MEMBERS]\n    Object.defineProperties(this, [...props].reduce((acc, component) => {\n      acc[component] = {\n        get () {\n          const jwk = keyObjectToJWK(this[KEYOBJECT])\n          Object.defineProperties(\n            this,\n            Object.entries(jwk)\n              .filter(([key]) => props.has(key))\n              .reduce((acc, [key, value]) => {\n                acc[key] = { value, enumerable: this.constructor[PUBLIC_MEMBERS].has(key), configurable: false }\n                return acc\n              }, {})\n          )\n\n          return this[component]\n        },\n        enumerable: this.constructor[PUBLIC_MEMBERS].has(component),\n        configurable: true\n      }\n      return acc\n    }, {}))\n  }\n\n  /* c8 ignore next 8 */\n  [inspect.custom] () {\n    return `${this.constructor.name} ${inspect(this.toJWK(false), {\n      depth: Infinity,\n      colors: process.stdout.isTTY,\n      compact: false,\n      sorted: true\n    })}`\n  }\n\n  /* c8 ignore next 3 */\n  [THUMBPRINT_MATERIAL] () {\n    throw new Error(`\"[THUMBPRINT_MATERIAL]()\" is not implemented on ${this.constructor.name}`)\n  }\n\n  algorithms (operation, /* the rest is private API */ int, opts) {\n    const { use = this.use, alg = this.alg, key_ops: ops = this.key_ops } = int === privateApi ? opts : {}\n    if (alg) {\n      return new Set(this.algorithms(operation, privateApi, { alg: null, use, key_ops: ops }).has(alg) ? [alg] : undefined)\n    }\n\n    if (typeof operation === 'symbol') {\n      try {\n        return this[operation]()\n      } catch (err) {\n        return new Set()\n      }\n    }\n\n    if (operation && ops && !ops.includes(operation)) {\n      return new Set()\n    }\n\n    switch (operation) {\n      case 'decrypt':\n      case 'deriveKey':\n      case 'encrypt':\n      case 'sign':\n      case 'unwrapKey':\n      case 'verify':\n      case 'wrapKey':\n        return new Set(Object.entries(JWK[this.kty][operation]).map(([alg, fn]) => fn(this) ? alg : undefined).filter(Boolean))\n      case undefined:\n        return new Set([\n          ...this.algorithms('sign'),\n          ...this.algorithms('verify'),\n          ...this.algorithms('decrypt'),\n          ...this.algorithms('encrypt'),\n          ...this.algorithms('unwrapKey'),\n          ...this.algorithms('wrapKey'),\n          ...this.algorithms('deriveKey')\n        ])\n      default:\n        throw new TypeError('invalid key operation')\n    }\n  }\n\n  /* c8 ignore next 3 */\n  static async generate () {\n    throw new Error(`\"static async generate()\" is not implemented on ${this.name}`)\n  }\n\n  /* c8 ignore next 3 */\n  static generateSync () {\n    throw new Error(`\"static generateSync()\" is not implemented on ${this.name}`)\n  }\n\n  /* c8 ignore next 3 */\n  static get [PUBLIC_MEMBERS] () {\n    throw new Error(`\"static get [PUBLIC_MEMBERS]()\" is not implemented on ${this.name}`)\n  }\n\n  /* c8 ignore next 3 */\n  static get [PRIVATE_MEMBERS] () {\n    throw new Error(`\"static get [PRIVATE_MEMBERS]()\" is not implemented on ${this.name}`)\n  }\n}\n\nmodule.exports = Key\n", "const { generateKeyPairSync, generateKeyPair: async } = require('crypto')\nconst { promisify } = require('util')\n\nconst {\n  THUMBPRINT_MATERIAL, JWK_MEMBERS, PUBLIC_MEMBERS,\n  PRIVATE_MEMBERS, KEY_MANAGEMENT_DECRYPT, KEY_MANAGEMENT_ENCRYPT\n} = require('../../help/consts')\nconst { keyObjectSupported } = require('../../help/runtime_support')\nconst { createPublicKey, createPrivateKey } = require('../../help/key_object')\n\nconst Key = require('./base')\n\nconst generateKeyPair = promisify(async)\n\nconst RSA_PUBLIC = new Set(['e', 'n'])\nObject.freeze(RSA_PUBLIC)\nconst RSA_PRIVATE = new Set([...RSA_PUBLIC, 'd', 'p', 'q', 'dp', 'dq', 'qi'])\nObject.freeze(RSA_PRIVATE)\n\n// RSA Key Type\nclass RSAKey extends Key {\n  constructor (...args) {\n    super(...args)\n    this[JWK_MEMBERS]()\n    Object.defineProperties(this, {\n      kty: {\n        value: 'RSA',\n        enumerable: true\n      },\n      length: {\n        get () {\n          Object.defineProperty(this, 'length', {\n            value: Buffer.byteLength(this.n, 'base64') * 8,\n            configurable: false\n          })\n\n          return this.length\n        },\n        configurable: true\n      }\n    })\n  }\n\n  static get [PUBLIC_MEMBERS] () {\n    return RSA_PUBLIC\n  }\n\n  static get [PRIVATE_MEMBERS] () {\n    return RSA_PRIVATE\n  }\n\n  // https://tc39.github.io/ecma262/#sec-ordinaryownpropertykeys no need for any special\n  // JSON.stringify handling in V8\n  [THUMBPRINT_MATERIAL] () {\n    return { e: this.e, kty: 'RSA', n: this.n }\n  }\n\n  [KEY_MANAGEMENT_ENCRYPT] () {\n    return this.algorithms('wrapKey')\n  }\n\n  [KEY_MANAGEMENT_DECRYPT] () {\n    return this.algorithms('unwrapKey')\n  }\n\n  static async generate (len = 2048, privat = true) {\n    if (!Number.isSafeInteger(len) || len < 512 || len % 8 !== 0 || (('electron' in process.versions) && len % 128 !== 0)) {\n      throw new TypeError('invalid bit length')\n    }\n\n    let privateKey, publicKey\n\n    if (keyObjectSupported) {\n      ({ privateKey, publicKey } = await generateKeyPair('rsa', { modulusLength: len }))\n      return privat ? privateKey : publicKey\n    }\n\n    ({ privateKey, publicKey } = await generateKeyPair('rsa', {\n      modulusLength: len,\n      publicKeyEncoding: { type: 'spki', format: 'pem' },\n      privateKeyEncoding: { type: 'pkcs8', format: 'pem' }\n    }))\n\n    if (privat) {\n      return createPrivateKey(privateKey)\n    } else {\n      return createPublicKey(publicKey)\n    }\n  }\n\n  static generateSync (len = 2048, privat = true) {\n    if (!Number.isSafeInteger(len) || len < 512 || len % 8 !== 0 || (('electron' in process.versions) && len % 128 !== 0)) {\n      throw new TypeError('invalid bit length')\n    }\n\n    let privateKey, publicKey\n\n    if (keyObjectSupported) {\n      ({ privateKey, publicKey } = generateKeyPairSync('rsa', { modulusLength: len }))\n      return privat ? privateKey : publicKey\n    }\n\n    ({ privateKey, publicKey } = generateKeyPairSync('rsa', {\n      modulusLength: len,\n      publicKeyEncoding: { type: 'spki', format: 'pem' },\n      privateKeyEncoding: { type: 'pkcs8', format: 'pem' }\n    }))\n\n    if (privat) {\n      return createPrivateKey(privateKey)\n    } else {\n      return createPublicKey(publicKey)\n    }\n  }\n}\n\nmodule.exports = RSAKey\n", "const { generateKeyPairSync, generateKeyPair: async } = require('crypto')\nconst { promisify } = require('util')\n\nconst {\n  THUMBPRINT_MATERIAL, JWK_MEMBERS, PUBLIC_MEMBERS,\n  PRIVATE_MEMBERS, KEY_MANAGEMENT_DECRYPT, KEY_MANAGEMENT_ENCRYPT\n} = require('../../help/consts')\nconst { EC_CURVES } = require('../../registry')\nconst { keyObjectSupported } = require('../../help/runtime_support')\nconst { createPublicKey, createPrivateKey } = require('../../help/key_object')\n\nconst errors = require('../../errors')\n\nconst Key = require('./base')\n\nconst generateKeyPair = promisify(async)\n\nconst EC_PUBLIC = new Set(['crv', 'x', 'y'])\nObject.freeze(EC_PUBLIC)\nconst EC_PRIVATE = new Set([...EC_PUBLIC, 'd'])\nObject.freeze(EC_PRIVATE)\n\n// Elliptic Curve Key Type\nclass ECKey extends Key {\n  constructor (...args) {\n    super(...args)\n    this[JWK_MEMBERS]()\n    Object.defineProperty(this, 'kty', { value: 'EC', enumerable: true })\n    if (!EC_CURVES.has(this.crv)) {\n      throw new errors.JOSENotSupported('unsupported EC key curve')\n    }\n  }\n\n  static get [PUBLIC_MEMBERS] () {\n    return EC_PUBLIC\n  }\n\n  static get [PRIVATE_MEMBERS] () {\n    return EC_PRIVATE\n  }\n\n  // https://tc39.github.io/ecma262/#sec-ordinaryownpropertykeys no need for any special\n  // JSON.stringify handling in V8\n  [THUMBPRINT_MATERIAL] () {\n    return { crv: this.crv, kty: 'EC', x: this.x, y: this.y }\n  }\n\n  [KEY_MANAGEMENT_ENCRYPT] () {\n    return this.algorithms('deriveKey')\n  }\n\n  [KEY_MANAGEMENT_DECRYPT] () {\n    if (this.public) {\n      return new Set()\n    }\n    return this.algorithms('deriveKey')\n  }\n\n  static async generate (crv = 'P-256', privat = true) {\n    if (!EC_CURVES.has(crv)) {\n      throw new errors.JOSENotSupported(`unsupported EC key curve: ${crv}`)\n    }\n\n    let privateKey, publicKey\n\n    if (keyObjectSupported) {\n      ({ privateKey, publicKey } = await generateKeyPair('ec', { namedCurve: crv }))\n      return privat ? privateKey : publicKey\n    }\n\n    ({ privateKey, publicKey } = await generateKeyPair('ec', {\n      namedCurve: crv,\n      publicKeyEncoding: { type: 'spki', format: 'pem' },\n      privateKeyEncoding: { type: 'pkcs8', format: 'pem' }\n    }))\n\n    if (privat) {\n      return createPrivateKey(privateKey)\n    } else {\n      return createPublicKey(publicKey)\n    }\n  }\n\n  static generateSync (crv = 'P-256', privat = true) {\n    if (!EC_CURVES.has(crv)) {\n      throw new errors.JOSENotSupported(`unsupported EC key curve: ${crv}`)\n    }\n\n    let privateKey, publicKey\n\n    if (keyObjectSupported) {\n      ({ privateKey, publicKey } = generateKeyPairSync('ec', { namedCurve: crv }))\n      return privat ? privateKey : publicKey\n    }\n\n    ({ privateKey, publicKey } = generateKeyPairSync('ec', {\n      namedCurve: crv,\n      publicKeyEncoding: { type: 'spki', format: 'pem' },\n      privateKeyEncoding: { type: 'pkcs8', format: 'pem' }\n    }))\n\n    if (privat) {\n      return createPrivateKey(privateKey)\n    } else {\n      return createPublicKey(publicKey)\n    }\n  }\n}\n\nmodule.exports = ECKey\n", "const { generateKeyPairSync, generateKeyPair: async } = require('crypto')\nconst { promisify } = require('util')\n\nconst {\n  THUMBPRINT_MATERIAL, JWK_MEMBERS, PUBLIC_MEMBERS,\n  PRIVATE_MEMBERS, KEY_MANAGEMENT_DECRYPT, KEY_MANAGEMENT_ENCRYPT\n} = require('../../help/consts')\nconst { OKP_CURVES } = require('../../registry')\nconst { edDSASupported } = require('../../help/runtime_support')\nconst errors = require('../../errors')\n\nconst Key = require('./base')\n\nconst generateKeyPair = promisify(async)\n\nconst OKP_PUBLIC = new Set(['crv', 'x'])\nObject.freeze(OKP_PUBLIC)\nconst OKP_PRIVATE = new Set([...OKP_PUBLIC, 'd'])\nObject.freeze(OKP_PRIVATE)\n\n// Octet string key pairs Key Type\nclass OKPKey extends Key {\n  constructor (...args) {\n    super(...args)\n    this[JWK_MEMBERS]()\n    Object.defineProperty(this, 'kty', { value: 'OKP', enumerable: true })\n    if (!OKP_CURVES.has(this.crv)) {\n      throw new errors.JOSENotSupported('unsupported OKP key curve')\n    }\n  }\n\n  static get [PUBLIC_MEMBERS] () {\n    return OKP_PUBLIC\n  }\n\n  static get [PRIVATE_MEMBERS] () {\n    return OKP_PRIVATE\n  }\n\n  // https://tc39.github.io/ecma262/#sec-ordinaryownpropertykeys no need for any special\n  // JSON.stringify handling in V8\n  [THUMBPRINT_MATERIAL] () {\n    return { crv: this.crv, kty: 'OKP', x: this.x }\n  }\n\n  [KEY_MANAGEMENT_ENCRYPT] () {\n    return this.algorithms('deriveKey')\n  }\n\n  [KEY_MANAGEMENT_DECRYPT] () {\n    if (this.public) {\n      return new Set()\n    }\n    return this.algorithms('deriveKey')\n  }\n\n  static async generate (crv = 'Ed25519', privat = true) {\n    if (!edDSASupported) {\n      throw new errors.JOSENotSupported('OKP keys are not supported in your Node.js runtime version')\n    }\n\n    if (!OKP_CURVES.has(crv)) {\n      throw new errors.JOSENotSupported(`unsupported OKP key curve: ${crv}`)\n    }\n\n    const { privateKey, publicKey } = await generateKeyPair(crv.toLowerCase())\n\n    return privat ? privateKey : publicKey\n  }\n\n  static generateSync (crv = 'Ed25519', privat = true) {\n    if (!edDSASupported) {\n      throw new errors.JOSENotSupported('OKP keys are not supported in your Node.js runtime version')\n    }\n\n    if (!OKP_CURVES.has(crv)) {\n      throw new errors.JOSENotSupported(`unsupported OKP key curve: ${crv}`)\n    }\n\n    const { privateKey, publicKey } = generateKeyPairSync(crv.toLowerCase())\n\n    return privat ? privateKey : publicKey\n  }\n}\n\nmodule.exports = OKPKey\n", "const { randomBytes } = require('crypto')\n\nconst { createSecretKey } = require('../../help/key_object')\nconst base64url = require('../../help/base64url')\nconst {\n  THUMBPRINT_MATERIAL, PUBLIC_MEMBERS, PRIVATE_MEMBERS,\n  KEY_MANAGEMENT_DECRYPT, KEY_MANAGEMENT_ENCRYPT, KEYOBJECT\n} = require('../../help/consts')\n\nconst Key = require('./base')\n\nconst OCT_PUBLIC = new Set()\nObject.freeze(OCT_PUBLIC)\nconst OCT_PRIVATE = new Set(['k'])\nObject.freeze(OCT_PRIVATE)\n\n// Octet sequence Key Type\nclass OctKey extends Key {\n  constructor (...args) {\n    super(...args)\n    Object.defineProperties(this, {\n      kty: {\n        value: 'oct',\n        enumerable: true\n      },\n      length: {\n        value: this[KEYOBJECT] ? this[KEYOBJECT].symmetricKeySize * 8 : undefined\n      },\n      k: {\n        enumerable: false,\n        get () {\n          if (this[KEYOBJECT]) {\n            Object.defineProperty(this, 'k', {\n              value: base64url.encodeBuffer(this[KEYOBJECT].export()),\n              configurable: false\n            })\n          } else {\n            Object.defineProperty(this, 'k', {\n              value: undefined,\n              configurable: false\n            })\n          }\n\n          return this.k\n        },\n        configurable: true\n      }\n    })\n  }\n\n  static get [PUBLIC_MEMBERS] () {\n    return OCT_PUBLIC\n  }\n\n  static get [PRIVATE_MEMBERS] () {\n    return OCT_PRIVATE\n  }\n\n  // https://tc39.github.io/ecma262/#sec-ordinaryownpropertykeys no need for any special\n  // JSON.stringify handling in V8\n  [THUMBPRINT_MATERIAL] () {\n    if (!this[KEYOBJECT]) {\n      throw new TypeError('reference \"oct\" keys without \"k\" cannot have their thumbprint calculated')\n    }\n    return { k: this.k, kty: 'oct' }\n  }\n\n  [KEY_MANAGEMENT_ENCRYPT] () {\n    return new Set([\n      ...this.algorithms('wrapKey'),\n      ...this.algorithms('deriveKey')\n    ])\n  }\n\n  [KEY_MANAGEMENT_DECRYPT] () {\n    return this[KEY_MANAGEMENT_ENCRYPT]()\n  }\n\n  algorithms (...args) {\n    if (!this[KEYOBJECT]) {\n      return new Set()\n    }\n\n    return Key.prototype.algorithms.call(this, ...args)\n  }\n\n  static async generate (...args) {\n    return this.generateSync(...args)\n  }\n\n  static generateSync (len = 256, privat = true) {\n    if (!privat) {\n      throw new TypeError('\"oct\" keys cannot be generated as public')\n    }\n    if (!Number.isSafeInteger(len) || !len || len % 8 !== 0) {\n      throw new TypeError('invalid bit length')\n    }\n\n    return createSecretKey(randomBytes(len / 8))\n  }\n}\n\nmodule.exports = OctKey\n", "const { createPublicKey, createPrivateKey, createSecretKey, KeyObject } = require('../help/key_object')\nconst base64url = require('../help/base64url')\nconst isObject = require('../help/is_object')\nconst { jwkToPem } = require('../help/key_utils')\nconst errors = require('../errors')\n\nconst RSAKey = require('./key/rsa')\nconst ECKey = require('./key/ec')\nconst OKPKey = require('./key/okp')\nconst OctKey = require('./key/oct')\n\nconst importable = new Set(['string', 'buffer', 'object'])\n\nconst mergedParameters = (target = {}, source = {}) => {\n  return {\n    alg: source.alg,\n    key_ops: source.key_ops,\n    kid: source.kid,\n    use: source.use,\n    x5c: source.x5c,\n    x5t: source.x5t,\n    'x5t#S256': source['x5t#S256'],\n    ...target\n  }\n}\n\nconst openSSHpublicKey = /^[a-zA-Z0-9-]+ AAAA(?:[0-9A-Za-z+/])+(?:==|=)?(?: .*)?$/\n\nconst asKey = (key, parameters, { calculateMissingRSAPrimes = false } = {}) => {\n  let privateKey, publicKey, secret\n\n  if (!importable.has(typeof key)) {\n    throw new TypeError('key argument must be a string, buffer or an object')\n  }\n\n  if (parameters !== undefined && !isObject(parameters)) {\n    throw new TypeError('parameters argument must be a plain object when provided')\n  }\n\n  if (key instanceof KeyObject) {\n    switch (key.type) {\n      case 'private':\n        privateKey = key\n        break\n      case 'public':\n        publicKey = key\n        break\n      case 'secret':\n        secret = key\n        break\n    }\n  } else if (typeof key === 'object' && key && 'kty' in key && key.kty === 'oct') { // symmetric key <Object>\n    try {\n      secret = createSecretKey(base64url.decodeToBuffer(key.k))\n    } catch (err) {\n      if (!('k' in key)) {\n        secret = { type: 'secret' }\n      }\n    }\n    parameters = mergedParameters(parameters, key)\n  } else if (typeof key === 'object' && key && 'kty' in key) { // assume JWK formatted asymmetric key <Object>\n    ({ calculateMissingRSAPrimes = false } = parameters || { calculateMissingRSAPrimes })\n    let pem\n\n    try {\n      pem = jwkToPem(key, { calculateMissingRSAPrimes })\n    } catch (err) {\n      if (err instanceof errors.JOSEError) {\n        throw err\n      }\n    }\n\n    if (pem && key.d) {\n      privateKey = createPrivateKey(pem)\n    } else if (pem) {\n      publicKey = createPublicKey(pem)\n    }\n\n    parameters = mergedParameters({}, key)\n  } else if (key && (typeof key === 'object' || typeof key === 'string')) { // <Object> | <string> | <Buffer> passed to crypto.createPrivateKey or crypto.createPublicKey or <Buffer> passed to crypto.createSecretKey\n    try {\n      privateKey = createPrivateKey(key)\n    } catch (err) {\n      if (err instanceof errors.JOSEError) {\n        throw err\n      }\n    }\n\n    try {\n      publicKey = createPublicKey(key)\n      if (key.startsWith('-----BEGIN CERTIFICATE-----') && (!parameters || !('x5c' in parameters))) {\n        parameters = mergedParameters(parameters, {\n          x5c: [key.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '')]\n        })\n      }\n    } catch (err) {\n      if (err instanceof errors.JOSEError) {\n        throw err\n      }\n    }\n\n    try {\n      // this is to filter out invalid PEM keys and certs, i'll rather have them fail import then\n      // have them imported as symmetric \"oct\" keys\n      if (!key.includes('-----BEGIN') && !openSSHpublicKey.test(key.toString('ascii').replace(/[\\r\\n]/g, ''))) {\n        secret = createSecretKey(Buffer.isBuffer(key) ? key : Buffer.from(key))\n      }\n    } catch (err) {}\n  }\n\n  const keyObject = privateKey || publicKey || secret\n\n  if (privateKey || publicKey) {\n    switch (keyObject.asymmetricKeyType) {\n      case 'rsa':\n        return new RSAKey(keyObject, parameters)\n      case 'ec':\n        return new ECKey(keyObject, parameters)\n      case 'ed25519':\n      case 'ed448':\n      case 'x25519':\n      case 'x448':\n        return new OKPKey(keyObject, parameters)\n      default:\n        throw new errors.JOSENotSupported('only RSA, EC and OKP asymmetric keys are supported')\n    }\n  } else if (secret) {\n    return new OctKey(keyObject, parameters)\n  }\n\n  throw new errors.JWKImportFailed('key import failed')\n}\n\nmodule.exports = asKey\n", "const errors = require('../errors')\n\nconst importKey = require('./import')\n\nconst RSAKey = require('./key/rsa')\nconst ECKey = require('./key/ec')\nconst OKPKey = require('./key/okp')\nconst OctKey = require('./key/oct')\n\nconst generate = async (kty, crvOrSize, params, generatePrivate = true) => {\n  switch (kty) {\n    case 'RSA':\n      return importKey(\n        await RSAKey.generate(crvOrSize, generatePrivate),\n        params\n      )\n    case 'EC':\n      return importKey(\n        await ECKey.generate(crvOrSize, generatePrivate),\n        params\n      )\n    case 'OKP':\n      return importKey(\n        await OKPKey.generate(crvOrSize, generatePrivate),\n        params\n      )\n    case 'oct':\n      return importKey(\n        await OctKey.generate(crvOrSize, generatePrivate),\n        params\n      )\n    default:\n      throw new errors.JOSENotSupported(`unsupported key type: ${kty}`)\n  }\n}\n\nconst generateSync = (kty, crvOrSize, params, generatePrivate = true) => {\n  switch (kty) {\n    case 'RSA':\n      return importKey(RSAKey.generateSync(crvOrSize, generatePrivate), params)\n    case 'EC':\n      return importKey(ECKey.generateSync(crvOrSize, generatePrivate), params)\n    case 'OKP':\n      return importKey(OKPKey.generateSync(crvOrSize, generatePrivate), params)\n    case 'oct':\n      return importKey(OctKey.generateSync(crvOrSize, generatePrivate), params)\n    default:\n      throw new errors.JOSENotSupported(`unsupported key type: ${kty}`)\n  }\n}\n\nmodule.exports.generate = generate\nmodule.exports.generateSync = generateSync\n", "const { inspect } = require('util')\n\nconst Key = require('./base')\n\nclass NoneKey extends Key {\n  constructor () {\n    super({ type: 'unsecured' }, { alg: 'none' })\n    Object.defineProperties(this, {\n      kid: { value: undefined },\n      kty: { value: undefined },\n      thumbprint: { value: undefined },\n      toJWK: { value: undefined },\n      toPEM: { value: undefined }\n    })\n  }\n\n  /* c8 ignore next 3 */\n  [inspect.custom] () {\n    return 'None {}'\n  }\n\n  algorithms (operation) {\n    switch (operation) {\n      case 'sign':\n      case 'verify':\n      case undefined:\n        return new Set(['none'])\n      default:\n        return new Set()\n    }\n  }\n}\n\nmodule.exports = new NoneKey()\n", "const { inspect } = require('util')\n\nconst Key = require('./base')\n\nclass EmbeddedJWK extends Key {\n  constructor () {\n    super({ type: 'embedded' })\n    Object.defineProperties(this, {\n      kid: { value: undefined },\n      kty: { value: undefined },\n      thumbprint: { value: undefined },\n      toJWK: { value: undefined },\n      toPEM: { value: undefined }\n    })\n  }\n\n  /* c8 ignore next 3 */\n  [inspect.custom] () {\n    return 'Embedded.JWK {}'\n  }\n\n  algorithms () {\n    return new Set()\n  }\n}\n\nmodule.exports = new EmbeddedJWK()\n", "const { inspect } = require('util')\n\nconst Key = require('./base')\n\nclass EmbeddedX5C extends Key {\n  constructor () {\n    super({ type: 'embedded' })\n    Object.defineProperties(this, {\n      kid: { value: undefined },\n      kty: { value: undefined },\n      thumbprint: { value: undefined },\n      toJWK: { value: undefined },\n      toPEM: { value: undefined }\n    })\n  }\n\n  /* c8 ignore next 3 */\n  [inspect.custom] () {\n    return 'Embedded.X5C {}'\n  }\n\n  algorithms () {\n    return new Set()\n  }\n}\n\nmodule.exports = new EmbeddedX5C()\n", "const Key = require('./key/base')\nconst None = require('./key/none')\nconst EmbeddedJWK = require('./key/embedded.jwk')\nconst EmbeddedX5C = require('./key/embedded.x5c')\nconst importKey = require('./import')\nconst generate = require('./generate')\n\nmodule.exports = {\n  ...generate,\n  asKey: importKey,\n  isKey: input => input instanceof Key,\n  None,\n  EmbeddedJWK,\n  EmbeddedX5C\n}\n", "const { inspect } = require('util')\n\nconst isObject = require('../help/is_object')\nconst { generate, generateSync } = require('../jwk/generate')\nconst { USES_MAPPING } = require('../help/consts')\nconst { isKey, asKey: importKey } = require('../jwk')\n\nconst keyscore = (key, { alg, use, ops }) => {\n  let score = 0\n\n  if (alg && key.alg) {\n    score++\n  }\n\n  if (use && key.use) {\n    score++\n  }\n\n  if (ops && key.key_ops) {\n    score++\n  }\n\n  return score\n}\n\nclass KeyStore {\n  constructor (...keys) {\n    while (keys.some(Array.isArray)) {\n      keys = keys.flat\n        ? keys.flat()\n        : keys.reduce((acc, val) => {\n          if (Array.isArray(val)) {\n            return [...acc, ...val]\n          }\n\n          acc.push(val)\n          return acc\n        }, [])\n    }\n    if (keys.some(k => !isKey(k) || !k.kty)) {\n      throw new TypeError('all keys must be instances of a key instantiated by JWK.asKey')\n    }\n\n    this._keys = new Set(keys)\n  }\n\n  all ({ alg, kid, thumbprint, use, kty, key_ops: ops, x5t, 'x5t#S256': x5t256, crv } = {}) {\n    if (ops !== undefined && (!Array.isArray(ops) || !ops.length || ops.some(x => typeof x !== 'string'))) {\n      throw new TypeError('`key_ops` must be a non-empty array of strings')\n    }\n\n    const search = { alg, use, ops }\n    return [...this._keys]\n      .filter((key) => {\n        let candidate = true\n\n        if (candidate && kid !== undefined && key.kid !== kid) {\n          candidate = false\n        }\n\n        if (candidate && thumbprint !== undefined && key.thumbprint !== thumbprint) {\n          candidate = false\n        }\n\n        if (candidate && x5t !== undefined && key.x5t !== x5t) {\n          candidate = false\n        }\n\n        if (candidate && x5t256 !== undefined && key['x5t#S256'] !== x5t256) {\n          candidate = false\n        }\n\n        if (candidate && kty !== undefined && key.kty !== kty) {\n          candidate = false\n        }\n\n        if (candidate && crv !== undefined && (key.crv !== crv)) {\n          candidate = false\n        }\n\n        if (alg !== undefined && !key.algorithms().has(alg)) {\n          candidate = false\n        }\n\n        if (candidate && use !== undefined && (key.use !== undefined && key.use !== use)) {\n          candidate = false\n        }\n\n        // TODO:\n        if (candidate && ops !== undefined && (key.key_ops !== undefined || key.use !== undefined)) {\n          let keyOps\n          if (key.key_ops) {\n            keyOps = new Set(key.key_ops)\n          } else {\n            keyOps = USES_MAPPING[key.use]\n          }\n          if (ops.some(x => !keyOps.has(x))) {\n            candidate = false\n          }\n        }\n\n        return candidate\n      })\n      .sort((first, second) => keyscore(second, search) - keyscore(first, search))\n  }\n\n  get (...args) {\n    return this.all(...args)[0]\n  }\n\n  add (key) {\n    if (!isKey(key) || !key.kty) {\n      throw new TypeError('key must be an instance of a key instantiated by JWK.asKey')\n    }\n\n    this._keys.add(key)\n  }\n\n  remove (key) {\n    if (!isKey(key)) {\n      throw new TypeError('key must be an instance of a key instantiated by JWK.asKey')\n    }\n\n    this._keys.delete(key)\n  }\n\n  toJWKS (priv = false) {\n    return {\n      keys: [...this._keys.values()].map(\n        key => key.toJWK(priv && (key.private || (key.secret && key.k)))\n      )\n    }\n  }\n\n  async generate (...args) {\n    this._keys.add(await generate(...args))\n  }\n\n  generateSync (...args) {\n    this._keys.add(generateSync(...args))\n  }\n\n  get size () {\n    return this._keys.size\n  }\n\n  /* c8 ignore next 8 */\n  [inspect.custom] () {\n    return `${this.constructor.name} ${inspect(this.toJWKS(false), {\n      depth: Infinity,\n      colors: process.stdout.isTTY,\n      compact: false,\n      sorted: true\n    })}`\n  }\n\n  * [Symbol.iterator] () {\n    for (const key of this._keys) {\n      yield key\n    }\n  }\n}\n\nfunction asKeyStore (jwks, { ignoreErrors = false, calculateMissingRSAPrimes = false } = {}) {\n  if (!isObject(jwks) || !Array.isArray(jwks.keys) || jwks.keys.some(k => !isObject(k) || !('kty' in k))) {\n    throw new TypeError('jwks must be a JSON Web Key Set formatted object')\n  }\n\n  const keys = jwks.keys.map((jwk) => {\n    try {\n      return importKey(jwk, { calculateMissingRSAPrimes })\n    } catch (err) {\n      if (!ignoreErrors) {\n        throw err\n      }\n      return undefined\n    }\n  }).filter(Boolean)\n\n  return new KeyStore(...keys)\n}\n\nmodule.exports = { KeyStore, asKeyStore }\n", "const errors = require('../errors')\nconst Key = require('../jwk/key/base')\nconst importKey = require('../jwk/import')\nconst { KeyStore } = require('../jwks/keystore')\n\nmodule.exports = (input, keyStoreAllowed = false) => {\n  if (input instanceof Key) {\n    return input\n  }\n\n  if (input instanceof KeyStore) {\n    if (!keyStoreAllowed) {\n      throw new TypeError('key argument for this operation must not be a JWKS.KeyStore instance')\n    }\n\n    return input\n  }\n\n  try {\n    return importKey(input)\n  } catch (err) {\n    if (err instanceof errors.JOSEError && !(err instanceof errors.JWKImportFailed)) {\n      throw err\n    }\n\n    let msg\n    if (keyStoreAllowed) {\n      msg = 'key must be an instance of a key instantiated by JWK.asKey, a valid JWK.asKey input, or a JWKS.KeyStore instance'\n    } else {\n      msg = 'key must be an instance of a key instantiated by JWK.asKey, or a valid JWK.asKey input'\n    }\n\n    throw new TypeError(msg)\n  }\n}\n", "module.exports = obj => JSON.parse(JSON.stringify(obj))\n", "const { timingSafeEqual: TSE } = require('crypto')\n\nconst paddedBuffer = (input, length) => {\n  if (input.length === length) {\n    return input\n  }\n\n  const buffer = Buffer.alloc(length)\n  input.copy(buffer)\n  return buffer\n}\n\nconst timingSafeEqual = (a, b) => {\n  const length = Math.max(a.length, b.length)\n  return TSE(paddedBuffer(a, length), paddedBuffer(b, length))\n}\n\nmodule.exports = timingSafeEqual\n", "module.exports = alg => `sha${alg.substr(2, 3)}`\n", "const { createHmac } = require('crypto')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst timingSafeEqual = require('../help/timing_safe_equal')\nconst resolveNodeAlg = require('../help/node_alg')\nconst { asInput } = require('../help/key_object')\n\nconst sign = (jwaAlg, hmacAlg, { [KEYOBJECT]: keyObject }, payload) => {\n  const hmac = createHmac(hmacAlg, asInput(keyObject, false))\n  hmac.update(payload)\n  return hmac.digest()\n}\n\nconst verify = (jwaAlg, hmacAlg, key, payload, signature) => {\n  const expected = sign(jwaAlg, hmacAlg, key, payload)\n  const actual = signature\n\n  return timingSafeEqual(actual, expected)\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['HS256', 'HS384', 'HS512'].forEach((jwaAlg) => {\n    const hmacAlg = resolveNodeAlg(jwaAlg)\n    JWA.sign.set(jwaAlg, sign.bind(undefined, jwaAlg, hmacAlg))\n    JWA.verify.set(jwaAlg, verify.bind(undefined, jwaAlg, hmacAlg))\n    JWK.oct.sign[jwaAlg] = JWK.oct.verify[jwaAlg] = key => key.use === 'sig' || key.use === undefined\n  })\n}\n", "const MAX_OCTET = 0x80\nconst CLASS_UNIVERSAL = 0\nconst PRIMITIVE_BIT = 0x20\nconst TAG_SEQ = 0x10\nconst TAG_INT = 0x02\nconst ENCODED_TAG_SEQ = (TAG_SEQ | PRIMITIVE_BIT) | (CLASS_UNIVERSAL << 6)\nconst ENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6)\n\nconst getParamSize = keySize => ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1)\n\nconst paramBytesForAlg = {\n  ES256: getParamSize(256),\n  ES256K: getParamSize(256),\n  ES384: getParamSize(384),\n  ES512: getParamSize(521)\n}\n\nconst countPadding = (buf, start, stop) => {\n  let padding = 0\n  while (start + padding < stop && buf[start + padding] === 0) {\n    ++padding\n  }\n\n  const needsSign = buf[start + padding] >= MAX_OCTET\n  if (needsSign) {\n    --padding\n  }\n\n  return padding\n}\n\nmodule.exports.derToJose = (signature, alg) => {\n  if (!Buffer.isBuffer(signature)) {\n    throw new TypeError('ECDSA signature must be a Buffer')\n  }\n\n  if (!paramBytesForAlg[alg]) {\n    throw new Error(`Unknown algorithm \"${alg}\"`)\n  }\n\n  const paramBytes = paramBytesForAlg[alg]\n\n  // the DER encoded param should at most be the param size, plus a padding\n  // zero, since due to being a signed integer\n  const maxEncodedParamLength = paramBytes + 1\n\n  const inputLength = signature.length\n\n  let offset = 0\n  if (signature[offset++] !== ENCODED_TAG_SEQ) {\n    throw new Error('Could not find expected \"seq\"')\n  }\n\n  let seqLength = signature[offset++]\n  if (seqLength === (MAX_OCTET | 1)) {\n    seqLength = signature[offset++]\n  }\n\n  if (inputLength - offset < seqLength) {\n    throw new Error(`\"seq\" specified length of ${seqLength}\", only ${inputLength - offset}\" remaining`)\n  }\n\n  if (signature[offset++] !== ENCODED_TAG_INT) {\n    throw new Error('Could not find expected \"int\" for \"r\"')\n  }\n\n  const rLength = signature[offset++]\n\n  if (inputLength - offset - 2 < rLength) {\n    throw new Error(`\"r\" specified length of \"${rLength}\", only \"${inputLength - offset - 2}\" available`)\n  }\n\n  if (maxEncodedParamLength < rLength) {\n    throw new Error(`\"r\" specified length of \"${rLength}\", max of \"${maxEncodedParamLength}\" is acceptable`)\n  }\n\n  const rOffset = offset\n  offset += rLength\n\n  if (signature[offset++] !== ENCODED_TAG_INT) {\n    throw new Error('Could not find expected \"int\" for \"s\"')\n  }\n\n  const sLength = signature[offset++]\n\n  if (inputLength - offset !== sLength) {\n    throw new Error(`\"s\" specified length of \"${sLength}\", expected \"${inputLength - offset}\"`)\n  }\n\n  if (maxEncodedParamLength < sLength) {\n    throw new Error(`\"s\" specified length of \"${sLength}\", max of \"${maxEncodedParamLength}\" is acceptable`)\n  }\n\n  const sOffset = offset\n  offset += sLength\n\n  if (offset !== inputLength) {\n    throw new Error(`Expected to consume entire buffer, but \"${inputLength - offset}\" bytes remain`)\n  }\n\n  const rPadding = paramBytes - rLength\n\n  const sPadding = paramBytes - sLength\n\n  const dst = Buffer.allocUnsafe(rPadding + rLength + sPadding + sLength)\n\n  for (offset = 0; offset < rPadding; ++offset) {\n    dst[offset] = 0\n  }\n  signature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength)\n\n  offset = paramBytes\n\n  for (const o = offset; offset < o + sPadding; ++offset) {\n    dst[offset] = 0\n  }\n  signature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength)\n\n  return dst\n}\n\nmodule.exports.joseToDer = (signature, alg) => {\n  if (!Buffer.isBuffer(signature)) {\n    throw new TypeError('ECDSA signature must be a Buffer')\n  }\n\n  if (!paramBytesForAlg[alg]) {\n    throw new TypeError(`Unknown algorithm \"${alg}\"`)\n  }\n\n  const paramBytes = paramBytesForAlg[alg]\n\n  const signatureBytes = signature.length\n  if (signatureBytes !== paramBytes * 2) {\n    throw new Error(`\"${alg}\" signatures must be \"${paramBytes * 2}\" bytes, saw \"${signatureBytes}\"`)\n  }\n\n  const rPadding = countPadding(signature, 0, paramBytes)\n  const sPadding = countPadding(signature, paramBytes, signature.length)\n  const rLength = paramBytes - rPadding\n  const sLength = paramBytes - sPadding\n\n  const rsBytes = 1 + 1 + rLength + 1 + 1 + sLength\n\n  const shortLength = rsBytes < MAX_OCTET\n\n  const dst = Buffer.allocUnsafe((shortLength ? 2 : 3) + rsBytes)\n\n  let offset = 0\n  dst[offset++] = ENCODED_TAG_SEQ\n  if (shortLength) {\n    // Bit 8 has value \"0\"\n    // bits 7-1 give the length.\n    dst[offset++] = rsBytes\n  } else {\n    // Bit 8 of first octet has value \"1\"\n    // bits 7-1 give the number of additional length octets.\n    dst[offset++] = MAX_OCTET\t| 1 // eslint-disable-line no-tabs\n    // length, base 256\n    dst[offset++] = rsBytes & 0xff\n  }\n  dst[offset++] = ENCODED_TAG_INT\n  dst[offset++] = rLength\n  if (rPadding < 0) {\n    dst[offset++] = 0\n    offset += signature.copy(dst, offset, 0, paramBytes)\n  } else {\n    offset += signature.copy(dst, offset, rPadding, paramBytes)\n  }\n  dst[offset++] = ENCODED_TAG_INT\n  dst[offset++] = sLength\n  if (sPadding < 0) {\n    dst[offset++] = 0\n    signature.copy(dst, offset, paramBytes)\n  } else {\n    signature.copy(dst, offset, paramBytes + sPadding)\n  }\n\n  return dst\n}\n", "const { sign: signOneShot, verify: verifyOneShot, createSign, createVerify, getCurves } = require('crypto')\n\nconst { derToJose, joseToDer } = require('../help/ecdsa_signatures')\nconst { KEYOBJECT } = require('../help/consts')\nconst resolveNodeAlg = require('../help/node_alg')\nconst { asInput } = require('../help/key_object')\nconst { dsaEncodingSupported } = require('../help/runtime_support')\n\nlet sign, verify\n\nif (dsaEncodingSupported) {\n  sign = (jwaAlg, nodeAlg, { [KEYOBJECT]: keyObject }, payload) => {\n    if (typeof payload === 'string') {\n      payload = Buffer.from(payload)\n    }\n    return signOneShot(nodeAlg, payload, { key: asInput(keyObject, false), dsaEncoding: 'ieee-p1363' })\n  }\n  verify = (jwaAlg, nodeAlg, { [KEYOBJECT]: keyObject }, payload, signature) => {\n    try {\n      return verifyOneShot(nodeAlg, payload, { key: asInput(keyObject, true), dsaEncoding: 'ieee-p1363' }, signature)\n    } catch (err) {\n      return false\n    }\n  }\n} else {\n  sign = (jwaAlg, nodeAlg, { [KEYOBJECT]: keyObject }, payload) => {\n    return derToJose(createSign(nodeAlg).update(payload).sign(asInput(keyObject, false)), jwaAlg)\n  }\n  verify = (jwaAlg, nodeAlg, { [KEYOBJECT]: keyObject }, payload, signature) => {\n    try {\n      return createVerify(nodeAlg).update(payload).verify(asInput(keyObject, true), joseToDer(signature, jwaAlg))\n    } catch (err) {\n      return false\n    }\n  }\n}\n\nconst crvToAlg = (crv) => {\n  switch (crv) {\n    case 'P-256':\n      return 'ES256'\n    case 'secp256k1':\n      return 'ES256K'\n    case 'P-384':\n      return 'ES384'\n    case 'P-521':\n      return 'ES512'\n  }\n}\n\nmodule.exports = (JWA, JWK) => {\n  const algs = []\n\n  if (getCurves().includes('prime256v1')) {\n    algs.push('ES256')\n  }\n\n  if (getCurves().includes('secp256k1')) {\n    algs.push('ES256K')\n  }\n\n  if (getCurves().includes('secp384r1')) {\n    algs.push('ES384')\n  }\n\n  if (getCurves().includes('secp521r1')) {\n    algs.push('ES512')\n  }\n\n  algs.forEach((jwaAlg) => {\n    const nodeAlg = resolveNodeAlg(jwaAlg)\n    JWA.sign.set(jwaAlg, sign.bind(undefined, jwaAlg, nodeAlg))\n    JWA.verify.set(jwaAlg, verify.bind(undefined, jwaAlg, nodeAlg))\n    JWK.EC.sign[jwaAlg] = key => key.private && JWK.EC.verify[jwaAlg](key)\n    JWK.EC.verify[jwaAlg] = key => (key.use === 'sig' || key.use === undefined) && crvToAlg(key.crv) === jwaAlg\n  })\n}\n", "const { sign: signOneShot, verify: verifyOneShot } = require('crypto')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst { edDSASupported } = require('../help/runtime_support')\n\nconst sign = ({ [KEYOBJECT]: keyObject }, payload) => {\n  if (typeof payload === 'string') {\n    payload = Buffer.from(payload)\n  }\n  return signOneShot(undefined, payload, keyObject)\n}\n\nconst verify = ({ [KEYOBJECT]: keyObject }, payload, signature) => {\n  return verifyOneShot(undefined, payload, keyObject, signature)\n}\n\nmodule.exports = (JWA, JWK) => {\n  if (edDSASupported) {\n    JWA.sign.set('EdDSA', sign)\n    JWA.verify.set('EdDSA', verify)\n    JWK.OKP.sign.EdDSA = key => key.private && JWK.OKP.verify.EdDSA(key)\n    JWK.OKP.verify.EdDSA = key => (key.use === 'sig' || key.use === undefined) && key.keyObject.asymmetricKeyType.startsWith('ed')\n  }\n}\n", "const {\n  createSign,\n  createVerify,\n  constants\n} = require('crypto')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst resolveNodeAlg = require('../help/node_alg')\nconst { asInput } = require('../help/key_object')\n\nconst sign = (nodeAlg, { [KEYOBJECT]: keyObject }, payload) => {\n  const key = asInput(keyObject, false)\n  return createSign(nodeAlg).update(payload).sign({\n    key,\n    padding: constants.RSA_PKCS1_PSS_PADDING,\n    saltLength: constants.RSA_PSS_SALTLEN_DIGEST\n  })\n}\n\nconst verify = (nodeAlg, { [KEYOBJECT]: keyObject }, payload, signature) => {\n  const key = asInput(keyObject, true)\n  return createVerify(nodeAlg).update(payload).verify({\n    key,\n    padding: constants.RSA_PKCS1_PSS_PADDING,\n    saltLength: constants.RSA_PSS_SALTLEN_DIGEST\n  }, signature)\n}\n\nconst LENGTHS = {\n  PS256: 528,\n  PS384: 784,\n  PS512: 1040\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['PS256', 'PS384', 'PS512'].forEach((jwaAlg) => {\n    const nodeAlg = resolveNodeAlg(jwaAlg)\n    JWA.sign.set(jwaAlg, sign.bind(undefined, nodeAlg))\n    JWA.verify.set(jwaAlg, verify.bind(undefined, nodeAlg))\n    JWK.RSA.sign[jwaAlg] = key => key.private && JWK.RSA.verify[jwaAlg](key)\n    JWK.RSA.verify[jwaAlg] = key => (key.use === 'sig' || key.use === undefined) && key.length >= LENGTHS[jwaAlg]\n  })\n}\n", "const { createSign, createVerify } = require('crypto')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst resolveNodeAlg = require('../help/node_alg')\nconst { asInput } = require('../help/key_object')\n\nconst sign = (nodeAlg, { [KEYOBJECT]: keyObject }, payload) => {\n  return createSign(nodeAlg).update(payload).sign(asInput(keyObject, false))\n}\n\nconst verify = (nodeAlg, { [KEYOBJECT]: keyObject }, payload, signature) => {\n  return createVerify(nodeAlg).update(payload).verify(asInput(keyObject, true), signature)\n}\n\nconst LENGTHS = {\n  RS256: 0,\n  RS384: 624,\n  RS512: 752\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['RS256', 'RS384', 'RS512'].forEach((jwaAlg) => {\n    const nodeAlg = resolveNodeAlg(jwaAlg)\n    JWA.sign.set(jwaAlg, sign.bind(undefined, nodeAlg))\n    JWA.verify.set(jwaAlg, verify.bind(undefined, nodeAlg))\n    JWK.RSA.sign[jwaAlg] = key => key.private && JWK.RSA.verify[jwaAlg](key)\n    JWK.RSA.verify[jwaAlg] = key => (key.use === 'sig' || key.use === undefined) && key.length >= LENGTHS[jwaAlg]\n  })\n}\n", "const sign = () => Buffer.from('')\nconst verify = (key, payload, signature) => !signature.length\n\nmodule.exports = (JWA, JWK) => {\n  JWA.sign.set('none', sign)\n  JWA.verify.set('none', verify)\n}\n", "const MAX_INT32 = Math.pow(2, 32)\n\nmodule.exports = (value, buf = Buffer.allocUnsafe(8)) => {\n  const high = Math.floor(value / MAX_INT32)\n  const low = value % MAX_INT32\n\n  buf.writeUInt32BE(high, 0)\n  buf.writeUInt32BE(low, 4)\n  return buf\n}\n", "const { createCipheriv, createDecipheriv, getCiphers } = require('crypto')\n\nconst uint64be = require('../help/uint64be')\nconst timingSafeEqual = require('../help/timing_safe_equal')\nconst { KEYOBJECT } = require('../help/consts')\nconst { JWEInvalid, JWEDecryptionFailed } = require('../errors')\n\nconst checkInput = function (size, iv, tag) {\n  if (iv.length !== 16) {\n    throw new JWEInvalid('invalid iv')\n  }\n  if (arguments.length === 3) {\n    if (tag.length !== size / 8) {\n      throw new JWEInvalid('invalid tag')\n    }\n  }\n}\n\nconst encrypt = (size, sign, { [KEYOBJECT]: keyObject }, cleartext, { iv, aad = Buffer.alloc(0) }) => {\n  const key = keyObject.export()\n  checkInput(size, iv)\n\n  const keySize = size / 8\n  const encKey = key.slice(keySize)\n  const cipher = createCipheriv(`aes-${size}-cbc`, encKey, iv)\n  const ciphertext = Buffer.concat([cipher.update(cleartext), cipher.final()])\n  const macData = Buffer.concat([aad, iv, ciphertext, uint64be(aad.length * 8)])\n\n  const macKey = key.slice(0, keySize)\n  const tag = sign({ [KEYOBJECT]: macKey }, macData).slice(0, keySize)\n\n  return { ciphertext, tag }\n}\n\nconst decrypt = (size, sign, { [KEYOBJECT]: keyObject }, ciphertext, { iv, tag = Buffer.alloc(0), aad = Buffer.alloc(0) }) => {\n  checkInput(size, iv, tag)\n\n  const keySize = size / 8\n  const key = keyObject.export()\n  const encKey = key.slice(keySize)\n  const macKey = key.slice(0, keySize)\n\n  const macData = Buffer.concat([aad, iv, ciphertext, uint64be(aad.length * 8)])\n  const expectedTag = sign({ [KEYOBJECT]: macKey }, macData, tag).slice(0, keySize)\n  const macCheckPassed = timingSafeEqual(tag, expectedTag)\n\n  if (!macCheckPassed) {\n    throw new JWEDecryptionFailed()\n  }\n\n  let cleartext\n  try {\n    const cipher = createDecipheriv(`aes-${size}-cbc`, encKey, iv)\n    cleartext = Buffer.concat([cipher.update(ciphertext), cipher.final()])\n  } catch (err) {}\n\n  if (!cleartext) {\n    throw new JWEDecryptionFailed()\n  }\n\n  return cleartext\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['A128CBC-HS256', 'A192CBC-HS384', 'A256CBC-HS512'].forEach((jwaAlg) => {\n    const size = parseInt(jwaAlg.substr(1, 3), 10)\n    const sign = JWA.sign.get(`HS${size * 2}`)\n    if (getCiphers().includes(`aes-${size}-cbc`)) {\n      JWA.encrypt.set(jwaAlg, encrypt.bind(undefined, size, sign))\n      JWA.decrypt.set(jwaAlg, decrypt.bind(undefined, size, sign))\n      JWK.oct.encrypt[jwaAlg] = JWK.oct.decrypt[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.length / 2 === size\n    }\n  })\n}\n", "const { createCipheriv, createDecipheriv, getCiphers } = require('crypto')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst { JWEInvalid, JWEDecryptionFailed } = require('../errors')\nconst { asInput } = require('../help/key_object')\n\nconst checkInput = function (size, iv, tag) {\n  if (iv.length !== 12) {\n    throw new JWEInvalid('invalid iv')\n  }\n  if (arguments.length === 3) {\n    if (tag.length !== 16) {\n      throw new JWEInvalid('invalid tag')\n    }\n  }\n}\n\nconst encrypt = (size, { [KEYOBJECT]: keyObject }, cleartext, { iv, aad = Buffer.alloc(0) }) => {\n  const key = asInput(keyObject, false)\n  checkInput(size, iv)\n\n  const cipher = createCipheriv(`aes-${size}-gcm`, key, iv, { authTagLength: 16 })\n  cipher.setAAD(aad)\n\n  const ciphertext = Buffer.concat([cipher.update(cleartext), cipher.final()])\n  const tag = cipher.getAuthTag()\n\n  return { ciphertext, tag }\n}\n\nconst decrypt = (size, { [KEYOBJECT]: keyObject }, ciphertext, { iv, tag = Buffer.alloc(0), aad = Buffer.alloc(0) }) => {\n  const key = asInput(keyObject, false)\n  checkInput(size, iv, tag)\n\n  try {\n    const cipher = createDecipheriv(`aes-${size}-gcm`, key, iv, { authTagLength: 16 })\n    cipher.setAuthTag(tag)\n    cipher.setAAD(aad)\n\n    return Buffer.concat([cipher.update(ciphertext), cipher.final()])\n  } catch (err) {\n    throw new JWEDecryptionFailed()\n  }\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['A128GCM', 'A192GCM', 'A256GCM'].forEach((jwaAlg) => {\n    const size = parseInt(jwaAlg.substr(1, 3), 10)\n    if (getCiphers().includes(`aes-${size}-gcm`)) {\n      JWA.encrypt.set(jwaAlg, encrypt.bind(undefined, size))\n      JWA.decrypt.set(jwaAlg, decrypt.bind(undefined, size))\n      JWK.oct.encrypt[jwaAlg] = JWK.oct.decrypt[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.length === size\n    }\n  })\n}\n", "const { publicEncrypt, privateDecrypt, constants } = require('crypto')\n\nconst { oaepHashSupported } = require('../help/runtime_support')\nconst { KEYOBJECT } = require('../help/consts')\nconst { asInput } = require('../help/key_object')\n\nconst resolvePadding = (alg) => {\n  switch (alg) {\n    case 'RSA-OAEP':\n    case 'RSA-OAEP-256':\n    case 'RSA-OAEP-384':\n    case 'RSA-OAEP-512':\n      return constants.RSA_PKCS1_OAEP_PADDING\n    case 'RSA1_5':\n      return constants.RSA_PKCS1_PADDING\n  }\n}\n\nconst resolveOaepHash = (alg) => {\n  switch (alg) {\n    case 'RSA-OAEP':\n      return 'sha1'\n    case 'RSA-OAEP-256':\n      return 'sha256'\n    case 'RSA-OAEP-384':\n      return 'sha384'\n    case 'RSA-OAEP-512':\n      return 'sha512'\n    default:\n      return undefined\n  }\n}\n\nconst wrapKey = (padding, oaepHash, { [KEYOBJECT]: keyObject }, payload) => {\n  const key = asInput(keyObject, true)\n  return { wrapped: publicEncrypt({ key, oaepHash, padding }, payload) }\n}\n\nconst unwrapKey = (padding, oaepHash, { [KEYOBJECT]: keyObject }, payload) => {\n  const key = asInput(keyObject, false)\n  return privateDecrypt({ key, oaepHash, padding }, payload)\n}\n\nconst LENGTHS = {\n  RSA1_5: 0,\n  'RSA-OAEP': 592,\n  'RSA-OAEP-256': 784,\n  'RSA-OAEP-384': 1040,\n  'RSA-OAEP-512': 1296\n}\n\nmodule.exports = (JWA, JWK) => {\n  const algs = ['RSA-OAEP', 'RSA1_5']\n\n  if (oaepHashSupported) {\n    algs.splice(1, 0, 'RSA-OAEP-256', 'RSA-OAEP-384', 'RSA-OAEP-512')\n  }\n\n  algs.forEach((jwaAlg) => {\n    const padding = resolvePadding(jwaAlg)\n    const oaepHash = resolveOaepHash(jwaAlg)\n    JWA.keyManagementEncrypt.set(jwaAlg, wrapKey.bind(undefined, padding, oaepHash))\n    JWA.keyManagementDecrypt.set(jwaAlg, unwrapKey.bind(undefined, padding, oaepHash))\n    JWK.RSA.wrapKey[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.length >= LENGTHS[jwaAlg]\n    JWK.RSA.unwrapKey[jwaAlg] = key => key.private && (key.use === 'enc' || key.use === undefined) && key.length >= LENGTHS[jwaAlg]\n  })\n}\n", "const { createCipheriv, createDecipheriv, getCiphers } = require('crypto')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst { asInput } = require('../help/key_object')\n\nconst checkInput = (data) => {\n  if (data !== undefined && data.length % 8 !== 0) {\n    throw new Error('invalid data length')\n  }\n}\n\nconst wrapKey = (alg, { [KEYOBJECT]: keyObject }, payload) => {\n  const key = asInput(keyObject, false)\n  const cipher = createCipheriv(alg, key, Buffer.alloc(8, 'a6', 'hex'))\n\n  return { wrapped: Buffer.concat([cipher.update(payload), cipher.final()]) }\n}\n\nconst unwrapKey = (alg, { [KEYOBJECT]: keyObject }, payload) => {\n  const key = asInput(keyObject, false)\n  checkInput(payload)\n  const cipher = createDecipheriv(alg, key, Buffer.alloc(8, 'a6', 'hex'))\n\n  return Buffer.concat([cipher.update(payload), cipher.final()])\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['A128KW', 'A192KW', 'A256KW'].forEach((jwaAlg) => {\n    const size = parseInt(jwaAlg.substr(1, 3), 10)\n    const alg = `aes${size}-wrap`\n    if (getCiphers().includes(alg)) {\n      JWA.keyManagementEncrypt.set(jwaAlg, wrapKey.bind(undefined, alg))\n      JWA.keyManagementDecrypt.set(jwaAlg, unwrapKey.bind(undefined, alg))\n      JWK.oct.wrapKey[jwaAlg] = JWK.oct.unwrapKey[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.length === size\n    }\n  })\n}\n", "const generateIV = require('../help/generate_iv')\nconst base64url = require('../help/base64url')\n\nmodule.exports = (JWA, JWK) => {\n  ['A128GCMKW', 'A192GCMKW', 'A256GCMKW'].forEach((jwaAlg) => {\n    const encAlg = jwaAlg.substr(0, 7)\n    const size = parseInt(jwaAlg.substr(1, 3), 10)\n    const encrypt = JWA.encrypt.get(encAlg)\n    const decrypt = JWA.decrypt.get(encAlg)\n\n    if (encrypt && decrypt) {\n      JWA.keyManagementEncrypt.set(jwaAlg, (key, payload) => {\n        const iv = generateIV(jwaAlg)\n        const { ciphertext, tag } = encrypt(key, payload, { iv })\n        return {\n          wrapped: ciphertext,\n          header: { tag: base64url.encodeBuffer(tag), iv: base64url.encodeBuffer(iv) }\n        }\n      })\n      JWA.keyManagementDecrypt.set(jwaAlg, decrypt)\n      JWK.oct.wrapKey[jwaAlg] = JWK.oct.unwrapKey[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.length === size\n    }\n  })\n}\n", "const { pbkdf2Sync: pbkdf2, randomBytes } = require('crypto')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst base64url = require('../help/base64url')\n\nconst SALT_LENGTH = 16\nconst NULL_BUFFER = Buffer.alloc(1, 0)\n\nconst concatSalt = (alg, p2s) => {\n  return Buffer.concat([\n    Buffer.from(alg, 'utf8'),\n    NULL_BUFFER,\n    p2s\n  ])\n}\n\nconst wrapKey = (keylen, sha, concat, wrap, { [KEYOBJECT]: keyObject }, payload) => {\n  // Note that if password-based encryption is used for multiple\n  // recipients, it is expected that each recipient use different values\n  // for the PBES2 parameters \"p2s\" and \"p2c\".\n  // here we generate p2c between 2048 and 4096 and random p2s\n  const p2c = Math.floor((Math.random() * 2049) + 2048)\n  const p2s = randomBytes(SALT_LENGTH)\n  const salt = concat(p2s)\n\n  const derivedKey = pbkdf2(keyObject.export(), salt, p2c, keylen, sha)\n\n  const result = wrap({ [KEYOBJECT]: derivedKey }, payload)\n  result.header = result.header || {}\n  Object.assign(result.header, { p2c, p2s: base64url.encodeBuffer(p2s) })\n\n  return result\n}\n\nconst unwrapKey = (keylen, sha, concat, unwrap, { [KEYOBJECT]: keyObject }, payload, header) => {\n  const { p2s, p2c } = header\n  const salt = concat(p2s)\n  const derivedKey = pbkdf2(keyObject.export(), salt, p2c, keylen, sha)\n  return unwrap({ [KEYOBJECT]: derivedKey }, payload, header)\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['PBES2-HS256+A128KW', 'PBES2-HS384+A192KW', 'PBES2-HS512+A256KW'].forEach((jwaAlg) => {\n    const kw = jwaAlg.substr(-6)\n    const kwWrap = JWA.keyManagementEncrypt.get(kw)\n    const kwUnwrap = JWA.keyManagementDecrypt.get(kw)\n    const keylen = parseInt(jwaAlg.substr(13, 3), 10) / 8\n    const sha = `sha${jwaAlg.substr(8, 3)}`\n\n    if (kwWrap && kwUnwrap) {\n      JWA.keyManagementEncrypt.set(jwaAlg, wrapKey.bind(undefined, keylen, sha, concatSalt.bind(undefined, jwaAlg), kwWrap))\n      JWA.keyManagementDecrypt.set(jwaAlg, unwrapKey.bind(undefined, keylen, sha, concatSalt.bind(undefined, jwaAlg), kwUnwrap))\n      JWK.oct.deriveKey[jwaAlg] = key => key.use === 'enc' || key.use === undefined\n    }\n  })\n}\n", "const { improvedDH } = require('../../help/runtime_support')\n\nif (improvedDH) {\n  const { diffieHellman } = require('crypto')\n\n  const { KeyObject } = require('../../help/key_object')\n  const importKey = require('../../jwk/import')\n\n  module.exports = ({ keyObject: privateKey }, publicKey) => {\n    if (!(publicKey instanceof KeyObject)) {\n      ({ keyObject: publicKey } = importKey(publicKey))\n    }\n\n    return diffieHellman({ privateKey, publicKey })\n  }\n} else {\n  const { createECDH, constants: { POINT_CONVERSION_UNCOMPRESSED } } = require('crypto')\n\n  const base64url = require('../../help/base64url')\n\n  const crvToCurve = (crv) => {\n    switch (crv) {\n      case 'P-256':\n        return 'prime256v1'\n      case 'P-384':\n        return 'secp384r1'\n      case 'P-521':\n        return 'secp521r1'\n    }\n  }\n\n  const UNCOMPRESSED = Buffer.alloc(1, POINT_CONVERSION_UNCOMPRESSED)\n  const pubToBuffer = (x, y) => Buffer.concat([UNCOMPRESSED, base64url.decodeToBuffer(x), base64url.decodeToBuffer(y)])\n\n  module.exports = ({ crv, d }, { x, y }) => {\n    const curve = crvToCurve(crv)\n    const exchange = createECDH(curve)\n\n    exchange.setPrivateKey(base64url.decodeToBuffer(d))\n\n    return exchange.computeSecret(pubToBuffer(x, y))\n  }\n}\n", "const { createHash } = require('crypto')\nconst ecdhComputeSecret = require('./compute_secret')\n\nconst concat = (key, length, value) => {\n  const iterations = Math.ceil(length / 32)\n  let res\n\n  for (let iter = 1; iter <= iterations; iter++) {\n    const buf = Buffer.allocUnsafe(4 + key.length + value.length)\n    buf.writeUInt32BE(iter, 0)\n    key.copy(buf, 4)\n    value.copy(buf, 4 + key.length)\n    if (!res) {\n      res = createHash('sha256').update(buf).digest()\n    } else {\n      res = Buffer.concat([res, createHash('sha256').update(buf).digest()])\n    }\n  }\n\n  return res.slice(0, length)\n}\n\nconst uint32be = (value, buf = Buffer.allocUnsafe(4)) => {\n  buf.writeUInt32BE(value)\n  return buf\n}\n\nconst lengthAndInput = input => Buffer.concat([uint32be(input.length), input])\n\nmodule.exports = (alg, keyLen, privKey, pubKey, { apu = Buffer.alloc(0), apv = Buffer.alloc(0) } = {}, computeSecret = ecdhComputeSecret) => {\n  const value = Buffer.concat([\n    lengthAndInput(Buffer.from(alg)),\n    lengthAndInput(apu),\n    lengthAndInput(apv),\n    uint32be(keyLen)\n  ])\n\n  const sharedSecret = computeSecret(privKey, pubKey)\n  return concat(sharedSecret, keyLen / 8, value)\n}\n", "const { improvedDH } = require('../../help/runtime_support')\nconst { KEYLENGTHS } = require('../../registry')\nconst { generateSync } = require('../../jwk/generate')\n\nconst derive = require('./derive')\n\nconst wrapKey = (key, payload, { enc }) => {\n  const epk = generateSync(key.kty, key.crv)\n\n  const derivedKey = derive(enc, KEYLENGTHS.get(enc), epk, key)\n\n  return {\n    wrapped: derivedKey,\n    header: { epk: { kty: key.kty, crv: key.crv, x: epk.x, y: epk.y } }\n  }\n}\n\nconst unwrapKey = (key, payload, header) => {\n  const { enc, epk } = header\n  return derive(enc, KEYLENGTHS.get(enc), key, epk, header)\n}\n\nmodule.exports = (JWA, JWK) => {\n  JWA.keyManagementEncrypt.set('ECDH-ES', wrapKey)\n  JWA.keyManagementDecrypt.set('ECDH-ES', unwrapKey)\n  JWK.EC.deriveKey['ECDH-ES'] = key => (key.use === 'enc' || key.use === undefined) && key.crv !== 'secp256k1'\n\n  if (improvedDH) {\n    JWK.OKP.deriveKey['ECDH-ES'] = key => (key.use === 'enc' || key.use === undefined) && key.keyObject.asymmetricKeyType.startsWith('x')\n  }\n}\n", "const { improvedDH } = require('../../help/runtime_support')\nconst { KEYOBJECT } = require('../../help/consts')\nconst { generateSync } = require('../../jwk/generate')\nconst { ECDH_DERIVE_LENGTHS } = require('../../registry')\n\nconst derive = require('./derive')\n\nconst wrapKey = (wrap, derive, key, payload) => {\n  const epk = generateSync(key.kty, key.crv)\n\n  const derivedKey = derive(epk, key, payload)\n\n  const result = wrap({ [KEYOBJECT]: derivedKey }, payload)\n  result.header = result.header || {}\n  Object.assign(result.header, { epk: { kty: key.kty, crv: key.crv, x: epk.x, y: epk.y } })\n\n  return result\n}\n\nconst unwrapKey = (unwrap, derive, key, payload, header) => {\n  const { epk } = header\n  const derivedKey = derive(key, epk, header)\n\n  return unwrap({ [KEYOBJECT]: derivedKey }, payload, header)\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['ECDH-ES+A128KW', 'ECDH-ES+A192KW', 'ECDH-ES+A256KW'].forEach((jwaAlg) => {\n    const kw = jwaAlg.substr(-6)\n    const kwWrap = JWA.keyManagementEncrypt.get(kw)\n    const kwUnwrap = JWA.keyManagementDecrypt.get(kw)\n    const keylen = parseInt(jwaAlg.substr(9, 3), 10)\n    ECDH_DERIVE_LENGTHS.set(jwaAlg, keylen)\n\n    if (kwWrap && kwUnwrap) {\n      JWA.keyManagementEncrypt.set(jwaAlg, wrapKey.bind(undefined, kwWrap, derive.bind(undefined, jwaAlg, keylen)))\n      JWA.keyManagementDecrypt.set(jwaAlg, unwrapKey.bind(undefined, kwUnwrap, derive.bind(undefined, jwaAlg, keylen)))\n      JWK.EC.deriveKey[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.crv !== 'secp256k1'\n\n      if (improvedDH) {\n        JWK.OKP.deriveKey[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.keyObject.asymmetricKeyType.startsWith('x')\n      }\n    }\n  })\n}\nmodule.exports.wrapKey = wrapKey\nmodule.exports.unwrapKey = unwrapKey\n", "const { JWKKeySupport, JOSENotSupported } = require('../errors')\nconst { KEY_MANAGEMENT_ENCRYPT, KEY_MANAGEMENT_DECRYPT } = require('../help/consts')\n\nconst { JWA, JWK } = require('../registry')\n\n// sign, verify\nrequire('./hmac')(JWA, JWK)\nrequire('./ecdsa')(JWA, JWK)\nrequire('./eddsa')(JWA, JWK)\nrequire('./rsassa_pss')(JWA, JWK)\nrequire('./rsassa')(JWA, JWK)\nrequire('./none')(JWA)\n\n// encrypt, decrypt\nrequire('./aes_cbc_hmac_sha2')(JWA, JWK)\nrequire('./aes_gcm')(JWA, JWK)\n\n// wrapKey, unwrapKey\nrequire('./rsaes')(JWA, JWK)\nrequire('./aes_kw')(JWA, JWK)\nrequire('./aes_gcm_kw')(JWA, JWK)\n\n// deriveKey\nrequire('./pbes2')(JWA, JWK)\nrequire('./ecdh/dir')(JWA, JWK)\nrequire('./ecdh/kw')(JWA, JWK)\n\nconst check = (key, op, alg) => {\n  const cache = `_${op}_${alg}`\n\n  let label\n  let keyOp\n  if (op === 'keyManagementEncrypt') {\n    label = 'key management (encryption)'\n    keyOp = KEY_MANAGEMENT_ENCRYPT\n  } else if (op === 'keyManagementDecrypt') {\n    label = 'key management (decryption)'\n    keyOp = KEY_MANAGEMENT_DECRYPT\n  }\n\n  if (cache in key) {\n    if (key[cache]) {\n      return\n    }\n    throw new JWKKeySupport(`the key does not support ${alg} ${label || op} algorithm`)\n  }\n\n  let value = true\n  if (!JWA[op].has(alg)) {\n    throw new JOSENotSupported(`unsupported ${label || op} alg: ${alg}`)\n  } else if (!key.algorithms(keyOp).has(alg)) {\n    value = false\n  }\n\n  Object.defineProperty(key, cache, { value, enumerable: false })\n\n  if (!value) {\n    return check(key, op, alg)\n  }\n}\n\nmodule.exports = {\n  check,\n  sign: (alg, key, payload) => {\n    check(key, 'sign', alg)\n    return JWA.sign.get(alg)(key, payload)\n  },\n  verify: (alg, key, payload, signature) => {\n    check(key, 'verify', alg)\n    return JWA.verify.get(alg)(key, payload, signature)\n  },\n  keyManagementEncrypt: (alg, key, payload, opts) => {\n    check(key, 'keyManagementEncrypt', alg)\n    return JWA.keyManagementEncrypt.get(alg)(key, payload, opts)\n  },\n  keyManagementDecrypt: (alg, key, payload, opts) => {\n    check(key, 'keyManagementDecrypt', alg)\n    return JWA.keyManagementDecrypt.get(alg)(key, payload, opts)\n  },\n  encrypt: (alg, key, cleartext, opts) => {\n    check(key, 'encrypt', alg)\n    return JWA.encrypt.get(alg)(key, cleartext, opts)\n  },\n  decrypt: (alg, key, ciphertext, opts) => {\n    check(key, 'decrypt', alg)\n    return JWA.decrypt.get(alg)(key, ciphertext, opts)\n  }\n}\n", "const { JOSECritNotUnderstood, JWSInvalid } = require('../errors')\n\nconst DEFINED = new Set([\n  'alg', 'jku', 'jwk', 'kid', 'x5u', 'x5c', 'x5t', 'x5t#S256', 'typ', 'cty',\n  'crit', 'enc', 'zip', 'epk', 'apu', 'apv', 'iv', 'tag', 'p2s', 'p2c'\n])\n\nmodule.exports = function validateCrit (Err, protectedHeader, unprotectedHeader, understood) {\n  if (protectedHeader && 'crit' in protectedHeader) {\n    if (\n      !Array.isArray(protectedHeader.crit) ||\n      protectedHeader.crit.length === 0 ||\n      protectedHeader.crit.some(s => typeof s !== 'string' || !s)\n    ) {\n      throw new Err('\"crit\" Header Parameter MUST be an array of non-empty strings when present')\n    }\n    const whitelisted = new Set(understood)\n    const combined = { ...protectedHeader, ...unprotectedHeader }\n    protectedHeader.crit.forEach((parameter) => {\n      if (DEFINED.has(parameter)) {\n        throw new Err(`The critical list contains a non-extension Header Parameter ${parameter}`)\n      }\n      if (!whitelisted.has(parameter)) {\n        throw new JOSECritNotUnderstood(`critical \"${parameter}\" is not understood`)\n      }\n      if (parameter === 'b64') {\n        if (!('b64' in protectedHeader)) {\n          throw new JWSInvalid('\"b64\" critical parameter must be integrity protected')\n        }\n        if (typeof protectedHeader.b64 !== 'boolean') {\n          throw new JWSInvalid('\"b64\" critical parameter must be a boolean')\n        }\n      } else if (!(parameter in combined)) {\n        throw new Err(`critical parameter \"${parameter}\" is missing`)\n      }\n    })\n  }\n  if (unprotectedHeader && 'crit' in unprotectedHeader) {\n    throw new Err('\"crit\" Header Parameter MUST be integrity protected when present')\n  }\n}\n", "const isObject = require('../help/is_object')\nlet validateCrit = require('../help/validate_crit')\n\nconst { JWEInvalid } = require('../errors')\n\nvalidateCrit = validateCrit.bind(undefined, JWEInvalid)\n\nconst compactSerializer = (final, [recipient]) => {\n  return `${final.protected}.${recipient.encrypted_key}.${final.iv}.${final.ciphertext}.${final.tag}`\n}\ncompactSerializer.validate = (protectedHeader, unprotectedHeader, aad, { 0: { header }, length }) => {\n  if (length !== 1 || aad || unprotectedHeader || header) {\n    throw new JWEInvalid('JWE Compact Serialization doesn\\'t support multiple recipients, JWE unprotected headers or AAD')\n  }\n  validateCrit(protectedHeader, unprotectedHeader, protectedHeader ? protectedHeader.crit : undefined)\n}\n\nconst flattenedSerializer = (final, [recipient]) => {\n  const { header, encrypted_key: encryptedKey } = recipient\n\n  return {\n    ...(final.protected ? { protected: final.protected } : undefined),\n    ...(final.unprotected ? { unprotected: final.unprotected } : undefined),\n    ...(header ? { header } : undefined),\n    ...(encryptedKey ? { encrypted_key: encryptedKey } : undefined),\n    ...(final.aad ? { aad: final.aad } : undefined),\n    iv: final.iv,\n    ciphertext: final.ciphertext,\n    tag: final.tag\n  }\n}\nflattenedSerializer.validate = (protectedHeader, unprotectedHeader, aad, { 0: { header }, length }) => {\n  if (length !== 1) {\n    throw new JWEInvalid('Flattened JWE JSON Serialization doesn\\'t support multiple recipients')\n  }\n  validateCrit(protectedHeader, { ...unprotectedHeader, ...header }, protectedHeader ? protectedHeader.crit : undefined)\n}\n\nconst generalSerializer = (final, recipients) => {\n  const result = {\n    ...(final.protected ? { protected: final.protected } : undefined),\n    ...(final.unprotected ? { unprotected: final.unprotected } : undefined),\n    recipients: recipients.map(({ header, encrypted_key: encryptedKey, generatedHeader }) => {\n      if (!header && !encryptedKey && !generatedHeader) {\n        return false\n      }\n\n      return {\n        ...(header || generatedHeader ? { header: { ...header, ...generatedHeader } } : undefined),\n        ...(encryptedKey ? { encrypted_key: encryptedKey } : undefined)\n      }\n    }).filter(Boolean),\n    ...(final.aad ? { aad: final.aad } : undefined),\n    iv: final.iv,\n    ciphertext: final.ciphertext,\n    tag: final.tag\n  }\n\n  if (!result.recipients.length) {\n    delete result.recipients\n  }\n\n  return result\n}\ngeneralSerializer.validate = (protectedHeader, unprotectedHeader, aad, recipients) => {\n  recipients.forEach(({ header }) => {\n    validateCrit(protectedHeader, { ...header, ...unprotectedHeader }, protectedHeader ? protectedHeader.crit : undefined)\n  })\n}\n\nconst isJSON = (input) => {\n  return isObject(input) &&\n    typeof input.ciphertext === 'string' &&\n    typeof input.iv === 'string' &&\n    typeof input.tag === 'string' &&\n    (input.unprotected === undefined || isObject(input.unprotected)) &&\n    (input.protected === undefined || typeof input.protected === 'string') &&\n    (input.aad === undefined || typeof input.aad === 'string')\n}\n\nconst isSingleRecipient = (input) => {\n  return (input.encrypted_key === undefined || typeof input.encrypted_key === 'string') &&\n    (input.header === undefined || isObject(input.header))\n}\n\nconst isValidRecipient = (recipient) => {\n  return isObject(recipient) && typeof recipient.encrypted_key === 'string' && (recipient.header === undefined || isObject(recipient.header))\n}\n\nconst isMultiRecipient = (input) => {\n  if (Array.isArray(input.recipients) && input.recipients.every(isValidRecipient)) {\n    return true\n  }\n\n  return false\n}\n\nconst detect = (input) => {\n  if (typeof input === 'string' && input.split('.').length === 5) {\n    return 'compact'\n  }\n\n  if (isJSON(input)) {\n    if (isMultiRecipient(input)) {\n      return 'general'\n    }\n\n    if (isSingleRecipient(input)) {\n      return 'flattened'\n    }\n  }\n\n  throw new JWEInvalid('JWE malformed or invalid serialization')\n}\n\nmodule.exports = {\n  compact: compactSerializer,\n  flattened: flattenedSerializer,\n  general: generalSerializer,\n  detect\n}\n", "const { randomBytes } = require('crypto')\n\nconst { createSecretKey } = require('../help/key_object')\nconst { KEYLENGTHS } = require('../registry')\nconst Key = require('../jwk/key/oct')\n\nmodule.exports = (alg) => {\n  const keyLength = KEYLENGTHS.get(alg)\n\n  if (!keyLength) {\n    return new Key({ type: 'secret' })\n  }\n\n  return new Key(createSecretKey(randomBytes(keyLength / 8)), { use: 'enc', alg })\n}\n", "module.exports = (a = {}, b = {}) => {\n  const keysA = Object.keys(a)\n  const keysB = new Set(Object.keys(b))\n  return !keysA.some((ka) => keysB.has(ka))\n}\n", "const isDisjoint = require('../help/is_disjoint')\nconst base64url = require('../help/base64url')\nlet validateCrit = require('../help/validate_crit')\nconst { JWEInvalid, JOSENotSupported } = require('../errors')\n\nvalidateCrit = validateCrit.bind(undefined, JWEInvalid)\n\nmodule.exports = (prot, unprotected, recipients, checkAlgorithms, crit) => {\n  if (typeof prot === 'string') {\n    try {\n      prot = base64url.JSON.decode(prot)\n    } catch (err) {\n      throw new JWEInvalid('could not parse JWE protected header')\n    }\n  }\n\n  let alg = []\n  const enc = new Set()\n  if (!isDisjoint(prot, unprotected) || !recipients.every(({ header }) => {\n    if (typeof header === 'object') {\n      alg.push(header.alg)\n      enc.add(header.enc)\n    }\n    const combined = { ...unprotected, ...header }\n    validateCrit(prot, combined, crit)\n    if ('zip' in combined) {\n      throw new JWEInvalid('\"zip\" Header Parameter MUST be integrity protected')\n    } else if (prot && 'zip' in prot && prot.zip !== 'DEF') {\n      throw new JOSENotSupported('only \"DEF\" compression algorithm is supported')\n    }\n    return isDisjoint(header, prot) && isDisjoint(header, unprotected)\n  })) {\n    throw new JWEInvalid('JWE Shared Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint')\n  }\n\n  if (typeof prot === 'object') {\n    alg.push(prot.alg)\n    enc.add(prot.enc)\n  }\n  if (typeof unprotected === 'object') {\n    alg.push(unprotected.alg)\n    enc.add(unprotected.enc)\n  }\n\n  alg = alg.filter(Boolean)\n  enc.delete(undefined)\n\n  if (recipients.length !== 1) {\n    if (alg.includes('dir') || alg.includes('ECDH-ES')) {\n      throw new JWEInvalid('dir and ECDH-ES alg may only be used with a single recipient')\n    }\n  }\n\n  if (checkAlgorithms) {\n    if (alg.length !== recipients.length) {\n      throw new JWEInvalid('missing Key Management algorithm')\n    }\n    if (enc.size === 0) {\n      throw new JWEInvalid('missing Content Encryption algorithm')\n    } else if (enc.size !== 1) {\n      throw new JWEInvalid('there must only be one Content Encryption algorithm')\n    }\n  } else {\n    if (enc.size > 1) {\n      throw new JWEInvalid('there must only be one Content Encryption algorithm')\n    }\n  }\n\n  return [...enc][0]\n}\n", "const { deflateRawSync } = require('zlib')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst generateIV = require('../help/generate_iv')\nconst base64url = require('../help/base64url')\nconst getKey = require('../help/get_key')\nconst isObject = require('../help/is_object')\nconst { createSecretKey } = require('../help/key_object')\nconst deepClone = require('../help/deep_clone')\nconst importKey = require('../jwk/import')\nconst { JWEInvalid } = require('../errors')\nconst { check, keyManagementEncrypt, encrypt } = require('../jwa')\n\nconst serializers = require('./serializers')\nconst generateCEK = require('./generate_cek')\nconst validateHeaders = require('./validate_headers')\n\nconst PROCESS_RECIPIENT = Symbol('PROCESS_RECIPIENT')\n\nclass Encrypt {\n  constructor (cleartext, protectedHeader, aad, unprotectedHeader) {\n    if (!Buffer.isBuffer(cleartext) && typeof cleartext !== 'string') {\n      throw new TypeError('cleartext argument must be a Buffer or a string')\n    }\n    cleartext = Buffer.from(cleartext)\n\n    if (aad !== undefined && !Buffer.isBuffer(aad) && typeof aad !== 'string') {\n      throw new TypeError('aad argument must be a Buffer or a string when provided')\n    }\n    aad = aad ? Buffer.from(aad) : undefined\n\n    if (protectedHeader !== undefined && !isObject(protectedHeader)) {\n      throw new TypeError('protectedHeader argument must be a plain object when provided')\n    }\n\n    if (unprotectedHeader !== undefined && !isObject(unprotectedHeader)) {\n      throw new TypeError('unprotectedHeader argument must be a plain object when provided')\n    }\n\n    this._recipients = []\n    this._cleartext = cleartext\n    this._aad = aad\n    this._unprotected = unprotectedHeader ? deepClone(unprotectedHeader) : undefined\n    this._protected = protectedHeader ? deepClone(protectedHeader) : undefined\n  }\n\n  /*\n   * @public\n   */\n  recipient (key, header) {\n    key = getKey(key)\n\n    if (header !== undefined && !isObject(header)) {\n      throw new TypeError('header argument must be a plain object when provided')\n    }\n\n    this._recipients.push({\n      key,\n      header: header ? deepClone(header) : undefined\n    })\n\n    return this\n  }\n\n  /*\n   * @private\n   */\n  [PROCESS_RECIPIENT] (recipient) {\n    const unprotectedHeader = this._unprotected\n    const protectedHeader = this._protected\n    const { length: recipientCount } = this._recipients\n\n    const jweHeader = {\n      ...protectedHeader,\n      ...unprotectedHeader,\n      ...recipient.header\n    }\n    const { key } = recipient\n\n    const enc = jweHeader.enc\n    let alg = jweHeader.alg\n\n    if (key.use === 'sig') {\n      throw new TypeError('a key with \"use\":\"sig\" is not usable for encryption')\n    }\n\n    if (alg === 'dir') {\n      check(key, 'encrypt', enc)\n    } else if (alg) {\n      check(key, 'keyManagementEncrypt', alg)\n    } else {\n      alg = key.alg || [...key.algorithms('wrapKey')][0] || [...key.algorithms('deriveKey')][0]\n\n      if (alg === 'ECDH-ES' && recipientCount !== 1) {\n        alg = [...key.algorithms('deriveKey')][1]\n      }\n\n      if (!alg) {\n        throw new JWEInvalid('could not resolve a usable \"alg\" for a recipient')\n      }\n\n      if (recipientCount === 1) {\n        if (protectedHeader) {\n          protectedHeader.alg = alg\n        } else {\n          this._protected = { alg }\n        }\n      } else {\n        if (recipient.header) {\n          recipient.header.alg = alg\n        } else {\n          recipient.header = { alg }\n        }\n      }\n    }\n\n    let wrapped\n    let generatedHeader\n\n    if (key.kty === 'oct' && alg === 'dir') {\n      this._cek = importKey(key[KEYOBJECT], { use: 'enc', alg: enc })\n    } else {\n      check(this._cek, 'encrypt', enc)\n      ;({ wrapped, header: generatedHeader } = keyManagementEncrypt(alg, key, this._cek[KEYOBJECT].export(), { enc, alg }))\n      if (alg === 'ECDH-ES') {\n        this._cek = importKey(createSecretKey(wrapped), { use: 'enc', alg: enc })\n      }\n    }\n\n    if (alg === 'dir' || alg === 'ECDH-ES') {\n      recipient.encrypted_key = ''\n    } else {\n      recipient.encrypted_key = base64url.encodeBuffer(wrapped)\n    }\n\n    if (generatedHeader) {\n      recipient.generatedHeader = generatedHeader\n    }\n  }\n\n  /*\n   * @public\n   */\n  encrypt (serialization) {\n    const serializer = serializers[serialization]\n    if (!serializer) {\n      throw new TypeError('serialization must be one of \"compact\", \"flattened\", \"general\"')\n    }\n\n    if (!this._recipients.length) {\n      throw new JWEInvalid('missing recipients')\n    }\n\n    serializer.validate(this._protected, this._unprotected, this._aad, this._recipients)\n\n    let enc = validateHeaders(this._protected, this._unprotected, this._recipients, false, this._protected ? this._protected.crit : undefined)\n    if (!enc) {\n      enc = 'A128CBC-HS256'\n      if (this._protected) {\n        this._protected.enc = enc\n      } else {\n        this._protected = { enc }\n      }\n    }\n    const final = {}\n    this._cek = generateCEK(enc)\n\n    for (const recipient of this._recipients) {\n      this[PROCESS_RECIPIENT](recipient)\n    }\n\n    const iv = generateIV(enc)\n    final.iv = base64url.encodeBuffer(iv)\n\n    if (this._recipients.length === 1 && this._recipients[0].generatedHeader) {\n      const [{ generatedHeader }] = this._recipients\n      delete this._recipients[0].generatedHeader\n      this._protected = {\n        ...this._protected,\n        ...generatedHeader\n      }\n    }\n\n    if (this._protected) {\n      final.protected = base64url.JSON.encode(this._protected)\n    }\n    final.unprotected = this._unprotected\n\n    let aad\n    if (this._aad) {\n      final.aad = base64url.encode(this._aad)\n      aad = Buffer.concat([\n        Buffer.from(final.protected || ''),\n        Buffer.from('.'),\n        Buffer.from(final.aad)\n      ])\n    } else {\n      aad = Buffer.from(final.protected || '')\n    }\n\n    let cleartext = this._cleartext\n    if (this._protected && 'zip' in this._protected) {\n      cleartext = deflateRawSync(cleartext)\n    }\n\n    const { ciphertext, tag } = encrypt(enc, this._cek, cleartext, { iv, aad })\n    final.tag = base64url.encodeBuffer(tag)\n    final.ciphertext = base64url.encodeBuffer(ciphertext)\n\n    return serializer(final, this._recipients)\n  }\n}\n\nmodule.exports = Encrypt\n", "const KeyStore = require('./keystore')\n\nmodule.exports = KeyStore\n", "const { inflateRawSync } = require('zlib')\n\nconst base64url = require('../help/base64url')\nconst getKey = require('../help/get_key')\nconst { KeyStore } = require('../jwks')\nconst errors = require('../errors')\nconst { check, decrypt, keyManagementDecrypt } = require('../jwa')\nconst JWK = require('../jwk')\n\nconst { createSecretKey } = require('../help/key_object')\nconst generateCEK = require('./generate_cek')\nconst validateHeaders = require('./validate_headers')\nconst { detect: resolveSerialization } = require('./serializers')\n\nconst SINGLE_RECIPIENT = new Set(['compact', 'flattened'])\n\nconst combineHeader = (prot = {}, unprotected = {}, header = {}) => {\n  if (typeof prot === 'string') {\n    prot = base64url.JSON.decode(prot)\n  }\n\n  const p2s = prot.p2s || unprotected.p2s || header.p2s\n  const apu = prot.apu || unprotected.apu || header.apu\n  const apv = prot.apv || unprotected.apv || header.apv\n  const iv = prot.iv || unprotected.iv || header.iv\n  const tag = prot.tag || unprotected.tag || header.tag\n\n  return {\n    ...prot,\n    ...unprotected,\n    ...header,\n    ...(typeof p2s === 'string' ? { p2s: base64url.decodeToBuffer(p2s) } : undefined),\n    ...(typeof apu === 'string' ? { apu: base64url.decodeToBuffer(apu) } : undefined),\n    ...(typeof apv === 'string' ? { apv: base64url.decodeToBuffer(apv) } : undefined),\n    ...(typeof iv === 'string' ? { iv: base64url.decodeToBuffer(iv) } : undefined),\n    ...(typeof tag === 'string' ? { tag: base64url.decodeToBuffer(tag) } : undefined)\n  }\n}\n\nconst validateAlgorithms = (algorithms, option) => {\n  if (algorithms !== undefined && (!Array.isArray(algorithms) || algorithms.some(s => typeof s !== 'string' || !s))) {\n    throw new TypeError(`\"${option}\" option must be an array of non-empty strings`)\n  }\n\n  if (!algorithms) {\n    return undefined\n  }\n\n  return new Set(algorithms)\n}\n\n/*\n * @public\n */\nconst jweDecrypt = (skipValidateHeaders, serialization, jwe, key, { crit = [], complete = false, keyManagementAlgorithms, contentEncryptionAlgorithms, maxPBES2Count = 10000 } = {}) => {\n  key = getKey(key, true)\n\n  keyManagementAlgorithms = validateAlgorithms(keyManagementAlgorithms, 'keyManagementAlgorithms')\n  contentEncryptionAlgorithms = validateAlgorithms(contentEncryptionAlgorithms, 'contentEncryptionAlgorithms')\n\n  if (!Array.isArray(crit) || crit.some(s => typeof s !== 'string' || !s)) {\n    throw new TypeError('\"crit\" option must be an array of non-empty strings')\n  }\n\n  if (!serialization) {\n    serialization = resolveSerialization(jwe)\n  }\n\n  let alg, ciphertext, enc, encryptedKey, iv, opts, prot, tag, unprotected, cek, aad, header\n\n  // treat general format with one recipient as flattened\n  // skips iteration and avoids multi errors in this case\n  if (serialization === 'general' && jwe.recipients.length === 1) {\n    serialization = 'flattened'\n    const { recipients, ...root } = jwe\n    jwe = { ...root, ...recipients[0] }\n  }\n\n  if (SINGLE_RECIPIENT.has(serialization)) {\n    if (serialization === 'compact') { // compact serialization format\n      ([prot, encryptedKey, iv, ciphertext, tag] = jwe.split('.'))\n    } else { // flattened serialization format\n      ({ protected: prot, encrypted_key: encryptedKey, iv, ciphertext, tag, unprotected, aad, header } = jwe)\n    }\n\n    if (!skipValidateHeaders) {\n      validateHeaders(prot, unprotected, [{ header }], true, crit)\n    }\n\n    opts = combineHeader(prot, unprotected, header)\n\n    ;({ alg, enc } = opts)\n\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n      throw new errors.JOSEAlgNotWhitelisted('key management algorithm not whitelisted')\n    }\n\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n      throw new errors.JOSEAlgNotWhitelisted('content encryption algorithm not whitelisted')\n    }\n\n    if (key instanceof KeyStore) {\n      const keystore = key\n      let keys\n      if (opts.alg === 'dir') {\n        keys = keystore.all({ kid: opts.kid, alg: opts.enc, key_ops: ['decrypt'] })\n      } else {\n        keys = keystore.all({ kid: opts.kid, alg: opts.alg, key_ops: ['unwrapKey'] })\n      }\n      switch (keys.length) {\n        case 0:\n          throw new errors.JWKSNoMatchingKey()\n        case 1:\n          // treat the call as if a Key instance was passed in\n          // skips iteration and avoids multi errors in this case\n          key = keys[0]\n          break\n        default: {\n          const errs = []\n          for (const key of keys) {\n            try {\n              return jweDecrypt(true, serialization, jwe, key, {\n                crit,\n                complete,\n                contentEncryptionAlgorithms: contentEncryptionAlgorithms ? [...contentEncryptionAlgorithms] : undefined,\n                keyManagementAlgorithms: keyManagementAlgorithms ? [...keyManagementAlgorithms] : undefined\n              })\n            } catch (err) {\n              errs.push(err)\n              continue\n            }\n          }\n\n          const multi = new errors.JOSEMultiError(errs)\n          if ([...multi].some(e => e instanceof errors.JWEDecryptionFailed)) {\n            throw new errors.JWEDecryptionFailed()\n          }\n          throw multi\n        }\n      }\n    }\n\n    check(key, ...(alg === 'dir' ? ['decrypt', enc] : ['keyManagementDecrypt', alg]))\n\n    if (alg.startsWith('PBES2')) {\n      if (opts && opts.p2c > maxPBES2Count) {\n        throw new errors.JWEInvalid('JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds')\n      }\n    }\n\n    try {\n      if (alg === 'dir') {\n        cek = JWK.asKey(key, { alg: enc, use: 'enc' })\n      } else if (alg === 'ECDH-ES') {\n        const unwrapped = keyManagementDecrypt(alg, key, undefined, opts)\n        cek = JWK.asKey(createSecretKey(unwrapped), { alg: enc, use: 'enc' })\n      } else {\n        const unwrapped = keyManagementDecrypt(alg, key, base64url.decodeToBuffer(encryptedKey), opts)\n        cek = JWK.asKey(createSecretKey(unwrapped), { alg: enc, use: 'enc' })\n      }\n    } catch (err) {\n      // To mitigate the attacks described in RFC 3218, the\n      // recipient MUST NOT distinguish between format, padding, and length\n      // errors of encrypted keys.  It is strongly recommended, in the event\n      // of receiving an improperly formatted key, that the recipient\n      // substitute a randomly generated CEK and proceed to the next step, to\n      // mitigate timing attacks.\n      cek = generateCEK(enc)\n    }\n\n    let adata\n    if (aad) {\n      adata = Buffer.concat([\n        Buffer.from(prot || ''),\n        Buffer.from('.'),\n        Buffer.from(aad)\n      ])\n    } else {\n      adata = Buffer.from(prot || '')\n    }\n\n    try {\n      iv = base64url.decodeToBuffer(iv)\n    } catch (err) {}\n    try {\n      tag = base64url.decodeToBuffer(tag)\n    } catch (err) {}\n\n    let cleartext = decrypt(enc, cek, base64url.decodeToBuffer(ciphertext), { iv, tag, aad: adata })\n\n    if (opts.zip) {\n      cleartext = inflateRawSync(cleartext)\n    }\n\n    if (complete) {\n      const result = { cleartext, key, cek }\n      if (aad) result.aad = aad\n      if (header) result.header = header\n      if (unprotected) result.unprotected = unprotected\n      if (prot) result.protected = base64url.JSON.decode(prot)\n      return result\n    }\n\n    return cleartext\n  }\n\n  validateHeaders(jwe.protected, jwe.unprotected, jwe.recipients.map(({ header }) => ({ header })), true, crit)\n\n  // general serialization format\n  const { recipients, ...root } = jwe\n  const errs = []\n  for (const recipient of recipients) {\n    try {\n      return jweDecrypt(true, 'flattened', { ...root, ...recipient }, key, {\n        crit,\n        complete,\n        contentEncryptionAlgorithms: contentEncryptionAlgorithms ? [...contentEncryptionAlgorithms] : undefined,\n        keyManagementAlgorithms: keyManagementAlgorithms ? [...keyManagementAlgorithms] : undefined\n      })\n    } catch (err) {\n      errs.push(err)\n      continue\n    }\n  }\n\n  const multi = new errors.JOSEMultiError(errs)\n  if ([...multi].some(e => e instanceof errors.JWEDecryptionFailed)) {\n    throw new errors.JWEDecryptionFailed()\n  } else if ([...multi].every(e => e instanceof errors.JWKSNoMatchingKey)) {\n    throw new errors.JWKSNoMatchingKey()\n  }\n  throw multi\n}\n\nmodule.exports = jweDecrypt.bind(undefined, false, undefined)\n", "const Encrypt = require('./encrypt')\nconst decrypt = require('./decrypt')\n\nconst single = (serialization, cleartext, key, protectedHeader, aad, unprotectedHeader) => {\n  return new Encrypt(cleartext, protectedHeader, aad, unprotectedHeader)\n    .recipient(key)\n    .encrypt(serialization)\n}\n\nmodule.exports.Encrypt = Encrypt\nmodule.exports.encrypt = single.bind(undefined, 'compact')\nmodule.exports.encrypt.flattened = single.bind(undefined, 'flattened')\nmodule.exports.encrypt.general = single.bind(undefined, 'general')\n\nmodule.exports.decrypt = decrypt\n", "const isObject = require('../help/is_object')\nlet validateCrit = require('../help/validate_crit')\nconst { JWSInvalid } = require('../errors')\n\nvalidateCrit = validateCrit.bind(undefined, JWSInvalid)\n\nconst compactSerializer = (payload, [recipient]) => {\n  return `${recipient.protected}.${payload}.${recipient.signature}`\n}\ncompactSerializer.validate = (jws, { 0: { unprotectedHeader, protectedHeader }, length }) => {\n  if (length !== 1 || unprotectedHeader) {\n    throw new JWSInvalid('JWS Compact Serialization doesn\\'t support multiple recipients or JWS unprotected headers')\n  }\n  validateCrit(protectedHeader, unprotectedHeader, protectedHeader ? protectedHeader.crit : undefined)\n}\n\nconst flattenedSerializer = (payload, [recipient]) => {\n  const { header, signature, protected: prot } = recipient\n\n  return {\n    payload,\n    ...prot ? { protected: prot } : undefined,\n    ...header ? { header } : undefined,\n    signature\n  }\n}\nflattenedSerializer.validate = (jws, { 0: { unprotectedHeader, protectedHeader }, length }) => {\n  if (length !== 1) {\n    throw new JWSInvalid('Flattened JWS JSON Serialization doesn\\'t support multiple recipients')\n  }\n  validateCrit(protectedHeader, unprotectedHeader, protectedHeader ? protectedHeader.crit : undefined)\n}\n\nconst generalSerializer = (payload, recipients) => {\n  return {\n    payload,\n    signatures: recipients.map(({ header, signature, protected: prot }) => {\n      return {\n        ...prot ? { protected: prot } : undefined,\n        ...header ? { header } : undefined,\n        signature\n      }\n    })\n  }\n}\ngeneralSerializer.validate = (jws, recipients) => {\n  let validateB64 = false\n  recipients.forEach(({ protectedHeader, unprotectedHeader }) => {\n    if (protectedHeader && !validateB64 && 'b64' in protectedHeader) {\n      validateB64 = true\n    }\n    validateCrit(protectedHeader, unprotectedHeader, protectedHeader ? protectedHeader.crit : undefined)\n  })\n\n  if (validateB64) {\n    const values = recipients.map(({ protectedHeader }) => protectedHeader && protectedHeader.b64)\n    if (!values.every((actual, i, [expected]) => actual === expected)) {\n      throw new JWSInvalid('the \"b64\" Header Parameter value MUST be the same for all recipients')\n    }\n  }\n}\n\nconst isJSON = (input) => {\n  return isObject(input) && (typeof input.payload === 'string' || Buffer.isBuffer(input.payload))\n}\n\nconst isValidRecipient = (recipient) => {\n  return isObject(recipient) && typeof recipient.signature === 'string' &&\n    (recipient.header === undefined || isObject(recipient.header)) &&\n    (recipient.protected === undefined || typeof recipient.protected === 'string')\n}\n\nconst isMultiRecipient = (input) => {\n  if (Array.isArray(input.signatures) && input.signatures.every(isValidRecipient)) {\n    return true\n  }\n\n  return false\n}\n\nconst detect = (input) => {\n  if (typeof input === 'string' && input.split('.').length === 3) {\n    return 'compact'\n  }\n\n  if (isJSON(input)) {\n    if (isMultiRecipient(input)) {\n      return 'general'\n    }\n\n    if (isValidRecipient(input)) {\n      return 'flattened'\n    }\n  }\n\n  throw new JWSInvalid('JWS malformed or invalid serialization')\n}\n\nmodule.exports = {\n  compact: compactSerializer,\n  flattened: flattenedSerializer,\n  general: generalSerializer,\n  detect\n}\n", "const base64url = require('../help/base64url')\nconst isDisjoint = require('../help/is_disjoint')\nconst isObject = require('../help/is_object')\nconst deepClone = require('../help/deep_clone')\nconst { JWSInvalid } = require('../errors')\nconst { sign } = require('../jwa')\nconst getKey = require('../help/get_key')\n\nconst serializers = require('./serializers')\n\nconst PROCESS_RECIPIENT = Symbol('PROCESS_RECIPIENT')\n\nclass Sign {\n  constructor (payload) {\n    if (typeof payload === 'string') {\n      payload = base64url.encode(payload)\n    } else if (Buffer.isBuffer(payload)) {\n      payload = base64url.encodeBuffer(payload)\n      this._binary = true\n    } else if (isObject(payload)) {\n      payload = base64url.JSON.encode(payload)\n    } else {\n      throw new TypeError('payload argument must be a Buffer, string or an object')\n    }\n\n    this._payload = payload\n    this._recipients = []\n  }\n\n  /*\n   * @public\n   */\n  recipient (key, protectedHeader, unprotectedHeader) {\n    key = getKey(key)\n\n    if (protectedHeader !== undefined && !isObject(protectedHeader)) {\n      throw new TypeError('protectedHeader argument must be a plain object when provided')\n    }\n\n    if (unprotectedHeader !== undefined && !isObject(unprotectedHeader)) {\n      throw new TypeError('unprotectedHeader argument must be a plain object when provided')\n    }\n\n    if (!isDisjoint(protectedHeader, unprotectedHeader)) {\n      throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint')\n    }\n\n    this._recipients.push({\n      key,\n      protectedHeader: protectedHeader ? deepClone(protectedHeader) : undefined,\n      unprotectedHeader: unprotectedHeader ? deepClone(unprotectedHeader) : undefined\n    })\n\n    return this\n  }\n\n  /*\n   * @private\n   */\n  [PROCESS_RECIPIENT] (recipient, first) {\n    const { key, protectedHeader, unprotectedHeader } = recipient\n\n    if (key.use === 'enc') {\n      throw new TypeError('a key with \"use\":\"enc\" is not usable for signing')\n    }\n\n    const joseHeader = {\n      protected: protectedHeader || {},\n      unprotected: unprotectedHeader || {}\n    }\n\n    let alg = joseHeader.protected.alg || joseHeader.unprotected.alg\n\n    if (!alg) {\n      alg = key.alg || [...key.algorithms('sign')][0]\n      if (recipient.protectedHeader) {\n        joseHeader.protected.alg = recipient.protectedHeader.alg = alg\n      } else {\n        joseHeader.protected = recipient.protectedHeader = { alg }\n      }\n    }\n\n    if (!alg) {\n      throw new JWSInvalid('could not resolve a usable \"alg\" for a recipient')\n    }\n\n    recipient.header = unprotectedHeader\n    recipient.protected = Object.keys(joseHeader.protected).length ? base64url.JSON.encode(joseHeader.protected) : ''\n\n    if (first && joseHeader.protected.crit && joseHeader.protected.crit.includes('b64') && joseHeader.protected.b64 === false) {\n      if (this._binary) {\n        this._payload = base64url.decodeToBuffer(this._payload)\n      } else {\n        this._payload = base64url.decode(this._payload)\n      }\n    }\n\n    const data = Buffer.concat([\n      Buffer.from(recipient.protected || ''),\n      Buffer.from('.'),\n      Buffer.from(this._payload)\n    ])\n\n    recipient.signature = base64url.encodeBuffer(sign(alg, key, data))\n  }\n\n  /*\n   * @public\n   */\n  sign (serialization) {\n    const serializer = serializers[serialization]\n    if (!serializer) {\n      throw new TypeError('serialization must be one of \"compact\", \"flattened\", \"general\"')\n    }\n\n    if (!this._recipients.length) {\n      throw new JWSInvalid('missing recipients')\n    }\n\n    serializer.validate(this, this._recipients)\n\n    this._recipients.forEach((recipient, i) => {\n      this[PROCESS_RECIPIENT](recipient, i === 0)\n    })\n\n    return serializer(this._payload, this._recipients)\n  }\n}\n\nmodule.exports = Sign\n", "const { EOL } = require('os')\n\nconst base64url = require('../help/base64url')\nconst isDisjoint = require('../help/is_disjoint')\nconst isObject = require('../help/is_object')\nlet validateCrit = require('../help/validate_crit')\nconst getKey = require('../help/get_key')\nconst { KeyStore } = require('../jwks')\nconst errors = require('../errors')\nconst { check, verify } = require('../jwa')\nconst JWK = require('../jwk')\n\nconst { detect: resolveSerialization } = require('./serializers')\n\nvalidateCrit = validateCrit.bind(undefined, errors.JWSInvalid)\nconst SINGLE_RECIPIENT = new Set(['compact', 'flattened', 'preparsed'])\n\n/*\n * @public\n */\nconst jwsVerify = (skipDisjointCheck, serialization, jws, key, { crit = [], complete = false, algorithms } = {}) => {\n  key = getKey(key, true)\n\n  if (algorithms !== undefined && (!Array.isArray(algorithms) || algorithms.some(s => typeof s !== 'string' || !s))) {\n    throw new TypeError('\"algorithms\" option must be an array of non-empty strings')\n  } else if (algorithms) {\n    algorithms = new Set(algorithms)\n  }\n\n  if (!Array.isArray(crit) || crit.some(s => typeof s !== 'string' || !s)) {\n    throw new TypeError('\"crit\" option must be an array of non-empty strings')\n  }\n\n  if (!serialization) {\n    serialization = resolveSerialization(jws)\n  }\n\n  let prot // protected header\n  let header // unprotected header\n  let payload\n  let signature\n  let alg\n\n  // treat general format with one recipient as flattened\n  // skips iteration and avoids multi errors in this case\n  if (serialization === 'general' && jws.signatures.length === 1) {\n    serialization = 'flattened'\n    const { signatures, ...root } = jws\n    jws = { ...root, ...signatures[0] }\n  }\n\n  let decoded\n\n  if (SINGLE_RECIPIENT.has(serialization)) {\n    let parsedProt = {}\n\n    switch (serialization) {\n      case 'compact': // compact serialization format\n        ([prot, payload, signature] = jws.split('.'))\n        break\n      case 'flattened': // flattened serialization format\n        ({ protected: prot, payload, signature, header } = jws)\n        break\n      case 'preparsed': { // from the JWT module\n        ({ decoded } = jws);\n        ([prot, payload, signature] = jws.token.split('.'))\n        break\n      }\n    }\n\n    if (!header) {\n      skipDisjointCheck = true\n    }\n\n    if (decoded) {\n      parsedProt = decoded.header\n    } else if (prot) {\n      try {\n        parsedProt = base64url.JSON.decode(prot)\n      } catch (err) {\n        throw new errors.JWSInvalid('could not parse JWS protected header')\n      }\n    } else {\n      skipDisjointCheck = skipDisjointCheck || true\n    }\n\n    if (!skipDisjointCheck && !isDisjoint(parsedProt, header)) {\n      throw new errors.JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint')\n    }\n\n    const combinedHeader = { ...parsedProt, ...header }\n    validateCrit(parsedProt, header, crit)\n\n    alg = parsedProt.alg || (header && header.alg)\n    if (!alg) {\n      throw new errors.JWSInvalid('missing JWS signature algorithm')\n    } else if (algorithms && !algorithms.has(alg)) {\n      throw new errors.JOSEAlgNotWhitelisted('alg not whitelisted')\n    }\n\n    if (key instanceof KeyStore) {\n      const keystore = key\n      const keys = keystore.all({ kid: combinedHeader.kid, alg: combinedHeader.alg, key_ops: ['verify'] })\n      switch (keys.length) {\n        case 0:\n          throw new errors.JWKSNoMatchingKey()\n        case 1:\n          // treat the call as if a Key instance was passed in\n          // skips iteration and avoids multi errors in this case\n          key = keys[0]\n          break\n        default: {\n          const errs = []\n          for (const key of keys) {\n            try {\n              return jwsVerify(true, serialization, jws, key, { crit, complete, algorithms: algorithms ? [...algorithms] : undefined })\n            } catch (err) {\n              errs.push(err)\n              continue\n            }\n          }\n\n          const multi = new errors.JOSEMultiError(errs)\n          if ([...multi].some(e => e instanceof errors.JWSVerificationFailed)) {\n            throw new errors.JWSVerificationFailed()\n          }\n          throw multi\n        }\n      }\n    }\n\n    if (key === JWK.EmbeddedJWK) {\n      if (!isObject(combinedHeader.jwk)) {\n        throw new errors.JWSInvalid('JWS Header Parameter \"jwk\" must be a JSON object')\n      }\n      key = JWK.asKey(combinedHeader.jwk)\n      if (key.type !== 'public') {\n        throw new errors.JWSInvalid('JWS Header Parameter \"jwk\" must be a public key')\n      }\n    } else if (key === JWK.EmbeddedX5C) {\n      if (!Array.isArray(combinedHeader.x5c) || !combinedHeader.x5c.length || combinedHeader.x5c.some(c => typeof c !== 'string' || !c)) {\n        throw new errors.JWSInvalid('JWS Header Parameter \"x5c\" must be a JSON array of certificate value strings')\n      }\n      key = JWK.asKey(\n        `-----BEGIN CERTIFICATE-----${EOL}${(combinedHeader.x5c[0].match(/.{1,64}/g) || []).join(EOL)}${EOL}-----END CERTIFICATE-----`,\n        { x5c: combinedHeader.x5c }\n      )\n    }\n\n    check(key, 'verify', alg)\n\n    const toBeVerified = Buffer.concat([\n      Buffer.from(prot || ''),\n      Buffer.from('.'),\n      Buffer.isBuffer(payload) ? payload : Buffer.from(payload)\n    ])\n\n    if (!verify(alg, key, toBeVerified, base64url.decodeToBuffer(signature))) {\n      throw new errors.JWSVerificationFailed()\n    }\n\n    if (combinedHeader.b64 === false) {\n      payload = Buffer.from(payload)\n    } else {\n      payload = base64url.decodeToBuffer(payload)\n    }\n\n    if (complete) {\n      const result = { payload, key }\n      if (prot) result.protected = parsedProt\n      if (header) result.header = header\n      return result\n    }\n\n    return payload\n  }\n\n  // general serialization format\n  const { signatures, ...root } = jws\n  const errs = []\n  for (const recipient of signatures) {\n    try {\n      return jwsVerify(false, 'flattened', { ...root, ...recipient }, key, { crit, complete, algorithms: algorithms ? [...algorithms] : undefined })\n    } catch (err) {\n      errs.push(err)\n      continue\n    }\n  }\n\n  const multi = new errors.JOSEMultiError(errs)\n  if ([...multi].some(e => e instanceof errors.JWSVerificationFailed)) {\n    throw new errors.JWSVerificationFailed()\n  } else if ([...multi].every(e => e instanceof errors.JWKSNoMatchingKey)) {\n    throw new errors.JWKSNoMatchingKey()\n  }\n  throw multi\n}\n\nmodule.exports = {\n  bare: jwsVerify,\n  verify: jwsVerify.bind(undefined, false, undefined)\n}\n", "const Sign = require('./sign')\nconst { verify } = require('./verify')\n\nconst single = (serialization, payload, key, protectedHeader, unprotectedHeader) => {\n  return new Sign(payload)\n    .recipient(key, protectedHeader, unprotectedHeader)\n    .sign(serialization)\n}\n\nmodule.exports.Sign = Sign\nmodule.exports.sign = single.bind(undefined, 'compact')\nmodule.exports.sign.flattened = single.bind(undefined, 'flattened')\nmodule.exports.sign.general = single.bind(undefined, 'general')\n\nmodule.exports.verify = verify\n", "const base64url = require('../help/base64url')\nconst errors = require('../errors')\n\nmodule.exports = (token, { complete = false } = {}) => {\n  if (typeof token !== 'string' || !token) {\n    throw new TypeError('JWT must be a string')\n  }\n\n  const { 0: header, 1: payload, 2: signature, length } = token.split('.')\n\n  if (length === 5) {\n    throw new TypeError('encrypted JWTs cannot be decoded')\n  }\n\n  if (length !== 3) {\n    throw new errors.JWTMalformed('JWTs must have three components')\n  }\n\n  try {\n    const result = {\n      header: base64url.JSON.decode(header),\n      payload: base64url.JSON.decode(payload),\n      signature\n    }\n\n    return complete ? result : result.payload\n  } catch (err) {\n    throw new errors.JWTMalformed('JWT is malformed')\n  }\n}\n", "const minute = 60\nconst hour = minute * 60\nconst day = hour * 24\nconst week = day * 7\nconst year = day * 365.25\n\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i\n\nmodule.exports = (str) => {\n  const matched = REGEX.exec(str)\n\n  if (!matched) {\n    throw new TypeError(`invalid time period format (\"${str}\")`)\n  }\n\n  const value = parseFloat(matched[1])\n  const unit = matched[2].toLowerCase()\n\n  switch (unit) {\n    case 'sec':\n    case 'secs':\n    case 'second':\n    case 'seconds':\n    case 's':\n      return Math.round(value)\n    case 'minute':\n    case 'minutes':\n    case 'min':\n    case 'mins':\n    case 'm':\n      return Math.round(value * minute)\n    case 'hour':\n    case 'hours':\n    case 'hr':\n    case 'hrs':\n    case 'h':\n      return Math.round(value * hour)\n    case 'day':\n    case 'days':\n    case 'd':\n      return Math.round(value * day)\n    case 'week':\n    case 'weeks':\n    case 'w':\n      return Math.round(value * week)\n    case 'year':\n    case 'years':\n    case 'yr':\n    case 'yrs':\n    case 'y':\n      return Math.round(value * year)\n  }\n}\n", "module.exports = (date) => Math.floor(date.getTime() / 1000)\n", "const { JWTClaimInvalid } = require('../errors')\n\nconst isNotString = val => typeof val !== 'string' || val.length === 0\nconst isNotArrayOfStrings = val => !Array.isArray(val) || val.length === 0 || val.some(isNotString)\nconst isRequired = (Err, value, label, claim) => {\n  if (value === undefined) {\n    throw new Err(`${label} is missing`, claim, 'missing')\n  }\n}\nconst isString = (Err, value, label, claim, required = false) => {\n  if (required) {\n    isRequired(Err, value, label, claim)\n  }\n\n  if (value !== undefined && isNotString(value)) {\n    throw new Err(`${label} must be a string`, claim, 'invalid')\n  }\n}\nconst isTimestamp = (value, label, required = false) => {\n  if (required && value === undefined) {\n    throw new JWTClaimInvalid(`\"${label}\" claim is missing`, label, 'missing')\n  }\n\n  if (value !== undefined && (typeof value !== 'number')) {\n    throw new JWTClaimInvalid(`\"${label}\" claim must be a JSON numeric value`, label, 'invalid')\n  }\n}\nconst isStringOrArrayOfStrings = (value, label, required = false) => {\n  if (required && value === undefined) {\n    throw new JWTClaimInvalid(`\"${label}\" claim is missing`, label, 'missing')\n  }\n\n  if (value !== undefined && (isNotString(value) && isNotArrayOfStrings(value))) {\n    throw new JWTClaimInvalid(`\"${label}\" claim must be a string or array of strings`, label, 'invalid')\n  }\n}\n\nmodule.exports = {\n  isNotArrayOfStrings,\n  isRequired,\n  isNotString,\n  isString,\n  isTimestamp,\n  isStringOrArrayOfStrings\n}\n", "const isObject = require('../help/is_object')\nconst secs = require('../help/secs')\nconst epoch = require('../help/epoch')\nconst getKey = require('../help/get_key')\nconst JWS = require('../jws')\n\nconst isString = require('./shared_validations').isString.bind(undefined, TypeError)\n\nconst validateOptions = (options) => {\n  if (typeof options.iat !== 'boolean') {\n    throw new TypeError('options.iat must be a boolean')\n  }\n\n  if (typeof options.kid !== 'boolean') {\n    throw new TypeError('options.kid must be a boolean')\n  }\n\n  isString(options.subject, 'options.subject')\n  isString(options.issuer, 'options.issuer')\n\n  if (\n    options.audience !== undefined &&\n    (\n      (typeof options.audience !== 'string' || !options.audience) &&\n      (!Array.isArray(options.audience) || options.audience.length === 0 || options.audience.some(a => !a || typeof a !== 'string'))\n    )\n  ) {\n    throw new TypeError('options.audience must be a string or an array of strings')\n  }\n\n  if (!isObject(options.header)) {\n    throw new TypeError('options.header must be an object')\n  }\n\n  isString(options.algorithm, 'options.algorithm')\n  isString(options.expiresIn, 'options.expiresIn')\n  isString(options.notBefore, 'options.notBefore')\n  isString(options.jti, 'options.jti')\n\n  if (options.now !== undefined && (!(options.now instanceof Date) || !options.now.getTime())) {\n    throw new TypeError('options.now must be a valid Date object')\n  }\n}\n\nmodule.exports = (payload, key, options = {}) => {\n  if (!isObject(options)) {\n    throw new TypeError('options must be an object')\n  }\n\n  const {\n    algorithm, audience, expiresIn, header = {}, iat = true,\n    issuer, jti, kid = true, notBefore, subject, now\n  } = options\n\n  validateOptions({\n    algorithm, audience, expiresIn, header, iat, issuer, jti, kid, notBefore, now, subject\n  })\n\n  if (!isObject(payload)) {\n    throw new TypeError('payload must be an object')\n  }\n\n  let unix\n  if (expiresIn || notBefore || iat) {\n    unix = epoch(now || new Date())\n  }\n\n  payload = {\n    ...payload,\n    sub: subject || payload.sub,\n    aud: audience || payload.aud,\n    iss: issuer || payload.iss,\n    jti: jti || payload.jti,\n    iat: iat ? unix : payload.iat,\n    exp: expiresIn ? unix + secs(expiresIn) : payload.exp,\n    nbf: notBefore ? unix + secs(notBefore) : payload.nbf\n  }\n\n  key = getKey(key)\n\n  let includeKid\n\n  if (typeof options.kid === 'boolean') {\n    includeKid = kid\n  } else {\n    includeKid = !key.secret\n  }\n\n  return JWS.sign(JSON.stringify(payload), key, {\n    ...header,\n    alg: algorithm || header.alg,\n    kid: includeKid ? key.kid : header.kid\n  })\n}\n", "const isObject = require('../help/is_object')\nconst epoch = require('../help/epoch')\nconst secs = require('../help/secs')\nconst getKey = require('../help/get_key')\nconst { bare: verify } = require('../jws/verify')\nconst { JWTClaimInvalid, JWTExpired } = require('../errors')\n\nconst {\n  isString,\n  isNotString,\n  isNotArrayOfStrings,\n  isTimestamp,\n  isStringOrArrayOfStrings\n} = require('./shared_validations')\nconst decode = require('./decode')\n\nconst isPayloadString = isString.bind(undefined, JWTClaimInvalid)\nconst isOptionString = isString.bind(undefined, TypeError)\n\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '')\n\nconst validateOptions = ({\n  algorithms, audience, clockTolerance, complete = false, crit, ignoreExp = false,\n  ignoreIat = false, ignoreNbf = false, issuer, jti, maxTokenAge, now = new Date(),\n  subject, typ\n}) => {\n  if (typeof complete !== 'boolean') {\n    throw new TypeError('options.complete must be a boolean')\n  }\n\n  if (typeof ignoreExp !== 'boolean') {\n    throw new TypeError('options.ignoreExp must be a boolean')\n  }\n\n  if (typeof ignoreNbf !== 'boolean') {\n    throw new TypeError('options.ignoreNbf must be a boolean')\n  }\n\n  if (typeof ignoreIat !== 'boolean') {\n    throw new TypeError('options.ignoreIat must be a boolean')\n  }\n\n  isOptionString(maxTokenAge, 'options.maxTokenAge')\n  isOptionString(subject, 'options.subject')\n  isOptionString(jti, 'options.jti')\n  isOptionString(clockTolerance, 'options.clockTolerance')\n  isOptionString(typ, 'options.typ')\n\n  if (issuer !== undefined && (isNotString(issuer) && isNotArrayOfStrings(issuer))) {\n    throw new TypeError('options.issuer must be a string or an array of strings')\n  }\n\n  if (audience !== undefined && (isNotString(audience) && isNotArrayOfStrings(audience))) {\n    throw new TypeError('options.audience must be a string or an array of strings')\n  }\n\n  if (algorithms !== undefined && isNotArrayOfStrings(algorithms)) {\n    throw new TypeError('options.algorithms must be an array of strings')\n  }\n\n  if (!(now instanceof Date) || !now.getTime()) {\n    throw new TypeError('options.now must be a valid Date object')\n  }\n\n  if (ignoreIat && maxTokenAge !== undefined) {\n    throw new TypeError('options.ignoreIat and options.maxTokenAge cannot used together')\n  }\n\n  if (crit !== undefined && isNotArrayOfStrings(crit)) {\n    throw new TypeError('options.crit must be an array of strings')\n  }\n\n  return {\n    algorithms,\n    audience,\n    clockTolerance,\n    complete,\n    crit,\n    ignoreExp,\n    ignoreIat,\n    ignoreNbf,\n    issuer,\n    jti,\n    maxTokenAge,\n    now,\n    subject,\n    typ\n  }\n}\n\nconst validateTypes = ({ header, payload }, options) => {\n  isPayloadString(header.alg, '\"alg\" header parameter', 'alg', true)\n\n  isTimestamp(payload.iat, 'iat', !!options.maxTokenAge)\n  isTimestamp(payload.exp, 'exp')\n  isTimestamp(payload.nbf, 'nbf')\n  isPayloadString(payload.jti, '\"jti\" claim', 'jti', !!options.jti)\n  isStringOrArrayOfStrings(payload.iss, 'iss', !!options.issuer)\n  isPayloadString(payload.sub, '\"sub\" claim', 'sub', !!options.subject)\n  isStringOrArrayOfStrings(payload.aud, 'aud', !!options.audience)\n  isPayloadString(header.typ, '\"typ\" header parameter', 'typ', !!options.typ)\n}\n\nconst checkAudiencePresence = (audPayload, audOption) => {\n  if (typeof audPayload === 'string') {\n    return audOption.includes(audPayload)\n  }\n\n  // Each principal intended to process the JWT MUST\n  // identify itself with a value in the audience claim\n  audPayload = new Set(audPayload)\n  return audOption.some(Set.prototype.has.bind(audPayload))\n}\n\nmodule.exports = (token, key, options = {}) => {\n  if (!isObject(options)) {\n    throw new TypeError('options must be an object')\n  }\n\n  const {\n    algorithms, audience, clockTolerance, complete, crit, ignoreExp, ignoreIat, ignoreNbf, issuer,\n    jti, maxTokenAge, now, subject, typ\n  } = options = validateOptions(options)\n\n  const decoded = decode(token, { complete: true })\n  key = getKey(key, true)\n\n  if (complete) {\n    ({ key } = verify(true, 'preparsed', { decoded, token }, key, { crit, algorithms, complete: true }))\n    decoded.key = key\n  } else {\n    verify(true, 'preparsed', { decoded, token }, key, { crit, algorithms })\n  }\n\n  const unix = epoch(now)\n  validateTypes(decoded, options)\n\n  if (issuer && (typeof decoded.payload.iss !== 'string' || !(typeof issuer === 'string' ? [issuer] : issuer).includes(decoded.payload.iss))) {\n    throw new JWTClaimInvalid('unexpected \"iss\" claim value', 'iss', 'check_failed')\n  }\n\n  if (subject && decoded.payload.sub !== subject) {\n    throw new JWTClaimInvalid('unexpected \"sub\" claim value', 'sub', 'check_failed')\n  }\n\n  if (jti && decoded.payload.jti !== jti) {\n    throw new JWTClaimInvalid('unexpected \"jti\" claim value', 'jti', 'check_failed')\n  }\n\n  if (audience && !checkAudiencePresence(decoded.payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n    throw new JWTClaimInvalid('unexpected \"aud\" claim value', 'aud', 'check_failed')\n  }\n\n  if (typ && normalizeTyp(decoded.header.typ) !== normalizeTyp(typ)) {\n    throw new JWTClaimInvalid('unexpected \"typ\" JWT header value', 'typ', 'check_failed')\n  }\n\n  const tolerance = clockTolerance ? secs(clockTolerance) : 0\n\n  if (!ignoreIat && !('exp' in decoded.payload) && 'iat' in decoded.payload && decoded.payload.iat > unix + tolerance) {\n    throw new JWTClaimInvalid('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed')\n  }\n\n  if (!ignoreNbf && 'nbf' in decoded.payload && decoded.payload.nbf > unix + tolerance) {\n    throw new JWTClaimInvalid('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed')\n  }\n\n  if (!ignoreExp && 'exp' in decoded.payload && decoded.payload.exp <= unix - tolerance) {\n    throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed')\n  }\n\n  if (maxTokenAge) {\n    const age = unix - decoded.payload.iat\n    const max = secs(maxTokenAge)\n\n    if (age - tolerance > max) {\n      throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed')\n    }\n\n    if (age < 0 - tolerance) {\n      throw new JWTClaimInvalid('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed')\n    }\n  }\n\n  return complete ? decoded : decoded.payload\n}\n", "const { JWTClaimInvalid } = require('../errors')\nconst secs = require('../help/secs')\nconst epoch = require('../help/epoch')\nconst isObject = require('../help/is_object')\n\nconst verify = require('./verify')\nconst {\n  isString,\n  isRequired,\n  isTimestamp,\n  isStringOrArrayOfStrings\n} = require('./shared_validations')\n\nconst isPayloadRequired = isRequired.bind(undefined, JWTClaimInvalid)\nconst isPayloadString = isString.bind(undefined, JWTClaimInvalid)\nconst isOptionString = isString.bind(undefined, TypeError)\n\nconst defineLazyExportWithWarning = (obj, property, name, definition) => {\n  Object.defineProperty(obj, property, {\n    enumerable: true,\n    configurable: true,\n    value (...args) {\n      process.emitWarning(\n        `The ${name} API implements an IETF draft. Breaking draft implementations are included as minor versions of the jose library, therefore, the ~ semver operator should be used and close attention be payed to library changelog as well as the drafts themselves.`,\n        'DraftWarning'\n      )\n      Object.defineProperty(obj, property, {\n        enumerable: true,\n        configurable: true,\n        value: definition\n      })\n      return obj[property](...args)\n    }\n  })\n}\n\nconst validateCommonOptions = (options, profile) => {\n  if (!isObject(options)) {\n    throw new TypeError('options must be an object')\n  }\n\n  if (!options.issuer) {\n    throw new TypeError(`\"issuer\" option is required to validate ${profile}`)\n  }\n\n  if (!options.audience) {\n    throw new TypeError(`\"audience\" option is required to validate ${profile}`)\n  }\n}\n\nmodule.exports = {\n  IdToken: {\n    verify: (token, key, options = {}) => {\n      validateCommonOptions(options, 'an ID Token')\n\n      if ('maxAuthAge' in options) {\n        isOptionString(options.maxAuthAge, 'options.maxAuthAge')\n      }\n      if ('nonce' in options) {\n        isOptionString(options.nonce, 'options.nonce')\n      }\n\n      const unix = epoch(options.now || new Date())\n      const result = verify(token, key, { ...options })\n      const payload = options.complete ? result.payload : result\n\n      if (Array.isArray(payload.aud) && payload.aud.length > 1) {\n        isPayloadRequired(payload.azp, '\"azp\" claim', 'azp')\n      }\n      isPayloadRequired(payload.iat, '\"iat\" claim', 'iat')\n      isPayloadRequired(payload.sub, '\"sub\" claim', 'sub')\n      isPayloadRequired(payload.exp, '\"exp\" claim', 'exp')\n      isTimestamp(payload.auth_time, 'auth_time', !!options.maxAuthAge)\n      isPayloadString(payload.nonce, '\"nonce\" claim', 'nonce', !!options.nonce)\n      isPayloadString(payload.acr, '\"acr\" claim', 'acr')\n      isStringOrArrayOfStrings(payload.amr, 'amr')\n\n      if (options.nonce && payload.nonce !== options.nonce) {\n        throw new JWTClaimInvalid('unexpected \"nonce\" claim value', 'nonce', 'check_failed')\n      }\n\n      const tolerance = options.clockTolerance ? secs(options.clockTolerance) : 0\n\n      if (options.maxAuthAge) {\n        const maxAuthAgeSeconds = secs(options.maxAuthAge)\n        if (payload.auth_time + maxAuthAgeSeconds < unix - tolerance) {\n          throw new JWTClaimInvalid('\"auth_time\" claim timestamp check failed (too much time has elapsed since the last End-User authentication)', 'auth_time', 'check_failed')\n        }\n      }\n\n      if (Array.isArray(payload.aud) && payload.aud.length > 1 && payload.azp !== options.audience) {\n        throw new JWTClaimInvalid('unexpected \"azp\" claim value', 'azp', 'check_failed')\n      }\n\n      return result\n    }\n  },\n  LogoutToken: {},\n  AccessToken: {}\n}\n\ndefineLazyExportWithWarning(module.exports.LogoutToken, 'verify', 'jose.JWT.LogoutToken.verify', (token, key, options = {}) => {\n  validateCommonOptions(options, 'a Logout Token')\n\n  const result = verify(token, key, { ...options })\n  const payload = options.complete ? result.payload : result\n\n  isPayloadRequired(payload.iat, '\"iat\" claim', 'iat')\n  isPayloadRequired(payload.jti, '\"jti\" claim', 'jti')\n  isPayloadString(payload.sid, '\"sid\" claim', 'sid')\n\n  if (!('sid' in payload) && !('sub' in payload)) {\n    throw new JWTClaimInvalid('either \"sid\" or \"sub\" (or both) claims must be present')\n  }\n\n  if ('nonce' in payload) {\n    throw new JWTClaimInvalid('\"nonce\" claim is prohibited', 'nonce', 'prohibited')\n  }\n\n  if (!('events' in payload)) {\n    throw new JWTClaimInvalid('\"events\" claim is missing', 'events', 'missing')\n  }\n\n  if (!isObject(payload.events)) {\n    throw new JWTClaimInvalid('\"events\" claim must be an object', 'events', 'invalid')\n  }\n\n  if (!('http://schemas.openid.net/event/backchannel-logout' in payload.events)) {\n    throw new JWTClaimInvalid('\"http://schemas.openid.net/event/backchannel-logout\" member is missing in the \"events\" claim', 'events', 'invalid')\n  }\n\n  if (!isObject(payload.events['http://schemas.openid.net/event/backchannel-logout'])) {\n    throw new JWTClaimInvalid('\"http://schemas.openid.net/event/backchannel-logout\" member in the \"events\" claim must be an object', 'events', 'invalid')\n  }\n\n  return result\n})\n\ndefineLazyExportWithWarning(module.exports.AccessToken, 'verify', 'jose.JWT.AccessToken.verify', (token, key, options = {}) => {\n  validateCommonOptions(options, 'a JWT Access Token')\n\n  isOptionString(options.maxAuthAge, 'options.maxAuthAge')\n\n  const unix = epoch(options.now || new Date())\n  const typ = 'at+JWT'\n  const result = verify(token, key, { ...options, typ })\n  const payload = options.complete ? result.payload : result\n\n  isPayloadRequired(payload.iat, '\"iat\" claim', 'iat')\n  isPayloadRequired(payload.exp, '\"exp\" claim', 'exp')\n  isPayloadRequired(payload.sub, '\"sub\" claim', 'sub')\n  isPayloadRequired(payload.jti, '\"jti\" claim', 'jti')\n  isPayloadString(payload.client_id, '\"client_id\" claim', 'client_id', true)\n  isTimestamp(payload.auth_time, 'auth_time', !!options.maxAuthAge)\n  isPayloadString(payload.acr, '\"acr\" claim', 'acr')\n  isStringOrArrayOfStrings(payload.amr, 'amr')\n\n  const tolerance = options.clockTolerance ? secs(options.clockTolerance) : 0\n\n  if (options.maxAuthAge) {\n    const maxAuthAgeSeconds = secs(options.maxAuthAge)\n    if (payload.auth_time + maxAuthAgeSeconds < unix - tolerance) {\n      throw new JWTClaimInvalid('\"auth_time\" claim timestamp check failed (too much time has elapsed since the last End-User authentication)', 'auth_time', 'check_failed')\n    }\n  }\n\n  return result\n})\n", "const decode = require('./decode')\nconst sign = require('./sign')\nconst verify = require('./verify')\nconst profiles = require('./profiles')\n\nmodule.exports = {\n  sign,\n  verify,\n  ...profiles\n}\n\nObject.defineProperty(module.exports, 'decode', {\n  enumerable: false,\n  configurable: true,\n  value: decode\n})\n", "module.exports = {\n  JWE: require('./jwe'),\n  JWK: require('./jwk'),\n  JWKS: require('./jwks'),\n  JWS: require('./jws'),\n  JWT: require('./jwt'),\n  errors: require('./errors')\n}\n", "const jose = require('jose');\n\nfunction retrieveSigningKeys(keys) {\n  const keystore = jose.JWKS.asKeyStore({ keys }, { ignoreErrors: true });\n\n  return keystore.all({ use: 'sig' }).map((key) => {\n    return {\n      kid: key.kid,\n      alg: key.alg,\n      get publicKey() { return key.toPEM(false); },\n      get rsaPublicKey() { return key.toPEM(false); },\n      getPublicKey() { return key.toPEM(false); }\n    };\n  });\n}\n\nmodule.exports = {\n  retrieveSigningKeys\n};\n", "const http = require('http');\nconst https = require('https');\nconst urlUtil = require('url');\n\nmodule.exports.default =  (options) => {\n  if (options.fetcher) {\n    return options.fetcher(options.uri);\n  }\n\n  return new Promise((resolve, reject) => {\n    const {\n      hostname,\n      path,\n      port,\n      protocol\n    } = urlUtil.parse(options.uri);\n\n    const requestOptions = {\n      hostname,\n      path,\n      port,\n      method: 'GET',\n      ...(options.headers && { headers: { ...options.headers } }),\n      ...(options.timeout && { timeout: options.timeout }),\n      ...(options.agent && { agent: options.agent })\n    };\n\n    const httpRequestLib = protocol === 'https:' ? https : http;\n    const httpRequest = httpRequestLib.request(requestOptions, (res) => {\n      let rawData = '';\n      res.setEncoding('utf8');\n      res.on('data', (chunk) => { rawData += chunk; });\n      res.on('end', () => {\n        if (res.statusCode < 200 || res.statusCode >= 300) {\n          const errorMsg = res.body && (res.body.message || res.body) || res.statusMessage || `Http Error ${res.statusCode}`;\n          reject({ errorMsg });\n        } else {\n          try {\n            resolve(rawData && JSON.parse(rawData));\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    });\n\n    httpRequest\n      .on('timeout', () => httpRequest.destroy())\n      .on('error', (e) => reject(e))\n      .end();\n  });\n};\n", "var hasOwnProperty = Object.prototype.hasOwnProperty\n\nmodule.exports = PseudoMap\n\nfunction PseudoMap (set) {\n  if (!(this instanceof PseudoMap)) // whyyyyyyy\n    throw new TypeError(\"Constructor PseudoMap requires 'new'\")\n\n  this.clear()\n\n  if (set) {\n    if ((set instanceof PseudoMap) ||\n        (typeof Map === 'function' && set instanceof Map))\n      set.forEach(function (value, key) {\n        this.set(key, value)\n      }, this)\n    else if (Array.isArray(set))\n      set.forEach(function (kv) {\n        this.set(kv[0], kv[1])\n      }, this)\n    else\n      throw new TypeError('invalid argument')\n  }\n}\n\nPseudoMap.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  Object.keys(this._data).forEach(function (k) {\n    if (k !== 'size')\n      fn.call(thisp, this._data[k].value, this._data[k].key)\n  }, this)\n}\n\nPseudoMap.prototype.has = function (k) {\n  return !!find(this._data, k)\n}\n\nPseudoMap.prototype.get = function (k) {\n  var res = find(this._data, k)\n  return res && res.value\n}\n\nPseudoMap.prototype.set = function (k, v) {\n  set(this._data, k, v)\n}\n\nPseudoMap.prototype.delete = function (k) {\n  var res = find(this._data, k)\n  if (res) {\n    delete this._data[res._index]\n    this._data.size--\n  }\n}\n\nPseudoMap.prototype.clear = function () {\n  var data = Object.create(null)\n  data.size = 0\n\n  Object.defineProperty(this, '_data', {\n    value: data,\n    enumerable: false,\n    configurable: true,\n    writable: false\n  })\n}\n\nObject.defineProperty(PseudoMap.prototype, 'size', {\n  get: function () {\n    return this._data.size\n  },\n  set: function (n) {},\n  enumerable: true,\n  configurable: true\n})\n\nPseudoMap.prototype.values =\nPseudoMap.prototype.keys =\nPseudoMap.prototype.entries = function () {\n  throw new Error('iterators are not implemented in this version')\n}\n\n// Either identical, or both NaN\nfunction same (a, b) {\n  return a === b || a !== a && b !== b\n}\n\nfunction Entry (k, v, i) {\n  this.key = k\n  this.value = v\n  this._index = i\n}\n\nfunction find (data, k) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k))\n      return data[key]\n  }\n}\n\nfunction set (data, k, v) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k)) {\n      data[key].value = v\n      return\n    }\n  }\n  data.size++\n  data[key] = new Entry(k, v, key)\n}\n", "if (process.env.npm_package_name === 'pseudomap' &&\n    process.env.npm_lifecycle_script === 'test')\n  process.env.TEST_PSEUDOMAP = 'true'\n\nif (typeof Map === 'function' && !process.env.TEST_PSEUDOMAP) {\n  module.exports = Map\n} else {\n  module.exports = require('./pseudomap')\n}\n", "module.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n", "module.exports = LRUCache\n\n// This will be a proper iterable 'Map' in engines that support it,\n// or a fakey-fake PseudoMap in older versions.\nvar Map = require('pseudomap')\nvar util = require('util')\n\n// A linked list to keep track of recently-used-ness\nvar Yallist = require('yallist')\n\n// use symbols if possible, otherwise just _props\nvar symbols = {}\nvar hasSymbol = typeof Symbol === 'function'\nvar makeSymbol\n/* istanbul ignore if */\nif (hasSymbol) {\n  makeSymbol = function (key) {\n    return Symbol.for(key)\n  }\n} else {\n  makeSymbol = function (key) {\n    return '_' + key\n  }\n}\n\nfunction priv (obj, key, val) {\n  var sym\n  if (symbols[key]) {\n    sym = symbols[key]\n  } else {\n    sym = makeSymbol(key)\n    symbols[key] = sym\n  }\n  if (arguments.length === 2) {\n    return obj[sym]\n  } else {\n    obj[sym] = val\n    return val\n  }\n}\n\nfunction naiveLength () { return 1 }\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nfunction LRUCache (options) {\n  if (!(this instanceof LRUCache)) {\n    return new LRUCache(options)\n  }\n\n  if (typeof options === 'number') {\n    options = { max: options }\n  }\n\n  if (!options) {\n    options = {}\n  }\n\n  var max = priv(this, 'max', options.max)\n  // Kind of weird to have a default max of Infinity, but oh well.\n  if (!max ||\n      !(typeof max === 'number') ||\n      max <= 0) {\n    priv(this, 'max', Infinity)\n  }\n\n  var lc = options.length || naiveLength\n  if (typeof lc !== 'function') {\n    lc = naiveLength\n  }\n  priv(this, 'lengthCalculator', lc)\n\n  priv(this, 'allowStale', options.stale || false)\n  priv(this, 'maxAge', options.maxAge || 0)\n  priv(this, 'dispose', options.dispose)\n  this.reset()\n}\n\n// resize the cache when the max changes.\nObject.defineProperty(LRUCache.prototype, 'max', {\n  set: function (mL) {\n    if (!mL || !(typeof mL === 'number') || mL <= 0) {\n      mL = Infinity\n    }\n    priv(this, 'max', mL)\n    trim(this)\n  },\n  get: function () {\n    return priv(this, 'max')\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'allowStale', {\n  set: function (allowStale) {\n    priv(this, 'allowStale', !!allowStale)\n  },\n  get: function () {\n    return priv(this, 'allowStale')\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'maxAge', {\n  set: function (mA) {\n    if (!mA || !(typeof mA === 'number') || mA < 0) {\n      mA = 0\n    }\n    priv(this, 'maxAge', mA)\n    trim(this)\n  },\n  get: function () {\n    return priv(this, 'maxAge')\n  },\n  enumerable: true\n})\n\n// resize the cache when the lengthCalculator changes.\nObject.defineProperty(LRUCache.prototype, 'lengthCalculator', {\n  set: function (lC) {\n    if (typeof lC !== 'function') {\n      lC = naiveLength\n    }\n    if (lC !== priv(this, 'lengthCalculator')) {\n      priv(this, 'lengthCalculator', lC)\n      priv(this, 'length', 0)\n      priv(this, 'lruList').forEach(function (hit) {\n        hit.length = priv(this, 'lengthCalculator').call(this, hit.value, hit.key)\n        priv(this, 'length', priv(this, 'length') + hit.length)\n      }, this)\n    }\n    trim(this)\n  },\n  get: function () { return priv(this, 'lengthCalculator') },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'length', {\n  get: function () { return priv(this, 'length') },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'itemCount', {\n  get: function () { return priv(this, 'lruList').length },\n  enumerable: true\n})\n\nLRUCache.prototype.rforEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = priv(this, 'lruList').tail; walker !== null;) {\n    var prev = walker.prev\n    forEachStep(this, fn, walker, thisp)\n    walker = prev\n  }\n}\n\nfunction forEachStep (self, fn, node, thisp) {\n  var hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!priv(self, 'allowStale')) {\n      hit = undefined\n    }\n  }\n  if (hit) {\n    fn.call(thisp, hit.value, hit.key, self)\n  }\n}\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = priv(this, 'lruList').head; walker !== null;) {\n    var next = walker.next\n    forEachStep(this, fn, walker, thisp)\n    walker = next\n  }\n}\n\nLRUCache.prototype.keys = function () {\n  return priv(this, 'lruList').toArray().map(function (k) {\n    return k.key\n  }, this)\n}\n\nLRUCache.prototype.values = function () {\n  return priv(this, 'lruList').toArray().map(function (k) {\n    return k.value\n  }, this)\n}\n\nLRUCache.prototype.reset = function () {\n  if (priv(this, 'dispose') &&\n      priv(this, 'lruList') &&\n      priv(this, 'lruList').length) {\n    priv(this, 'lruList').forEach(function (hit) {\n      priv(this, 'dispose').call(this, hit.key, hit.value)\n    }, this)\n  }\n\n  priv(this, 'cache', new Map()) // hash of items by key\n  priv(this, 'lruList', new Yallist()) // list of items in order of use recency\n  priv(this, 'length', 0) // length of items in the list\n}\n\nLRUCache.prototype.dump = function () {\n  return priv(this, 'lruList').map(function (hit) {\n    if (!isStale(this, hit)) {\n      return {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }\n    }\n  }, this).toArray().filter(function (h) {\n    return h\n  })\n}\n\nLRUCache.prototype.dumpLru = function () {\n  return priv(this, 'lruList')\n}\n\nLRUCache.prototype.inspect = function (n, opts) {\n  var str = 'LRUCache {'\n  var extras = false\n\n  var as = priv(this, 'allowStale')\n  if (as) {\n    str += '\\n  allowStale: true'\n    extras = true\n  }\n\n  var max = priv(this, 'max')\n  if (max && max !== Infinity) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  max: ' + util.inspect(max, opts)\n    extras = true\n  }\n\n  var maxAge = priv(this, 'maxAge')\n  if (maxAge) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  maxAge: ' + util.inspect(maxAge, opts)\n    extras = true\n  }\n\n  var lc = priv(this, 'lengthCalculator')\n  if (lc && lc !== naiveLength) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  length: ' + util.inspect(priv(this, 'length'), opts)\n    extras = true\n  }\n\n  var didFirst = false\n  priv(this, 'lruList').forEach(function (item) {\n    if (didFirst) {\n      str += ',\\n  '\n    } else {\n      if (extras) {\n        str += ',\\n'\n      }\n      didFirst = true\n      str += '\\n  '\n    }\n    var key = util.inspect(item.key).split('\\n').join('\\n  ')\n    var val = { value: item.value }\n    if (item.maxAge !== maxAge) {\n      val.maxAge = item.maxAge\n    }\n    if (lc !== naiveLength) {\n      val.length = item.length\n    }\n    if (isStale(this, item)) {\n      val.stale = true\n    }\n\n    val = util.inspect(val, opts).split('\\n').join('\\n  ')\n    str += key + ' => ' + val\n  })\n\n  if (didFirst || extras) {\n    str += '\\n'\n  }\n  str += '}'\n\n  return str\n}\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || priv(this, 'maxAge')\n\n  var now = maxAge ? Date.now() : 0\n  var len = priv(this, 'lengthCalculator').call(this, value, key)\n\n  if (priv(this, 'cache').has(key)) {\n    if (len > priv(this, 'max')) {\n      del(this, priv(this, 'cache').get(key))\n      return false\n    }\n\n    var node = priv(this, 'cache').get(key)\n    var item = node.value\n\n    // dispose of the old one before overwriting\n    if (priv(this, 'dispose')) {\n      priv(this, 'dispose').call(this, key, item.value)\n    }\n\n    item.now = now\n    item.maxAge = maxAge\n    item.value = value\n    priv(this, 'length', priv(this, 'length') + (len - item.length))\n    item.length = len\n    this.get(key)\n    trim(this)\n    return true\n  }\n\n  var hit = new Entry(key, value, len, now, maxAge)\n\n  // oversized objects fall out of cache automatically.\n  if (hit.length > priv(this, 'max')) {\n    if (priv(this, 'dispose')) {\n      priv(this, 'dispose').call(this, key, value)\n    }\n    return false\n  }\n\n  priv(this, 'length', priv(this, 'length') + hit.length)\n  priv(this, 'lruList').unshift(hit)\n  priv(this, 'cache').set(key, priv(this, 'lruList').head)\n  trim(this)\n  return true\n}\n\nLRUCache.prototype.has = function (key) {\n  if (!priv(this, 'cache').has(key)) return false\n  var hit = priv(this, 'cache').get(key).value\n  if (isStale(this, hit)) {\n    return false\n  }\n  return true\n}\n\nLRUCache.prototype.get = function (key) {\n  return get(this, key, true)\n}\n\nLRUCache.prototype.peek = function (key) {\n  return get(this, key, false)\n}\n\nLRUCache.prototype.pop = function () {\n  var node = priv(this, 'lruList').tail\n  if (!node) return null\n  del(this, node)\n  return node.value\n}\n\nLRUCache.prototype.del = function (key) {\n  del(this, priv(this, 'cache').get(key))\n}\n\nLRUCache.prototype.load = function (arr) {\n  // reset the cache\n  this.reset()\n\n  var now = Date.now()\n  // A previous serialized cache has the most recent items first\n  for (var l = arr.length - 1; l >= 0; l--) {\n    var hit = arr[l]\n    var expiresAt = hit.e || 0\n    if (expiresAt === 0) {\n      // the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v)\n    } else {\n      var maxAge = expiresAt - now\n      // dont add already expired items\n      if (maxAge > 0) {\n        this.set(hit.k, hit.v, maxAge)\n      }\n    }\n  }\n}\n\nLRUCache.prototype.prune = function () {\n  var self = this\n  priv(this, 'cache').forEach(function (value, key) {\n    get(self, key, false)\n  })\n}\n\nfunction get (self, key, doUse) {\n  var node = priv(self, 'cache').get(key)\n  if (node) {\n    var hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!priv(self, 'allowStale')) hit = undefined\n    } else {\n      if (doUse) {\n        priv(self, 'lruList').unshiftNode(node)\n      }\n    }\n    if (hit) hit = hit.value\n  }\n  return hit\n}\n\nfunction isStale (self, hit) {\n  if (!hit || (!hit.maxAge && !priv(self, 'maxAge'))) {\n    return false\n  }\n  var stale = false\n  var diff = Date.now() - hit.now\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge\n  } else {\n    stale = priv(self, 'maxAge') && (diff > priv(self, 'maxAge'))\n  }\n  return stale\n}\n\nfunction trim (self) {\n  if (priv(self, 'length') > priv(self, 'max')) {\n    for (var walker = priv(self, 'lruList').tail;\n         priv(self, 'length') > priv(self, 'max') && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      var prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nfunction del (self, node) {\n  if (node) {\n    var hit = node.value\n    if (priv(self, 'dispose')) {\n      priv(self, 'dispose').call(this, hit.key, hit.value)\n    }\n    priv(self, 'length', priv(self, 'length') - hit.length)\n    priv(self, 'cache').delete(hit.key)\n    priv(self, 'lruList').removeNode(node)\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry (key, value, length, now, maxAge) {\n  this.key = key\n  this.value = value\n  this.length = length\n  this.now = now\n  this.maxAge = maxAge || 0\n}\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n", null, null, null, null, "const logger = require('debug')('jwks');\nconst memoizer = require('lru-memoizer');\nconst { promisify, callbackify } = require('util');\n\nfunction cacheWrapper(client, { cacheMaxEntries = 5, cacheMaxAge = 600000 }) {\n  logger(`Configured caching of signing keys. Max: ${cacheMaxEntries} / Age: ${cacheMaxAge}`);\n  return promisify(memoizer({\n    hash: (kid) => kid,\n    load: callbackify(client.getSigningKey.bind(client)),\n    maxAge: cacheMaxAge,\n    max: cacheMaxEntries\n  }));\n}\n\nmodule.exports.default = cacheWrapper;\n", "\r\n/**\r\n * A hierarchical token bucket for rate limiting. See\r\n * http://en.wikipedia.org/wiki/Token_bucket for more information.\r\n * @author John Hurliman <jhurliman@cull.tv>\r\n *\r\n * @param {Number} bucketSize Maximum number of tokens to hold in the bucket.\r\n *  Also known as the burst rate.\r\n * @param {Number} tokensPerInterval Number of tokens to drip into the bucket\r\n *  over the course of one interval.\r\n * @param {String|Number} interval The interval length in milliseconds, or as\r\n *  one of the following strings: 'second', 'minute', 'hour', day'.\r\n * @param {TokenBucket} parentBucket Optional. A token bucket that will act as\r\n *  the parent of this bucket.\r\n */\r\nvar TokenBucket = function(bucketSize, tokensPerInterval, interval, parentBucket) {\r\n  this.bucketSize = bucketSize;\r\n  this.tokensPerInterval = tokensPerInterval;\r\n\r\n  if (typeof interval === 'string') {\r\n    switch (interval) {\r\n      case 'sec': case 'second':\r\n        this.interval = 1000; break;\r\n      case 'min': case 'minute':\r\n        this.interval = 1000 * 60; break;\r\n      case 'hr': case 'hour':\r\n        this.interval = 1000 * 60 * 60; break;\r\n      case 'day':\r\n        this.interval = 1000 * 60 * 60 * 24; break;\r\n      default:\r\n        throw new Error('Invaid interval ' + interval);\r\n    }\r\n  } else {\r\n    this.interval = interval;\r\n  }\r\n\r\n  this.parentBucket = parentBucket;\r\n  this.content = 0;\r\n  this.lastDrip = +new Date();\r\n};\r\n\r\nTokenBucket.prototype = {\r\n  bucketSize: 1,\r\n  tokensPerInterval: 1,\r\n  interval: 1000,\r\n  parentBucket: null,\r\n  content: 0,\r\n  lastDrip: 0,\r\n\r\n  /**\r\n   * Remove the requested number of tokens and fire the given callback. If the\r\n   * bucket (and any parent buckets) contains enough tokens this will happen\r\n   * immediately. Otherwise, the removal and callback will happen when enough\r\n   * tokens become available.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Function} callback(err, remainingTokens)\r\n   * @returns {Boolean} True if the callback was fired immediately, otherwise\r\n   *  false.\r\n   */\r\n  removeTokens: function(count, callback) {\r\n    var self = this;\r\n\r\n    // Is this an infinite size bucket?\r\n    if (!this.bucketSize) {\r\n      process.nextTick(callback.bind(null, null, count, Number.POSITIVE_INFINITY));\r\n      return true;\r\n    }\r\n\r\n    // Make sure the bucket can hold the requested number of tokens\r\n    if (count > this.bucketSize) {\r\n      process.nextTick(callback.bind(null, 'Requested tokens ' + count + ' exceeds bucket size ' +\r\n        this.bucketSize, null));\r\n      return false;\r\n    }\r\n\r\n    // Drip new tokens into this bucket\r\n    this.drip();\r\n\r\n    // If we don't have enough tokens in this bucket, come back later\r\n    if (count > this.content)\r\n      return comeBackLater();\r\n\r\n    if (this.parentBucket) {\r\n      // Remove the requested from the parent bucket first\r\n      return this.parentBucket.removeTokens(count, function(err, remainingTokens) {\r\n        if (err) return callback(err, null);\r\n\r\n        // Check that we still have enough tokens in this bucket\r\n        if (count > self.content)\r\n          return comeBackLater();\r\n\r\n        // Tokens were removed from the parent bucket, now remove them from\r\n        // this bucket and fire the callback. Note that we look at the current\r\n        // bucket and parent bucket's remaining tokens and return the smaller\r\n        // of the two values\r\n        self.content -= count;\r\n        callback(null, Math.min(remainingTokens, self.content));\r\n      });\r\n    } else {\r\n      // Remove the requested tokens from this bucket and fire the callback\r\n      this.content -= count;\r\n      process.nextTick(callback.bind(null, null, this.content));\r\n      return true;\r\n    }\r\n\r\n    function comeBackLater() {\r\n      // How long do we need to wait to make up the difference in tokens?\r\n      var waitInterval = Math.ceil(\r\n        (count - self.content) * (self.interval / self.tokensPerInterval));\r\n      setTimeout(function() { self.removeTokens(count, callback); }, waitInterval);\r\n      return false;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Attempt to remove the requested number of tokens and return immediately.\r\n   * If the bucket (and any parent buckets) contains enough tokens this will\r\n   * return true, otherwise false is returned.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Boolean} True if the tokens were successfully removed, otherwise\r\n   *  false.\r\n   */\r\n  tryRemoveTokens: function(count) {\r\n    // Is this an infinite size bucket?\r\n    if (!this.bucketSize)\r\n      return true;\r\n\r\n    // Make sure the bucket can hold the requested number of tokens\r\n    if (count > this.bucketSize)\r\n      return false;\r\n\r\n    // Drip new tokens into this bucket\r\n    this.drip();\r\n\r\n    // If we don't have enough tokens in this bucket, return false\r\n    if (count > this.content)\r\n      return false;\r\n\r\n    // Try to remove the requested tokens from the parent bucket\r\n    if (this.parentBucket && !this.parentBucket.tryRemoveTokens(count))\r\n      return false;\r\n\r\n    // Remove the requested tokens from this bucket and return\r\n    this.content -= count;\r\n    return true;\r\n  },\r\n\r\n  /**\r\n   * Add any new tokens to the bucket since the last drip.\r\n   * @returns {Boolean} True if new tokens were added, otherwise false.\r\n   */\r\n  drip: function() {\r\n    if (!this.tokensPerInterval) {\r\n      this.content = this.bucketSize;\r\n      return;\r\n    }\r\n\r\n    var now = +new Date();\r\n    var deltaMS = Math.max(now - this.lastDrip, 0);\r\n    this.lastDrip = now;\r\n\r\n    var dripAmount = deltaMS * (this.tokensPerInterval / this.interval);\r\n    this.content = Math.min(this.content + dripAmount, this.bucketSize);\r\n  }\r\n};\r\n\r\nmodule.exports = TokenBucket;\r\n", "var getMilliseconds = function() {\r\n  if (typeof process !== 'undefined' && process.hrtime) {\r\n    var hrtime = process.hrtime();\r\n    var seconds = hrtime[0];\r\n    var nanoseconds = hrtime[1];\r\n\r\n    return seconds * 1e3 +  Math.floor(nanoseconds / 1e6);\r\n  }\r\n\r\n  return new Date().getTime();\r\n}\r\n\r\nmodule.exports = getMilliseconds;\r\n", "var TokenBucket = require('./tokenBucket');\r\nvar getMilliseconds = require('./clock');\r\n\r\n/**\r\n * A generic rate limiter. Underneath the hood, this uses a token bucket plus\r\n * an additional check to limit how many tokens we can remove each interval.\r\n * @author John Hurliman <jhurliman@jhurliman.org>\r\n *\r\n * @param {Number} tokensPerInterval Maximum number of tokens that can be\r\n *  removed at any given moment and over the course of one interval.\r\n * @param {String|Number} interval The interval length in milliseconds, or as\r\n *  one of the following strings: 'second', 'minute', 'hour', day'.\r\n * @param {Boolean} fireImmediately Optional. Whether or not the callback\r\n *  will fire immediately when rate limiting is in effect (default is false).\r\n */\r\nvar RateLimiter = function(tokensPerInterval, interval, fireImmediately) {\r\n  this.tokenBucket = new TokenBucket(tokensPerInterval, tokensPerInterval,\r\n    interval, null);\r\n\r\n  // Fill the token bucket to start\r\n  this.tokenBucket.content = tokensPerInterval;\r\n\r\n  this.curIntervalStart = getMilliseconds();\r\n  this.tokensThisInterval = 0;\r\n  this.fireImmediately = fireImmediately;\r\n};\r\n\r\nRateLimiter.prototype = {\r\n  tokenBucket: null,\r\n  curIntervalStart: 0,\r\n  tokensThisInterval: 0,\r\n  fireImmediately: false,\r\n\r\n  /**\r\n   * Remove the requested number of tokens and fire the given callback. If the\r\n   * rate limiter contains enough tokens and we haven't spent too many tokens\r\n   * in this interval already, this will happen immediately. Otherwise, the\r\n   * removal and callback will happen when enough tokens become available.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Function} callback(err, remainingTokens)\r\n   * @returns {Boolean} True if the callback was fired immediately, otherwise\r\n   *  false.\r\n   */\r\n  removeTokens: function(count, callback) {\r\n    // Make sure the request isn't for more than we can handle\r\n    if (count > this.tokenBucket.bucketSize) {\r\n      process.nextTick(callback.bind(null, 'Requested tokens ' + count +\r\n        ' exceeds maximum tokens per interval ' + this.tokenBucket.bucketSize,\r\n        null));\r\n      return false;\r\n    }\r\n\r\n    var self = this;\r\n    var now = getMilliseconds();\r\n\r\n    // Advance the current interval and reset the current interval token count\r\n    // if needed\r\n    if (now < this.curIntervalStart\r\n      || now - this.curIntervalStart >= this.tokenBucket.interval) {\r\n      this.curIntervalStart = now;\r\n      this.tokensThisInterval = 0;\r\n    }\r\n\r\n    // If we don't have enough tokens left in this interval, wait until the\r\n    // next interval\r\n    if (count > this.tokenBucket.tokensPerInterval - this.tokensThisInterval) {\r\n      if (this.fireImmediately) {\r\n        process.nextTick(callback.bind(null, null, -1));\r\n      } else {\r\n        var waitInterval = Math.ceil(\r\n          this.curIntervalStart + this.tokenBucket.interval - now);\r\n\r\n        setTimeout(function() {\r\n          self.tokenBucket.removeTokens(count, afterTokensRemoved);\r\n        }, waitInterval);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // Remove the requested number of tokens from the token bucket\r\n    return this.tokenBucket.removeTokens(count, afterTokensRemoved);\r\n\r\n    function afterTokensRemoved(err, tokensRemaining) {\r\n      if (err) return callback(err, null);\r\n\r\n      self.tokensThisInterval += count;\r\n      callback(null, tokensRemaining);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Attempt to remove the requested number of tokens and return immediately.\r\n   * If the bucket (and any parent buckets) contains enough tokens and we\r\n   * haven't spent too many tokens in this interval already, this will return\r\n   * true. Otherwise, false is returned.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Boolean} True if the tokens were successfully removed, otherwise\r\n   *  false.\r\n   */\r\n  tryRemoveTokens: function(count) {\r\n    // Make sure the request isn't for more than we can handle\r\n    if (count > this.tokenBucket.bucketSize)\r\n      return false;\r\n\r\n    var now = getMilliseconds();\r\n\r\n    // Advance the current interval and reset the current interval token count\r\n    // if needed\r\n    if (now < this.curIntervalStart\r\n      || now - this.curIntervalStart >= this.tokenBucket.interval) {\r\n      this.curIntervalStart = now;\r\n      this.tokensThisInterval = 0;\r\n    }\r\n\r\n    // If we don't have enough tokens left in this interval, return false\r\n    if (count > this.tokenBucket.tokensPerInterval - this.tokensThisInterval)\r\n      return false;\r\n\r\n    // Try to remove the requested number of tokens from the token bucket\r\n    var removed = this.tokenBucket.tryRemoveTokens(count);\r\n    if (removed) {\r\n      this.tokensThisInterval += count;\r\n    }\r\n    return removed;\r\n  },\r\n\r\n  /**\r\n   * Returns the number of tokens remaining in the TokenBucket.\r\n   * @returns {Number} The number of tokens remaining.\r\n   */\r\n  getTokensRemaining: function () {\r\n    this.tokenBucket.drip();\r\n    return this.tokenBucket.content;\r\n  }\r\n};\r\n\r\nmodule.exports = RateLimiter;\r\n", "\r\nexports.RateLimiter = require('./lib/rateLimiter');\r\nexports.TokenBucket = require('./lib/tokenBucket');\r\n", "function JwksRateLimitError(message) {\n  Error.call(this, message);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = 'JwksRateLimitError';\n  this.message = message;\n}\n\nJwksRateLimitError.prototype = Object.create(Error.prototype);\nJwksRateLimitError.prototype.constructor = JwksRateLimitError;\nmodule.exports = JwksRateLimitError;\n", "const logger = require('debug')('jwks');\nconst { RateLimiter } = require('limiter');\n\nconst JwksRateLimitError = require('../errors/JwksRateLimitError');\n\nfunction rateLimitWrapper(client, { jwksRequestsPerMinute = 10 }) {\n  const getSigningKey = client.getSigningKey.bind(client);\n\n  const limiter = new RateLimiter(jwksRequestsPerMinute, 'minute', true);\n  logger(`Configured rate limiting to JWKS endpoint at ${jwksRequestsPerMinute}/minute`);\n\n  return async (kid) => await new Promise((resolve, reject) => {\n    limiter.removeTokens(1, async (err, remaining) => {\n      if (err) {\n        reject(err);\n      }\n\n      logger('Requests to the JWKS endpoint available for the next minute:', remaining);\n      if (remaining < 0) {\n        logger('Too many requests to the JWKS endpoint');\n        reject(new JwksRateLimitError('Too many requests to the JWKS endpoint'));\n      } else {\n        try {\n          const key = await getSigningKey(kid);\n          resolve(key);\n        } catch (error) {\n          reject(error);\n        }\n      }\n    });\n  });\n}\n\nmodule.exports.default = rateLimitWrapper;\n", "const retrieveSigningKeys = require('../utils').retrieveSigningKeys;\n\n/**\n * Uses getKeysInterceptor to allow users to retrieve keys from a file,\n * external cache, or provided object before falling back to the jwksUri endpoint\n */\nfunction getKeysInterceptor(client, { getKeysInterceptor }) {\n  const getSigningKey = client.getSigningKey.bind(client);\n\n  return async (kid) => {\n    const keys = await getKeysInterceptor();\n\n    let signingKeys;\n    if (keys && keys.length) {\n      signingKeys = retrieveSigningKeys(keys);\n    }\n\n    if (signingKeys && signingKeys.length) {\n      const key = signingKeys.find(k => !kid || k.kid === kid);\n\n      if (key) {\n        return key;\n      }\n    }\n\n    return getSigningKey(kid);\n  };\n}\n\nmodule.exports.default = getKeysInterceptor;\n", "const { callbackify } = require('util');\n\nconst callbackSupport = (client) => {\n  const getSigningKey = client.getSigningKey.bind(client);\n\n  return (kid, cb) => {\n    if (cb) {\n      const callbackFunc = callbackify(getSigningKey);\n      return callbackFunc(kid, cb);\n    }\n\n    return getSigningKey(kid);\n  };\n};\n\nmodule.exports.default = callbackSupport;\n", "module.exports = {\n  request: require('./request').default,\n  cacheSigningKey: require('./cache').default,\n  rateLimitSigningKey: require('./rateLimit').default,\n  getKeysInterceptor: require('./interceptor').default,\n  callbackSupport: require('./callbackSupport').default\n};\n", "function JwksError(message) {\n  Error.call(this, message);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = 'JwksError';\n  this.message = message;\n}\n\nJwksError.prototype = Object.create(Error.prototype);\nJwksError.prototype.constructor = JwksError;\nmodule.exports = JwksError;\n", "function SigningKeyNotFoundError(message) {\n  Error.call(this, message);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = 'SigningKeyNotFoundError';\n  this.message = message;\n}\n\nSigningKeyNotFoundError.prototype = Object.create(Error.prototype);\nSigningKeyNotFoundError.prototype.constructor = SigningKeyNotFoundError;\nmodule.exports = SigningKeyNotFoundError;\n", "const logger = require('debug')('jwks');\nconst { retrieveSigningKeys } = require('./utils') ;\nconst { request, cacheSigningKey, rateLimitSigningKey, getKeysInterceptor, callbackSupport } = require('./wrappers');\nconst JwksError = require('./errors/JwksError');\nconst SigningKeyNotFoundError = require('./errors/SigningKeyNotFoundError');\n\nclass JwksClient {\n  constructor(options) {\n    this.options = {\n      rateLimit: false,\n      cache: true,\n      timeout: 30000,\n      ...options\n    };\n\n    // Initialize wrappers.\n    if (this.options.getKeysInterceptor) {\n      this.getSigningKey = getKeysInterceptor(this, options);\n    }\n\n    if (this.options.rateLimit) {\n      this.getSigningKey = rateLimitSigningKey(this, options);\n    }\n    if (this.options.cache) {\n      this.getSigningKey = cacheSigningKey(this, options);\n    }\n\n    this.getSigningKey = callbackSupport(this, options);\n  }\n\n  async getKeys() {\n    logger(`Fetching keys from '${this.options.jwksUri}'`);\n\n    try {\n      const res = await request({\n        uri: this.options.jwksUri,\n        headers: this.options.requestHeaders,\n        agent: this.options.requestAgent,\n        timeout: this.options.timeout,\n        fetcher: this.options.fetcher\n      });\n\n      logger('Keys:', res.keys);\n      return res.keys;\n    } catch (err) {\n      const { errorMsg } = err;\n      logger('Failure:', errorMsg || err);\n      throw (errorMsg ? new JwksError(errorMsg) : err);\n    }\n  }\n\n  async getSigningKeys() {\n    const keys = await this.getKeys();\n\n    if (!keys || !keys.length) {\n      throw new JwksError('The JWKS endpoint did not contain any keys');\n    }\n\n    const signingKeys = retrieveSigningKeys(keys);\n\n    if (!signingKeys.length) {\n      throw new JwksError('The JWKS endpoint did not contain any signing keys');\n    }\n\n    logger('Signing Keys:', signingKeys);\n    return signingKeys;\n  }\n\n  async getSigningKey (kid) {\n    logger(`Fetching signing key for '${kid}'`);\n    const keys = await this.getSigningKeys();\n\n    const kidDefined = kid !== undefined && kid !== null;\n    if (!kidDefined && keys.length > 1) {\n      logger('No KID specified and JWKS endpoint returned more than 1 key');\n      throw new SigningKeyNotFoundError('No KID specified and JWKS endpoint returned more than 1 key');\n    }\n\n    const key = keys.find(k => !kidDefined || k.kid === kid);\n    if (key) {\n      return key;\n    } else {\n      logger(`Unable to find a signing key that matches '${kid}'`);\n      throw new SigningKeyNotFoundError(`Unable to find a signing key that matches '${kid}'`);\n    }\n  }\n}\n\nmodule.exports = {\n  JwksClient\n};\n", "function ArgumentError(message) {\n  Error.call(this, message);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = 'ArgumentError';\n  this.message = message;\n}\n\nArgumentError.prototype = Object.create(Error.prototype);\nArgumentError.prototype.constructor = ArgumentError;\nmodule.exports = ArgumentError;\n", "module.exports = {\n  ArgumentError: require('./ArgumentError'),\n  JwksError: require('./JwksError'),\n  JwksRateLimitError: require('./JwksRateLimitError'),\n  SigningKeyNotFoundError: require('./SigningKeyNotFoundError')\n};\n", "const allowedSignatureAlg = [\n  'RS256',\n  'RS384',\n  'RS512',\n  'PS256',\n  'PS384',\n  'PS512',\n  'ES256',\n  'ES256K',\n  'ES384',\n  'ES512',\n  'EdDSA'\n];\n\nmodule.exports = allowedSignatureAlg;\n", "const { ArgumentError } = require('../errors');\nconst { JwksClient } = require('../JwksClient');\nconst supportedAlg = require('./config');\n\nconst handleSigningKeyError = (err, cb) => {\n  // If we didn't find a match, can't provide a key.\n  if (err && err.name === 'SigningKeyNotFoundError') {\n    return cb(err, null, null);\n  }\n\n  // If an error occured like rate limiting or HTTP issue, we'll bubble up the error.\n  if (err) {\n    return cb(err, null, null);\n  }\n};\n\n/**\n * Call hapiJwt2Key as a Promise\n * @param {object} options \n * @returns {Promise}\n */\nmodule.exports.hapiJwt2KeyAsync = (options) => {\n  const secretProvider = module.exports.hapiJwt2Key(options);\n  return function(decoded) {\n    return new Promise((resolve, reject) => {\n      const cb = (err, key) => {\n        (!key || err) ? reject(err) : resolve({ key });\n      };\n      secretProvider(decoded, cb);\n    });\n  };\n}; \n\nmodule.exports.hapiJwt2Key = function (options) {\n  if (options === null || options === undefined) {\n    throw new ArgumentError('An options object must be provided when initializing hapiJwt2Key');\n  }\n\n  const client = new JwksClient(options);\n  const onError = options.handleSigningKeyError || handleSigningKeyError;\n\n  return function secretProvider(decoded, cb) {\n    // We cannot find a signing certificate if there is no header (no kid).\n    if (!decoded || !decoded.header) {\n      return cb(new Error('Cannot find a signing certificate if there is no header'), null, null);\n    }\n\n    if (!supportedAlg.includes(decoded.header.alg)) {\n      return cb(new Error('Unsupported algorithm ' + decoded.header.alg + ' supplied.'), null, null);\n    }\n\n    client.getSigningKey(decoded.header.kid)\n      .then(key => {\n        return cb(null, key.publicKey || key.rsaPublicKey, key);\n      }).catch(err => {\n        return onError(err, (newError) => cb(newError, null, null));\n      });\n  };\n};\n", "const { ArgumentError } = require('../errors');\nconst { JwksClient } = require('../JwksClient');\nconst supportedAlg = require('./config');\n\nconst handleSigningKeyError = (err, cb) => {\n  // If we didn't find a match, can't provide a key.\n  if (err && err.name === 'SigningKeyNotFoundError') {\n    return cb(null);\n  }\n\n  // If an error occured like rate limiting or HTTP issue, we'll bubble up the error.\n  if (err) {\n    return cb(err);\n  }\n};\n\nmodule.exports.expressJwtSecret = function (options) {\n  if (options === null || options === undefined) {\n    throw new ArgumentError('An options object must be provided when initializing expressJwtSecret');\n  }\n\n  const client = new JwksClient(options);\n  const onError = options.handleSigningKeyError || handleSigningKeyError;\n\n  const expressJwt7Provider = async (req, token) => {\n    if (!token) { return; }\n    const header = token.header;\n    if (!header || !supportedAlg.includes(header.alg)) {\n      return;\n    }\n    try {\n      const key = await client.getSigningKey(header.kid);\n      return key.publicKey || key.rsaPublicKey;\n    } catch (err) {\n      return new Promise((resolve, reject) => {\n        onError(err, (newError) => {\n          if (!newError) { return resolve(); }\n          reject(newError);\n        });\n      });\n    }\n  };\n\n  return function secretProvider(req, header, payload, cb) {\n    //This function has 4 parameters to make it work with express-jwt@6\n    //but it also supports express-jwt@7 which only has 2.\n    if (arguments.length === 4) {\n      expressJwt7Provider(req, { header })\n        .then(key => {\n          setImmediate(cb, null, key);\n        }).catch(err => {\n          setImmediate(cb, err);\n        });\n\n      return;\n    }\n\n    return expressJwt7Provider(req, arguments[1]);\n  };\n};\n", "const { ArgumentError } = require('../errors');\nconst { JwksClient } = require('../JwksClient');\nconst supportedAlg = require('./config');\n\nmodule.exports.koaJwtSecret = function (options = {}) {\n  if (!options.jwksUri) {\n    throw new ArgumentError('No JWKS provided. Please provide a jwksUri');\n  }\n\n  const client = new JwksClient(options);\n\n  return function secretProvider({ alg, kid } = {}) {\n    return new Promise((resolve, reject) => {\n      if (!supportedAlg.includes(alg)) {\n        return reject(new Error('Missing / invalid token algorithm'));\n      }\n\n      client.getSigningKey(kid)\n        .then(key => {\n          resolve(key.publicKey || key.rsaPublicKey);\n        }).catch(err => {\n          if (options.handleSigningKeyError) {\n            return options.handleSigningKeyError(err).then(reject);\n          }\n\n          return reject(err);\n        });\n    });\n  };\n};\n", "const JWT = require('jose').JWT;\nconst { ArgumentError } = require('../errors');\nconst { JwksClient } = require('../JwksClient');\nconst supportedAlg = require('./config');\n\nconst handleSigningKeyError = (err, cb) => {\n  // If we didn't find a match, can't provide a key.\n  if (err && err.name === 'SigningKeyNotFoundError') {\n    return cb(null);\n  }\n\n  // If an error occured like rate limiting or HTTP issue, we'll bubble up the error.\n  if (err) {\n    return cb(err);\n  }\n};\n\nmodule.exports.passportJwtSecret = function (options) {\n  if (options === null || options === undefined) {\n    throw new ArgumentError('An options object must be provided when initializing passportJwtSecret');\n  }\n\n  if (!options.jwksUri) {\n    throw new ArgumentError('No JWKS provided. Please provide a jwksUri');\n  }\n\n  const client = new JwksClient(options);\n  const onError = options.handleSigningKeyError || handleSigningKeyError;\n\n  return function secretProvider(req, rawJwtToken, cb) {\n    let decoded;\n    try {\n      decoded = JWT.decode(rawJwtToken, { complete: true });\n    } catch (err) {\n      decoded = null;\n    }\n\n    if (!decoded || !supportedAlg.includes(decoded.header.alg)) {\n      return cb(null, null);\n    }\n\n    client.getSigningKey(decoded.header.kid)\n      .then(key => {\n        cb(null, key.publicKey || key.rsaPublicKey);\n      }).catch(err => {\n        onError(err, (newError) => cb(newError, null));\n      });\n  };\n};\n", "const { JwksClient } = require('./JwksClient');\nconst errors = require('./errors');\nconst { hapiJwt2Key, hapiJwt2KeyAsync } = require('./integrations/hapi');\nconst { expressJwtSecret } = require('./integrations/express');\nconst { koaJwtSecret } = require('./integrations/koa');\nconst { passportJwtSecret } = require('./integrations/passport');\n\nmodule.exports = (options) => {\n  return new JwksClient(options);\n};\nmodule.exports.JwksClient = JwksClient;\n\nmodule.exports.ArgumentError = errors.ArgumentError;\nmodule.exports.JwksError = errors.JwksError;\nmodule.exports.JwksRateLimitError = errors.JwksRateLimitError;\nmodule.exports.SigningKeyNotFoundError = errors.SigningKeyNotFoundError;\n\nmodule.exports.expressJwtSecret = expressJwtSecret;\nmodule.exports.hapiJwt2Key = hapiJwt2Key;\nmodule.exports.hapiJwt2KeyAsync = hapiJwt2KeyAsync;\nmodule.exports.koaJwtSecret = koaJwtSecret;\nmodule.exports.passportJwtSecret = passportJwtSecret;\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JwtErrorCode = exports.JwtError = exports.decodeJwt = exports.verifyJwtSignature = exports.EmulatorSignatureVerifier = exports.PublicKeySignatureVerifier = exports.UrlKeyFetcher = exports.JwksFetcher = exports.ALGORITHM_RS256 = void 0;\nconst validator = require(\"./validator\");\nconst jwt = require(\"jsonwebtoken\");\nconst jwks = require(\"jwks-rsa\");\nconst api_request_1 = require(\"../utils/api-request\");\nexports.ALGORITHM_RS256 = 'RS256';\n// `jsonwebtoken` converts errors from the `getKey` callback to its own `JsonWebTokenError` type\n// and prefixes the error message with the following. Use the prefix to identify errors thrown\n// from the key provider callback.\n// https://github.com/auth0/node-jsonwebtoken/blob/d71e383862fc735991fd2e759181480f066bf138/verify.js#L96\nconst JWT_CALLBACK_ERROR_PREFIX = 'error in secret or public key callback: ';\nconst NO_MATCHING_KID_ERROR_MESSAGE = 'no-matching-kid-error';\nconst NO_KID_IN_HEADER_ERROR_MESSAGE = 'no-kid-in-header-error';\nconst HOUR_IN_SECONDS = 3600;\nclass JwksFetcher {\n    constructor(jwksUrl) {\n        this.publicKeysExpireAt = 0;\n        if (!validator.isURL(jwksUrl)) {\n            throw new Error('The provided JWKS URL is not a valid URL.');\n        }\n        this.client = jwks({\n            jwksUri: jwksUrl,\n            cache: false, // disable jwks-rsa LRU cache as the keys are always cached for 6 hours.\n        });\n    }\n    fetchPublicKeys() {\n        if (this.shouldRefresh()) {\n            return this.refresh();\n        }\n        return Promise.resolve(this.publicKeys);\n    }\n    shouldRefresh() {\n        return !this.publicKeys || this.publicKeysExpireAt <= Date.now();\n    }\n    refresh() {\n        return this.client.getSigningKeys()\n            .then((signingKeys) => {\n            // reset expire at from previous set of keys.\n            this.publicKeysExpireAt = 0;\n            const newKeys = signingKeys.reduce((map, signingKey) => {\n                map[signingKey.kid] = signingKey.getPublicKey();\n                return map;\n            }, {});\n            this.publicKeysExpireAt = Date.now() + (HOUR_IN_SECONDS * 6 * 1000);\n            this.publicKeys = newKeys;\n            return newKeys;\n        }).catch((err) => {\n            throw new Error(`Error fetching Json Web Keys: ${err.message}`);\n        });\n    }\n}\nexports.JwksFetcher = JwksFetcher;\n/**\n * Class to fetch public keys from a client certificates URL.\n */\nclass UrlKeyFetcher {\n    constructor(clientCertUrl, httpAgent) {\n        this.clientCertUrl = clientCertUrl;\n        this.httpAgent = httpAgent;\n        this.publicKeysExpireAt = 0;\n        if (!validator.isURL(clientCertUrl)) {\n            throw new Error('The provided public client certificate URL is not a valid URL.');\n        }\n    }\n    /**\n     * Fetches the public keys for the Google certs.\n     *\n     * @returns A promise fulfilled with public keys for the Google certs.\n     */\n    fetchPublicKeys() {\n        if (this.shouldRefresh()) {\n            return this.refresh();\n        }\n        return Promise.resolve(this.publicKeys);\n    }\n    /**\n     * Checks if the cached public keys need to be refreshed.\n     *\n     * @returns Whether the keys should be fetched from the client certs url or not.\n     */\n    shouldRefresh() {\n        return !this.publicKeys || this.publicKeysExpireAt <= Date.now();\n    }\n    refresh() {\n        const client = new api_request_1.HttpClient();\n        const request = {\n            method: 'GET',\n            url: this.clientCertUrl,\n            httpAgent: this.httpAgent,\n        };\n        return client.send(request).then((resp) => {\n            if (!resp.isJson() || resp.data.error) {\n                // Treat all non-json messages and messages with an 'error' field as\n                // error responses.\n                throw new api_request_1.HttpError(resp);\n            }\n            // reset expire at from previous set of keys.\n            this.publicKeysExpireAt = 0;\n            if (Object.prototype.hasOwnProperty.call(resp.headers, 'cache-control')) {\n                const cacheControlHeader = resp.headers['cache-control'];\n                const parts = cacheControlHeader.split(',');\n                parts.forEach((part) => {\n                    const subParts = part.trim().split('=');\n                    if (subParts[0] === 'max-age') {\n                        const maxAge = +subParts[1];\n                        this.publicKeysExpireAt = Date.now() + (maxAge * 1000);\n                    }\n                });\n            }\n            this.publicKeys = resp.data;\n            return resp.data;\n        }).catch((err) => {\n            if (err instanceof api_request_1.HttpError) {\n                let errorMessage = 'Error fetching public keys for Google certs: ';\n                const resp = err.response;\n                if (resp.isJson() && resp.data.error) {\n                    errorMessage += `${resp.data.error}`;\n                    if (resp.data.error_description) {\n                        errorMessage += ' (' + resp.data.error_description + ')';\n                    }\n                }\n                else {\n                    errorMessage += `${resp.text}`;\n                }\n                throw new Error(errorMessage);\n            }\n            throw err;\n        });\n    }\n}\nexports.UrlKeyFetcher = UrlKeyFetcher;\n/**\n * Class for verifying JWT signature with a public key.\n */\nclass PublicKeySignatureVerifier {\n    constructor(keyFetcher) {\n        this.keyFetcher = keyFetcher;\n        if (!validator.isNonNullObject(keyFetcher)) {\n            throw new Error('The provided key fetcher is not an object or null.');\n        }\n    }\n    static withCertificateUrl(clientCertUrl, httpAgent) {\n        return new PublicKeySignatureVerifier(new UrlKeyFetcher(clientCertUrl, httpAgent));\n    }\n    static withJwksUrl(jwksUrl) {\n        return new PublicKeySignatureVerifier(new JwksFetcher(jwksUrl));\n    }\n    verify(token) {\n        if (!validator.isString(token)) {\n            return Promise.reject(new JwtError(JwtErrorCode.INVALID_ARGUMENT, 'The provided token must be a string.'));\n        }\n        return verifyJwtSignature(token, getKeyCallback(this.keyFetcher), { algorithms: [exports.ALGORITHM_RS256] })\n            .catch((error) => {\n            if (error.code === JwtErrorCode.NO_KID_IN_HEADER) {\n                // No kid in JWT header. Try with all the public keys.\n                return this.verifyWithoutKid(token);\n            }\n            throw error;\n        });\n    }\n    verifyWithoutKid(token) {\n        return this.keyFetcher.fetchPublicKeys()\n            .then(publicKeys => this.verifyWithAllKeys(token, publicKeys));\n    }\n    verifyWithAllKeys(token, keys) {\n        const promises = [];\n        Object.values(keys).forEach((key) => {\n            const result = verifyJwtSignature(token, key)\n                .then(() => true)\n                .catch((error) => {\n                if (error.code === JwtErrorCode.TOKEN_EXPIRED) {\n                    throw error;\n                }\n                return false;\n            });\n            promises.push(result);\n        });\n        return Promise.all(promises)\n            .then((result) => {\n            if (result.every((r) => r === false)) {\n                throw new JwtError(JwtErrorCode.INVALID_SIGNATURE, 'Invalid token signature.');\n            }\n        });\n    }\n}\nexports.PublicKeySignatureVerifier = PublicKeySignatureVerifier;\n/**\n * Class for verifying unsigned (emulator) JWTs.\n */\nclass EmulatorSignatureVerifier {\n    verify(token) {\n        // Signature checks skipped for emulator; no need to fetch public keys.\n        return verifyJwtSignature(token, '');\n    }\n}\nexports.EmulatorSignatureVerifier = EmulatorSignatureVerifier;\n/**\n * Provides a callback to fetch public keys.\n *\n * @param fetcher - KeyFetcher to fetch the keys from.\n * @returns A callback function that can be used to get keys in `jsonwebtoken`.\n */\nfunction getKeyCallback(fetcher) {\n    return (header, callback) => {\n        if (!header.kid) {\n            callback(new Error(NO_KID_IN_HEADER_ERROR_MESSAGE));\n        }\n        const kid = header.kid || '';\n        fetcher.fetchPublicKeys().then((publicKeys) => {\n            if (!Object.prototype.hasOwnProperty.call(publicKeys, kid)) {\n                callback(new Error(NO_MATCHING_KID_ERROR_MESSAGE));\n            }\n            else {\n                callback(null, publicKeys[kid]);\n            }\n        })\n            .catch(error => {\n            callback(error);\n        });\n    };\n}\n/**\n * Verifies the signature of a JWT using the provided secret or a function to fetch\n * the secret or public key.\n *\n * @param token - The JWT to be verified.\n * @param secretOrPublicKey - The secret or a function to fetch the secret or public key.\n * @param options - JWT verification options.\n * @returns A Promise resolving for a token with a valid signature.\n */\nfunction verifyJwtSignature(token, secretOrPublicKey, options) {\n    if (!validator.isString(token)) {\n        return Promise.reject(new JwtError(JwtErrorCode.INVALID_ARGUMENT, 'The provided token must be a string.'));\n    }\n    return new Promise((resolve, reject) => {\n        jwt.verify(token, secretOrPublicKey, options, (error) => {\n            if (!error) {\n                return resolve();\n            }\n            if (error.name === 'TokenExpiredError') {\n                return reject(new JwtError(JwtErrorCode.TOKEN_EXPIRED, 'The provided token has expired. Get a fresh token from your ' +\n                    'client app and try again.'));\n            }\n            else if (error.name === 'JsonWebTokenError') {\n                if (error.message && error.message.includes(JWT_CALLBACK_ERROR_PREFIX)) {\n                    const message = error.message.split(JWT_CALLBACK_ERROR_PREFIX).pop() || 'Error fetching public keys.';\n                    let code = JwtErrorCode.KEY_FETCH_ERROR;\n                    if (message === NO_MATCHING_KID_ERROR_MESSAGE) {\n                        code = JwtErrorCode.NO_MATCHING_KID;\n                    }\n                    else if (message === NO_KID_IN_HEADER_ERROR_MESSAGE) {\n                        code = JwtErrorCode.NO_KID_IN_HEADER;\n                    }\n                    return reject(new JwtError(code, message));\n                }\n            }\n            return reject(new JwtError(JwtErrorCode.INVALID_SIGNATURE, error.message));\n        });\n    });\n}\nexports.verifyJwtSignature = verifyJwtSignature;\n/**\n * Decodes general purpose Firebase JWTs.\n *\n * @param jwtToken - JWT token to be decoded.\n * @returns Decoded token containing the header and payload.\n */\nfunction decodeJwt(jwtToken) {\n    if (!validator.isString(jwtToken)) {\n        return Promise.reject(new JwtError(JwtErrorCode.INVALID_ARGUMENT, 'The provided token must be a string.'));\n    }\n    const fullDecodedToken = jwt.decode(jwtToken, {\n        complete: true,\n    });\n    if (!fullDecodedToken) {\n        return Promise.reject(new JwtError(JwtErrorCode.INVALID_ARGUMENT, 'Decoding token failed.'));\n    }\n    const header = fullDecodedToken?.header;\n    const payload = fullDecodedToken?.payload;\n    return Promise.resolve({ header, payload });\n}\nexports.decodeJwt = decodeJwt;\n/**\n * Jwt error code structure.\n *\n * @param code - The error code.\n * @param message - The error message.\n * @constructor\n */\nclass JwtError extends Error {\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n        this.message = message;\n        this.__proto__ = JwtError.prototype;\n    }\n}\nexports.JwtError = JwtError;\n/**\n * JWT error codes.\n */\nvar JwtErrorCode;\n(function (JwtErrorCode) {\n    JwtErrorCode[\"INVALID_ARGUMENT\"] = \"invalid-argument\";\n    JwtErrorCode[\"INVALID_CREDENTIAL\"] = \"invalid-credential\";\n    JwtErrorCode[\"TOKEN_EXPIRED\"] = \"token-expired\";\n    JwtErrorCode[\"INVALID_SIGNATURE\"] = \"invalid-token\";\n    JwtErrorCode[\"NO_MATCHING_KID\"] = \"no-matching-kid-error\";\n    JwtErrorCode[\"NO_KID_IN_HEADER\"] = \"no-kid-error\";\n    JwtErrorCode[\"KEY_FETCH_ERROR\"] = \"key-fetch-error\";\n})(JwtErrorCode = exports.JwtErrorCode || (exports.JwtErrorCode = {}));\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSessionCookieVerifier = exports.createAuthBlockingTokenVerifier = exports.createIdTokenVerifier = exports.FirebaseTokenVerifier = exports.SESSION_COOKIE_INFO = exports.AUTH_BLOCKING_TOKEN_INFO = exports.ID_TOKEN_INFO = void 0;\nconst error_1 = require(\"../utils/error\");\nconst util = require(\"../utils/index\");\nconst validator = require(\"../utils/validator\");\nconst jwt_1 = require(\"../utils/jwt\");\n// Audience to use for Firebase Auth Custom tokens\nconst FIREBASE_AUDIENCE = 'https://identitytoolkit.googleapis.com/google.identity.identitytoolkit.v1.IdentityToolkit';\n// URL containing the public keys for the Google certs (whose private keys are used to sign Firebase\n// Auth ID tokens)\nconst CLIENT_CERT_URL = 'https://www.googleapis.com/robot/v1/metadata/x509/securetoken@system.gserviceaccount.com';\n// URL containing the public keys for Firebase session cookies. This will be updated to a different URL soon.\nconst SESSION_COOKIE_CERT_URL = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/publicKeys';\nconst EMULATOR_VERIFIER = new jwt_1.EmulatorSignatureVerifier();\n/**\n * User facing token information related to the Firebase ID token.\n *\n * @internal\n */\nexports.ID_TOKEN_INFO = {\n    url: 'https://firebase.google.com/docs/auth/admin/verify-id-tokens',\n    verifyApiName: 'verifyIdToken()',\n    jwtName: 'Firebase ID token',\n    shortName: 'ID token',\n    expiredErrorCode: error_1.AuthClientErrorCode.ID_TOKEN_EXPIRED,\n};\n/**\n * User facing token information related to the Firebase Auth Blocking token.\n *\n * @internal\n */\nexports.AUTH_BLOCKING_TOKEN_INFO = {\n    url: 'https://cloud.google.com/identity-platform/docs/blocking-functions',\n    verifyApiName: '_verifyAuthBlockingToken()',\n    jwtName: 'Firebase Auth Blocking token',\n    shortName: 'Auth Blocking token',\n    expiredErrorCode: error_1.AuthClientErrorCode.AUTH_BLOCKING_TOKEN_EXPIRED,\n};\n/**\n * User facing token information related to the Firebase session cookie.\n *\n * @internal\n */\nexports.SESSION_COOKIE_INFO = {\n    url: 'https://firebase.google.com/docs/auth/admin/manage-cookies',\n    verifyApiName: 'verifySessionCookie()',\n    jwtName: 'Firebase session cookie',\n    shortName: 'session cookie',\n    expiredErrorCode: error_1.AuthClientErrorCode.SESSION_COOKIE_EXPIRED,\n};\n/**\n * Class for verifying general purpose Firebase JWTs. This verifies ID tokens and session cookies.\n *\n * @internal\n */\nclass FirebaseTokenVerifier {\n    constructor(clientCertUrl, issuer, tokenInfo, app) {\n        this.issuer = issuer;\n        this.tokenInfo = tokenInfo;\n        this.app = app;\n        if (!validator.isURL(clientCertUrl)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The provided public client certificate URL is an invalid URL.');\n        }\n        else if (!validator.isURL(issuer)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The provided JWT issuer is an invalid URL.');\n        }\n        else if (!validator.isNonNullObject(tokenInfo)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The provided JWT information is not an object or null.');\n        }\n        else if (!validator.isURL(tokenInfo.url)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The provided JWT verification documentation URL is invalid.');\n        }\n        else if (!validator.isNonEmptyString(tokenInfo.verifyApiName)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The JWT verify API name must be a non-empty string.');\n        }\n        else if (!validator.isNonEmptyString(tokenInfo.jwtName)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The JWT public full name must be a non-empty string.');\n        }\n        else if (!validator.isNonEmptyString(tokenInfo.shortName)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The JWT public short name must be a non-empty string.');\n        }\n        else if (!validator.isNonNullObject(tokenInfo.expiredErrorCode) || !('code' in tokenInfo.expiredErrorCode)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The JWT expiration error code must be a non-null ErrorInfo object.');\n        }\n        this.shortNameArticle = tokenInfo.shortName.charAt(0).match(/[aeiou]/i) ? 'an' : 'a';\n        this.signatureVerifier =\n            jwt_1.PublicKeySignatureVerifier.withCertificateUrl(clientCertUrl, app.options.httpAgent);\n        // For backward compatibility, the project ID is validated in the verification call.\n    }\n    /**\n     * Verifies the format and signature of a Firebase Auth JWT token.\n     *\n     * @param jwtToken - The Firebase Auth JWT token to verify.\n     * @param isEmulator - Whether to accept Auth Emulator tokens.\n     * @returns A promise fulfilled with the decoded claims of the Firebase Auth ID token.\n     */\n    verifyJWT(jwtToken, isEmulator = false) {\n        if (!validator.isString(jwtToken)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `First argument to ${this.tokenInfo.verifyApiName} must be a ${this.tokenInfo.jwtName} string.`);\n        }\n        return this.ensureProjectId()\n            .then((projectId) => {\n            return this.decodeAndVerify(jwtToken, projectId, isEmulator);\n        })\n            .then((decoded) => {\n            const decodedIdToken = decoded.payload;\n            decodedIdToken.uid = decodedIdToken.sub;\n            return decodedIdToken;\n        });\n    }\n    /** @alpha */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    _verifyAuthBlockingToken(jwtToken, isEmulator, audience) {\n        if (!validator.isString(jwtToken)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `First argument to ${this.tokenInfo.verifyApiName} must be a ${this.tokenInfo.jwtName} string.`);\n        }\n        return this.ensureProjectId()\n            .then((projectId) => {\n            if (typeof audience === 'undefined') {\n                audience = `${projectId}.cloudfunctions.net/`;\n            }\n            return this.decodeAndVerify(jwtToken, projectId, isEmulator, audience);\n        })\n            .then((decoded) => {\n            const decodedAuthBlockingToken = decoded.payload;\n            decodedAuthBlockingToken.uid = decodedAuthBlockingToken.sub;\n            return decodedAuthBlockingToken;\n        });\n    }\n    ensureProjectId() {\n        return util.findProjectId(this.app)\n            .then((projectId) => {\n            if (!validator.isNonEmptyString(projectId)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CREDENTIAL, 'Must initialize app with a cert credential or set your Firebase project ID as the ' +\n                    `GOOGLE_CLOUD_PROJECT environment variable to call ${this.tokenInfo.verifyApiName}.`);\n            }\n            return Promise.resolve(projectId);\n        });\n    }\n    decodeAndVerify(token, projectId, isEmulator, audience) {\n        return this.safeDecode(token)\n            .then((decodedToken) => {\n            this.verifyContent(decodedToken, projectId, isEmulator, audience);\n            return this.verifySignature(token, isEmulator)\n                .then(() => decodedToken);\n        });\n    }\n    safeDecode(jwtToken) {\n        return (0, jwt_1.decodeJwt)(jwtToken)\n            .catch((err) => {\n            if (err.code == jwt_1.JwtErrorCode.INVALID_ARGUMENT) {\n                const verifyJwtTokenDocsMessage = ` See ${this.tokenInfo.url} ` +\n                    `for details on how to retrieve ${this.shortNameArticle} ${this.tokenInfo.shortName}.`;\n                const errorMessage = `Decoding ${this.tokenInfo.jwtName} failed. Make sure you passed ` +\n                    `the entire string JWT which represents ${this.shortNameArticle} ` +\n                    `${this.tokenInfo.shortName}.` + verifyJwtTokenDocsMessage;\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, errorMessage);\n            }\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, err.message);\n        });\n    }\n    /**\n     * Verifies the content of a Firebase Auth JWT.\n     *\n     * @param fullDecodedToken - The decoded JWT.\n     * @param projectId - The Firebase Project Id.\n     * @param isEmulator - Whether the token is an Emulator token.\n     */\n    verifyContent(fullDecodedToken, projectId, isEmulator, audience) {\n        const header = fullDecodedToken && fullDecodedToken.header;\n        const payload = fullDecodedToken && fullDecodedToken.payload;\n        const projectIdMatchMessage = ` Make sure the ${this.tokenInfo.shortName} comes from the same ` +\n            'Firebase project as the service account used to authenticate this SDK.';\n        const verifyJwtTokenDocsMessage = ` See ${this.tokenInfo.url} ` +\n            `for details on how to retrieve ${this.shortNameArticle} ${this.tokenInfo.shortName}.`;\n        let errorMessage;\n        if (!isEmulator && typeof header.kid === 'undefined') {\n            const isCustomToken = (payload.aud === FIREBASE_AUDIENCE);\n            const isLegacyCustomToken = (header.alg === 'HS256' && payload.v === 0 && 'd' in payload && 'uid' in payload.d);\n            if (isCustomToken) {\n                errorMessage = `${this.tokenInfo.verifyApiName} expects ${this.shortNameArticle} ` +\n                    `${this.tokenInfo.shortName}, but was given a custom token.`;\n            }\n            else if (isLegacyCustomToken) {\n                errorMessage = `${this.tokenInfo.verifyApiName} expects ${this.shortNameArticle} ` +\n                    `${this.tokenInfo.shortName}, but was given a legacy custom token.`;\n            }\n            else {\n                errorMessage = `${this.tokenInfo.jwtName} has no \"kid\" claim.`;\n            }\n            errorMessage += verifyJwtTokenDocsMessage;\n        }\n        else if (!isEmulator && header.alg !== jwt_1.ALGORITHM_RS256) {\n            errorMessage = `${this.tokenInfo.jwtName} has incorrect algorithm. Expected \"` + jwt_1.ALGORITHM_RS256 + '\" but got ' +\n                '\"' + header.alg + '\".' + verifyJwtTokenDocsMessage;\n        }\n        else if (typeof audience !== 'undefined' && !payload.aud.includes(audience)) {\n            errorMessage = `${this.tokenInfo.jwtName} has incorrect \"aud\" (audience) claim. Expected \"` +\n                audience + '\" but got \"' + payload.aud + '\".' + verifyJwtTokenDocsMessage;\n        }\n        else if (typeof audience === 'undefined' && payload.aud !== projectId) {\n            errorMessage = `${this.tokenInfo.jwtName} has incorrect \"aud\" (audience) claim. Expected \"` +\n                projectId + '\" but got \"' + payload.aud + '\".' + projectIdMatchMessage +\n                verifyJwtTokenDocsMessage;\n        }\n        else if (payload.iss !== this.issuer + projectId) {\n            errorMessage = `${this.tokenInfo.jwtName} has incorrect \"iss\" (issuer) claim. Expected ` +\n                `\"${this.issuer}` + projectId + '\" but got \"' +\n                payload.iss + '\".' + projectIdMatchMessage + verifyJwtTokenDocsMessage;\n        }\n        else if (typeof payload.sub !== 'string') {\n            errorMessage = `${this.tokenInfo.jwtName} has no \"sub\" (subject) claim.` + verifyJwtTokenDocsMessage;\n        }\n        else if (payload.sub === '') {\n            errorMessage = `${this.tokenInfo.jwtName} has an empty string \"sub\" (subject) claim.` + verifyJwtTokenDocsMessage;\n        }\n        else if (payload.sub.length > 128) {\n            errorMessage = `${this.tokenInfo.jwtName} has \"sub\" (subject) claim longer than 128 characters.` +\n                verifyJwtTokenDocsMessage;\n        }\n        if (errorMessage) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, errorMessage);\n        }\n    }\n    verifySignature(jwtToken, isEmulator) {\n        const verifier = isEmulator ? EMULATOR_VERIFIER : this.signatureVerifier;\n        return verifier.verify(jwtToken)\n            .catch((error) => {\n            throw this.mapJwtErrorToAuthError(error);\n        });\n    }\n    /**\n     * Maps JwtError to FirebaseAuthError\n     *\n     * @param error - JwtError to be mapped.\n     * @returns FirebaseAuthError or Error instance.\n     */\n    mapJwtErrorToAuthError(error) {\n        const verifyJwtTokenDocsMessage = ` See ${this.tokenInfo.url} ` +\n            `for details on how to retrieve ${this.shortNameArticle} ${this.tokenInfo.shortName}.`;\n        if (error.code === jwt_1.JwtErrorCode.TOKEN_EXPIRED) {\n            const errorMessage = `${this.tokenInfo.jwtName} has expired. Get a fresh ${this.tokenInfo.shortName}` +\n                ` from your client app and try again (auth/${this.tokenInfo.expiredErrorCode.code}).` +\n                verifyJwtTokenDocsMessage;\n            return new error_1.FirebaseAuthError(this.tokenInfo.expiredErrorCode, errorMessage);\n        }\n        else if (error.code === jwt_1.JwtErrorCode.INVALID_SIGNATURE) {\n            const errorMessage = `${this.tokenInfo.jwtName} has invalid signature.` + verifyJwtTokenDocsMessage;\n            return new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, errorMessage);\n        }\n        else if (error.code === jwt_1.JwtErrorCode.NO_MATCHING_KID) {\n            const errorMessage = `${this.tokenInfo.jwtName} has \"kid\" claim which does not ` +\n                `correspond to a known public key. Most likely the ${this.tokenInfo.shortName} ` +\n                'is expired, so get a fresh token from your client app and try again.';\n            return new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, errorMessage);\n        }\n        return new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, error.message);\n    }\n}\nexports.FirebaseTokenVerifier = FirebaseTokenVerifier;\n/**\n * Creates a new FirebaseTokenVerifier to verify Firebase ID tokens.\n *\n * @internal\n * @param app - Firebase app instance.\n * @returns FirebaseTokenVerifier\n */\nfunction createIdTokenVerifier(app) {\n    return new FirebaseTokenVerifier(CLIENT_CERT_URL, 'https://securetoken.google.com/', exports.ID_TOKEN_INFO, app);\n}\nexports.createIdTokenVerifier = createIdTokenVerifier;\n/**\n * Creates a new FirebaseTokenVerifier to verify Firebase Auth Blocking tokens.\n *\n * @internal\n * @param app - Firebase app instance.\n * @returns FirebaseTokenVerifier\n */\nfunction createAuthBlockingTokenVerifier(app) {\n    return new FirebaseTokenVerifier(CLIENT_CERT_URL, 'https://securetoken.google.com/', exports.AUTH_BLOCKING_TOKEN_INFO, app);\n}\nexports.createAuthBlockingTokenVerifier = createAuthBlockingTokenVerifier;\n/**\n * Creates a new FirebaseTokenVerifier to verify Firebase session cookies.\n *\n * @internal\n * @param app - Firebase app instance.\n * @returns FirebaseTokenVerifier\n */\nfunction createSessionCookieVerifier(app) {\n    return new FirebaseTokenVerifier(SESSION_COOKIE_CERT_URL, 'https://session.firebase.google.com/', exports.SESSION_COOKIE_INFO, app);\n}\nexports.createSessionCookieVerifier = createSessionCookieVerifier;\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserRecord = exports.UserInfo = exports.UserMetadata = exports.MultiFactorSettings = exports.PhoneMultiFactorInfo = exports.MultiFactorInfo = void 0;\nconst deep_copy_1 = require(\"../utils/deep-copy\");\nconst validator_1 = require(\"../utils/validator\");\nconst utils = require(\"../utils\");\nconst error_1 = require(\"../utils/error\");\n/**\n * 'REDACTED', encoded as a base64 string.\n */\nconst B64_REDACTED = Buffer.from('REDACTED').toString('base64');\n/**\n * Parses a time stamp string or number and returns the corresponding date if valid.\n *\n * @param time - The unix timestamp string or number in milliseconds.\n * @returns The corresponding date as a UTC string, if valid. Otherwise, null.\n */\nfunction parseDate(time) {\n    try {\n        const date = new Date(parseInt(time, 10));\n        if (!isNaN(date.getTime())) {\n            return date.toUTCString();\n        }\n    }\n    catch (e) {\n        // Do nothing. null will be returned.\n    }\n    return null;\n}\nvar MultiFactorId;\n(function (MultiFactorId) {\n    MultiFactorId[\"Phone\"] = \"phone\";\n})(MultiFactorId || (MultiFactorId = {}));\n/**\n * Interface representing the common properties of a user-enrolled second factor.\n */\nclass MultiFactorInfo {\n    /**\n     * Initializes the MultiFactorInfo object using the server side response.\n     *\n     * @param response - The server side response.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        this.initFromServerResponse(response);\n    }\n    /**\n     * Initializes the MultiFactorInfo associated subclass using the server side.\n     * If no MultiFactorInfo is associated with the response, null is returned.\n     *\n     * @param response - The server side response.\n     * @internal\n     */\n    static initMultiFactorInfo(response) {\n        let multiFactorInfo = null;\n        // Only PhoneMultiFactorInfo currently available.\n        try {\n            multiFactorInfo = new PhoneMultiFactorInfo(response);\n        }\n        catch (e) {\n            // Ignore error.\n        }\n        return multiFactorInfo;\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        return {\n            uid: this.uid,\n            displayName: this.displayName,\n            factorId: this.factorId,\n            enrollmentTime: this.enrollmentTime,\n        };\n    }\n    /**\n     * Initializes the MultiFactorInfo object using the provided server response.\n     *\n     * @param response - The server side response.\n     */\n    initFromServerResponse(response) {\n        const factorId = response && this.getFactorId(response);\n        if (!factorId || !response || !response.mfaEnrollmentId) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid multi-factor info response');\n        }\n        utils.addReadonlyGetter(this, 'uid', response.mfaEnrollmentId);\n        utils.addReadonlyGetter(this, 'factorId', factorId);\n        utils.addReadonlyGetter(this, 'displayName', response.displayName);\n        // Encoded using [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n        // For example, \"2017-01-15T01:30:15.01Z\".\n        // This can be parsed directly via Date constructor.\n        // This can be computed using Data.prototype.toISOString.\n        if (response.enrolledAt) {\n            utils.addReadonlyGetter(this, 'enrollmentTime', new Date(response.enrolledAt).toUTCString());\n        }\n        else {\n            utils.addReadonlyGetter(this, 'enrollmentTime', null);\n        }\n    }\n}\nexports.MultiFactorInfo = MultiFactorInfo;\n/**\n * Interface representing a phone specific user-enrolled second factor.\n */\nclass PhoneMultiFactorInfo extends MultiFactorInfo {\n    /**\n     * Initializes the PhoneMultiFactorInfo object using the server side response.\n     *\n     * @param response - The server side response.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        super(response);\n        utils.addReadonlyGetter(this, 'phoneNumber', response.phoneInfo);\n    }\n    /**\n     * {@inheritdoc MultiFactorInfo.toJSON}\n     */\n    toJSON() {\n        return Object.assign(super.toJSON(), {\n            phoneNumber: this.phoneNumber,\n        });\n    }\n    /**\n     * Returns the factor ID based on the response provided.\n     *\n     * @param response - The server side response.\n     * @returns The multi-factor ID associated with the provided response. If the response is\n     *     not associated with any known multi-factor ID, null is returned.\n     *\n     * @internal\n     */\n    getFactorId(response) {\n        return (response && response.phoneInfo) ? MultiFactorId.Phone : null;\n    }\n}\nexports.PhoneMultiFactorInfo = PhoneMultiFactorInfo;\n/**\n * The multi-factor related user settings.\n */\nclass MultiFactorSettings {\n    /**\n     * Initializes the MultiFactor object using the server side or JWT format response.\n     *\n     * @param response - The server side response.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        const parsedEnrolledFactors = [];\n        if (!(0, validator_1.isNonNullObject)(response)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid multi-factor response');\n        }\n        else if (response.mfaInfo) {\n            response.mfaInfo.forEach((factorResponse) => {\n                const multiFactorInfo = MultiFactorInfo.initMultiFactorInfo(factorResponse);\n                if (multiFactorInfo) {\n                    parsedEnrolledFactors.push(multiFactorInfo);\n                }\n            });\n        }\n        // Make enrolled factors immutable.\n        utils.addReadonlyGetter(this, 'enrolledFactors', Object.freeze(parsedEnrolledFactors));\n    }\n    /**\n     * Returns a JSON-serializable representation of this multi-factor object.\n     *\n     * @returns A JSON-serializable representation of this multi-factor object.\n     */\n    toJSON() {\n        return {\n            enrolledFactors: this.enrolledFactors.map((info) => info.toJSON()),\n        };\n    }\n}\nexports.MultiFactorSettings = MultiFactorSettings;\n/**\n * Represents a user's metadata.\n */\nclass UserMetadata {\n    /**\n     * @param response - The server side response returned from the getAccountInfo\n     *     endpoint.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        // Creation date should always be available but due to some backend bugs there\n        // were cases in the past where users did not have creation date properly set.\n        // This included legacy Firebase migrating project users and some anonymous users.\n        // These bugs have already been addressed since then.\n        utils.addReadonlyGetter(this, 'creationTime', parseDate(response.createdAt));\n        utils.addReadonlyGetter(this, 'lastSignInTime', parseDate(response.lastLoginAt));\n        const lastRefreshAt = response.lastRefreshAt ? new Date(response.lastRefreshAt).toUTCString() : null;\n        utils.addReadonlyGetter(this, 'lastRefreshTime', lastRefreshAt);\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        return {\n            lastSignInTime: this.lastSignInTime,\n            creationTime: this.creationTime,\n            lastRefreshTime: this.lastRefreshTime,\n        };\n    }\n}\nexports.UserMetadata = UserMetadata;\n/**\n * Represents a user's info from a third-party identity provider\n * such as Google or Facebook.\n */\nclass UserInfo {\n    /**\n     * @param response - The server side response returned from the `getAccountInfo`\n     *     endpoint.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        // Provider user id and provider id are required.\n        if (!response.rawId || !response.providerId) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid user info response');\n        }\n        utils.addReadonlyGetter(this, 'uid', response.rawId);\n        utils.addReadonlyGetter(this, 'displayName', response.displayName);\n        utils.addReadonlyGetter(this, 'email', response.email);\n        utils.addReadonlyGetter(this, 'photoURL', response.photoUrl);\n        utils.addReadonlyGetter(this, 'providerId', response.providerId);\n        utils.addReadonlyGetter(this, 'phoneNumber', response.phoneNumber);\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        return {\n            uid: this.uid,\n            displayName: this.displayName,\n            email: this.email,\n            photoURL: this.photoURL,\n            providerId: this.providerId,\n            phoneNumber: this.phoneNumber,\n        };\n    }\n}\nexports.UserInfo = UserInfo;\n/**\n * Represents a user.\n */\nclass UserRecord {\n    /**\n     * @param response - The server side response returned from the getAccountInfo\n     *     endpoint.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        // The Firebase user id is required.\n        if (!response.localId) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid user response');\n        }\n        utils.addReadonlyGetter(this, 'uid', response.localId);\n        utils.addReadonlyGetter(this, 'email', response.email);\n        utils.addReadonlyGetter(this, 'emailVerified', !!response.emailVerified);\n        utils.addReadonlyGetter(this, 'displayName', response.displayName);\n        utils.addReadonlyGetter(this, 'photoURL', response.photoUrl);\n        utils.addReadonlyGetter(this, 'phoneNumber', response.phoneNumber);\n        // If disabled is not provided, the account is enabled by default.\n        utils.addReadonlyGetter(this, 'disabled', response.disabled || false);\n        utils.addReadonlyGetter(this, 'metadata', new UserMetadata(response));\n        const providerData = [];\n        for (const entry of (response.providerUserInfo || [])) {\n            providerData.push(new UserInfo(entry));\n        }\n        utils.addReadonlyGetter(this, 'providerData', providerData);\n        // If the password hash is redacted (probably due to missing permissions)\n        // then clear it out, similar to how the salt is returned. (Otherwise, it\n        // *looks* like a b64-encoded hash is present, which is confusing.)\n        if (response.passwordHash === B64_REDACTED) {\n            utils.addReadonlyGetter(this, 'passwordHash', undefined);\n        }\n        else {\n            utils.addReadonlyGetter(this, 'passwordHash', response.passwordHash);\n        }\n        utils.addReadonlyGetter(this, 'passwordSalt', response.salt);\n        if (response.customAttributes) {\n            utils.addReadonlyGetter(this, 'customClaims', JSON.parse(response.customAttributes));\n        }\n        let validAfterTime = null;\n        // Convert validSince first to UTC milliseconds and then to UTC date string.\n        if (typeof response.validSince !== 'undefined') {\n            validAfterTime = parseDate(parseInt(response.validSince, 10) * 1000);\n        }\n        utils.addReadonlyGetter(this, 'tokensValidAfterTime', validAfterTime || undefined);\n        utils.addReadonlyGetter(this, 'tenantId', response.tenantId);\n        const multiFactor = new MultiFactorSettings(response);\n        if (multiFactor.enrolledFactors.length > 0) {\n            utils.addReadonlyGetter(this, 'multiFactor', multiFactor);\n        }\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        const json = {\n            uid: this.uid,\n            email: this.email,\n            emailVerified: this.emailVerified,\n            displayName: this.displayName,\n            photoURL: this.photoURL,\n            phoneNumber: this.phoneNumber,\n            disabled: this.disabled,\n            // Convert metadata to json.\n            metadata: this.metadata.toJSON(),\n            passwordHash: this.passwordHash,\n            passwordSalt: this.passwordSalt,\n            customClaims: (0, deep_copy_1.deepCopy)(this.customClaims),\n            tokensValidAfterTime: this.tokensValidAfterTime,\n            tenantId: this.tenantId,\n        };\n        if (this.multiFactor) {\n            json.multiFactor = this.multiFactor.toJSON();\n        }\n        json.providerData = [];\n        for (const entry of this.providerData) {\n            // Convert each provider data to json.\n            json.providerData.push(entry.toJSON());\n        }\n        return json;\n    }\n}\nexports.UserRecord = UserRecord;\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseAuth = exports.createFirebaseTokenGenerator = void 0;\nconst error_1 = require(\"../utils/error\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\nconst validator = require(\"../utils/validator\");\nconst auth_api_request_1 = require(\"./auth-api-request\");\nconst token_generator_1 = require(\"./token-generator\");\nconst token_verifier_1 = require(\"./token-verifier\");\nconst auth_config_1 = require(\"./auth-config\");\nconst user_record_1 = require(\"./user-record\");\nconst identifier_1 = require(\"./identifier\");\nconst crypto_signer_1 = require(\"../utils/crypto-signer\");\n/**\n * @internal\n */\nfunction createFirebaseTokenGenerator(app, tenantId) {\n    try {\n        const signer = (0, auth_api_request_1.useEmulator)() ? new token_generator_1.EmulatedSigner() : (0, crypto_signer_1.cryptoSignerFromApp)(app);\n        return new token_generator_1.FirebaseTokenGenerator(signer, tenantId);\n    }\n    catch (err) {\n        throw (0, token_generator_1.handleCryptoSignerError)(err);\n    }\n}\nexports.createFirebaseTokenGenerator = createFirebaseTokenGenerator;\n/**\n * Common parent interface for both `Auth` and `TenantAwareAuth` APIs.\n */\nclass BaseAuth {\n    /**\n     * The BaseAuth class constructor.\n     *\n     * @param app - The FirebaseApp to associate with this Auth instance.\n     * @param authRequestHandler - The RPC request handler for this instance.\n     * @param tokenGenerator - Optional token generator. If not specified, a\n     *     (non-tenant-aware) instance will be created. Use this paramter to\n     *     specify a tenant-aware tokenGenerator.\n     * @constructor\n     * @internal\n     */\n    constructor(app, \n    /** @internal */ authRequestHandler, tokenGenerator) {\n        this.authRequestHandler = authRequestHandler;\n        if (tokenGenerator) {\n            this.tokenGenerator = tokenGenerator;\n        }\n        else {\n            this.tokenGenerator = createFirebaseTokenGenerator(app);\n        }\n        this.sessionCookieVerifier = (0, token_verifier_1.createSessionCookieVerifier)(app);\n        this.idTokenVerifier = (0, token_verifier_1.createIdTokenVerifier)(app);\n        this.authBlockingTokenVerifier = (0, token_verifier_1.createAuthBlockingTokenVerifier)(app);\n    }\n    /**\n     * Creates a new Firebase custom token (JWT) that can be sent back to a client\n     * device to use to sign in with the client SDKs' `signInWithCustomToken()`\n     * methods. (Tenant-aware instances will also embed the tenant ID in the\n     * token.)\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/create-custom-tokens | Create Custom Tokens}\n     * for code samples and detailed documentation.\n     *\n     * @param uid - The `uid` to use as the custom token's subject.\n     * @param developerClaims - Optional additional claims to include\n     *   in the custom token's payload.\n     *\n     * @returns A promise fulfilled with a custom token for the\n     *   provided `uid` and payload.\n     */\n    createCustomToken(uid, developerClaims) {\n        return this.tokenGenerator.createCustomToken(uid, developerClaims);\n    }\n    /**\n     * Verifies a Firebase ID token (JWT). If the token is valid, the promise is\n     * fulfilled with the token's decoded claims; otherwise, the promise is\n     * rejected.\n     *\n     * If `checkRevoked` is set to true, first verifies whether the corresponding\n     * user is disabled. If yes, an `auth/user-disabled` error is thrown. If no,\n     * verifies if the session corresponding to the ID token was revoked. If the\n     * corresponding user's session was invalidated, an `auth/id-token-revoked`\n     * error is thrown. If not specified the check is not applied.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/verify-id-tokens | Verify ID Tokens}\n     * for code samples and detailed documentation.\n     *\n     * @param idToken - The ID token to verify.\n     * @param checkRevoked - Whether to check if the ID token was revoked.\n     *   This requires an extra request to the Firebase Auth backend to check\n     *   the `tokensValidAfterTime` time for the corresponding user.\n     *   When not specified, this additional check is not applied.\n     *\n     * @returns A promise fulfilled with the\n     *   token's decoded claims if the ID token is valid; otherwise, a rejected\n     *   promise.\n     */\n    verifyIdToken(idToken, checkRevoked = false) {\n        const isEmulator = (0, auth_api_request_1.useEmulator)();\n        return this.idTokenVerifier.verifyJWT(idToken, isEmulator)\n            .then((decodedIdToken) => {\n            // Whether to check if the token was revoked.\n            if (checkRevoked || isEmulator) {\n                return this.verifyDecodedJWTNotRevokedOrDisabled(decodedIdToken, error_1.AuthClientErrorCode.ID_TOKEN_REVOKED);\n            }\n            return decodedIdToken;\n        });\n    }\n    /**\n     * Gets the user data for the user corresponding to a given `uid`.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#retrieve_user_data | Retrieve user data}\n     * for code samples and detailed documentation.\n     *\n     * @param uid - The `uid` corresponding to the user whose data to fetch.\n     *\n     * @returns A promise fulfilled with the user\n     *   data corresponding to the provided `uid`.\n     */\n    getUser(uid) {\n        return this.authRequestHandler.getAccountInfoByUid(uid)\n            .then((response) => {\n            // Returns the user record populated with server response.\n            return new user_record_1.UserRecord(response.users[0]);\n        });\n    }\n    /**\n     * Gets the user data for the user corresponding to a given email.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#retrieve_user_data | Retrieve user data}\n     * for code samples and detailed documentation.\n     *\n     * @param email - The email corresponding to the user whose data to\n     *   fetch.\n     *\n     * @returns A promise fulfilled with the user\n     *   data corresponding to the provided email.\n     */\n    getUserByEmail(email) {\n        return this.authRequestHandler.getAccountInfoByEmail(email)\n            .then((response) => {\n            // Returns the user record populated with server response.\n            return new user_record_1.UserRecord(response.users[0]);\n        });\n    }\n    /**\n     * Gets the user data for the user corresponding to a given phone number. The\n     * phone number has to conform to the E.164 specification.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#retrieve_user_data | Retrieve user data}\n     * for code samples and detailed documentation.\n     *\n     * @param phoneNumber - The phone number corresponding to the user whose\n     *   data to fetch.\n     *\n     * @returns A promise fulfilled with the user\n     *   data corresponding to the provided phone number.\n     */\n    getUserByPhoneNumber(phoneNumber) {\n        return this.authRequestHandler.getAccountInfoByPhoneNumber(phoneNumber)\n            .then((response) => {\n            // Returns the user record populated with server response.\n            return new user_record_1.UserRecord(response.users[0]);\n        });\n    }\n    /**\n     * Gets the user data for the user corresponding to a given provider id.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#retrieve_user_data | Retrieve user data}\n     * for code samples and detailed documentation.\n     *\n     * @param providerId - The provider ID, for example, \"google.com\" for the\n     *   Google provider.\n     * @param uid - The user identifier for the given provider.\n     *\n     * @returns A promise fulfilled with the user data corresponding to the\n     *   given provider id.\n     */\n    getUserByProviderUid(providerId, uid) {\n        // Although we don't really advertise it, we want to also handle\n        // non-federated idps with this call. So if we detect one of them, we'll\n        // reroute this request appropriately.\n        if (providerId === 'phone') {\n            return this.getUserByPhoneNumber(uid);\n        }\n        else if (providerId === 'email') {\n            return this.getUserByEmail(uid);\n        }\n        return this.authRequestHandler.getAccountInfoByFederatedUid(providerId, uid)\n            .then((response) => {\n            // Returns the user record populated with server response.\n            return new user_record_1.UserRecord(response.users[0]);\n        });\n    }\n    /**\n     * Gets the user data corresponding to the specified identifiers.\n     *\n     * There are no ordering guarantees; in particular, the nth entry in the result list is not\n     * guaranteed to correspond to the nth entry in the input parameters list.\n     *\n     * Only a maximum of 100 identifiers may be supplied. If more than 100 identifiers are supplied,\n     * this method throws a FirebaseAuthError.\n     *\n     * @param identifiers - The identifiers used to indicate which user records should be returned.\n     *     Must not have more than 100 entries.\n     * @returns A promise that resolves to the corresponding user records.\n     * @throws FirebaseAuthError If any of the identifiers are invalid or if more than 100\n     *     identifiers are specified.\n     */\n    getUsers(identifiers) {\n        if (!validator.isArray(identifiers)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '`identifiers` parameter must be an array');\n        }\n        return this.authRequestHandler\n            .getAccountInfoByIdentifiers(identifiers)\n            .then((response) => {\n            /**\n             * Checks if the specified identifier is within the list of\n             * UserRecords.\n             */\n            const isUserFound = ((id, userRecords) => {\n                return !!userRecords.find((userRecord) => {\n                    if ((0, identifier_1.isUidIdentifier)(id)) {\n                        return id.uid === userRecord.uid;\n                    }\n                    else if ((0, identifier_1.isEmailIdentifier)(id)) {\n                        return id.email === userRecord.email;\n                    }\n                    else if ((0, identifier_1.isPhoneIdentifier)(id)) {\n                        return id.phoneNumber === userRecord.phoneNumber;\n                    }\n                    else if ((0, identifier_1.isProviderIdentifier)(id)) {\n                        const matchingUserInfo = userRecord.providerData.find((userInfo) => {\n                            return id.providerId === userInfo.providerId;\n                        });\n                        return !!matchingUserInfo && id.providerUid === matchingUserInfo.uid;\n                    }\n                    else {\n                        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'Unhandled identifier type');\n                    }\n                });\n            });\n            const users = response.users ? response.users.map((user) => new user_record_1.UserRecord(user)) : [];\n            const notFound = identifiers.filter((id) => !isUserFound(id, users));\n            return { users, notFound };\n        });\n    }\n    /**\n     * Retrieves a list of users (single batch only) with a size of `maxResults`\n     * starting from the offset as specified by `pageToken`. This is used to\n     * retrieve all the users of a specified project in batches.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#list_all_users | List all users}\n     * for code samples and detailed documentation.\n     *\n     * @param maxResults - The page size, 1000 if undefined. This is also\n     *   the maximum allowed limit.\n     * @param pageToken - The next page token. If not specified, returns\n     *   users starting without any offset.\n     * @returns A promise that resolves with\n     *   the current batch of downloaded users and the next page token.\n     */\n    listUsers(maxResults, pageToken) {\n        return this.authRequestHandler.downloadAccount(maxResults, pageToken)\n            .then((response) => {\n            // List of users to return.\n            const users = [];\n            // Convert each user response to a UserRecord.\n            response.users.forEach((userResponse) => {\n                users.push(new user_record_1.UserRecord(userResponse));\n            });\n            // Return list of user records and the next page token if available.\n            const result = {\n                users,\n                pageToken: response.nextPageToken,\n            };\n            // Delete result.pageToken if undefined.\n            if (typeof result.pageToken === 'undefined') {\n                delete result.pageToken;\n            }\n            return result;\n        });\n    }\n    /**\n     * Creates a new user.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#create_a_user | Create a user}\n     * for code samples and detailed documentation.\n     *\n     * @param properties - The properties to set on the\n     *   new user record to be created.\n     *\n     * @returns A promise fulfilled with the user\n     *   data corresponding to the newly created user.\n     */\n    createUser(properties) {\n        return this.authRequestHandler.createNewAccount(properties)\n            .then((uid) => {\n            // Return the corresponding user record.\n            return this.getUser(uid);\n        })\n            .catch((error) => {\n            if (error.code === 'auth/user-not-found') {\n                // Something must have happened after creating the user and then retrieving it.\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'Unable to create the user record provided.');\n            }\n            throw error;\n        });\n    }\n    /**\n     * Deletes an existing user.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#delete_a_user | Delete a user}\n     * for code samples and detailed documentation.\n     *\n     * @param uid - The `uid` corresponding to the user to delete.\n     *\n     * @returns An empty promise fulfilled once the user has been\n     *   deleted.\n     */\n    deleteUser(uid) {\n        return this.authRequestHandler.deleteAccount(uid)\n            .then(() => {\n            // Return nothing on success.\n        });\n    }\n    /**\n     * Deletes the users specified by the given uids.\n     *\n     * Deleting a non-existing user won't generate an error (i.e. this method\n     * is idempotent.) Non-existing users are considered to be successfully\n     * deleted, and are therefore counted in the\n     * `DeleteUsersResult.successCount` value.\n     *\n     * Only a maximum of 1000 identifiers may be supplied. If more than 1000\n     * identifiers are supplied, this method throws a FirebaseAuthError.\n     *\n     * This API is currently rate limited at the server to 1 QPS. If you exceed\n     * this, you may get a quota exceeded error. Therefore, if you want to\n     * delete more than 1000 users, you may need to add a delay to ensure you\n     * don't go over this limit.\n     *\n     * @param uids - The `uids` corresponding to the users to delete.\n     *\n     * @returns A Promise that resolves to the total number of successful/failed\n     *     deletions, as well as the array of errors that corresponds to the\n     *     failed deletions.\n     */\n    deleteUsers(uids) {\n        if (!validator.isArray(uids)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '`uids` parameter must be an array');\n        }\n        return this.authRequestHandler.deleteAccounts(uids, /*force=*/ true)\n            .then((batchDeleteAccountsResponse) => {\n            const result = {\n                failureCount: 0,\n                successCount: uids.length,\n                errors: [],\n            };\n            if (!validator.isNonEmptyArray(batchDeleteAccountsResponse.errors)) {\n                return result;\n            }\n            result.failureCount = batchDeleteAccountsResponse.errors.length;\n            result.successCount = uids.length - batchDeleteAccountsResponse.errors.length;\n            result.errors = batchDeleteAccountsResponse.errors.map((batchDeleteErrorInfo) => {\n                if (batchDeleteErrorInfo.index === undefined) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'Corrupt BatchDeleteAccountsResponse detected');\n                }\n                const errMsgToError = (msg) => {\n                    // We unconditionally set force=true, so the 'NOT_DISABLED' error\n                    // should not be possible.\n                    const code = msg && msg.startsWith('NOT_DISABLED') ?\n                        error_1.AuthClientErrorCode.USER_NOT_DISABLED : error_1.AuthClientErrorCode.INTERNAL_ERROR;\n                    return new error_1.FirebaseAuthError(code, batchDeleteErrorInfo.message);\n                };\n                return {\n                    index: batchDeleteErrorInfo.index,\n                    error: errMsgToError(batchDeleteErrorInfo.message),\n                };\n            });\n            return result;\n        });\n    }\n    /**\n     * Updates an existing user.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#update_a_user | Update a user}\n     * for code samples and detailed documentation.\n     *\n     * @param uid - The `uid` corresponding to the user to update.\n     * @param properties - The properties to update on\n     *   the provided user.\n     *\n     * @returns A promise fulfilled with the\n     *   updated user data.\n     */\n    updateUser(uid, properties) {\n        // Although we don't really advertise it, we want to also handle linking of\n        // non-federated idps with this call. So if we detect one of them, we'll\n        // adjust the properties parameter appropriately. This *does* imply that a\n        // conflict could arise, e.g. if the user provides a phoneNumber property,\n        // but also provides a providerToLink with a 'phone' provider id. In that\n        // case, we'll throw an error.\n        properties = (0, deep_copy_1.deepCopy)(properties);\n        if (properties?.providerToLink) {\n            if (properties.providerToLink.providerId === 'email') {\n                if (typeof properties.email !== 'undefined') {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, \"Both UpdateRequest.email and UpdateRequest.providerToLink.providerId='email' were set. To \"\n                        + 'link to the email/password provider, only specify the UpdateRequest.email field.');\n                }\n                properties.email = properties.providerToLink.uid;\n                delete properties.providerToLink;\n            }\n            else if (properties.providerToLink.providerId === 'phone') {\n                if (typeof properties.phoneNumber !== 'undefined') {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, \"Both UpdateRequest.phoneNumber and UpdateRequest.providerToLink.providerId='phone' were set. To \"\n                        + 'link to a phone provider, only specify the UpdateRequest.phoneNumber field.');\n                }\n                properties.phoneNumber = properties.providerToLink.uid;\n                delete properties.providerToLink;\n            }\n        }\n        if (properties?.providersToUnlink) {\n            if (properties.providersToUnlink.indexOf('phone') !== -1) {\n                // If we've been told to unlink the phone provider both via setting\n                // phoneNumber to null *and* by setting providersToUnlink to include\n                // 'phone', then we'll reject that. Though it might also be reasonable\n                // to relax this restriction and just unlink it.\n                if (properties.phoneNumber === null) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, \"Both UpdateRequest.phoneNumber=null and UpdateRequest.providersToUnlink=['phone'] were set. To \"\n                        + 'unlink from a phone provider, only specify the UpdateRequest.phoneNumber=null field.');\n                }\n            }\n        }\n        return this.authRequestHandler.updateExistingAccount(uid, properties)\n            .then((existingUid) => {\n            // Return the corresponding user record.\n            return this.getUser(existingUid);\n        });\n    }\n    /**\n     * Sets additional developer claims on an existing user identified by the\n     * provided `uid`, typically used to define user roles and levels of\n     * access. These claims should propagate to all devices where the user is\n     * already signed in (after token expiration or when token refresh is forced)\n     * and the next time the user signs in. If a reserved OIDC claim name\n     * is used (sub, iat, iss, etc), an error is thrown. They are set on the\n     * authenticated user's ID token JWT.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/custom-claims |\n     * Defining user roles and access levels}\n     * for code samples and detailed documentation.\n     *\n     * @param uid - The `uid` of the user to edit.\n     * @param customUserClaims - The developer claims to set. If null is\n     *   passed, existing custom claims are deleted. Passing a custom claims payload\n     *   larger than 1000 bytes will throw an error. Custom claims are added to the\n     *   user's ID token which is transmitted on every authenticated request.\n     *   For profile non-access related user attributes, use database or other\n     *   separate storage systems.\n     * @returns A promise that resolves when the operation completes\n     *   successfully.\n     */\n    setCustomUserClaims(uid, customUserClaims) {\n        return this.authRequestHandler.setCustomUserClaims(uid, customUserClaims)\n            .then(() => {\n            // Return nothing on success.\n        });\n    }\n    /**\n     * Revokes all refresh tokens for an existing user.\n     *\n     * This API will update the user's {@link UserRecord.tokensValidAfterTime} to\n     * the current UTC. It is important that the server on which this is called has\n     * its clock set correctly and synchronized.\n     *\n     * While this will revoke all sessions for a specified user and disable any\n     * new ID tokens for existing sessions from getting minted, existing ID tokens\n     * may remain active until their natural expiration (one hour). To verify that\n     * ID tokens are revoked, use {@link BaseAuth.verifyIdToken}\n     * where `checkRevoked` is set to true.\n     *\n     * @param uid - The `uid` corresponding to the user whose refresh tokens\n     *   are to be revoked.\n     *\n     * @returns An empty promise fulfilled once the user's refresh\n     *   tokens have been revoked.\n     */\n    revokeRefreshTokens(uid) {\n        return this.authRequestHandler.revokeRefreshTokens(uid)\n            .then(() => {\n            // Return nothing on success.\n        });\n    }\n    /**\n     * Imports the provided list of users into Firebase Auth.\n     * A maximum of 1000 users are allowed to be imported one at a time.\n     * When importing users with passwords,\n     * {@link UserImportOptions} are required to be\n     * specified.\n     * This operation is optimized for bulk imports and will ignore checks on `uid`,\n     * `email` and other identifier uniqueness which could result in duplications.\n     *\n     * @param users - The list of user records to import to Firebase Auth.\n     * @param options - The user import options, required when the users provided include\n     *   password credentials.\n     * @returns A promise that resolves when\n     *   the operation completes with the result of the import. This includes the\n     *   number of successful imports, the number of failed imports and their\n     *   corresponding errors.\n    */\n    importUsers(users, options) {\n        return this.authRequestHandler.uploadAccount(users, options);\n    }\n    /**\n     * Creates a new Firebase session cookie with the specified options. The created\n     * JWT string can be set as a server-side session cookie with a custom cookie\n     * policy, and be used for session management. The session cookie JWT will have\n     * the same payload claims as the provided ID token.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-cookies | Manage Session Cookies}\n     * for code samples and detailed documentation.\n     *\n     * @param idToken - The Firebase ID token to exchange for a session\n     *   cookie.\n     * @param sessionCookieOptions - The session\n     *   cookie options which includes custom session duration.\n     *\n     * @returns A promise that resolves on success with the\n     *   created session cookie.\n     */\n    createSessionCookie(idToken, sessionCookieOptions) {\n        // Return rejected promise if expiresIn is not available.\n        if (!validator.isNonNullObject(sessionCookieOptions) ||\n            !validator.isNumber(sessionCookieOptions.expiresIn)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_SESSION_COOKIE_DURATION));\n        }\n        return this.authRequestHandler.createSessionCookie(idToken, sessionCookieOptions.expiresIn);\n    }\n    /**\n     * Verifies a Firebase session cookie. Returns a Promise with the cookie claims.\n     * Rejects the promise if the cookie could not be verified.\n     *\n     * If `checkRevoked` is set to true, first verifies whether the corresponding\n     * user is disabled: If yes, an `auth/user-disabled` error is thrown. If no,\n     * verifies if the session corresponding to the session cookie was revoked.\n     * If the corresponding user's session was invalidated, an\n     * `auth/session-cookie-revoked` error is thrown. If not specified the check\n     * is not performed.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-cookies#verify_session_cookie_and_check_permissions |\n     * Verify Session Cookies}\n     * for code samples and detailed documentation\n     *\n     * @param sessionCookie - The session cookie to verify.\n     * @param checkForRevocation -  Whether to check if the session cookie was\n     *   revoked. This requires an extra request to the Firebase Auth backend to\n     *   check the `tokensValidAfterTime` time for the corresponding user.\n     *   When not specified, this additional check is not performed.\n     *\n     * @returns A promise fulfilled with the\n     *   session cookie's decoded claims if the session cookie is valid; otherwise,\n     *   a rejected promise.\n     */\n    verifySessionCookie(sessionCookie, checkRevoked = false) {\n        const isEmulator = (0, auth_api_request_1.useEmulator)();\n        return this.sessionCookieVerifier.verifyJWT(sessionCookie, isEmulator)\n            .then((decodedIdToken) => {\n            // Whether to check if the token was revoked.\n            if (checkRevoked || isEmulator) {\n                return this.verifyDecodedJWTNotRevokedOrDisabled(decodedIdToken, error_1.AuthClientErrorCode.SESSION_COOKIE_REVOKED);\n            }\n            return decodedIdToken;\n        });\n    }\n    /**\n     * Generates the out of band email action link to reset a user's password.\n     * The link is generated for the user with the specified email address. The\n     * optional  {@link ActionCodeSettings} object\n     * defines whether the link is to be handled by a mobile app or browser and the\n     * additional state information to be passed in the deep link, etc.\n     *\n     * @example\n     * ```javascript\n     * var actionCodeSettings = {\n     *   url: 'https://www.example.com/?email=user@example.com',\n     *   iOS: {\n     *     bundleId: 'com.example.ios'\n     *   },\n     *   android: {\n     *     packageName: 'com.example.android',\n     *     installApp: true,\n     *     minimumVersion: '12'\n     *   },\n     *   handleCodeInApp: true,\n     *   dynamicLinkDomain: 'custom.page.link'\n     * };\n     * admin.auth()\n     *     .generatePasswordResetLink('user@example.com', actionCodeSettings)\n     *     .then(function(link) {\n     *       // The link was successfully generated.\n     *     })\n     *     .catch(function(error) {\n     *       // Some error occurred, you can inspect the code: error.code\n     *     });\n     * ```\n     *\n     * @param email - The email address of the user whose password is to be\n     *   reset.\n     * @param actionCodeSettings - The action\n     *     code settings. If specified, the state/continue URL is set as the\n     *     \"continueUrl\" parameter in the password reset link. The default password\n     *     reset landing page will use this to display a link to go back to the app\n     *     if it is installed.\n     *     If the actionCodeSettings is not specified, no URL is appended to the\n     *     action URL.\n     *     The state URL provided must belong to a domain that is whitelisted by the\n     *     developer in the console. Otherwise an error is thrown.\n     *     Mobile app redirects are only applicable if the developer configures\n     *     and accepts the Firebase Dynamic Links terms of service.\n     *     The Android package name and iOS bundle ID are respected only if they\n     *     are configured in the same Firebase Auth project.\n     * @returns A promise that resolves with the generated link.\n     */\n    generatePasswordResetLink(email, actionCodeSettings) {\n        return this.authRequestHandler.getEmailActionLink('PASSWORD_RESET', email, actionCodeSettings);\n    }\n    /**\n     * Generates the out of band email action link to verify the user's ownership\n     * of the specified email. The {@link ActionCodeSettings} object provided\n     * as an argument to this method defines whether the link is to be handled by a\n     * mobile app or browser along with additional state information to be passed in\n     * the deep link, etc.\n     *\n     * @example\n     * ```javascript\n     * var actionCodeSettings = {\n     *   url: 'https://www.example.com/cart?email=user@example.com&cartId=123',\n     *   iOS: {\n     *     bundleId: 'com.example.ios'\n     *   },\n     *   android: {\n     *     packageName: 'com.example.android',\n     *     installApp: true,\n     *     minimumVersion: '12'\n     *   },\n     *   handleCodeInApp: true,\n     *   dynamicLinkDomain: 'custom.page.link'\n     * };\n     * admin.auth()\n     *     .generateEmailVerificationLink('user@example.com', actionCodeSettings)\n     *     .then(function(link) {\n     *       // The link was successfully generated.\n     *     })\n     *     .catch(function(error) {\n     *       // Some error occurred, you can inspect the code: error.code\n     *     });\n     * ```\n     *\n     * @param email - The email account to verify.\n     * @param actionCodeSettings - The action\n     *     code settings. If specified, the state/continue URL is set as the\n     *     \"continueUrl\" parameter in the email verification link. The default email\n     *     verification landing page will use this to display a link to go back to\n     *     the app if it is installed.\n     *     If the actionCodeSettings is not specified, no URL is appended to the\n     *     action URL.\n     *     The state URL provided must belong to a domain that is whitelisted by the\n     *     developer in the console. Otherwise an error is thrown.\n     *     Mobile app redirects are only applicable if the developer configures\n     *     and accepts the Firebase Dynamic Links terms of service.\n     *     The Android package name and iOS bundle ID are respected only if they\n     *     are configured in the same Firebase Auth project.\n     * @returns A promise that resolves with the generated link.\n     */\n    generateEmailVerificationLink(email, actionCodeSettings) {\n        return this.authRequestHandler.getEmailActionLink('VERIFY_EMAIL', email, actionCodeSettings);\n    }\n    /**\n     * Generates an out-of-band email action link to verify the user's ownership\n     * of the specified email. The {@link ActionCodeSettings} object provided\n     * as an argument to this method defines whether the link is to be handled by a\n     * mobile app or browser along with additional state information to be passed in\n     * the deep link, etc.\n     *\n     * @param email - The current email account.\n     * @param newEmail - The email address the account is being updated to.\n     * @param actionCodeSettings - The action\n     *     code settings. If specified, the state/continue URL is set as the\n     *     \"continueUrl\" parameter in the email verification link. The default email\n     *     verification landing page will use this to display a link to go back to\n     *     the app if it is installed.\n     *     If the actionCodeSettings is not specified, no URL is appended to the\n     *     action URL.\n     *     The state URL provided must belong to a domain that is authorized\n     *     in the console, or an error will be thrown.\n     *     Mobile app redirects are only applicable if the developer configures\n     *     and accepts the Firebase Dynamic Links terms of service.\n     *     The Android package name and iOS bundle ID are respected only if they\n     *     are configured in the same Firebase Auth project.\n     * @returns A promise that resolves with the generated link.\n     */\n    generateVerifyAndChangeEmailLink(email, newEmail, actionCodeSettings) {\n        return this.authRequestHandler.getEmailActionLink('VERIFY_AND_CHANGE_EMAIL', email, actionCodeSettings, newEmail);\n    }\n    /**\n     * Generates the out of band email action link to verify the user's ownership\n     * of the specified email. The {@link ActionCodeSettings} object provided\n     * as an argument to this method defines whether the link is to be handled by a\n     * mobile app or browser along with additional state information to be passed in\n     * the deep link, etc.\n     *\n     * @example\n     * ```javascript\n     * var actionCodeSettings = {\n     *   url: 'https://www.example.com/cart?email=user@example.com&cartId=123',\n     *   iOS: {\n     *     bundleId: 'com.example.ios'\n     *   },\n     *   android: {\n     *     packageName: 'com.example.android',\n     *     installApp: true,\n     *     minimumVersion: '12'\n     *   },\n     *   handleCodeInApp: true,\n     *   dynamicLinkDomain: 'custom.page.link'\n     * };\n     * admin.auth()\n     *     .generateEmailVerificationLink('user@example.com', actionCodeSettings)\n     *     .then(function(link) {\n     *       // The link was successfully generated.\n     *     })\n     *     .catch(function(error) {\n     *       // Some error occurred, you can inspect the code: error.code\n     *     });\n     * ```\n     *\n     * @param email - The email account to verify.\n     * @param actionCodeSettings - The action\n     *     code settings. If specified, the state/continue URL is set as the\n     *     \"continueUrl\" parameter in the email verification link. The default email\n     *     verification landing page will use this to display a link to go back to\n     *     the app if it is installed.\n     *     If the actionCodeSettings is not specified, no URL is appended to the\n     *     action URL.\n     *     The state URL provided must belong to a domain that is whitelisted by the\n     *     developer in the console. Otherwise an error is thrown.\n     *     Mobile app redirects are only applicable if the developer configures\n     *     and accepts the Firebase Dynamic Links terms of service.\n     *     The Android package name and iOS bundle ID are respected only if they\n     *     are configured in the same Firebase Auth project.\n     * @returns A promise that resolves with the generated link.\n     */\n    generateSignInWithEmailLink(email, actionCodeSettings) {\n        return this.authRequestHandler.getEmailActionLink('EMAIL_SIGNIN', email, actionCodeSettings);\n    }\n    /**\n     * Returns the list of existing provider configurations matching the filter\n     * provided. At most, 100 provider configs can be listed at a time.\n     *\n     * SAML and OIDC provider support requires Google Cloud's Identity Platform\n     * (GCIP). To learn more about GCIP, including pricing and features,\n     * see the {@link https://cloud.google.com/identity-platform | GCIP documentation}.\n     *\n     * @param options - The provider config filter to apply.\n     * @returns A promise that resolves with the list of provider configs meeting the\n     *   filter requirements.\n     */\n    listProviderConfigs(options) {\n        const processResponse = (response, providerConfigs) => {\n            // Return list of provider configuration and the next page token if available.\n            const result = {\n                providerConfigs,\n            };\n            // Delete result.pageToken if undefined.\n            if (Object.prototype.hasOwnProperty.call(response, 'nextPageToken')) {\n                result.pageToken = response.nextPageToken;\n            }\n            return result;\n        };\n        if (options && options.type === 'oidc') {\n            return this.authRequestHandler.listOAuthIdpConfigs(options.maxResults, options.pageToken)\n                .then((response) => {\n                // List of provider configurations to return.\n                const providerConfigs = [];\n                // Convert each provider config response to a OIDCConfig.\n                response.oauthIdpConfigs.forEach((configResponse) => {\n                    providerConfigs.push(new auth_config_1.OIDCConfig(configResponse));\n                });\n                // Return list of provider configuration and the next page token if available.\n                return processResponse(response, providerConfigs);\n            });\n        }\n        else if (options && options.type === 'saml') {\n            return this.authRequestHandler.listInboundSamlConfigs(options.maxResults, options.pageToken)\n                .then((response) => {\n                // List of provider configurations to return.\n                const providerConfigs = [];\n                // Convert each provider config response to a SAMLConfig.\n                response.inboundSamlConfigs.forEach((configResponse) => {\n                    providerConfigs.push(new auth_config_1.SAMLConfig(configResponse));\n                });\n                // Return list of provider configuration and the next page token if available.\n                return processResponse(response, providerConfigs);\n            });\n        }\n        return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"AuthProviderConfigFilter.type\" must be either \"saml\" or \"oidc\"'));\n    }\n    /**\n     * Looks up an Auth provider configuration by the provided ID.\n     * Returns a promise that resolves with the provider configuration\n     * corresponding to the provider ID specified. If the specified ID does not\n     * exist, an `auth/configuration-not-found` error is thrown.\n     *\n     * SAML and OIDC provider support requires Google Cloud's Identity Platform\n     * (GCIP). To learn more about GCIP, including pricing and features,\n     * see the {@link https://cloud.google.com/identity-platform | GCIP documentation}.\n     *\n     * @param providerId - The provider ID corresponding to the provider\n     *     config to return.\n     * @returns A promise that resolves\n     *     with the configuration corresponding to the provided ID.\n     */\n    getProviderConfig(providerId) {\n        if (auth_config_1.OIDCConfig.isProviderId(providerId)) {\n            return this.authRequestHandler.getOAuthIdpConfig(providerId)\n                .then((response) => {\n                return new auth_config_1.OIDCConfig(response);\n            });\n        }\n        else if (auth_config_1.SAMLConfig.isProviderId(providerId)) {\n            return this.authRequestHandler.getInboundSamlConfig(providerId)\n                .then((response) => {\n                return new auth_config_1.SAMLConfig(response);\n            });\n        }\n        return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n    }\n    /**\n     * Deletes the provider configuration corresponding to the provider ID passed.\n     * If the specified ID does not exist, an `auth/configuration-not-found` error\n     * is thrown.\n     *\n     * SAML and OIDC provider support requires Google Cloud's Identity Platform\n     * (GCIP). To learn more about GCIP, including pricing and features,\n     * see the {@link https://cloud.google.com/identity-platform | GCIP documentation}.\n     *\n     * @param providerId - The provider ID corresponding to the provider\n     *     config to delete.\n     * @returns A promise that resolves on completion.\n     */\n    deleteProviderConfig(providerId) {\n        if (auth_config_1.OIDCConfig.isProviderId(providerId)) {\n            return this.authRequestHandler.deleteOAuthIdpConfig(providerId);\n        }\n        else if (auth_config_1.SAMLConfig.isProviderId(providerId)) {\n            return this.authRequestHandler.deleteInboundSamlConfig(providerId);\n        }\n        return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n    }\n    /**\n     * Returns a promise that resolves with the updated `AuthProviderConfig`\n     * corresponding to the provider ID specified.\n     * If the specified ID does not exist, an `auth/configuration-not-found` error\n     * is thrown.\n     *\n     * SAML and OIDC provider support requires Google Cloud's Identity Platform\n     * (GCIP). To learn more about GCIP, including pricing and features,\n     * see the {@link https://cloud.google.com/identity-platform | GCIP documentation}.\n     *\n     * @param providerId - The provider ID corresponding to the provider\n     *     config to update.\n     * @param updatedConfig - The updated configuration.\n     * @returns A promise that resolves with the updated provider configuration.\n     */\n    updateProviderConfig(providerId, updatedConfig) {\n        if (!validator.isNonNullObject(updatedConfig)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, 'Request is missing \"UpdateAuthProviderRequest\" configuration.'));\n        }\n        if (auth_config_1.OIDCConfig.isProviderId(providerId)) {\n            return this.authRequestHandler.updateOAuthIdpConfig(providerId, updatedConfig)\n                .then((response) => {\n                return new auth_config_1.OIDCConfig(response);\n            });\n        }\n        else if (auth_config_1.SAMLConfig.isProviderId(providerId)) {\n            return this.authRequestHandler.updateInboundSamlConfig(providerId, updatedConfig)\n                .then((response) => {\n                return new auth_config_1.SAMLConfig(response);\n            });\n        }\n        return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n    }\n    /**\n     * Returns a promise that resolves with the newly created `AuthProviderConfig`\n     * when the new provider configuration is created.\n     *\n     * SAML and OIDC provider support requires Google Cloud's Identity Platform\n     * (GCIP). To learn more about GCIP, including pricing and features,\n     * see the {@link https://cloud.google.com/identity-platform | GCIP documentation}.\n     *\n     * @param config - The provider configuration to create.\n     * @returns A promise that resolves with the created provider configuration.\n     */\n    createProviderConfig(config) {\n        if (!validator.isNonNullObject(config)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, 'Request is missing \"AuthProviderConfig\" configuration.'));\n        }\n        if (auth_config_1.OIDCConfig.isProviderId(config.providerId)) {\n            return this.authRequestHandler.createOAuthIdpConfig(config)\n                .then((response) => {\n                return new auth_config_1.OIDCConfig(response);\n            });\n        }\n        else if (auth_config_1.SAMLConfig.isProviderId(config.providerId)) {\n            return this.authRequestHandler.createInboundSamlConfig(config)\n                .then((response) => {\n                return new auth_config_1.SAMLConfig(response);\n            });\n        }\n        return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n    }\n    /** @alpha */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    _verifyAuthBlockingToken(token, audience) {\n        const isEmulator = (0, auth_api_request_1.useEmulator)();\n        return this.authBlockingTokenVerifier._verifyAuthBlockingToken(token, isEmulator, audience)\n            .then((decodedAuthBlockingToken) => {\n            return decodedAuthBlockingToken;\n        });\n    }\n    /**\n     * Verifies the decoded Firebase issued JWT is not revoked or disabled. Returns a promise that\n     * resolves with the decoded claims on success. Rejects the promise with revocation error if revoked\n     * or user disabled.\n     *\n     * @param decodedIdToken - The JWT's decoded claims.\n     * @param revocationErrorInfo - The revocation error info to throw on revocation\n     *     detection.\n     * @returns A promise that will be fulfilled after a successful verification.\n     */\n    verifyDecodedJWTNotRevokedOrDisabled(decodedIdToken, revocationErrorInfo) {\n        // Get tokens valid after time for the corresponding user.\n        return this.getUser(decodedIdToken.sub)\n            .then((user) => {\n            if (user.disabled) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.USER_DISABLED, 'The user record is disabled.');\n            }\n            // If no tokens valid after time available, token is not revoked.\n            if (user.tokensValidAfterTime) {\n                // Get the ID token authentication time and convert to milliseconds UTC.\n                const authTimeUtc = decodedIdToken.auth_time * 1000;\n                // Get user tokens valid after time in milliseconds UTC.\n                const validSinceUtc = new Date(user.tokensValidAfterTime).getTime();\n                // Check if authentication time is older than valid since time.\n                if (authTimeUtc < validSinceUtc) {\n                    throw new error_1.FirebaseAuthError(revocationErrorInfo);\n                }\n            }\n            // All checks above passed. Return the decoded token.\n            return decodedIdToken;\n        });\n    }\n}\nexports.BaseAuth = BaseAuth;\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TenantManager = exports.TenantAwareAuth = void 0;\nconst validator = require(\"../utils/validator\");\nconst utils = require(\"../utils/index\");\nconst error_1 = require(\"../utils/error\");\nconst base_auth_1 = require(\"./base-auth\");\nconst tenant_1 = require(\"./tenant\");\nconst auth_api_request_1 = require(\"./auth-api-request\");\n/**\n * Tenant-aware `Auth` interface used for managing users, configuring SAML/OIDC providers,\n * generating email links for password reset, email verification, etc for specific tenants.\n *\n * Multi-tenancy support requires Google Cloud's Identity Platform\n * (GCIP). To learn more about GCIP, including pricing and features,\n * see the {@link https://cloud.google.com/identity-platform | GCIP documentation}.\n *\n * Each tenant contains its own identity providers, settings and sets of users.\n * Using `TenantAwareAuth`, users for a specific tenant and corresponding OIDC/SAML\n * configurations can also be managed, ID tokens for users signed in to a specific tenant\n * can be verified, and email action links can also be generated for users belonging to the\n * tenant.\n *\n * `TenantAwareAuth` instances for a specific `tenantId` can be instantiated by calling\n * {@link TenantManager.authForTenant}.\n */\nclass TenantAwareAuth extends base_auth_1.BaseAuth {\n    /**\n     * The TenantAwareAuth class constructor.\n     *\n     * @param app - The app that created this tenant.\n     * @param tenantId - The corresponding tenant ID.\n     * @constructor\n     * @internal\n     */\n    constructor(app, tenantId) {\n        super(app, new auth_api_request_1.TenantAwareAuthRequestHandler(app, tenantId), (0, base_auth_1.createFirebaseTokenGenerator)(app, tenantId));\n        utils.addReadonlyGetter(this, 'tenantId', tenantId);\n    }\n    /**\n     * {@inheritdoc BaseAuth.verifyIdToken}\n     */\n    verifyIdToken(idToken, checkRevoked = false) {\n        return super.verifyIdToken(idToken, checkRevoked)\n            .then((decodedClaims) => {\n            // Validate tenant ID.\n            if (decodedClaims.firebase.tenant !== this.tenantId) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISMATCHING_TENANT_ID);\n            }\n            return decodedClaims;\n        });\n    }\n    /**\n     * {@inheritdoc BaseAuth.createSessionCookie}\n     */\n    createSessionCookie(idToken, sessionCookieOptions) {\n        // Validate arguments before processing.\n        if (!validator.isNonEmptyString(idToken)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ID_TOKEN));\n        }\n        if (!validator.isNonNullObject(sessionCookieOptions) ||\n            !validator.isNumber(sessionCookieOptions.expiresIn)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_SESSION_COOKIE_DURATION));\n        }\n        // This will verify the ID token and then match the tenant ID before creating the session cookie.\n        return this.verifyIdToken(idToken)\n            .then(() => {\n            return super.createSessionCookie(idToken, sessionCookieOptions);\n        });\n    }\n    /**\n     * {@inheritdoc BaseAuth.verifySessionCookie}\n     */\n    verifySessionCookie(sessionCookie, checkRevoked = false) {\n        return super.verifySessionCookie(sessionCookie, checkRevoked)\n            .then((decodedClaims) => {\n            if (decodedClaims.firebase.tenant !== this.tenantId) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISMATCHING_TENANT_ID);\n            }\n            return decodedClaims;\n        });\n    }\n}\nexports.TenantAwareAuth = TenantAwareAuth;\n/**\n * Defines the tenant manager used to help manage tenant related operations.\n * This includes:\n * <ul>\n * <li>The ability to create, update, list, get and delete tenants for the underlying\n *     project.</li>\n * <li>Getting a `TenantAwareAuth` instance for running Auth related operations\n *     (user management, provider configuration management, token verification,\n *     email link generation, etc) in the context of a specified tenant.</li>\n * </ul>\n */\nclass TenantManager {\n    /**\n     * Initializes a TenantManager instance for a specified FirebaseApp.\n     *\n     * @param app - The app for this TenantManager instance.\n     *\n     * @constructor\n     * @internal\n     */\n    constructor(app) {\n        this.app = app;\n        this.authRequestHandler = new auth_api_request_1.AuthRequestHandler(app);\n        this.tenantsMap = {};\n    }\n    /**\n     * Returns a `TenantAwareAuth` instance bound to the given tenant ID.\n     *\n     * @param tenantId - The tenant ID whose `TenantAwareAuth` instance is to be returned.\n     *\n     * @returns The `TenantAwareAuth` instance corresponding to this tenant identifier.\n     */\n    authForTenant(tenantId) {\n        if (!validator.isNonEmptyString(tenantId)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TENANT_ID);\n        }\n        if (typeof this.tenantsMap[tenantId] === 'undefined') {\n            this.tenantsMap[tenantId] = new TenantAwareAuth(this.app, tenantId);\n        }\n        return this.tenantsMap[tenantId];\n    }\n    /**\n     * Gets the tenant configuration for the tenant corresponding to a given `tenantId`.\n     *\n     * @param tenantId - The tenant identifier corresponding to the tenant whose data to fetch.\n     *\n     * @returns A promise fulfilled with the tenant configuration to the provided `tenantId`.\n     */\n    getTenant(tenantId) {\n        return this.authRequestHandler.getTenant(tenantId)\n            .then((response) => {\n            return new tenant_1.Tenant(response);\n        });\n    }\n    /**\n     * Retrieves a list of tenants (single batch only) with a size of `maxResults`\n     * starting from the offset as specified by `pageToken`. This is used to\n     * retrieve all the tenants of a specified project in batches.\n     *\n     * @param maxResults - The page size, 1000 if undefined. This is also\n     *   the maximum allowed limit.\n     * @param pageToken - The next page token. If not specified, returns\n     *   tenants starting without any offset.\n     *\n     * @returns A promise that resolves with\n     *   a batch of downloaded tenants and the next page token.\n     */\n    listTenants(maxResults, pageToken) {\n        return this.authRequestHandler.listTenants(maxResults, pageToken)\n            .then((response) => {\n            // List of tenants to return.\n            const tenants = [];\n            // Convert each user response to a Tenant.\n            response.tenants.forEach((tenantResponse) => {\n                tenants.push(new tenant_1.Tenant(tenantResponse));\n            });\n            // Return list of tenants and the next page token if available.\n            const result = {\n                tenants,\n                pageToken: response.nextPageToken,\n            };\n            // Delete result.pageToken if undefined.\n            if (typeof result.pageToken === 'undefined') {\n                delete result.pageToken;\n            }\n            return result;\n        });\n    }\n    /**\n     * Deletes an existing tenant.\n     *\n     * @param tenantId - The `tenantId` corresponding to the tenant to delete.\n     *\n     * @returns An empty promise fulfilled once the tenant has been deleted.\n     */\n    deleteTenant(tenantId) {\n        return this.authRequestHandler.deleteTenant(tenantId);\n    }\n    /**\n     * Creates a new tenant.\n     * When creating new tenants, tenants that use separate billing and quota will require their\n     * own project and must be defined as `full_service`.\n     *\n     * @param tenantOptions - The properties to set on the new tenant configuration to be created.\n     *\n     * @returns A promise fulfilled with the tenant configuration corresponding to the newly\n     *   created tenant.\n     */\n    createTenant(tenantOptions) {\n        return this.authRequestHandler.createTenant(tenantOptions)\n            .then((response) => {\n            return new tenant_1.Tenant(response);\n        });\n    }\n    /**\n     * Updates an existing tenant configuration.\n     *\n     * @param tenantId - The `tenantId` corresponding to the tenant to delete.\n     * @param tenantOptions - The properties to update on the provided tenant.\n     *\n     * @returns A promise fulfilled with the update tenant data.\n     */\n    updateTenant(tenantId, tenantOptions) {\n        return this.authRequestHandler.updateTenant(tenantId, tenantOptions)\n            .then((response) => {\n            return new tenant_1.Tenant(response);\n        });\n    }\n}\nexports.TenantManager = TenantManager;\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProjectConfigManager = void 0;\nconst project_config_1 = require(\"./project-config\");\nconst auth_api_request_1 = require(\"./auth-api-request\");\n/**\n * Defines the project config manager used to help manage project config related operations.\n * This includes:\n * <ul>\n * <li>The ability to update and get project config.</li>\n */\nclass ProjectConfigManager {\n    /**\n     * Initializes a ProjectConfigManager instance for a specified FirebaseApp.\n     *\n     * @param app - The app for this ProjectConfigManager instance.\n     *\n     * @constructor\n     * @internal\n     */\n    constructor(app) {\n        this.authRequestHandler = new auth_api_request_1.AuthRequestHandler(app);\n    }\n    /**\n     * Get the project configuration.\n     *\n     * @returns A promise fulfilled with the project configuration.\n     */\n    getProjectConfig() {\n        return this.authRequestHandler.getProjectConfig()\n            .then((response) => {\n            return new project_config_1.ProjectConfig(response);\n        });\n    }\n    /**\n     * Updates an existing project configuration.\n     *\n     * @param projectConfigOptions - The properties to update on the project.\n     *\n     * @returns A promise fulfilled with the updated project config.\n     */\n    updateProjectConfig(projectConfigOptions) {\n        return this.authRequestHandler.updateProjectConfig(projectConfigOptions)\n            .then((response) => {\n            return new project_config_1.ProjectConfig(response);\n        });\n    }\n}\nexports.ProjectConfigManager = ProjectConfigManager;\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Auth = void 0;\nconst auth_api_request_1 = require(\"./auth-api-request\");\nconst tenant_manager_1 = require(\"./tenant-manager\");\nconst base_auth_1 = require(\"./base-auth\");\nconst project_config_manager_1 = require(\"./project-config-manager\");\n/**\n * Auth service bound to the provided app.\n * An Auth instance can have multiple tenants.\n */\nclass Auth extends base_auth_1.BaseAuth {\n    /**\n     * @param app - The app for this Auth service.\n     * @constructor\n     * @internal\n     */\n    constructor(app) {\n        super(app, new auth_api_request_1.AuthRequestHandler(app));\n        this.app_ = app;\n        this.tenantManager_ = new tenant_manager_1.TenantManager(app);\n        this.projectConfigManager_ = new project_config_manager_1.ProjectConfigManager(app);\n    }\n    /**\n     * Returns the app associated with this Auth instance.\n     *\n     * @returns The app associated with this Auth instance.\n     */\n    get app() {\n        return this.app_;\n    }\n    /**\n     * Returns the tenant manager instance associated with the current project.\n     *\n     * @returns The tenant manager instance associated with the current project.\n     */\n    tenantManager() {\n        return this.tenantManager_;\n    }\n    /**\n     * Returns the project config manager instance associated with the current project.\n     *\n     * @returns The project config manager instance associated with the current project.\n     */\n    projectConfigManager() {\n        return this.projectConfigManager_;\n    }\n}\nexports.Auth = Auth;\n", "/*! firebase-admin v11.3.0 */\n\"use strict\";\n/*!\n * Copyright 2020 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserRecord = exports.UserMetadata = exports.UserInfo = exports.PhoneMultiFactorInfo = exports.MultiFactorSettings = exports.MultiFactorInfo = exports.ProjectConfigManager = exports.ProjectConfig = exports.TenantManager = exports.TenantAwareAuth = exports.Tenant = exports.BaseAuth = exports.Auth = exports.getAuth = void 0;\n/**\n * Firebase Authentication.\n *\n * @packageDocumentation\n */\nconst index_1 = require(\"../app/index\");\nconst auth_1 = require(\"./auth\");\n/**\n * Gets the {@link Auth} service for the default app or a\n * given app.\n *\n * `getAuth()` can be called with no arguments to access the default app's\n * {@link Auth} service or as `getAuth(app)` to access the\n * {@link Auth} service associated with a specific app.\n *\n * @example\n * ```javascript\n * // Get the Auth service for the default app\n * const defaultAuth = getAuth();\n * ```\n *\n * @example\n * ```javascript\n * // Get the Auth service for a given app\n * const otherAuth = getAuth(otherApp);\n * ```\n *\n */\nfunction getAuth(app) {\n    if (typeof app === 'undefined') {\n        app = (0, index_1.getApp)();\n    }\n    const firebaseApp = app;\n    return firebaseApp.getOrInitService('auth', (app) => new auth_1.Auth(app));\n}\nexports.getAuth = getAuth;\nvar auth_2 = require(\"./auth\");\nObject.defineProperty(exports, \"Auth\", { enumerable: true, get: function () { return auth_2.Auth; } });\nvar base_auth_1 = require(\"./base-auth\");\nObject.defineProperty(exports, \"BaseAuth\", { enumerable: true, get: function () { return base_auth_1.BaseAuth; } });\nvar tenant_1 = require(\"./tenant\");\nObject.defineProperty(exports, \"Tenant\", { enumerable: true, get: function () { return tenant_1.Tenant; } });\nvar tenant_manager_1 = require(\"./tenant-manager\");\nObject.defineProperty(exports, \"TenantAwareAuth\", { enumerable: true, get: function () { return tenant_manager_1.TenantAwareAuth; } });\nObject.defineProperty(exports, \"TenantManager\", { enumerable: true, get: function () { return tenant_manager_1.TenantManager; } });\nvar project_config_1 = require(\"./project-config\");\nObject.defineProperty(exports, \"ProjectConfig\", { enumerable: true, get: function () { return project_config_1.ProjectConfig; } });\nvar project_config_manager_1 = require(\"./project-config-manager\");\nObject.defineProperty(exports, \"ProjectConfigManager\", { enumerable: true, get: function () { return project_config_manager_1.ProjectConfigManager; } });\nvar user_record_1 = require(\"./user-record\");\nObject.defineProperty(exports, \"MultiFactorInfo\", { enumerable: true, get: function () { return user_record_1.MultiFactorInfo; } });\nObject.defineProperty(exports, \"MultiFactorSettings\", { enumerable: true, get: function () { return user_record_1.MultiFactorSettings; } });\nObject.defineProperty(exports, \"PhoneMultiFactorInfo\", { enumerable: true, get: function () { return user_record_1.PhoneMultiFactorInfo; } });\nObject.defineProperty(exports, \"UserInfo\", { enumerable: true, get: function () { return user_record_1.UserInfo; } });\nObject.defineProperty(exports, \"UserMetadata\", { enumerable: true, get: function () { return user_record_1.UserMetadata; } });\nObject.defineProperty(exports, \"UserRecord\", { enumerable: true, get: function () { return user_record_1.UserRecord; } });\n", "import mod from \"../../auth/index.js\";\n\nexport const Auth = mod.Auth;\nexport const BaseAuth = mod.BaseAuth;\nexport const MultiFactorInfo = mod.MultiFactorInfo;\nexport const MultiFactorSettings = mod.MultiFactorSettings;\nexport const PhoneMultiFactorInfo = mod.PhoneMultiFactorInfo;\nexport const ProjectConfig = mod.ProjectConfig;\nexport const ProjectConfigManager = mod.ProjectConfigManager;\nexport const Tenant = mod.Tenant;\nexport const TenantAwareAuth = mod.TenantAwareAuth;\nexport const TenantManager = mod.TenantManager;\nexport const UserInfo = mod.UserInfo;\nexport const UserMetadata = mod.UserMetadata;\nexport const UserRecord = mod.UserRecord;\nexport const getAuth = mod.getAuth;\n"],
  "mappings": "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",
  "names": ["Tenant", "ProjectConfig", "WriteOperationType", "state", "require_der", "header", "size", "out", "require_der", "require_pem", "name", "require_asn1", "key", "type", "bitLength", "require_base", "acc", "alg", "require_jwk", "require_none", "derive", "require_jwa", "recipients", "root", "errs", "key", "multi", "header", "require_serializers", "signatures", "root", "errs", "key", "multi", "require_sign", "require_verify", "require_utils", "set", "self", "Map", "self", "Buffer", "Symbol", "Uint8Array", "Map", "Promise", "Set", "key", "result", "args", "_i", "self", "self", "getKeysInterceptor", "require_errors", "require_jwt", "JwtErrorCode", "MultiFactorId", "MultiFactorInfo", "PhoneMultiFactorInfo", "MultiFactorSettings", "UserMetadata", "UserInfo", "UserRecord", "BaseAuth", "TenantAwareAuth", "TenantManager", "ProjectConfigManager", "Auth", "require_auth", "getAuth", "app", "mod"]
}
