{
  "version": 3,
  "sources": ["../../../app/components/organizations/OrganizationInvitedMembersList.tsx", "../../../app/lib/organizations/hooks/use-fetch-invited-members.ts", "../../../app/components/organizations/DeleteInviteButton.tsx", "../../../app/lib/organizations/hooks/use-delete-invite.ts"],
  "sourcesContent": ["import { Trans } from 'react-i18next';\n\nimport useFetchInvitedMembers from '~/lib/organizations/hooks/use-fetch-invited-members';\nimport { canDeleteInvites } from '~/lib/organizations/permissions';\n\nimport FallbackUserAvatar from '../FallbackUserAvatar';\nimport RoleBadge from './RoleBadge';\nimport DeleteInviteButton from './DeleteInviteButton';\n\nimport IfHasPermissions from '~/components/IfHasPermissions';\nimport LoadingMembersSpinner from '~/components/organizations/LoadingMembersSpinner';\nimport Alert from '~/core/ui/Alert';\n\nconst OrganizationInvitedMembersList: React.FCC<{\n  organizationId: string;\n}> = ({ organizationId }) => {\n  const { data: members, status } = useFetchInvitedMembers(organizationId);\n\n  if (status === 'loading') {\n    return (\n      <LoadingMembersSpinner>\n        <Trans i18nKey={'organization:loadingInvitedMembers'} />\n      </LoadingMembersSpinner>\n    );\n  }\n\n  if (status === 'error') {\n    return (\n      <Alert type={'error'}>\n        <Trans i18nKey={'organization:loadInvitedMembersError'} />\n      </Alert>\n    );\n  }\n\n  if (!members.length) {\n    return (\n      <p className={'text-sm'}>\n        <Trans i18nKey={'organization:noPendingInvites'} />\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col divide-y divide-gray-100 dark:divide-black-400\">\n      {members.map(({ email, role, code, id }) => {\n        return (\n          <div\n            key={id}\n            data-cy={'invited-member'}\n            data-code={code}\n            className={\n              'flex flex-col py-2 lg:flex-row lg:items-center lg:space-x-2'\n            }\n          >\n            <div className={'flex flex-auto items-center space-x-4'}>\n              <FallbackUserAvatar text={email} />\n\n              <div className={'block truncate text-sm'}>{email}</div>\n            </div>\n\n            <div className={'flex items-center justify-end space-x-4'}>\n              <RoleBadge role={role} />\n\n              <IfHasPermissions condition={canDeleteInvites}>\n                <DeleteInviteButton\n                  inviteId={id}\n                  organizationId={organizationId}\n                  memberEmail={email}\n                />\n              </IfHasPermissions>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default OrganizationInvitedMembersList;\n", "import type { CollectionReference } from 'firebase/firestore';\nimport { collection } from 'firebase/firestore';\nimport { useFirestore, useFirestoreCollectionData } from 'reactfire';\n\nimport type MembershipInvite from '~/lib/organizations/types/membership-invite';\n\nimport {\n  INVITES_COLLECTION,\n  ORGANIZATIONS_COLLECTION,\n} from '~/lib/firestore-collections';\n\n/**\n * @description Hook to fetch the organization's invited members\n * @param organizationId\n */\nfunction useFetchInvitedMembers(organizationId: string) {\n  const firestore = useFirestore();\n\n  const collectionRef = collection(\n    firestore,\n    ORGANIZATIONS_COLLECTION,\n    organizationId,\n    INVITES_COLLECTION\n  ) as CollectionReference<WithId<MembershipInvite>>;\n\n  return useFirestoreCollectionData(collectionRef, {\n    idField: 'id',\n  });\n}\n\nexport default useFetchInvitedMembers;\n", "import { useCallback, useState } from 'react';\nimport toaster from 'react-hot-toast';\nimport { Trans, useTranslation } from 'react-i18next';\nimport XMarkIcon from '@heroicons/react/24/outline/XMarkIcon';\n\nimport useDeleteInvite from '~/lib/organizations/hooks/use-delete-invite';\n\nimport IconButton from '~/core/ui/IconButton';\nimport If from '~/core/ui/If';\nimport Modal from '~/core/ui/Modal';\nimport Button from '~/core/ui/Button';\n\nconst DeleteInviteButton: React.FCC<{\n  inviteId: string;\n  organizationId: string;\n  memberEmail: string;\n}> = ({ inviteId, organizationId, memberEmail }) => {\n  const [isDeleting, setIsDeleting] = useState(false);\n  const deleteRequest = useDeleteInvite();\n  const { t } = useTranslation('organization');\n\n  const onInviteDeleteRequested = useCallback(async () => {\n    const promise = deleteRequest(organizationId, inviteId);\n\n    await toaster.promise(promise, {\n      success: t<string>(`deleteInviteSuccessMessage`),\n      error: t<string>(`deleteInviteErrorMessage`),\n      loading: t<string>(`deleteInviteLoadingMessage`),\n    });\n\n    setIsDeleting(false);\n  }, [deleteRequest, inviteId, organizationId, t]);\n\n  const heading = <Trans i18nKey={'organization:deleteInviteModalHeading'} />;\n\n  return (\n    <>\n      <IconButton\n        data-cy={'delete-invite-button'}\n        label={'Delete Invite'}\n        onClick={() => setIsDeleting(true)}\n      >\n        <XMarkIcon className={'h-6'} />\n      </IconButton>\n\n      <If condition={isDeleting}>\n        <Modal heading={heading} isOpen={isDeleting} setIsOpen={setIsDeleting}>\n          <div className={'flex flex-col space-y-4'}>\n            <p>\n              <Trans\n                i18nKey={'organization:confirmDeletingMemberInvite'}\n                values={{ email: memberEmail }}\n                components={{ b: <b /> }}\n              />\n            </p>\n\n            <p>\n              <Trans i18nKey={'common:modalConfirmationQuestion'} />\n            </p>\n\n            <Button\n              data-cy={'confirm-delete-invite-button'}\n              color={'danger'}\n              onClick={onInviteDeleteRequested}\n            >\n              <Trans i18nKey={'organization:deleteInviteSubmitLabel'} />\n            </Button>\n          </div>\n        </Modal>\n      </If>\n    </>\n  );\n};\n\nexport default DeleteInviteButton;\n", "import { useFirestore } from 'reactfire';\nimport { deleteDoc, doc } from 'firebase/firestore';\nimport { useCallback } from 'react';\n\nimport {\n  INVITES_COLLECTION,\n  ORGANIZATIONS_COLLECTION,\n} from '~/lib/firestore-collections';\n\nfunction useDeleteInvite() {\n  const firestore = useFirestore();\n\n  return useCallback(\n    (organizationId: string, inviteId: string) => {\n      const path = getDeleteInvitePath(organizationId, inviteId);\n      const docRef = doc(firestore, path);\n\n      return deleteDoc(docRef);\n    },\n    [firestore]\n  );\n}\n\n/**\n * @name getDeleteInvitePath\n * @param organizationId\n * @param inviteId\n * @description Builds path to the collection document to delete\n */\nfunction getDeleteInvitePath(organizationId: string, inviteId: string) {\n  return [\n    ORGANIZATIONS_COLLECTION,\n    organizationId,\n    INVITES_COLLECTION,\n    inviteId,\n  ].join('/');\n}\n\nexport default useDeleteInvite;\n"],
  "mappings": "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",
  "names": ["import_react", "XMarkIcon"]
}
