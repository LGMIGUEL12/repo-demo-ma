{
  "version": 3,
  "sources": ["../../../app/components/auth/PhoneNumberSignInContainer.tsx", "../../../app/components/auth/EmailLinkAuth.tsx", "../../../app/components/auth/AuthCatchBoundary.tsx"],
  "sourcesContent": ["import { useCallback } from 'react';\nimport type { UserCredential } from 'firebase/auth';\nimport PhoneNumberCredentialForm from '~/components/auth/PhoneNumberCredentialForm';\n\nconst PhoneNumberSignInContainer: React.FC<{\n  onSignIn: (idToken: string) => unknown;\n}> = ({ onSignIn }) => {\n  const onSuccess = useCallback(\n    async (credential: UserCredential) => {\n      const idToken = await credential.user.getIdToken();\n\n      onSignIn(idToken);\n    },\n    [onSignIn]\n  );\n\n  return <PhoneNumberCredentialForm action={'signIn'} onSuccess={onSuccess} />;\n};\n\nexport default PhoneNumberSignInContainer;\n", "import { Trans, useTranslation } from 'react-i18next';\nimport type { FormEventHandler } from 'react';\nimport { useCallback } from 'react';\nimport { useAuth } from 'reactfire';\nimport { sendSignInLinkToEmail } from 'firebase/auth';\nimport toast from 'react-hot-toast';\n\nimport useRequestState from '~/core/hooks/use-request-state';\nimport getFirebaseErrorCode from '~/core/firebase/utils/get-firebase-error-code';\n\nimport TextField from '~/core/ui/TextField';\nimport Button from '~/core/ui/Button';\nimport If from '~/core/ui/If';\nimport Alert from '~/core/ui/Alert';\n\nimport configuration from '~/configuration';\n\nconst EmailLinkAuth: React.FC = () => {\n  const auth = useAuth();\n  const { t } = useTranslation();\n  const { state, setLoading, setData, setError } = useRequestState<void>();\n\n  const onSubmit: FormEventHandler<HTMLFormElement> = useCallback(\n    async (event) => {\n      event.preventDefault();\n\n      const target = event.currentTarget;\n      const data = new FormData(target);\n      const email = data.get('email') as string;\n      const url = getAuthUrl();\n\n      setLoading(true);\n\n      const settings = {\n        url,\n        handleCodeInApp: true,\n      };\n\n      const promise = sendSignInLinkToEmail(auth, email, settings)\n        .then(() => {\n          storeEmailInStorage(email);\n\n          setData();\n        })\n        .catch((error) => {\n          setError(error);\n\n          throw getFirebaseErrorCode(error);\n        });\n\n      await toast.promise(promise, {\n        loading: t<string>('auth:sendingEmailLink'),\n        success: t<string>(`auth:sendLinkSuccessToast`),\n        error: t<string>(`auth:errors.link`),\n      });\n    },\n    [auth, t, setData, setError, setLoading]\n  );\n\n  if (state.success) {\n    return (\n      <Alert type={'success'}>\n        <Trans i18nKey={'auth:sendLinkSuccess'} />\n      </Alert>\n    );\n  }\n\n  return (\n    <form className={'w-full'} onSubmit={onSubmit}>\n      <div className={'flex flex-col space-y-4'}>\n        <TextField>\n          <TextField.Label>\n            <Trans i18nKey={'common:emailAddress'} />\n\n            <TextField.Input\n              data-cy={'email-input'}\n              required\n              type=\"email\"\n              placeholder={'your@email.com'}\n              name={'email'}\n            />\n          </TextField.Label>\n        </TextField>\n\n        <Button size={'large'} loading={state.loading}>\n          <If\n            condition={state.loading}\n            fallback={<Trans i18nKey={'auth:sendEmailLink'} />}\n          >\n            <Trans i18nKey={'auth:sendingEmailLink'} />\n          </If>\n        </Button>\n      </div>\n\n      <If condition={state.error}>\n        <Alert type={'error'}>\n          <Trans i18nKey={'auth:errors.link'} />\n        </Alert>\n      </If>\n    </form>\n  );\n};\n\nfunction getAuthUrl() {\n  const origin = window.location.origin;\n  const path = configuration.paths.emailLinkSignIn;\n\n  return [origin, path].join('');\n}\n\nfunction storeEmailInStorage(email: string) {\n  window.localStorage.setItem('emailForSignIn', email);\n}\n\nexport default EmailLinkAuth;\n", "import { useNavigate } from '@remix-run/react';\n\nimport { Trans } from 'react-i18next';\nimport AuthErrorMessage from '~/components/auth/AuthErrorMessage';\nimport Button from '~/core/ui/Button';\n\nfunction AuthCatchBoundary() {\n  const navigate = useNavigate();\n\n  return (\n    <div className={'flex flex-col space-y-4'}>\n      <AuthErrorMessage error={'generic'}></AuthErrorMessage>\n\n      <Button onClick={() => navigate('.')}>\n        <Trans i18nKey={'common:retry'} default={'Retry'} />\n      </Button>\n    </div>\n  );\n}\n\nexport default AuthCatchBoundary;\n"],
  "mappings": "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",
  "names": ["import_react"]
}
