{
  "version": 3,
  "sources": ["../../../app/core/firebase/components/GuardedPage.tsx", "../../../app/core/hooks/use-clear-firestore-cache.ts"],
  "sourcesContent": ["import { useCallback, useEffect } from 'react';\nimport { useAuth, useSigninCheck } from 'reactfire';\n\nimport isBrowser from '~/core/generic/is-browser';\nimport useClearFirestoreCache from '~/core/hooks/use-clear-firestore-cache';\n\nconst AuthRedirectListener: React.FCC<{\n  whenSignedOut?: string;\n}> = ({ children, whenSignedOut }) => {\n  const auth = useAuth();\n  const { status } = useSigninCheck();\n  const redirectUserAway = useRedirectUserAway();\n  const clearCache = useClearFirestoreCache();\n  const isSignInCheckDone = status === 'success';\n\n  useEffect(() => {\n    // this should run once and only on success\n    if (!isSignInCheckDone) {\n      return;\n    }\n\n    // keep this running for the whole session\n    // unless the component was unmounted, for example, on log-outs\n    const listener = auth.onAuthStateChanged((user) => {\n      // log user out if user is falsy\n      // and if the consumer provided a route to redirect the user\n      const shouldLogOut = !user && whenSignedOut;\n\n      if (!user) {\n        clearCache();\n      }\n\n      if (shouldLogOut) {\n        return redirectUserAway(whenSignedOut);\n      }\n    });\n\n    // destroy listener on un-mounts\n    return () => listener();\n  }, [\n    auth,\n    clearCache,\n    isSignInCheckDone,\n    redirectUserAway,\n    status,\n    whenSignedOut,\n  ]);\n\n  return <>{children}</>;\n};\n\nexport default function GuardedPage({\n  children,\n  whenSignedOut,\n}: React.PropsWithChildren<{\n  whenSignedOut?: string;\n}>) {\n  const shouldActivateListener = isBrowser();\n\n  // we only activate the listener if\n  // we are rendering in the browser\n  if (!shouldActivateListener) {\n    return <>{children}</>;\n  }\n\n  return (\n    <AuthRedirectListener whenSignedOut={whenSignedOut}>\n      {children}\n    </AuthRedirectListener>\n  );\n}\n\nfunction useRedirectUserAway() {\n  return useCallback((path: string) => {\n    const currentPath = window.location.pathname;\n    const isNotCurrentPage = currentPath !== path;\n\n    // we then redirect the user to the page\n    // specified in the props of the component\n    if (isNotCurrentPage) {\n      window.location.assign(path);\n    }\n  }, []);\n}\n", "import { useCallback } from 'react';\n\n/**\n * @name useClearFirestoreCache\n * @description This function needs to be called on sign-out to clear the\n * Firestore cache before it throws a permissions error\n * Solves: https://github.com/FirebaseExtended/reactfire/discussions/228#discussioncomment-2101193\n */\nfunction useClearFirestoreCache() {\n  return useCallback(() => {\n    const reactFirePreloadedObservables = (\n      globalThis as Record<string, unknown>\n    )['_reactFirePreloadedObservables'] as Map<string, unknown> | undefined;\n\n    if (reactFirePreloadedObservables) {\n      Array.from(reactFirePreloadedObservables.keys())\n        .filter((key) => key.includes('firestore'))\n        .forEach((key) => reactFirePreloadedObservables.delete(key));\n    }\n  }, []);\n}\n\nexport default useClearFirestoreCache;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA,IAAAA,gBAAuC;;;ACAvC,mBAA4B;AAQ5B,SAAS,yBAAyB;AAChC,aAAO,0BAAY,MAAM;AACvB,UAAM,gCACJ,WACA;AAEF,QAAI,+BAA+B;AACjC,YAAM,KAAK,8BAA8B,KAAK,CAAC,EAC5C,OAAO,CAAC,QAAQ,IAAI,SAAS,WAAW,CAAC,EACzC,QAAQ,CAAC,QAAQ,8BAA8B,OAAO,GAAG,CAAC;AAAA,IAC/D;AAAA,EACF,GAAG,CAAC,CAAC;AACP;AAEA,IAAO,oCAAQ;;;ADtBf;AAMA,IAAM,uBAED,CAAC,EAAE,UAAU,cAAc,MAAM;AACpC,QAAM,OAAO,GAAQ;AACrB,QAAM,EAAE,OAAO,IAAI,GAAe;AAClC,QAAM,mBAAmB,oBAAoB;AAC7C,QAAM,aAAa,kCAAuB;AAC1C,QAAM,oBAAoB,WAAW;AAErC,+BAAU,MAAM;AAEd,QAAI,CAAC,mBAAmB;AACtB;AAAA,IACF;AAIA,UAAM,WAAW,KAAK,mBAAmB,CAAC,SAAS;AAGjD,YAAM,eAAe,CAAC,QAAQ;AAE9B,UAAI,CAAC,MAAM;AACT,mBAAW;AAAA,MACb;AAEA,UAAI,cAAc;AAChB,eAAO,iBAAiB,aAAa;AAAA,MACvC;AAAA,IACF,CAAC;AAGD,WAAO,MAAM,SAAS;AAAA,EACxB,GAAG;AAAA,IACD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,SAAO;AAAA,IAAG;AAAA,KAAH;AAAA;AAAA;AAAA;AAAA,SAAY;AACrB;AAEe,SAAR,YAA6B;AAAA,EAClC;AAAA,EACA;AACF,GAEI;AACF,QAAM,yBAAyB,mBAAU;AAIzC,MAAI,CAAC,wBAAwB;AAC3B,WAAO;AAAA,MAAG;AAAA,OAAH;AAAA;AAAA;AAAA;AAAA,WAAY;AAAA,EACrB;AAEA,SACE,mDAAC;AAAA,IAAqB;AAAA,IACnB;AAAA,KADH;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEA,SAAS,sBAAsB;AAC7B,aAAO,2BAAY,CAAC,SAAiB;AACnC,UAAM,cAAc,OAAO,SAAS;AACpC,UAAM,mBAAmB,gBAAgB;AAIzC,QAAI,kBAAkB;AACpB,aAAO,SAAS,OAAO,IAAI;AAAA,IAC7B;AAAA,EACF,GAAG,CAAC,CAAC;AACP;",
  "names": ["import_react"]
}
