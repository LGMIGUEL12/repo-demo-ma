{
  "version": 3,
  "sources": ["../../../../../app/routes/__app/tasks/index.tsx", "../../../../../app/components/tasks/CreateTaskForm.tsx", "../../../../../app/lib/tasks/hooks/use-create-task.ts", "../../../../../app/components/tasks/ListTasks.tsx", "../../../../../app/lib/tasks/hooks/use-list-tasks.ts", "../../../../../app/components/tasks/DeleteTaskButton.tsx", "../../../../../app/lib/tasks/hooks/use-delete-task.ts", "../../../../../app/components/tasks/EditTaskButton.tsx", "../../../../../app/components/tasks/TaskCard.tsx", "../../../../../app/components/tasks/TasksContainer.tsx"],
  "sourcesContent": ["import { Trans } from 'react-i18next';\nimport AppContainer from '~/components/AppContainer';\nimport AppHeader from '~/components/AppHeader';\nimport TasksContainer from '~/components/tasks/TasksContainer';\nimport ClientOnly from '~/core/ui/ClientOnly';\n\nfunction TasksPage() {\n  return (\n    <>\n      <AppHeader>\n        <Trans i18nKey={'common:tasksTabLabel'} />\n      </AppHeader>\n      <ClientOnly>\n        <AppContainer>\n          <TasksContainer />\n        </AppContainer>\n      </ClientOnly>\n    </>\n  );\n}\n\nexport default TasksPage;\n", "import React, { useCallback, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-hot-toast';\nimport { Trans, useTranslation } from 'react-i18next';\nimport Button from '~/core/ui/Button';\nimport TextField from '~/core/ui/TextField';\nimport useCreateTask from '~/lib/tasks/hooks/use-create-task';\n\nconst CreateTaskForm: React.FC<{}> = () => {\n  const [createTask, createTaskState] = useCreateTask();\n  const { loading } = createTaskState;\n  const { t } = useTranslation();\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: {\n      title: '',\n      description: '',\n    },\n  });\n\n  const titleControl = register('title', { required: true });\n  const descriptionControl = register('description', { required: true });\n\n  const onError = useCallback(() => {\n    toast.error('Error: please fill in all the required fields');\n  }, []);\n\n  const onSubmit = async (title: string, description: string) => {\n    console.log(title);\n    console.log(description);\n\n    if (!title || !description) {\n      return onError();\n    }\n\n    await toast.promise(createTask(title, description), {\n      success: t<string>(`task:createTaskSuccess`),\n      error: t<string>(`task:createTaskError`),\n      loading: t<string>(`task:createTaskLoading`),\n    });\n\n    reset({\n      title: '',\n      description: '',\n    });\n  };\n\n  useEffect(() => {\n    reset({ title: '', description: '' });\n  }, [reset]);\n\n  return (\n    <>\n      <form\n        onSubmit={handleSubmit((value) => {\n          return onSubmit(value.title, value.description);\n        })}\n      >\n        <div className={'flex items-center space-y-4'}>\n          <div className={'ml-2 mr-2 flex-auto'}>\n            <TextField>\n              <TextField.Label>\n                <Trans i18nKey={'task:titleInputLabel'} />\n                <TextField.Input\n                  name={titleControl.name}\n                  innerRef={titleControl.ref}\n                  onChange={titleControl.onChange}\n                  onBlur={titleControl.onBlur}\n                  required\n                  data-cy={'task-title-input'}\n                  placeholder={'Ex. \"Do this by night\"'}\n                />\n              </TextField.Label>\n            </TextField>\n            <TextField className={'pt-1'}>\n              <TextField.Label>\n                <Trans i18nKey={'task:descriptionInputLabel'} />\n                <TextField.Input\n                  name={descriptionControl.name}\n                  innerRef={descriptionControl.ref}\n                  onChange={descriptionControl.onChange}\n                  onBlur={descriptionControl.onBlur}\n                  required\n                  data-cy={'task-description-input'}\n                  placeholder={'Write a detailed description about your task.'}\n                />\n              </TextField.Label>\n            </TextField>\n          </div>\n          <div className={'ml-2 mr-2 flex-initial pb-1'}>\n            <Button\n              className={'w-full md:w-auto'}\n              data-cy={'create-task-submit-button'}\n              loading={loading}\n            >\n              <Trans i18nKey={'task:createTaskSubmitLabel'} />\n            </Button>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default CreateTaskForm;\n", "import { TASKS_COLLECTION } from '../../firestore-collections';\nimport { useCallback } from 'react';\nimport useRequestState from '~/core/hooks/use-request-state';\nimport { getFirestore, addDoc, collection } from 'firebase/firestore';\nimport type Task from '../@types/task';\nimport type { FirebaseError } from 'firebase/app';\n\n/**\n * @name useCreateTask\n * @description Hook to create a brand new task\n */\n\nfunction useCreateTask() {\n  const { state, setLoading, setData, setError } =\n    useRequestState<WithId<Task>>();\n\n  const createTaskCallback = useCallback(\n    async (title: string, description: string) => {\n      const firestore = getFirestore();\n      const tasksCollection = collection(firestore, TASKS_COLLECTION);\n      try {\n        setLoading(true);\n        const data: Task = {\n          title: title,\n          description: description,\n          isCompleted: false,\n        };\n        const docRef = await addDoc(tasksCollection, data);\n        setData({\n          id: docRef.id,\n          title: title,\n          description: description,\n          isCompleted: data.isCompleted,\n        });\n      } catch (error) {\n        setError((error as FirebaseError).message);\n      }\n    },\n    [setData, setError, setLoading]\n  );\n  return [createTaskCallback, state] as [\n    typeof createTaskCallback,\n    typeof state\n  ];\n}\n\nexport default useCreateTask;\n", "import React from 'react';\nimport { Trans } from 'react-i18next';\nimport Alert from '~/core/ui/Alert';\nimport If from '~/core/ui/If';\nimport SubHeading from '~/core/ui/SubHeading';\nimport useListTasks from '~/lib/tasks/hooks/use-list-tasks';\nimport TaskCard from './TaskCard';\n\nconst ListTasks: React.FC<{}> = () => {\n  const { data: tasks, error, status } = useListTasks();\n\n  if (status === 'loading') {\n    return <SubHeading>Loading ...</SubHeading>;\n  }\n\n  if (status === 'error') {\n    return (\n      <Alert type=\"error\">\n        <Trans i18nKey=\"task: loadTasksError\" />\n        <span>{error?.message}</span>\n      </Alert>\n    );\n  }\n\n  return (\n    <div\n      className={`flex flex-col space-y-4 md:space-y-0 lg:mt-8 lg:flex-row lg:space-x-14 xl:space-x-20`}\n    >\n      <div className={'grid grid-cols-4'}>\n        <If condition={status === 'success'}>\n          {tasks.map((task) => {\n            return <TaskCard key={task.id} task={task} />;\n          })}\n        </If>\n      </div>\n    </div>\n  );\n};\n\nexport default ListTasks;\n", "import { TASKS_COLLECTION } from './../../firestore-collections';\nimport { collection, query, where } from 'firebase/firestore';\nimport { useFirestore, useFirestoreCollectionData } from 'reactfire';\n\nimport type { CollectionReference } from 'firebase/firestore';\nimport type Task from '../@types/task';\n\n/**\n * @name useListTasks\n * @description Returns a stream with the posts which belong to the selected organization.\n * @param organizationId\n */\n\nfunction useListTasks() {\n  const firestore = useFirestore();\n\n  const taskCollection = collection(\n    firestore,\n    TASKS_COLLECTION\n  ) as CollectionReference<Task>;\n\n  const listTaskQuery = query(\n    taskCollection\n    // where('organizationId','==',organizationId)\n    // orderBy('createdAt','asc')\n  );\n\n  return useFirestoreCollectionData(listTaskQuery, {\n    initialData: [],\n    idField: 'id',\n  });\n}\n\nexport default useListTasks;\n", "import { TrashIcon } from '@heroicons/react/24/outline';\nimport IconButton from '~/core/ui/IconButton';\nimport toaster from 'react-hot-toast';\nimport React, { useCallback, useState } from 'react';\nimport useDeleteTask from '~/lib/tasks/hooks/use-delete-task';\nimport { Trans, useTranslation } from 'react-i18next';\nimport If from '~/core/ui/If';\nimport Modal from '~/core/ui/Modal';\nimport Button from '~/core/ui/Button';\n\nconst DeleteTaskButton: React.FCC<{ taskId: string }> = ({ taskId }) => {\n  const [isDeleting, setIsDeleting] = useState(false);\n  const deleteTaskRequest = useDeleteTask();\n  const { t } = useTranslation();\n\n  const onTaskDeleteRequest = useCallback(async () => {\n    const promise = deleteTaskRequest(taskId);\n\n    await toaster.promise(promise, {\n      success: t<string>(`post:deletePostSuccessMessage`),\n      error: t<string>(`post:deletePostErrorMessage`),\n      loading: t<string>(`post:deletePostLoadingMessage`),\n    });\n\n    setIsDeleting(false);\n  }, [deleteTaskRequest, taskId, t]);\n\n  return (\n    <>\n      <IconButton\n        data-cy={'delete-post-button'}\n        onClick={() => setIsDeleting(true)}\n      >\n        <TrashIcon className=\"dark h-6\" />\n      </IconButton>\n      <If condition={isDeleting}>\n        <Modal\n          heading={<Trans i18nKey={'post:deletePostModalHeading'} />}\n          isOpen={isDeleting}\n          setIsOpen={setIsDeleting}\n        >\n          <div className={'flex flex-col space-y-4'}>\n            <p>\n              <Trans i18nKey={'common:modalConfirmationQuestion'} />\n            </p>\n            <Button\n              data-cy={'confirm-delete-post-button'}\n              color={'danger'}\n              onClick={onTaskDeleteRequest}\n            >\n              <Trans i18nKey={'post:deletePostSubmitLabel'} />\n            </Button>\n          </div>\n        </Modal>\n      </If>\n    </>\n  );\n};\n\nexport default DeleteTaskButton;\n", "import { useFirestore } from 'reactfire';\nimport { doc, deleteDoc } from 'firebase/firestore';\nimport { TASKS_COLLECTION } from '~/lib/firestore-collections';\n\nimport type { DocumentReference } from 'firebase/firestore';\nimport type Task from '../@types/task';\nimport { useCallback } from 'react';\n\n/**\n * @name useeleteTask\n * @description Returns a stream with the posts which belong to the selected organization\n * @param organizationId\n */\n\nfunction useDeleteTask() {\n    const firestore = useFirestore();\n\n    const deletePostCallback = useCallback(\n        (taskId: string) => {\n          const postRef = doc(\n            firestore,\n            TASKS_COLLECTION,\n            taskId\n          ) as DocumentReference<Task>;\n    \n          return deleteDoc(postRef);\n        },\n        [firestore]\n      );\n    \n      return deletePostCallback;\n}\n\nexport default useDeleteTask;\n", "import { PencilSquareIcon } from '@heroicons/react/24/outline';\nimport IconButton from '~/core/ui/IconButton';\n\nconst EditTaskButton: React.FCC<{}> = ({}) => {\n  return (\n    <>\n      <IconButton>\n        {/* TODO: build a checkbox or switch for isComplete property */}\n        <PencilSquareIcon className=\"dark h-6\" />\n      </IconButton>\n    </>\n  );\n};\n\nexport default EditTaskButton;\n", "import DeleteTaskButton from './DeleteTaskButton';\nimport EditTaskButton from './EditTaskButton';\n\nimport type Task from '~/lib/tasks/@types/task';\n\nconst TaskCard: React.FC<{ task: Task }> = ({ task }) => {\n  return (\n    <div className=\"h-30 p6 border-1 m-5 flex flex-col rounded border-inherit text-center\">\n      <h1 className=\"text-center text-base font-bold\">{task.title}</h1>\n      <p className=\"text-base\">{task.description}</p>\n      <div className=\"flex justify-around\">\n        <div>\n          <EditTaskButton taskId={''} />\n        </div>\n        <div>\n          <DeleteTaskButton taskId={''} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskCard;\n", "import React from 'react';\nimport Heading from '~/core/ui/Heading';\nimport CreateTaskForm from './CreateTaskForm';\nimport ListTasks from './ListTasks';\n\nconst TasksContainer: React.FC<{}> = () => {\n  return (\n    <>\n      <div className=\"flex flex-col \">\n        <div>\n          <CreateTaskForm />\n        </div>\n        <hr className={'mt-3 mb-3'} />\n        <div className=\"text-center\">\n          <Heading type={2}>Tasks To Do</Heading>\n        </div>\n        <div>\n          <ListTasks />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TasksContainer;\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_react"]
}
