{
  "version": 3,
  "sources": ["../../../../../app/routes/__app/tasks/index.tsx", "../../../../../app/components/tasks/FormContainer.tsx", "../../../../../app/components/tasks/TasksContainer.tsx"],
  "sourcesContent": ["import { Trans } from 'react-i18next';\nimport AppContainer from '~/components/AppContainer';\nimport AppHeader from '~/components/AppHeader';\nimport TasksContainer from '~/components/tasks/TasksContainer';\nimport ClientOnly from '~/core/ui/ClientOnly';\n\nfunction TasksPage() {\n  return (\n    <>\n      <AppHeader>\n        <Trans i18nKey={'common:tasksTabLabel'} />\n      </AppHeader>\n      <ClientOnly>\n        <AppContainer>\n          <TasksContainer />\n        </AppContainer>\n      </ClientOnly>\n    </>\n  );\n}\n\nexport default TasksPage;\n", "import { Outlet } from '@remix-run/react';\nimport React from 'react';\nimport { Trans } from 'react-i18next';\nimport Button from '~/core/ui/Button';\nimport TextField from '~/core/ui/TextField';\n\nconst FormContainer: React.FC<{}> = () => {\n  return (\n    <>\n      <div\n        className={`flex flex-col space-y-4 md:space-y-0 lg:mt-8 lg:flex-row lg:space-x-16 xl:space-x-24`}\n      >\n        <div className={'flex flex-col space-y-4'}>\n          <TextField>\n            <TextField.Label>\n              <Trans i18nKey={'YOUR TITULE TASKS'} />\n\n              <TextField.Input />\n            </TextField.Label>\n            <TextField.Label>\n              <Trans i18nKey={'YOUR DESCRIPTION TASKS'} />\n              <TextField.Input />\n            </TextField.Label>\n          </TextField>\n          <div>\n            <Button className={'w-full md:w-auto'}>\n              <Trans i18nKey={'update taks'} />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\n\nexport default FormContainer", "import React from 'react';\nimport FormContainer from './FormContainer';\n\nconst TasksContainer: React.FC<{}> = () => {\n  return (\n    <>\n      <FormContainer />\n    </>\n  );\n};\n\nexport default TasksContainer;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACEA;AAFA;AAMA,IAAM,gBAA8B,MAAM;AACxC,SACE;AAAA,IACE,6DAAC;AAAA,MACC,WAAW;AAAA,MAEX,6DAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC;AAAA,YACC;AAAA,iEAAC,kBAAU,OAAV;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAAqC;AAAA,kBAErC,mDAAC,kBAAU,OAAV,IAAD;AAAA;AAAA;AAAA;AAAA,yBAAiB;AAAA;AAAA,iBAHnB;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA,cACA,mDAAC,kBAAU,OAAV;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAA0C;AAAA,kBAC1C,mDAAC,kBAAU,OAAV,IAAD;AAAA;AAAA;AAAA;AAAA,yBAAiB;AAAA;AAAA,iBAFnB;AAAA;AAAA;AAAA;AAAA,qBAGA;AAAA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,iBAUA;AAAA,UACA,mDAAC;AAAA,YACC,6DAAC;AAAA,cAAO,WAAW;AAAA,cACjB,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA+B;AAAA,eADjC;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA;AAAA,SAhBF;AAAA;AAAA;AAAA;AAAA,aAiBA;AAAA,OApBF;AAAA;AAAA;AAAA;AAAA,WAqBA;AAAA,KAtBF;AAAA;AAAA;AAAA;AAAA,SAuBA;AAEJ;AAGA,IAAO,wBAAQ;;;ACpCf;AAGA,IAAM,iBAA+B,MAAM;AACzC,SACE;AAAA,IACE,6DAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,WAAe;AAAA,KADjB;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEA,IAAO,yBAAQ;;;AFXf;AAMA,SAAS,YAAY;AACnB,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,6DAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAAwC;AAAA,SAD1C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QACC,6DAAC;AAAA,UACC,6DAAC,4BAAD;AAAA;AAAA;AAAA;AAAA,iBAAgB;AAAA,WADlB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA;AAAA,KARF;AAAA;AAAA;AAAA;AAAA,SASA;AAEJ;AAEA,IAAO,gBAAQ;",
  "names": []
}
