{
  "version": 3,
  "sources": ["../../../../../../../app/routes/__app/settings/organization/members/index.tsx", "../../../../../../../app/lib/organizations/hooks/use-user-can-invite-users.ts"],
  "sourcesContent": ["import { lazy, useEffect, useRef } from 'react';\nimport type { LoaderArgs } from '@remix-run/server-runtime';\nimport type { MetaFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { useLoaderData, useNavigate } from '@remix-run/react';\nimport { UserPlusIcon } from '@heroicons/react/24/outline';\nimport { Trans } from 'react-i18next';\n\nimport SettingsTile from '~/components/settings/SettingsTile';\n\nimport Button from '~/core/ui/Button';\nimport If from '~/core/ui/If';\nimport ClientOnly from '~/core/ui/ClientOnly';\n\nimport useCurrentOrganization from '~/lib/organizations/hooks/use-current-organization';\nimport useUserCanInviteUsers from '~/lib/organizations/hooks/use-user-can-invite-users';\nimport { getOrganizationMembers } from '~/lib/server/organizations/memberships.server';\n\nimport getLoggedInUser from '~/core/firebase/admin/auth/get-logged-in-user';\nimport initializeFirebaseAdminApp from '~/core/firebase/admin/initialize-firebase-admin-app';\nimport { parseSessionIdCookie } from '~/lib/server/cookies/session.cookie';\nimport { parseOrganizationIdCookie } from '~/lib/server/cookies/organization.cookie';\n\nimport configuration from '~/configuration';\n\nconst OrganizationMembersList = lazy(\n  () => import('~/components/organizations/OrganizationMembersList')\n);\n\nconst OrganizationInvitedMembersList = lazy(\n  () => import('~/components/organizations/OrganizationInvitedMembersList')\n);\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Members',\n  };\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  await initializeFirebaseAdminApp();\n\n  const organizationId = await parseOrganizationIdCookie(request);\n\n  if (!organizationId) {\n    return redirect(configuration.paths.appHome);\n  }\n\n  const session = await parseSessionIdCookie(request);\n  const user = await getLoggedInUser(session);\n\n  const members = await getOrganizationMembers({\n    organizationId,\n    userId: user.uid,\n  });\n\n  return json(members);\n};\n\nconst OrganizationMembersPage = () => {\n  const members = useLoaderData<typeof loader>();\n  const canInviteUsers = useUserCanInviteUsers();\n  const organization = useCurrentOrganization();\n  const organizationId = organization?.id;\n\n  useReloadMembersOnOrganizationChanged();\n\n  if (!organizationId) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className={'my-4 flex justify-end'}>\n        <If condition={canInviteUsers}>\n          <InviteMembersButton />\n        </If>\n      </div>\n\n      <div className=\"flex flex-1 flex-col space-y-6\">\n        <SettingsTile\n          heading={<Trans i18nKey={'organization:membersTabLabel'} />}\n          subHeading={<Trans i18nKey={'organization:membersTabSubheading'} />}\n        >\n          <ClientOnly>\n            <OrganizationMembersList\n              membersMetadata={members}\n              organizationId={organizationId}\n            />\n          </ClientOnly>\n        </SettingsTile>\n\n        <SettingsTile\n          heading={<Trans i18nKey={'organization:pendingInvitesHeading'} />}\n          subHeading={\n            <Trans i18nKey={'organization:pendingInvitesSubheading'} />\n          }\n        >\n          <ClientOnly>\n            <OrganizationInvitedMembersList organizationId={organizationId} />\n          </ClientOnly>\n        </SettingsTile>\n      </div>\n    </>\n  );\n};\n\nexport default OrganizationMembersPage;\n\nfunction useReloadMembersOnOrganizationChanged() {\n  const navigate = useNavigate();\n  const organization = useCurrentOrganization();\n  const organizationId = organization?.id;\n  const oldOrganizationId = useRef(organizationId);\n\n  useEffect(() => {\n    if (organizationId !== oldOrganizationId.current) {\n      void navigate('.', { replace: true });\n    }\n  }, [navigate, organizationId]);\n}\n\nfunction InviteMembersButton() {\n  return (\n    <Button\n      className={'w-full lg:w-auto'}\n      data-cy={'invite-form-link'}\n      type=\"button\"\n      href={'/settings/organization/members/invite'}\n    >\n      <span className=\"flex items-center space-x-2\">\n        <UserPlusIcon className=\"h-5\" />\n\n        <span>\n          <Trans i18nKey={'organization:inviteMembersButtonLabel'} />\n        </span>\n      </span>\n    </Button>\n  );\n}\n", "import { canInviteUsers } from '~/lib/organizations/permissions';\nimport useCurrentUserRole from './use-current-user-role';\n\nexport default function useUserCanInviteUsers() {\n  const role = useCurrentUserRole();\n\n  return role !== undefined && canInviteUsers(role);\n}\n"],
  "mappings": "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",
  "names": ["canInviteUsers"]
}
