{
  "version": 3,
  "sources": ["../app/core/ui/If.tsx", "../app/core/ui/Button.tsx", "../app/core/ui/Dropdown.tsx", "../app/components/FallbackUserAvatar.tsx", "../app/components/ProfileAvatar.tsx", "../app/core/ui/IconButton.tsx", "../app/core/session/contexts/user-session.ts", "../app/core/hooks/use-user-session.ts", "../app/core/ui/Heading.tsx", "../app/core/ui/Alert.tsx", "../app/core/ui/Label.tsx", "../app/lib/firestore-collections.ts", "../app/lib/server/collections.ts", "../app/lib/server/queries.ts", "../app/lib/organizations/types/membership-role.ts", "../app/core/firebase/admin/auth/get-user-from-session-cookie.ts", "../app/lib/organizations/permissions.ts", "../app/core/hooks/use-request-state.ts", "../app/core/ui/Modal.tsx", "../app/core/firebase/hooks/use-get-csrf-token.ts", "../app/core/firebase/admin/create-emulator-admin-app.ts", "../app/core/firebase/admin/create-admin-app.ts", "../app/lib/contexts/organization.ts", "../app/lib/organizations/hooks/use-current-organization.ts", "../app/lib/organizations/hooks/use-current-user-role.ts", "../app/components/IfHasPermissions.tsx", "../app/core/ui/Badge.tsx", "../app/core/hooks/use-api.ts", "../app/core/ui/SelectorIcon.tsx", "../app/core/ui/ListBox/ListBox.tsx", "../app/core/ui/ListBox/ListBoxOption.tsx", "../app/lib/organizations/roles.ts", "../app/components/organizations/MembershipRoleSelector.tsx", "../app/core/hooks/use-user-id.ts", "../app/components/organizations/RoleBadge.tsx", "../app/lib/organizations/hooks/use-fetch-organization.ts", "../app/components/organizations/LoadingMembersSpinner.tsx", "../app/lib/organizations/hooks/use-transfer-organization-ownership.ts", "../app/components/organizations/TransferOrganizationOwnershipModal.tsx", "../app/components/organizations/OrganizationMemberActionsDropdown.tsx", "../app/lib/organizations/hooks/use-remove-member.ts", "../app/components/organizations/RemoveOrganizationMemberModal.tsx", "../app/lib/organizations/hooks/use-update-member-role.ts", "../app/components/organizations/UpdateMemberRoleModal.tsx", "../app/components/organizations/OrganizationMembersActionsContainer.tsx", "../app/components/organizations/OrganizationMembersList.tsx", "../app/lib/organizations/hooks/use-fetch-invited-members.ts", "../app/lib/organizations/hooks/use-delete-invite.ts", "../app/components/organizations/DeleteInviteButton.tsx", "../app/components/organizations/OrganizationInvitedMembersList.tsx", "<stdin>", "../app/entry.server.tsx", "../app/i18n/initialize-server-i18n.ts", "../app/i18n/i18n.server.ts", "../app/core/generic/is-browser.ts", "../app/i18n/i18next.config.ts", "../app/root.tsx", "../app/configuration.ts", "../app/core/get-env.ts", "../app/core/ui/Head.tsx", "../app/core/generic/get-cookie-header.ts", "../app/lib/server/cookies/theme.cookie.ts", "../app/components/AppRouteLoadingIndicator.tsx", "../app/core/ui/ClientOnly.tsx", "../app/components/RootCatchBoundary.tsx", "../app/core/ui/Container.tsx", "../app/core/ui/Hero.tsx", "../app/core/ui/SubHeading.tsx", "../app/components/SiteHeader.tsx", "../app/core/ui/Logo/Logo.tsx", "../app/core/ui/Logo/LogoImage.tsx", "../app/components/SiteNavigation.tsx", "../app/core/ui/Navigation/NavigationItem.tsx", "../app/core/ui/Navigation/NavigationMenu.tsx", "../app/components/ProfileDropdown.tsx", "../app/components/DarkModeToggle.tsx", "../app/core/generic/cookies.ts", "../app/core/theming.ts", "../app/core/ui/Tooltip.tsx", "../app/core/firebase/components/FirebaseAppShell.tsx", "../app/core/firebase/components/FirebaseAuthProvider.tsx", "../app/core/hooks/use-destroy-session.ts", "../app/firebase.config.ts", "../app/core/generic/http-status-code.enum.ts", "../app/routes/onboarding/index.tsx", "../app/core/http-exceptions.ts", "../app/components/onboarding/OrganizationInfoStep.tsx", "../app/core/ui/TextField.tsx", "../app/components/onboarding/OnboardingIllustration.tsx", "../app/components/onboarding/CompleteOnboardingStep.tsx", "../app/lib/server/organizations/get-current-organization.ts", "../app/lib/server/onboarding/complete-onboarding.ts", "../app/core/session/types/global-role.ts", "../app/lib/server/cookies/organization.cookie.ts", "../app/lib/server/auth/save-session-cookie.ts", "../app/core/logger.ts", "../app/lib/server/cookies/session.cookie.ts", "../app/core/firebase/admin/auth/get-logged-in-user.ts", "../app/core/firebase/admin/auth/get-user-info-by-id.ts", "../app/core/firebase/utils/serialize-auth-user.ts", "../app/core/middleware/with-methods-guard.ts", "../app/routes/stripe/checkout.ts", "../app/core/generic/get-api-referer-path.ts", "../app/core/middleware/with-csrf.ts", "../app/lib/server/cookies/csrf-secret.cookie.ts", "../app/lib/stripe/create-checkout.ts", "../app/core/stripe/get-stripe.ts", "../app/lib/server/organizations/memberships.server.ts", "../app/routes/stripe/webhook.ts", "../app/core/stripe/stripe-webhooks.enum.ts", "../app/lib/server/organizations/subscriptions.ts", "../app/lib/stripe/build-organization-subscription.ts", "../app/routes/stripe/portal.ts", "../app/lib/stripe/create-billing-portal-session.ts", "../app/routes/__site.tsx", "../app/core/firebase/components/FirebaseAnalyticsProvider.tsx", "../app/core/firebase/hooks/use-track-signed-in-user.ts", "../app/core/firebase/hooks/use-analytics-tracking.ts", "../app/routes/__site/pricing.tsx", "../app/components/PricingTable.tsx", "../app/routes/__site/index.tsx", "../app/components/newsletter/ConvertkitSignupForm.tsx", "../app/components/Footer.tsx", "../app/routes/__site/faq.tsx", "../app/routes/invite.tsx", "../app/components/auth/AuthPageShell.tsx", "../app/routes/invite/$code.tsx", "../app/components/auth/OAuthProviders.tsx", "../app/core/ui/AuthProviderButton.tsx", "../app/core/ui/AuthProviderLogo.tsx", "../app/core/firebase/hooks/use-sign-up-with-email-and-password.ts", "../app/core/firebase/hooks/use-sign-in-with-provider.ts", "../app/core/firebase/utils/get-firebase-error-code.ts", "../app/components/auth/AuthErrorMessage.tsx", "../app/components/auth/MultiFactorAuthChallengeModal.tsx", "../app/core/firebase/hooks/use-recaptcha-verifier.ts", "../app/core/firebase/utils/is-multi-factor-error.ts", "../app/core/ui/PageLoadingIndicator.tsx", "../app/core/firebase/components/GuardedPage.tsx", "../app/core/hooks/use-clear-firestore-cache.ts", "../app/core/generic/create-csrf-token.ts", "../app/core/firebase/admin/auth/create-server-side-session.ts", "../app/components/auth/EmailPasswordSignUpContainer.tsx", "../app/components/auth/EmailPasswordSignUpForm.tsx", "../app/components/auth/EmailPasswordSignInContainer.tsx", "../app/components/auth/EmailPasswordSignInForm.tsx", "../app/components/auth/PhoneNumberSignInContainer.tsx", "../app/components/auth/PhoneNumberCredentialForm.tsx", "../app/components/auth/EmailLinkAuth.tsx", "../app/core/firebase/admin/initialize-firebase-admin-app.ts", "../app/core/middleware/with-firebase-admin.ts", "../app/components/auth/AuthCatchBoundary.tsx", "../app/routes/__app.tsx", "../app/lib/server/loaders/load-app-data.ts", "../app/lib/server/cookies/sidebar-state.cookie.ts", "../app/lib/server/loaders/utils/get-ui-state-cookies.ts", "../app/components/RouteShell.tsx", "../app/core/firebase/components/FirebaseFirestoreProvider.tsx", "../app/lib/contexts/sidebar.ts", "../app/core/hooks/use-sidebar-state.ts", "../app/components/AppSidebar.tsx", "../app/core/ui/Logo/LogoMini.tsx", "../app/core/ui/Logo/LogoImageMini.tsx", "../app/components/AppSidebarNavigation.tsx", "../app/navigation.config.tsx", "../app/routes/__app/dashboard/index.tsx", "../app/components/dashboard/DashboardDemo.tsx", "../app/core/ui/Tile.tsx", "../app/components/AppHeader.tsx", "../app/components/MobileNavigation.tsx", "../app/components/AppContainer.tsx", "../app/components/organizations/OrganizationsSelector.tsx", "../app/lib/organizations/hooks/use-fetch-user-organizations.ts", "../app/core/ui/Popover.tsx", "../app/components/organizations/CreateOrganizationModal.tsx", "../app/lib/organizations/hooks/use-create-organization.ts", "../app/routes/__app/photos/index.tsx", "../app/routes/__app/tasks/index.tsx", "../app/components/tasks/TasksContainer.tsx", "../app/components/tasks/CreateTaskForm.tsx", "../app/lib/tasks/hooks/use-create-task.ts", "../app/components/tasks/ListTasks.tsx", "../app/lib/tasks/hooks/use-list-tasks.ts", "../app/components/tasks/DeleteTaskButton.tsx", "../app/lib/tasks/hooks/use-delete-task.ts", "../app/components/tasks/EditTaskButton.tsx", "../app/components/tasks/UpdateTasksCard.tsx", "../app/lib/tasks/hooks/use-update-task.ts", "../app/components/tasks/TaskCard.tsx", "../app/routes/__app/settings.tsx", "../app/routes/__app/settings/subscription/index.tsx", "../app/components/subscriptions/Plans.tsx", "../app/components/subscriptions/PlanSelectionForm.tsx", "../app/components/subscriptions/PlanSelector.tsx", "../app/components/subscriptions/CheckoutRedirectButton.tsx", "../app/components/subscriptions/BillingRedirectButton.tsx", "../app/components/subscriptions/SubscriptionCard.tsx", "../app/components/settings/SettingsTile.tsx", "../app/routes/__app/settings/organization.tsx", "../app/components/settings/SettingsContentContainer.tsx", "../app/components/organizations/OrganizationSettingsTabs.tsx", "../app/routes/__app/settings/organization/members/$member.ts", "../app/routes/__app/settings/organization/members/invite.tsx", "../app/lib/server/organizations/invite-members.ts", "../app/lib/emails/invite.tsx", "../app/components/emails/EmailNavbar.tsx", "../app/components/emails/CallToActionButton.tsx", "../app/core/email/send-email.ts", "../app/components/organizations/InviteMembersForm.tsx", "../app/lib/organizations/hooks/use-invite-members.ts", "../app/routes/__app/settings/organization/members/index.tsx", "../app/lib/organizations/hooks/use-user-can-invite-users.ts", "../app/routes/__app/settings/organization/members/owner.ts", "../app/routes/__app/settings/organization/index.tsx", "../app/core/firebase/components/FirebaseStorageProvider.tsx", "../app/components/organizations/UpdateOrganizationForm.tsx", "../app/lib/organizations/hooks/use-update-organization.ts", "../app/core/ui/ImageUploadInput.tsx", "../app/routes/__app/settings/profile.tsx", "../app/components/profile/ProfileSettingsTabs.tsx", "../app/routes/__app/settings/profile/authentication.tsx", "../app/components/profile/accounts/ConnectedAccountsContainer.tsx", "../app/components/profile/accounts/LinkPhoneNumberModal.tsx", "../app/components/profile/accounts/LinkEmailPasswordModal.tsx", "../app/core/hooks/use-create-server-side-session.ts", "../app/core/hooks/use-create-session.ts", "../app/core/firebase/utils/get-firebase-auth-provider-id.ts", "../app/components/profile/mfa/MultiFactorAuthSetupContainer.tsx", "../app/components/profile/mfa/EnrolMultiFactorAuthContainer.tsx", "../app/components/profile/mfa/MultiFactorAuthPhoneNumberForm.tsx", "../app/components/profile/mfa/VerificationCodeForm.tsx", "../app/components/auth/ReauthenticationForm.tsx", "../app/components/profile/mfa/EmailVerificationAlert.tsx", "../app/components/profile/mfa/DisableMultiFactorButton.tsx", "../app/lib/profile/hooks/use-disable-multi-factor-auth.ts", "../app/components/auth/ReauthenticationModal.tsx", "../app/routes/__app/settings/profile/password.tsx", "../app/components/profile/UpdatePasswordForm.tsx", "../app/routes/__app/settings/profile/email.tsx", "../app/components/profile/UpdateEmailForm.tsx", "../app/routes/__app/settings/profile/index.tsx", "../app/components/profile/UpdateProfileForm.tsx", "../app/lib/profile/hooks/use-update-profile.ts", "../app/routes/__app/settings/index.tsx", "../app/routes/auth.tsx", "../app/lib/server/loaders/load-auth-page-data.ts", "../app/routes/auth/password-reset.tsx", "../app/routes/auth/sign-out.ts", "../app/routes/auth/session.ts", "../app/routes/auth/sign-in.tsx", "../app/lib/server/auth/actions/create-server-session.action.ts", "../app/core/generic/get-client-query-params.ts", "../app/routes/auth/sign-up.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import { useMemo } from 'react';\n\ntype Condition<Value = unknown> = Value | Falsy;\n\nfunction If<Value = unknown>({\n  condition,\n  children,\n  fallback,\n}: React.PropsWithoutRef<{\n  condition: Condition<Value>;\n  children: React.ReactNode | ((value: Value) => React.ReactNode);\n  fallback?: JSX.Element;\n}>) {\n  return useMemo(() => {\n    if (condition) {\n      if (typeof children === 'function') {\n        return <>{children(condition)}</>;\n      }\n\n      return <>{children}</>;\n    }\n\n    if (fallback) {\n      return <>{fallback}</>;\n    }\n\n    return null;\n  }, [condition, fallback, children]);\n}\n\nexport default If;\n", "import { Link } from '@remix-run/react';\nimport { SpringSpinner } from 'react-epic-spinners';\nimport classNames from 'classnames';\n\nimport If from '~/core/ui/If';\ntype Color = 'primary' | 'secondary' | 'transparent' | 'danger' | 'custom';\ntype Size = 'normal' | 'small' | 'large' | 'custom';\ntype Variant = `normal` | `outline` | `flat`;\n\ntype Props = React.ButtonHTMLAttributes<unknown> &\n  React.PropsWithChildren<{\n    block?: boolean;\n    color?: Color;\n    size?: Size;\n    variant?: Variant;\n    loading?: boolean;\n    href?: Maybe<string>;\n  }>;\n\nconst getColorClasses = (color: Color) => {\n  const colors: Record<Color, string> = {\n    primary: `ButtonPrimary`,\n    danger: `ButtonDanger`,\n    secondary: `ButtonSecondary`,\n    transparent: 'ButtonTransparent',\n    custom: ``,\n  };\n\n  return colors[color];\n};\n\nconst getSizeClasses = (size: Size) => {\n  // cannot be too smart here due to purge-js\n  const sizes: Record<Size, string> = {\n    normal: `ButtonNormal`,\n    large: `ButtonLarge`,\n    small: 'ButtonSmall',\n    custom: '',\n  };\n\n  return `${sizes[size]} w-full`;\n};\n\nconst getVariantClasses = (variant: Variant, color: Color = `primary`) => {\n  // cannot be too smart here due to purge-js\n  const variants: Record<Variant, Record<Color, string>> = {\n    normal: {\n      primary: ``,\n      danger: ``,\n      secondary: ``,\n      transparent: ``,\n      custom: ``,\n    },\n    outline: {\n      primary: `ButtonPrimaryOutline`,\n      danger: `ButtonDangerOutline`,\n      secondary: `ButtonSecondaryOutline`,\n      transparent: ``,\n      custom: ``,\n    },\n    flat: {\n      primary: `ButtonPrimaryFlat`,\n      danger: `ButtonDangerFlat`,\n      secondary: ``,\n      transparent: ``,\n      custom: ``,\n    },\n  };\n\n  return variants[variant][color];\n};\n\nconst Button: React.FCC<Props> = ({\n  children,\n  color,\n  size,\n  variant,\n  block,\n  loading,\n  href,\n  ...props\n}) => {\n  const defaultColor: Color = `primary`;\n  const defaultSize: Size = `normal`;\n  const defaultVariant = `normal`;\n\n  const useColor = color ?? defaultColor;\n  const useSize = size ?? defaultSize;\n  const useVariant = variant ?? defaultVariant;\n\n  const className = classNames(\n    `Button`,\n    getColorClasses(useColor),\n    getVariantClasses(useVariant, useColor),\n    block ? `w-full` : ``,\n    loading ? `opacity-70` : ``,\n    props.className ?? ''\n  );\n\n  return (\n    <button\n      {...props}\n      className={className}\n      disabled={loading || props.disabled}\n    >\n      <InnerButtonContainerElement\n        href={href}\n        className={getSizeClasses(useSize)}\n      >\n        <span className={`flex w-full flex-1 items-center justify-center`}>\n          <If condition={loading}>\n            <Animation />\n          </If>\n\n          {children}\n        </span>\n      </InnerButtonContainerElement>\n    </button>\n  );\n};\n\nfunction Animation() {\n  return (\n    <span className={'mx-2'}>\n      <SpringSpinner\n        className={'mx-auto'}\n        color={'currentColor'}\n        size={20}\n        animationDuration={2000}\n      />\n    </span>\n  );\n}\n\nfunction InnerButtonContainerElement({\n  children,\n  href,\n  className,\n}: React.PropsWithChildren<{ href: Maybe<string>; className: string }>) {\n  if (href) {\n    return (\n      <Link className={`${className} flex w-full items-center`} to={href}>\n        {children}\n      </Link>\n    );\n  }\n\n  return (\n    <span className={`${className} flex w-full items-center`}>{children}</span>\n  );\n}\n\nexport default Button;\n", "import type { PropsWithChildren } from 'react';\nimport { Fragment } from 'react';\nimport { Menu, Transition } from '@headlessui/react';\nimport classNames from 'classnames';\n\nimport Button from '~/core/ui/Button';\n\ntype ItemProps = PropsWithChildren<{\n  className?: string;\n  href?: string;\n}> &\n  React.ComponentProps<typeof Button>;\n\nconst Dropdown: React.FCC<{\n  button: JSX.Element;\n  items: Array<JSX.Element>;\n}> & {\n  Divider: typeof Divider;\n  Item: typeof Item;\n} = ({ items, button }) => {\n  return (\n    <Menu as=\"div\" className=\"DropdownMenu\">\n      <div className=\"DropdownMenuButtonContainer\">{button}</div>\n\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"DropdownMenuItemsContainer\">\n          {items.map((item, index) => {\n            return <Fragment key={index}>{item}</Fragment>;\n          })}\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  );\n};\n\nfunction Divider() {\n  return <hr className=\"DropdownDivider\" />;\n}\n\nfunction Item({ children, className, ...props }: ItemProps) {\n  const isStaticItem = !props.onClick && !props.href;\n\n  return (\n    <Menu.Item as={'div'}>\n      {({ active }) => (\n        <div\n          className={`${\n            active ? 'DropdownActiveItem' : 'text-gray-900'\n          } DropdownItem`}\n        >\n          <Button\n            block\n            href={props.href}\n            onClick={props.onClick}\n            color={'custom'}\n            size={'custom'}\n            className={classNames(`justify-start`, className, {\n              [`static`]: isStaticItem,\n            })}\n            {...props}\n          >\n            <span className={'flex w-full flex-1 px-5 py-3 font-normal'}>\n              {children}\n            </span>\n          </Button>\n        </div>\n      )}\n    </Menu.Item>\n  );\n}\n\nDropdown.Divider = Divider;\nDropdown.Item = Item;\n\nexport default Dropdown;\n", "import { UserIcon } from '@heroicons/react/24/outline';\n\nconst FallbackUserAvatar: React.FCC<{ text: Maybe<string> }> = ({ text }) => {\n  if (!text) {\n    return (\n      <span className={`FallbackUserAvatar`}>\n        <UserIcon className={'h-5'} />\n      </span>\n    );\n  }\n\n  return <span className={`FallbackUserAvatar`}>{text[0]}</span>;\n};\n\nexport default FallbackUserAvatar;\n", "import FallbackUserAvatar from './FallbackUserAvatar';\nimport type { SerializedUserAuthData } from '~/core/session/types/user-session';\n\nconst ProfileAvatar: React.FCC<{ user: Maybe<SerializedUserAuthData> }> = ({\n  user,\n}) => {\n  if (!user) {\n    return null;\n  }\n\n  const photoURL = user?.photoURL;\n  const size = 36;\n\n  if (photoURL) {\n    return (\n      <div>\n        <img\n          loading={'lazy'}\n          decoding={'async'}\n          width={size}\n          height={size}\n          className={'rounded-full object-cover'}\n          src={photoURL}\n          alt={photoURL}\n          style={{ height: size }}\n        />\n      </div>\n    );\n  }\n\n  return <FallbackUserAvatar text={getUserInitials(user)} />;\n};\n\nfunction getUserInitials(user: SerializedUserAuthData) {\n  const displayName = getDisplayName(user);\n\n  return displayName[0] ?? '';\n}\n\nfunction getDisplayName(user: SerializedUserAuthData) {\n  if (user.displayName) {\n    return user.displayName;\n  }\n\n  return user.email ?? '';\n}\n\nexport default ProfileAvatar;\n", "import type { PropsWithChildren } from 'react';\nimport React, { createElement } from 'react';\n\ntype DefaultProps = React.ButtonHTMLAttributes<unknown> & {\n  loading?: boolean;\n  label?: string;\n};\n\ntype DivProps<TTag extends React.ElementType = 'div'> =\n  React.HTMLAttributes<unknown> & {\n    loading?: boolean;\n    disabled?: boolean;\n    label?: string;\n    as: TTag;\n  };\n\nfunction IconButton({\n  className,\n  loading,\n  disabled,\n  children,\n  label,\n  ...props\n}: React.PropsWithChildren<DefaultProps | DivProps>) {\n  const allProps = {\n    ...props,\n    className: `IconButton ${className ?? ''}`,\n    disabled: loading || disabled,\n    'aria-label': label,\n    title: label,\n  };\n\n  const Element = ({ children }: PropsWithChildren) => {\n    const tag = 'as' in props ? props.as : 'button';\n\n    return createElement(tag, allProps, children);\n  };\n\n  return <Element {...props}>{children}</Element>;\n}\n\nexport default IconButton;\n", "import { createContext } from 'react';\nimport type UserSession from '~/core/session/types/user-session';\n\nconst UserSessionContext = createContext<{\n  userSession: Maybe<UserSession>;\n  setUserSession: (user: Maybe<UserSession>) => void;\n}>({\n  userSession: undefined,\n  setUserSession: (_) => _,\n});\n\nexport default UserSessionContext;\n", "import { useContext } from 'react';\nimport UserSessionContext from '~/core/session/contexts/user-session';\n\nexport default function useUserSession() {\n  const { userSession } = useContext(UserSessionContext);\n\n  return userSession;\n}\n", "type HeadingType = 1 | 2 | 3 | 4 | 5 | 6;\n\nconst Heading: React.FCC<{ type?: HeadingType }> = ({ type, children }) => {\n  switch (type) {\n    case 1:\n      return <h1 className={'text-4xl font-extrabold'}>{children}</h1>;\n    case 2:\n      return <h2 className={'text-3xl font-bold'}>{children}</h2>;\n    case 3:\n      return <h3 className={'text-2xl font-bold'}>{children}</h3>;\n    case 4:\n      return <h4 className={'text-xl font-semibold'}>{children}</h4>;\n    case 5:\n      return <h5 className={'text-lg font-semibold'}>{children}</h5>;\n    case 6:\n      return <h6 className={'text-base font-medium'}>{children}</h6>;\n\n    default:\n      return <Heading type={1}>{children}</Heading>;\n  }\n};\n\nexport default Heading;\n", "import { useState, useMemo } from 'react';\n\nimport {\n  XMarkIcon,\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ShieldExclamationIcon,\n  InformationCircleIcon,\n} from '@heroicons/react/24/outline';\n\nimport IconButton from '~/core/ui/IconButton';\nimport If from '~/core/ui/If';\nimport Heading from '~/core/ui/Heading';\n\nconst colorClassNames = {\n  success: `AlertSuccess`,\n  error: `AlertError`,\n  warn: `AlertWarn`,\n  info: `AlertInfo`,\n};\n\nconst icons = {\n  success: () => <CheckCircleIcon className={'AlertIcon h-6'} />,\n  error: () => <ExclamationCircleIcon className={'AlertIcon h-6'} />,\n  warn: () => <ShieldExclamationIcon className={'AlertIcon h-6'} />,\n  info: () => <InformationCircleIcon className={'AlertIcon h-6'} />,\n};\n\nconst Alert: React.FCC<{\n  type: 'success' | 'error' | 'warn' | 'info';\n  useCloseButton?: boolean;\n  className?: string;\n}> & {\n  Heading: typeof AlertHeading;\n} = ({ children, type, useCloseButton, className }) => {\n  const [visible, setVisible] = useState(true);\n  const Icon = useMemo(() => icons[type](), [type]);\n\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <div className={`Alert ${colorClassNames[type]} ${className ?? ''}`}>\n      <span className={'flex items-center space-x-2'}>\n        <span>{Icon}</span>\n        <span>{children}</span>\n      </span>\n\n      <If condition={useCloseButton ?? false}>\n        <IconButton\n          className={'dark:hover:bg-transparent'}\n          onClick={() => setVisible(false)}\n        >\n          <XMarkIcon className={'h-6'} />\n        </IconButton>\n      </If>\n    </div>\n  );\n};\n\nfunction AlertHeading({ children }: React.PropsWithChildren) {\n  return (\n    <div className={'mb-2'}>\n      <Heading type={4}>\n        <span className={'font-bold'}>{children}</span>\n      </Heading>\n    </div>\n  );\n}\n\nAlert.Heading = AlertHeading;\n\nexport default Alert;\n", "import { createElement } from 'react';\n\ntype Props = React.LabelHTMLAttributes<unknown> & {\n  as?: string;\n};\n\nconst Label: React.FCC<Props> = ({ children, className, as, ...props }) => {\n  const tag = as ?? `label`;\n\n  return createElement(\n    tag,\n    {\n      className: `Label ${className ?? ''}`,\n      ...props,\n    },\n    children\n  );\n};\n\nexport default Label;\n", "/**\n * Firestore Collections\n *\n * Here we export our Firestore collection names so that we can reuse them\n * across both client and server libraries\n *\n */\n\nexport const USERS_COLLECTION = `users`;\nexport const ORGANIZATIONS_COLLECTION = `organizations`;\nexport const INVITES_COLLECTION = `invites`;\nexport const TASKS_COLLECTION = `tasks`;\n\n", "import type {\n  CollectionReference,\n  CollectionGroup,\n} from 'firebase-admin/firestore';\n\nimport { getFirestore } from 'firebase-admin/firestore';\n\nimport type Organization from '~/lib/organizations/types/organization';\nimport type UserData from '~/core/session/types/user-data';\nimport type MembershipInvite from '~/lib/organizations/types/membership-invite';\n\nimport {\n  ORGANIZATIONS_COLLECTION,\n  USERS_COLLECTION,\n  INVITES_COLLECTION,\n} from '~/lib/firestore-collections';\n\nexport function getUsersCollection() {\n  return getCollectionByName(USERS_COLLECTION) as CollectionReference<UserData>;\n}\n\nexport function getOrganizationsCollection() {\n  return getCollectionByName(\n    ORGANIZATIONS_COLLECTION\n  ) as CollectionReference<Organization>;\n}\n\nexport function getInvitesCollection() {\n  return getCollectionGroupByName(\n    INVITES_COLLECTION\n  ) as CollectionGroup<MembershipInvite>;\n}\n\nfunction getCollectionByName(collection: string) {\n  return getFirestore().collection(collection);\n}\n\nfunction getCollectionGroupByName(collection: string) {\n  return getFirestore().collectionGroup(collection);\n}\n", "import { getOrganizationsCollection, getUsersCollection } from './collections';\n\n/**\n * @name getOrganizationById\n * @description Returns the Firestore reference of the organization by its ID\n * {@link organizationId}\n * @param organizationId\n */\nexport async function getOrganizationById(organizationId: string) {\n  const organizations = getOrganizationsCollection();\n\n  return organizations.doc(organizationId).get();\n}\n\n/**\n * @name getUserRefById\n * @description Returns the Firestore reference of the user by its ID {@link userId}\n * @param userId\n */\nexport async function getUserRefById(userId: string) {\n  const users = getUsersCollection();\n\n  return users.doc(userId).get();\n}\n\n/**\n * @description Fetch user Firestore object data (not auth!) by ID {@link userId}\n * @param userId\n */\nexport async function getUserData(userId: string) {\n  const user = await getUserRefById(userId);\n  const data = user.data();\n\n  if (data) {\n    return {\n      ...data,\n      id: user.id,\n    };\n  }\n}\n", "enum MembershipRole {\n  Member,\n  Admin,\n  Owner,\n}\n\nexport default MembershipRole;\n", "import { getAuth } from 'firebase-admin/auth';\n\n/**\n * @name getUserFromSessionCookie\n * @description Gets the current ID token {@link DecodedIdToken}\n * from session cookie\n * @param session\n */\nexport async function getUserFromSessionCookie(session: string) {\n  const auth = getAuth();\n\n  return auth.verifySessionCookie(session, true);\n}\n", "import MembershipRole from '~/lib/organizations/types/membership-role';\n\n/**\n * Permissions\n *\n * Permissions should be kept here or in a centralized place. Assuming you will add new custom\n * functions to check the user's permission to perform an action, it's recommended that you do it here\n *\n * This helps track down behavior rather than changing logic in every single place, which is\n * going to make it difficult to track down the logic. Keep this lightweight, so you don't need to make\n * different files for server vs client\n *\n * Permissions are defined such that a user can perform a disruptive option on other users\n * only if they have a greater role. For example, an Admin cannot remove another Admin from an organization\n *\n * You can update {@link MembershipRole} however you wish according to your app's domain\n */\n\n/**\n *\n * @param currentUserRole The current logged-in user\n * @param targetUser The role of the target of the action\n * @description Checks if a user can perform actions (such as update a role) of another user\n * @name canUpdateUser\n */\nexport function canUpdateUser(\n  currentUserRole: MembershipRole,\n  targetUser: MembershipRole\n) {\n  return currentUserRole > targetUser;\n}\n\n/**\n * @name canChangeBilling\n * @param currentUserRole\n * @description Checks if a role can change billing information.\n * By default, only Owners and Admin can invite users\n */\nexport function canChangeBilling(currentUserRole: MembershipRole) {\n  return currentUserRole === MembershipRole.Owner;\n}\n\n/**\n * @name canInviteUsers\n * @param currentUserRole\n * @description Checks if a role can change invite new users to an organization.\n * By default, only Owners and Admin can invite users\n */\nexport function canInviteUsers(currentUserRole: MembershipRole) {\n  return currentUserRole >= MembershipRole.Admin;\n}\n\n/**\n * @description Check a user with role {@link inviterRole} can invite a user\n * with role {@link inviteeRole}.\n *\n * By default, users can invite users having the same or inferior role, and\n * ownership can only be transferred\n * @param inviterRole\n * @param inviteeRole\n * @name canInviteUser\n */\nexport function canInviteUser(\n  inviterRole: MembershipRole,\n  inviteeRole: MembershipRole\n) {\n  const canInvite = canInviteUsers(inviterRole);\n  const hasGreaterRole = inviterRole >= inviteeRole;\n  const isNotOwner = inviteeRole !== MembershipRole.Owner;\n\n  return canInvite && hasGreaterRole && isNotOwner;\n}\n\n/**\n * @description Check if a user can delete invites\n * @param inviterRole\n * @name canDeleteInvites\n */\nexport function canDeleteInvites(inviterRole: MembershipRole) {\n  return canInviteUsers(inviterRole);\n}\n", "import { useCallback, useState } from 'react';\n\ntype State<Data, ErrorType> =\n  | {\n      data: Data;\n      loading: false;\n      success: true;\n      error: Maybe<ErrorType>;\n    }\n  | {\n      data: undefined;\n      loading: true;\n      success: false;\n      error: Maybe<ErrorType>;\n    }\n  | {\n      data: undefined;\n      loading: false;\n      success: false;\n      error: Maybe<ErrorType>;\n    };\n\n/**\n * @name useRequestState\n */\nexport default function useRequestState<Data = unknown, ErrorType = unknown>() {\n  const [state, setState] = useState<State<Data, ErrorType>>({\n    loading: false,\n    success: false,\n    error: undefined,\n    data: undefined,\n  });\n\n  const setLoading = useCallback((loading: boolean) => {\n    setState({\n      loading,\n      success: false,\n      data: undefined,\n      error: undefined,\n    });\n  }, []);\n\n  const setData = useCallback((data: Data) => {\n    setState({\n      data,\n      success: true,\n      loading: false,\n      error: undefined,\n    });\n  }, []);\n\n  const setError = useCallback((error: ErrorType) => {\n    setState({\n      data: undefined,\n      loading: false,\n      success: false,\n      error,\n    });\n  }, []);\n\n  const resetState = useCallback(() => {\n    setState({\n      loading: false,\n      success: false,\n      error: undefined,\n      data: undefined,\n    });\n  }, []);\n\n  return {\n    state,\n    setState,\n    setLoading,\n    setData,\n    setError,\n    resetState,\n  };\n}\n", "import { Fragment } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\n\nimport XMarkIcon from '@heroicons/react/24/outline/XMarkIcon';\nimport { Trans } from 'react-i18next';\n\nimport IconButton from '~/core/ui/IconButton';\nimport If from '~/core/ui/If';\n\nimport Button from './Button';\n\nconst Modal: React.FC<\n  React.PropsWithChildren<{\n    heading: string | JSX.Element;\n    isOpen: boolean;\n    setIsOpen: (isOpen: boolean) => unknown;\n    closeButton?: boolean;\n  }>\n> = ({ isOpen, setIsOpen, closeButton, heading, children }) => {\n  const useCloseButton = closeButton ?? true;\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog\n        open={isOpen}\n        as=\"div\"\n        className=\"fixed inset-0 z-10 h-screen bg-gray-500 bg-opacity-30 transition-all\"\n        onClose={() => {\n          if (useCloseButton) {\n            setIsOpen(false);\n          }\n        }}\n      >\n        <div className=\"h-full min-h-screen px-4 text-center\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0\" />\n          </Transition.Child>\n\n          <span\n            className=\"inline-block h-screen align-middle\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 scale-70\"\n            enterTo=\"opacity-100 scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 scale-100\"\n            leaveTo=\"opacity-0 scale-80\"\n          >\n            <div className=\"my-4 inline-block max-h-[90%] w-full max-w-xl transform overflow-auto rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all dark:bg-black-400\">\n              <div className=\"flex items-center\">\n                <Dialog.Title\n                  as=\"h2\"\n                  className=\"flex w-full text-2xl font-bold leading-4 text-current\"\n                >\n                  {heading}\n                </Dialog.Title>\n\n                <If condition={useCloseButton}>\n                  <div className={'justify-end'}>\n                    <IconButton\n                      label={'Close Modal'}\n                      onClick={() => setIsOpen(false)}\n                    >\n                      <XMarkIcon className={'h-6'} />\n                    </IconButton>\n                  </div>\n                </If>\n              </div>\n\n              <div className=\"relative mt-4\">{children}</div>\n\n              <If condition={useCloseButton}>\n                <div className=\"mt-2\">\n                  <Button\n                    data-cy={'close-modal-button'}\n                    block\n                    color={'secondary'}\n                    onClick={() => setIsOpen(false)}\n                  >\n                    <Trans i18nKey={'common:cancel'} />\n                  </Button>\n                </div>\n              </If>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nexport default Modal;\n", "import { useCallback } from 'react';\n\n/**\n * @description Retrieves the current CSRF token in the page\n */\nexport default function useGetCsrfToken() {\n  return useCallback(() => {\n    const element = document.querySelector('meta[name=\"csrf-token\"]');\n\n    return element?.getAttribute('content');\n  }, []);\n}\n", "import type { AppOptions } from 'firebase-admin/app';\n\n/**\n * @name createEmulatorAdminApp\n * @param appName\n */\nexport async function createEmulatorAdminApp(appName?: string) {\n  const projectId = process.env.GCLOUD_PROJECT;\n  const options: AppOptions = { projectId };\n\n  const { getApps, getApp, initializeApp } = await import('firebase-admin/app');\n\n  if (getApps().length) {\n    return getApp(appName);\n  }\n\n  return initializeApp(options, appName);\n}\n", "import type { FirebaseAdminAppParams } from '../types/firebase-admin-app-params';\n\n/**\n * @name createFirebaseAdminApp\n * @param params\n */\nexport async function createFirebaseAdminApp(params: FirebaseAdminAppParams) {\n  const { getApps, getApp, cert, initializeApp } = await import(\n    'firebase-admin/app'\n  );\n\n  if (getApps().length > 0) {\n    return getApp();\n  }\n\n  const privateKey = formatFirebasePrivateKey(params.privateKey);\n\n  const credential = cert({\n    projectId: params.projectId,\n    clientEmail: params.clientEmail,\n    privateKey,\n  });\n\n  return initializeApp({\n    credential,\n    projectId: params.projectId,\n    storageBucket: params.storageBucket,\n  });\n}\n\nfunction formatFirebasePrivateKey(key: string) {\n  return key.replace(/\\\\n/g, '\\n');\n}\n", "import { createContext } from 'react';\nimport type Organization from '~/lib/organizations/types/organization';\n\nconst OrganizationContext = createContext<{\n  organization: Maybe<WithId<Organization>>;\n  setOrganization: (user: WithId<Organization>) => void;\n}>({\n  organization: undefined,\n  setOrganization: (_) => _,\n});\n\nexport default OrganizationContext;\n", "import { useContext } from 'react';\nimport OrganizationContext from '~/lib/contexts/organization';\n\nexport default function useCurrentOrganization() {\n  const { organization } = useContext(OrganizationContext);\n\n  return organization;\n}\n", "import useCurrentOrganization from './use-current-organization';\nimport useUserSession from '~/core/hooks/use-user-session';\n\n/**\n * @name useCurrentUserRole\n * @description Hook to fetch the user's current role {@link MembershipRole}\n */\nexport default function useCurrentUserRole() {\n  const organization = useCurrentOrganization();\n  const user = useUserSession();\n  const userId = user?.auth?.uid;\n\n  if (!userId) {\n    return;\n  }\n\n  return organization?.members[userId]?.role;\n}\n", "import type MembershipRole from '~/lib/organizations/types/membership-role';\nimport useCurrentUserRole from '~/lib/organizations/hooks/use-current-user-role';\n\n/**\n * @name IfHasPermissions\n * @description\n * This component can guard the visibility of portions of the page\n * based on the signed-in user's role for the selected organization.\n * This works hierarchically: if the role passed in is 2,\n * then portion will also be permitted to users with a greater role (3...n), but not 0 and 1\n *\n * We recommend to always import the logic handler function from a central\n * place instead of defining inline, to avoid permissions and rules getting\n * messy and scattered in the codebase\n *\n * For example:\n *  - <IfHasPermissions condition={canChangeBilling}>     // GOOD\n *  - <IfHasPermissions condition={(role) => role > 2}>   // BAD\n *\n * @param children\n * @param handler\n * @constructor\n */\nfunction IfHasPermissions({\n  children,\n  condition,\n}: React.PropsWithChildren<{ condition: (role: MembershipRole) => boolean }>) {\n  const currentUserRole = useCurrentUserRole();\n\n  if (currentUserRole === undefined || !condition(currentUserRole)) {\n    return null;\n  }\n\n  return <>{children}</>;\n}\n\nexport default IfHasPermissions;\n", "type Color = `normal` | 'success' | 'custom';\ntype Size = `normal` | `small`;\n\nconst colorClasses = {\n  normal: `ColorNormal`,\n  success: `ColorSuccess`,\n  custom: '',\n};\n\nconst sizeClasses = {\n  normal: `SizeNormal`,\n  small: `SizeSmall`,\n};\n\nfunction getColorClasses(color?: Color) {\n  return colorClasses[color || `normal`];\n}\n\nfunction getSizeClasses(size?: Size) {\n  return sizeClasses[size || `normal`];\n}\n\nconst Badge: React.FCC<{\n  color?: Color;\n  size?: Size;\n  className?: string;\n}> = ({ children, color, size, className }) => {\n  const colorClasses = getColorClasses(color);\n  const sizeClasses = getSizeClasses(size);\n\n  return (\n    <div className={`Badge ${colorClasses} ${sizeClasses} ${className ?? ''}`}>\n      {children}\n    </div>\n  );\n};\n\nexport default Badge;\n", "import { useCallback, useContext, useRef } from 'react';\nimport { AppCheckSdkContext } from 'reactfire';\n\nimport useRequestState from '~/core/hooks/use-request-state';\nimport useGetCsrfToken from '~/core/firebase/hooks/use-get-csrf-token';\n\nconst FIREBASE_APP_CHECK_HEADER = 'X-Firebase-AppCheck';\nconst CSRF_TOKEN_HEADER = 'x-csrf-token';\n\n/**\n * @name useApiRequest\n * @param path\n * @param method\n * @param config\n */\nexport default function useApiRequest<Resp = unknown, Body = void>(\n  path: string,\n  method: HttpMethod = 'POST',\n  config?: Partial<{\n    headers: StringObject;\n    redirect: RequestRedirect;\n  }>\n) {\n  const { setError, setLoading, setData, state } = useRequestState<\n    Resp,\n    string\n  >();\n\n  const headersRef = useRef(config?.headers);\n  const getAppCheckToken = useGetAppCheckToken();\n  const getCsrfToken = useGetCsrfToken();\n\n  const fn = useCallback(\n    async (body: Body) => {\n      setLoading(true);\n\n      try {\n        const payload = JSON.stringify(body);\n        const appCheckToken = await getAppCheckToken();\n        const csrfToken = getCsrfToken();\n\n        if (!headersRef.current) {\n          headersRef.current = {};\n        }\n\n        // if the app-check token was found\n        // we add the header to the API request\n        if (appCheckToken) {\n          headersRef.current[FIREBASE_APP_CHECK_HEADER] = appCheckToken;\n        }\n\n        if (csrfToken) {\n          headersRef.current[CSRF_TOKEN_HEADER] = csrfToken;\n        }\n\n        const data = await executeFetchRequest<Resp>({\n          url: path,\n          payload,\n          method,\n          headers: headersRef.current,\n        });\n\n        setData(data);\n\n        return Promise.resolve(data);\n      } catch (error) {\n        const message =\n          error instanceof Error ? error.message : `Unknown error`;\n\n        setError(message);\n\n        return Promise.reject(error);\n      }\n    },\n    [\n      setLoading,\n      getAppCheckToken,\n      getCsrfToken,\n      path,\n      method,\n      setData,\n      setError,\n    ]\n  );\n\n  return [fn, state] as [typeof fn, typeof state];\n}\n\nasync function executeFetchRequest<Resp = unknown>(params: {\n  url: string;\n  payload: string;\n  method: string;\n  redirect?: RequestRedirect;\n  headers?: StringObject;\n}) {\n  const { url, method, payload, redirect, headers } = params;\n\n  const options: RequestInit = {\n    method,\n    redirect,\n    headers: {\n      accept: 'application/json',\n      'Content-Type': 'application/json',\n      ...(headers ?? {}),\n    },\n  };\n\n  const methodsSupportingBody: HttpMethod[] = ['POST', 'PUT', 'DELETE'];\n  const supportsBody = methodsSupportingBody.includes(method as HttpMethod);\n\n  if (payload && supportsBody) {\n    options.body = payload;\n  }\n\n  try {\n    const response = await fetch(url, options);\n\n    if (response.redirected) {\n      window.location.href = response.url;\n\n      return Promise.resolve() as Promise<Resp>;\n    }\n\n    if (response.ok) {\n      return (await response.json()) as Promise<Resp>;\n    }\n\n    return Promise.reject(response.statusText);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nfunction useGetAppCheckToken() {\n  // instead of using useAppCheck()\n  // we manually request the SDK\n  // because we *may not have initialized it*\n  const sdk = useContext(AppCheckSdkContext);\n\n  return useCallback(async () => {\n    try {\n      // if the SDK does not exist, we cannot generate a token\n      if (!sdk) {\n        return;\n      }\n\n      const forceRefresh = false;\n      const { getToken } = await import('firebase/app-check');\n      const { token } = await getToken(sdk, forceRefresh);\n\n      return token;\n    } catch (e) {\n      return;\n    }\n  }, [sdk]);\n}\n", "import { ChevronUpIcon, ChevronDownIcon } from '@heroicons/react/24/outline';\n\nfunction SelectorIcon(\n  props: React.PropsWithChildren<{\n    className?: string;\n  }>\n) {\n  return (\n    <div className={`flex flex-col ${props.className ?? ''}`}>\n      <ChevronUpIcon className={'relative top-[0.1rem] h-3'} />\n      <ChevronDownIcon className={'relative bottom-[0.1rem] h-3'} />\n    </div>\n  );\n}\n\nexport default SelectorIcon;\n", "import type { PropsWithChildren } from 'react';\nimport { Fragment } from 'react';\nimport { Trans } from 'react-i18next';\n\nimport { Listbox, Transition } from '@headlessui/react';\nimport SelectorIcon from '~/core/ui/SelectorIcon';\nimport If from '~/core/ui/If';\n\nexport interface ListBoxOptionModel<Value = unknown> {\n  label: string;\n  value: Value;\n\n  [key: string]: unknown;\n}\n\nfunction ListBox<Value>({\n  cy,\n  value,\n  setValue,\n  children,\n}: PropsWithChildren<{\n  cy?: string;\n  value: ListBoxOptionModel<Value> | undefined;\n  setValue: (value: ListBoxOptionModel<Value>) => void;\n}>) {\n  return (\n    <Listbox value={value} onChange={setValue}>\n      <div className=\"relative\">\n        <Listbox.Button\n          data-cy={cy}\n          className={({ open }) => {\n            return `ListBoxButton ${open ? `ListBoxButtonOpen` : ''}`;\n          }}\n        >\n          <If condition={value}>\n            {({ label }) => {\n              return (\n                <span className=\"block truncate\">\n                  <Trans i18nKey={label} />\n                </span>\n              );\n            }}\n          </If>\n\n          <span className=\"ListBoxButtonIcon\">\n            <SelectorIcon aria-hidden=\"true\" />\n          </span>\n        </Listbox.Button>\n\n        <Transition\n          as={Fragment}\n          leave=\"transition ease-in duration-100\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <Listbox.Options className=\"ListBoxOptionsContainer\">\n            {children}\n          </Listbox.Options>\n        </Transition>\n      </div>\n    </Listbox>\n  );\n}\n\nexport default ListBox;\n", "import { Listbox } from '@headlessui/react';\nimport { Trans } from 'react-i18next';\nimport CheckCircleIcon from '@heroicons/react/24/outline/CheckCircleIcon';\n\nimport If from '~/core/ui/If';\n\ninterface Option {\n  label: string;\n  value: unknown;\n  description?: string;\n}\n\nconst ListBoxOption: React.FCC<{\n  option: Option;\n}> = ({ option }) => {\n  return (\n    <Listbox.Option\n      className={({ active, selected }) =>\n        `${selected ? 'ListBoxOptionSelected' : 'ListBoxOptionNotSelected'} ${\n          active ? 'ListBoxOptionActive' : 'ListBoxOptionNotActive'\n        } ListBoxOption`\n      }\n      value={option}\n    >\n      {({ selected }) => (\n        <div className={'flex flex-col space-y-1'}>\n          <div data-cy={`listbox-option-${option.value as string}`}>\n            <span className={`block truncate`}>\n              <Trans i18nKey={option.label} />\n            </span>\n\n            <If condition={selected}>\n              <span className={`ListBoxOptionIcon`}>\n                <CheckCircleIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n              </span>\n            </If>\n          </div>\n\n          <If condition={option.description}>\n            <div className={'ListBoxOptionDescription'}>\n              <Trans i18nKey={option.description} />\n            </div>\n          </If>\n        </div>\n      )}\n    </Listbox.Option>\n  );\n};\n\nexport default ListBoxOption;\n", "import type { ListBoxOptionModel } from '~/core/ui/ListBox/ListBox';\nimport MembershipRole from '~/lib/organizations/types/membership-role';\n\n/**\n * User Roles\n *\n * Here is where you can edit the user roles in your application according\n * to your application's domain.\n *\n * For example, you could add a role named\n * \"Account Manager\":\n * 1. extend the enum {@link MembershipRole}\n * 2. add the i18n strings\n * 3. apply any needed change to ~/lib/permissions.ts\n * 4. add a new model below, so you can display the correct data in the\n * selector component {@link MembershipRoleSelector}\n */\n\nconst OWNER = {\n  label: 'common:roles.owner.label',\n  description: 'common:roles.owner.description',\n  value: MembershipRole.Owner,\n};\n\nconst ADMIN = {\n  label: 'common:roles.admin.label',\n  description: 'common:roles.admin.description',\n  value: MembershipRole.Admin,\n};\n\nconst MEMBER = {\n  label: 'common:roles.member.label',\n  description: 'common:roles.member.description',\n  value: MembershipRole.Member,\n};\n\nconst roles: ListBoxOptionModel<MembershipRole>[] = [OWNER, ADMIN, MEMBER];\n\nexport default roles;\n", "import ListBox from '~/core/ui/ListBox/ListBox';\nimport ListBoxOption from '~/core/ui/ListBox/ListBoxOption';\n\nimport type MembershipRole from '~/lib/organizations/types/membership-role';\nimport roles from '~/lib/organizations/roles';\nimport IfHasPermissions from '~/components/IfHasPermissions';\nimport { canInviteUser } from '~/lib/organizations/permissions';\n\nconst MembershipRoleSelector: React.FCC<{\n  value?: MembershipRole;\n  onChange?: (role: MembershipRole) => unknown;\n}> = ({ value: currentRole, onChange }) => {\n  const selectedRole = getSelectedRoleModel(currentRole);\n\n  return (\n    <ListBox\n      value={selectedRole}\n      setValue={(role) => {\n        onChange && onChange(role.value);\n      }}\n      cy={'invite-role-selector-button'}\n    >\n      {roles.map((role) => {\n        return (\n          <IfHasPermissions\n            key={role.value}\n            condition={(currentUserRole) =>\n              canInviteUser(currentUserRole, role.value)\n            }\n          >\n            <ListBoxOption option={role} />\n          </IfHasPermissions>\n        );\n      })}\n    </ListBox>\n  );\n};\n\nfunction getSelectedRoleModel(currentRole: MembershipRole | undefined) {\n  const memberRole = roles[2];\n\n  return (\n    roles.find((role) => {\n      return role.value === currentRole;\n    }) ?? memberRole\n  );\n}\n\nexport default MembershipRoleSelector;\n", "import useUserSession from './use-user-session';\n\nexport default function useUserId() {\n  const session = useUserSession();\n\n  return session?.auth?.uid;\n}\n", "import { Trans } from 'react-i18next';\n\nimport MembershipRole from '~/lib/organizations/types/membership-role';\nimport Badge from '~/core/ui/Badge';\nimport roles from '~/lib/organizations/roles';\n\nconst classNames = {\n  [MembershipRole.Owner]:\n    'bg-yellow-400 text-current font-semibold dark:text-black-500',\n  [MembershipRole.Admin]: 'bg-blue-500 text-white font-semibold',\n  [MembershipRole.Member]: 'bg-blue-500 text-white font-semibold',\n};\n\nconst RoleBadge: React.FCC<{\n  role: MembershipRole;\n}> = ({ role }) => {\n  const data = roles.find((item) => item.value === role);\n\n  return (\n    <Badge color={'custom'} size={'small'} className={classNames[role]}>\n      <span data-cy={'member-role-badge'}>\n        <Trans i18nKey={data?.label} />\n      </span>\n    </Badge>\n  );\n};\n\nexport default RoleBadge;\n", "import { useFirestore, useFirestoreDocData } from 'reactfire';\nimport type { DocumentReference } from 'firebase/firestore';\nimport { doc } from 'firebase/firestore';\nimport type Organization from '~/lib/organizations/types/organization';\nimport { ORGANIZATIONS_COLLECTION } from '~/lib/firestore-collections';\n\ntype Response = WithId<Organization>;\n\n/**\n * @name useFetchOrganization\n * @description Returns a stream with the selected organization's data\n * @param organizationId\n */\nexport default function useFetchOrganization(organizationId: string) {\n  const firestore = useFirestore();\n\n  const ref = doc(\n    firestore,\n    ORGANIZATIONS_COLLECTION,\n    organizationId\n  ) as DocumentReference<Response>;\n\n  return useFirestoreDocData(ref, { idField: 'id' });\n}\n", "import { SpringSpinner } from 'react-epic-spinners';\n\nconst LoadingMembersSpinner: React.FCC = ({ children }) => {\n  return (\n    <div className={'flex flex-row items-center space-x-4'}>\n      <SpringSpinner color={'currentColor'} size={32} />\n\n      <span className={'text-sm'}>{children}</span>\n    </div>\n  );\n};\n\nexport default LoadingMembersSpinner;\n", "import useApiRequest from '~/core/hooks/use-api';\n\ntype TargetMemberId = string;\n\nfunction useTransferOrganizationOwnership() {\n  return useApiRequest<void, { userId: TargetMemberId }>(\n    `/settings/organization/members/owner`,\n    'PUT'\n  );\n}\n\nexport default useTransferOrganizationOwnership;\n", "import { useCallback } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport toaster from 'react-hot-toast';\n\nimport useTransferOrganizationOwnership from '~/lib/organizations/hooks/use-transfer-organization-ownership';\nimport type { SerializedUserAuthData } from '~/core/session/types/user-session';\n\nimport Button from '~/core/ui/Button';\nimport Modal from '~/core/ui/Modal';\nimport If from '~/core/ui/If';\n\nconst TransferOrganizationOwnershipModal: React.FC<{\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  member: SerializedUserAuthData;\n}> = ({ isOpen, setIsOpen, member }) => {\n  const targetMemberDisplayName = member.displayName ?? member.email;\n  const targetMemberId = member.uid;\n  const { t } = useTranslation();\n  const heading = <Trans i18nKey=\"organization:transferOwnership\" />;\n\n  const [transferOrganizationOwnership, transferOrganizationOwnershipState] =\n    useTransferOrganizationOwnership();\n\n  const loading = transferOrganizationOwnershipState.loading;\n\n  const onConfirmTransferOwnership = useCallback(async () => {\n    const promise = transferOrganizationOwnership({\n      userId: targetMemberId,\n    });\n\n    await toaster.promise(promise, {\n      loading: t<string>('organization:transferringOwnership'),\n      success: t<string>('organization:transferOwnershipSuccess'),\n      error: t<string>('organization:transferOwnershipError'),\n    });\n\n    setIsOpen(false);\n  }, [setIsOpen, t, targetMemberId, transferOrganizationOwnership]);\n\n  return (\n    <Modal heading={heading} isOpen={isOpen} setIsOpen={setIsOpen}>\n      <div className={'flex flex-col space-y-4'}>\n        <p>\n          <Trans\n            i18nKey={'organization:transferOwnershipDisclaimer'}\n            values={{\n              member: targetMemberDisplayName,\n            }}\n            components={{ b: <b /> }}\n          />\n        </p>\n\n        <p>\n          <Trans i18nKey={'common:modalConfirmationQuestion'} />\n        </p>\n\n        <Button\n          block\n          data-cy={'confirm-transfer-ownership-button'}\n          color={'danger'}\n          onClick={onConfirmTransferOwnership}\n          loading={loading}\n        >\n          <If\n            condition={loading}\n            fallback={<Trans i18nKey={'organization:transferOwnership'} />}\n          >\n            <Trans i18nKey={'organization:transferringOwnership'} />\n          </If>\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default TransferOrganizationOwnershipModal;\n", "import type { PropsWithChildren } from 'react';\nimport { Menu } from '@headlessui/react';\nimport { Trans } from 'react-i18next';\n\nimport {\n  AdjustmentsHorizontalIcon,\n  EllipsisVerticalIcon,\n  UserCircleIcon,\n  XMarkIcon,\n} from '@heroicons/react/24/outline';\n\nimport Dropdown from '~/core/ui/Dropdown';\nimport IconButton from '~/core/ui/IconButton';\nimport If from '~/core/ui/If';\n\nconst OrganizationMemberActionsDropdown: React.FCC<{\n  onRemoveSelected: EmptyCallback;\n  onChangeRoleSelected: EmptyCallback;\n  onTransferOwnershipSelected: EmptyCallback;\n  disabled: boolean;\n  isOwner: boolean;\n}> = (props) => {\n  const Button = <DropdownButton disabled={props.disabled} />;\n\n  return (\n    <Dropdown\n      button={Button}\n      items={[\n        <Dropdown.Item\n          key={1}\n          data-cy={'update-member-role-action'}\n          onClick={props.onChangeRoleSelected}\n        >\n          <span className={'flex items-center space-x-2'}>\n            <AdjustmentsHorizontalIcon className={'h-5'} />\n            <span>\n              <Trans i18nKey={'organization:changeRole'} />\n            </span>\n          </span>\n        </Dropdown.Item>,\n        <If key={2} condition={props.isOwner}>\n          <Dropdown.Item\n            data-cy={'transfer-ownership-action'}\n            onClick={props.onTransferOwnershipSelected}\n          >\n            <span className={'flex items-center space-x-2'}>\n              <UserCircleIcon className={'h-5'} />\n              <span>\n                <Trans i18nKey={'organization:transferOwnership'} />\n              </span>\n            </span>\n          </Dropdown.Item>\n        </If>,\n        <Dropdown.Divider key={'divider'} />,\n        <Dropdown.Item\n          key={3}\n          data-cy={'remove-member-action'}\n          onClick={props.onRemoveSelected}\n        >\n          <span\n            className={\n              'flex items-center space-x-2 text-red-700 dark:text-red-500'\n            }\n          >\n            <XMarkIcon className={'h-5'} />\n            <span>\n              <Trans i18nKey={'organization:removeMember'} />\n            </span>\n          </span>\n        </Dropdown.Item>,\n      ]}\n    />\n  );\n};\n\nfunction DropdownButton({\n  disabled,\n}: PropsWithChildren<{ disabled: boolean }>) {\n  return (\n    <Menu.Button\n      data-cy={'member-actions-dropdown'}\n      as={'button'}\n      disabled={disabled}\n    >\n      <IconButton label={'Open members actions menu'} as={'div'}>\n        <EllipsisVerticalIcon className={'h-6'} />\n      </IconButton>\n    </Menu.Button>\n  );\n}\n\nexport default OrganizationMemberActionsDropdown;\n", "import useApiRequest from '~/core/hooks/use-api';\n\nfunction useRemoveMemberRequest(memberId: string) {\n  const path = `/settings/organization/members/${memberId}`;\n\n  return useApiRequest<void>(path, `DELETE`);\n}\n\nexport default useRemoveMemberRequest;\n", "import { useCallback } from 'react';\nimport { Trans } from 'react-i18next';\nimport { t } from 'i18next';\nimport toaster from 'react-hot-toast';\nimport useRemoveMemberRequest from '~/lib/organizations/hooks/use-remove-member';\n\nimport Button from '~/core/ui/Button';\nimport Modal from '~/core/ui/Modal';\n\nimport type { SerializedUserAuthData } from '~/core/session/types/user-session';\n\nconst RemoveOrganizationMemberModal: React.FCC<{\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  member: SerializedUserAuthData;\n}> = ({ isOpen, setIsOpen, member }) => {\n  const [removeMemberRequest, { loading }] = useRemoveMemberRequest(member.uid);\n\n  const onUserRemoved = useCallback(async () => {\n    await toaster.promise(removeMemberRequest(), {\n      success: t<string>(`removeMemberSuccessMessage`),\n      error: t<string>(`removeMemberErrorMessage`),\n      loading: t<string>(`removeMemberLoadingMessage`),\n    });\n\n    setIsOpen(false);\n  }, [removeMemberRequest, setIsOpen]);\n\n  const heading = <Trans i18nKey=\"organization:removeMemberModalHeading\" />;\n\n  return (\n    <Modal heading={heading} isOpen={isOpen} setIsOpen={setIsOpen}>\n      <div className={'flex flex-col space-y-4'}>\n        <p>\n          <Trans i18nKey={'common:modalConfirmationQuestion'} />\n        </p>\n\n        <Button\n          block\n          data-cy={'confirm-remove-member'}\n          color={'danger'}\n          onClick={onUserRemoved}\n          loading={loading}\n        >\n          <Trans i18nKey={'organization:removeMemberSubmitLabel'} />\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default RemoveOrganizationMemberModal;\n", "import useApiRequest from '~/core/hooks/use-api';\nimport type MembershipRole from '../types/membership-role';\n\nfunction useUpdateMemberRequest(memberId: string) {\n  return useApiRequest<void, { role: MembershipRole }>(\n    `/settings/organization/members/${memberId}`,\n    'PUT'\n  );\n}\n\nexport default useUpdateMemberRequest;\n", "import { useCallback, useState } from 'react';\nimport toaster from 'react-hot-toast';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport Button from '~/core/ui/Button';\nimport Modal from '~/core/ui/Modal';\nimport Label from '~/core/ui/Label';\n\nimport type MembershipRole from '~/lib/organizations/types/membership-role';\nimport MembershipRoleSelector from './MembershipRoleSelector';\nimport useUpdateMemberRequest from '~/lib/organizations/hooks/use-update-member-role';\nimport type { SerializedUserAuthData } from '~/core/session/types/user-session';\n\nconst UpdateMemberRoleModal: React.FCC<{\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  member: SerializedUserAuthData;\n  memberRole: MembershipRole;\n}> = ({ isOpen, setIsOpen, memberRole, member }) => {\n  const { t } = useTranslation('organization');\n  const [role, setRole] = useState<MembershipRole>(memberRole);\n  const [updateMember, state] = useUpdateMemberRequest(member.uid);\n\n  const onRoleUpdated = useCallback(async () => {\n    if (role === memberRole) {\n      const message = t<string>('chooseDifferentRoleError');\n\n      toaster.error(message, {\n        className: 'chooseDifferentRoleError',\n      });\n\n      return;\n    }\n\n    const promise = updateMember({ role });\n\n    await toaster.promise(promise, {\n      loading: t<string>('updateRoleLoadingMessage'),\n      success: t<string>('updateRoleSuccessMessage'),\n      error: t<string>('updatingRoleErrorMessage'),\n    });\n\n    setIsOpen(false);\n  }, [role, memberRole, updateMember, t, setIsOpen]);\n\n  const heading = (\n    <Trans i18nKey={'organization:updateMemberRoleModalHeading'} />\n  );\n\n  return (\n    <Modal heading={heading} isOpen={isOpen} setIsOpen={setIsOpen}>\n      <div className={'flex flex-col space-y-12'}>\n        <div className={'flex flex-col space-y-1'}>\n          <Label>\n            <Trans i18nKey={'organization:memberRoleInputLabel'} />\n          </Label>\n\n          <MembershipRoleSelector value={memberRole} onChange={setRole} />\n        </div>\n\n        <Button\n          data-cy={'confirm-update-member-role'}\n          block\n          loading={state.loading}\n          onClick={onRoleUpdated}\n        >\n          <Trans i18nKey={'organization:updateRoleSubmitLabel'} />\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default UpdateMemberRoleModal;\n", "import { useState } from 'react';\nimport type { SerializedUserAuthData } from '~/core/session/types/user-session';\n\nimport MembershipRole from '~/lib/organizations/types/membership-role';\nimport TransferOrganizationOwnershipModal from '~/components/organizations/TransferOrganizationOwnershipModal';\n\nimport OrganizationMemberActionsDropdown from './OrganizationMemberActionsDropdown';\nimport RemoveOrganizationMemberModal from './RemoveOrganizationMemberModal';\nimport UpdateMemberRoleModal from './UpdateMemberRoleModal';\nimport If from '~/core/ui/If';\n\nconst OrganizationMembersActionsContainer: React.FCC<{\n  targetMember: SerializedUserAuthData;\n  targetMemberRole: MembershipRole;\n  currentUserRole: MembershipRole;\n  disabled: boolean;\n}> = (props) => {\n  const [isUpdatingRole, setIsUpdatingRole] = useState(false);\n  const [isRemovingUser, setIsRemovingUser] = useState(false);\n  const [isTransferringOwnership, setIsTransferringOwnership] = useState(false);\n\n  const isOwner = props.currentUserRole === MembershipRole.Owner;\n\n  return (\n    <>\n      <OrganizationMemberActionsDropdown\n        disabled={props.disabled}\n        isOwner={isOwner}\n        onRemoveSelected={() => setIsRemovingUser(true)}\n        onChangeRoleSelected={() => setIsUpdatingRole(true)}\n        onTransferOwnershipSelected={() => setIsTransferringOwnership(true)}\n      />\n\n      <RemoveOrganizationMemberModal\n        setIsOpen={setIsRemovingUser}\n        isOpen={isRemovingUser}\n        member={props.targetMember}\n      />\n\n      <UpdateMemberRoleModal\n        setIsOpen={setIsUpdatingRole}\n        isOpen={isUpdatingRole}\n        member={props.targetMember}\n        memberRole={props.targetMemberRole}\n      />\n\n      <If condition={isOwner}>\n        <TransferOrganizationOwnershipModal\n          setIsOpen={setIsTransferringOwnership}\n          isOpen={isTransferringOwnership}\n          member={props.targetMember}\n        />\n      </If>\n    </>\n  );\n};\n\nexport default OrganizationMembersActionsContainer;\n", "import { Trans } from 'react-i18next';\n\nimport If from '~/core/ui/If';\nimport Badge from '~/core/ui/Badge';\nimport useUserId from '~/core/hooks/use-user-id';\nimport RoleBadge from './RoleBadge';\nimport ProfileAvatar from '../ProfileAvatar';\nimport Alert from '~/core/ui/Alert';\n\nimport { canUpdateUser } from '~/lib/organizations/permissions';\nimport type Organization from '~/lib/organizations/types/organization';\nimport useFetchOrganization from '~/lib/organizations/hooks/use-fetch-organization';\n\nimport LoadingMembersSpinner from '~/components/organizations/LoadingMembersSpinner';\nimport OrganizationMembersActionsContainer from './OrganizationMembersActionsContainer';\nimport type { SerializedUserAuthData } from '~/core/session/types/user-session';\n\nfunction OrganizationMembersList({\n  organizationId,\n  membersMetadata,\n}: React.PropsWithChildren<{\n  organizationId: string;\n  membersMetadata: SerializedUserAuthData[];\n}>) {\n  const userId = useUserId();\n\n  // fetch the organization members with an active listener\n  // and re-render on changes\n  const {\n    data: organization,\n    status,\n    error,\n  } = useFetchOrganization(organizationId);\n\n  const isLoading = status === 'loading';\n\n  if (isLoading) {\n    return (\n      <LoadingMembersSpinner>\n        <Trans i18nKey={'organization:loadingMembers'} />\n      </LoadingMembersSpinner>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert type={'error'}>\n        <Trans i18nKey={'organization:loadMembersError'} />\n      </Alert>\n    );\n  }\n\n  const members = getSortedMembers(organization);\n  const currentUser = members.find((member) => member.id === userId);\n\n  if (!currentUser) {\n    return null;\n  }\n\n  const userRole = currentUser.role;\n\n  return (\n    <div className={'w-full space-y-10'}>\n      <div className=\"flex flex-col divide-y divide-gray-100 dark:divide-black-400\">\n        {members.map(({ role, id: memberId }) => {\n          const metadata = membersMetadata?.find((metadata) => {\n            return metadata.uid === memberId;\n          });\n\n          if (!metadata) {\n            return null;\n          }\n\n          const displayName = metadata.displayName\n            ? metadata.displayName\n            : metadata.email;\n\n          const isCurrentUser = userId === metadata.uid;\n\n          // check if user has the permissions to update another member of\n          // the organization. If it returns false, the actions' dropdown\n          // should be disabled\n          const shouldEnableActions = canUpdateUser(userRole, role);\n          const key = `${metadata.uid}:${userRole}`;\n\n          return (\n            <div\n              key={key}\n              data-cy={'organization-member'}\n              className={\n                'flex flex-col py-2 lg:flex-row lg:items-center lg:space-x-2' +\n                ' justify-between space-y-2 lg:space-y-0'\n              }\n            >\n              <div className={'flex flex-auto items-center space-x-4'}>\n                <ProfileAvatar user={metadata} />\n\n                <div className={'block truncate text-sm'}>{displayName}</div>\n\n                <If condition={isCurrentUser}>\n                  <Badge>\n                    <Trans i18nKey={'organization:youBadgeLabel'} />\n                  </Badge>\n                </If>\n              </div>\n\n              <div className={'flex items-center justify-end space-x-4'}>\n                <div>\n                  <RoleBadge role={role} />\n                </div>\n\n                <OrganizationMembersActionsContainer\n                  disabled={!shouldEnableActions}\n                  targetMember={metadata}\n                  targetMemberRole={role}\n                  currentUserRole={userRole}\n                />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default OrganizationMembersList;\n\n/**\n * @description Return the list of members sorted by role {@link MembershipRole}\n * @param organization\n */\nfunction getSortedMembers(organization: WithId<Organization>) {\n  const membersIds = Object.keys(organization.members);\n\n  return membersIds\n    .map((memberId) => {\n      const member = organization.members[memberId];\n\n      return {\n        ...member,\n        id: memberId,\n      };\n    })\n    .sort((prev, next) => {\n      return next.role > prev.role ? 1 : -1;\n    });\n}\n", "import type { CollectionReference } from 'firebase/firestore';\nimport { collection } from 'firebase/firestore';\nimport { useFirestore, useFirestoreCollectionData } from 'reactfire';\n\nimport type MembershipInvite from '~/lib/organizations/types/membership-invite';\n\nimport {\n  INVITES_COLLECTION,\n  ORGANIZATIONS_COLLECTION,\n} from '~/lib/firestore-collections';\n\n/**\n * @description Hook to fetch the organization's invited members\n * @param organizationId\n */\nfunction useFetchInvitedMembers(organizationId: string) {\n  const firestore = useFirestore();\n\n  const collectionRef = collection(\n    firestore,\n    ORGANIZATIONS_COLLECTION,\n    organizationId,\n    INVITES_COLLECTION\n  ) as CollectionReference<WithId<MembershipInvite>>;\n\n  return useFirestoreCollectionData(collectionRef, {\n    idField: 'id',\n  });\n}\n\nexport default useFetchInvitedMembers;\n", "import { useFirestore } from 'reactfire';\nimport { deleteDoc, doc } from 'firebase/firestore';\nimport { useCallback } from 'react';\n\nimport {\n  INVITES_COLLECTION,\n  ORGANIZATIONS_COLLECTION,\n} from '~/lib/firestore-collections';\n\nfunction useDeleteInvite() {\n  const firestore = useFirestore();\n\n  return useCallback(\n    (organizationId: string, inviteId: string) => {\n      const path = getDeleteInvitePath(organizationId, inviteId);\n      const docRef = doc(firestore, path);\n\n      return deleteDoc(docRef);\n    },\n    [firestore]\n  );\n}\n\n/**\n * @name getDeleteInvitePath\n * @param organizationId\n * @param inviteId\n * @description Builds path to the collection document to delete\n */\nfunction getDeleteInvitePath(organizationId: string, inviteId: string) {\n  return [\n    ORGANIZATIONS_COLLECTION,\n    organizationId,\n    INVITES_COLLECTION,\n    inviteId,\n  ].join('/');\n}\n\nexport default useDeleteInvite;\n", "import { useCallback, useState } from 'react';\nimport toaster from 'react-hot-toast';\nimport { Trans, useTranslation } from 'react-i18next';\nimport XMarkIcon from '@heroicons/react/24/outline/XMarkIcon';\n\nimport useDeleteInvite from '~/lib/organizations/hooks/use-delete-invite';\n\nimport IconButton from '~/core/ui/IconButton';\nimport If from '~/core/ui/If';\nimport Modal from '~/core/ui/Modal';\nimport Button from '~/core/ui/Button';\n\nconst DeleteInviteButton: React.FCC<{\n  inviteId: string;\n  organizationId: string;\n  memberEmail: string;\n}> = ({ inviteId, organizationId, memberEmail }) => {\n  const [isDeleting, setIsDeleting] = useState(false);\n  const deleteRequest = useDeleteInvite();\n  const { t } = useTranslation('organization');\n\n  const onInviteDeleteRequested = useCallback(async () => {\n    const promise = deleteRequest(organizationId, inviteId);\n\n    await toaster.promise(promise, {\n      success: t<string>(`deleteInviteSuccessMessage`),\n      error: t<string>(`deleteInviteErrorMessage`),\n      loading: t<string>(`deleteInviteLoadingMessage`),\n    });\n\n    setIsDeleting(false);\n  }, [deleteRequest, inviteId, organizationId, t]);\n\n  const heading = <Trans i18nKey={'organization:deleteInviteModalHeading'} />;\n\n  return (\n    <>\n      <IconButton\n        data-cy={'delete-invite-button'}\n        label={'Delete Invite'}\n        onClick={() => setIsDeleting(true)}\n      >\n        <XMarkIcon className={'h-6'} />\n      </IconButton>\n\n      <If condition={isDeleting}>\n        <Modal heading={heading} isOpen={isDeleting} setIsOpen={setIsDeleting}>\n          <div className={'flex flex-col space-y-4'}>\n            <p>\n              <Trans\n                i18nKey={'organization:confirmDeletingMemberInvite'}\n                values={{ email: memberEmail }}\n                components={{ b: <b /> }}\n              />\n            </p>\n\n            <p>\n              <Trans i18nKey={'common:modalConfirmationQuestion'} />\n            </p>\n\n            <Button\n              data-cy={'confirm-delete-invite-button'}\n              color={'danger'}\n              onClick={onInviteDeleteRequested}\n            >\n              <Trans i18nKey={'organization:deleteInviteSubmitLabel'} />\n            </Button>\n          </div>\n        </Modal>\n      </If>\n    </>\n  );\n};\n\nexport default DeleteInviteButton;\n", "import { Trans } from 'react-i18next';\n\nimport useFetchInvitedMembers from '~/lib/organizations/hooks/use-fetch-invited-members';\nimport { canDeleteInvites } from '~/lib/organizations/permissions';\n\nimport FallbackUserAvatar from '../FallbackUserAvatar';\nimport RoleBadge from './RoleBadge';\nimport DeleteInviteButton from './DeleteInviteButton';\n\nimport IfHasPermissions from '~/components/IfHasPermissions';\nimport LoadingMembersSpinner from '~/components/organizations/LoadingMembersSpinner';\nimport Alert from '~/core/ui/Alert';\n\nconst OrganizationInvitedMembersList: React.FCC<{\n  organizationId: string;\n}> = ({ organizationId }) => {\n  const { data: members, status } = useFetchInvitedMembers(organizationId);\n\n  if (status === 'loading') {\n    return (\n      <LoadingMembersSpinner>\n        <Trans i18nKey={'organization:loadingInvitedMembers'} />\n      </LoadingMembersSpinner>\n    );\n  }\n\n  if (status === 'error') {\n    return (\n      <Alert type={'error'}>\n        <Trans i18nKey={'organization:loadInvitedMembersError'} />\n      </Alert>\n    );\n  }\n\n  if (!members.length) {\n    return (\n      <p className={'text-sm'}>\n        <Trans i18nKey={'organization:noPendingInvites'} />\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col divide-y divide-gray-100 dark:divide-black-400\">\n      {members.map(({ email, role, code, id }) => {\n        return (\n          <div\n            key={id}\n            data-cy={'invited-member'}\n            data-code={code}\n            className={\n              'flex flex-col py-2 lg:flex-row lg:items-center lg:space-x-2'\n            }\n          >\n            <div className={'flex flex-auto items-center space-x-4'}>\n              <FallbackUserAvatar text={email} />\n\n              <div className={'block truncate text-sm'}>{email}</div>\n            </div>\n\n            <div className={'flex items-center justify-end space-x-4'}>\n              <RoleBadge role={role} />\n\n              <IfHasPermissions condition={canDeleteInvites}>\n                <DeleteInviteButton\n                  inviteId={id}\n                  organizationId={organizationId}\n                  memberEmail={email}\n                />\n              </IfHasPermissions>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default OrganizationInvitedMembersList;\n", "export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from 'stream';\nimport type { EntryContext } from '@remix-run/node';\nimport { Response } from '@remix-run/node';\nimport { RemixServer } from '@remix-run/react';\nimport isbot from 'isbot';\nimport { renderToPipeableStream } from 'react-dom/server';\nimport { I18nextProvider } from 'react-i18next';\nimport initializeServerI18n from './i18n/initialize-server-i18n';\n\nconst ABORT_DELAY = 5000;\n\nexport default async function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get('user-agent'))\n    ? 'onAllReady'\n    : 'onShellReady';\n\n  const i18n = await initializeServerI18n(request, remixContext);\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <I18nextProvider i18n={i18n}>\n        <RemixServer context={remixContext} url={request.url} />\n      </I18nextProvider>,\n      {\n        [callbackName]: () => {\n          const body = new PassThrough();\n\n          responseHeaders.set('Content-Type', 'text/html');\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError: (err: unknown) => {\n          reject(err);\n        },\n        onError: (error: unknown) => {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { EntryContext } from '@remix-run/node';\nimport { resolve } from 'node:path';\n\nimport { createInstance } from 'i18next';\nimport Backend from 'i18next-fs-backend';\nimport { initReactI18next } from 'react-i18next';\nimport i18next from './i18n.server';\nimport i18n from './i18next.config';\n\nasync function initializeServerI18n(request: Request, context: EntryContext) {\n  const instance = createInstance();\n  const lng = await i18next.getLocale(request);\n  const ns = [...i18n.defaultNS, ...i18next.getRouteNamespaces(context)];\n\n  await instance\n    .use(initReactI18next)\n    .use(Backend)\n    .init({\n      ...i18n,\n      lng,\n      ns,\n      backend: {\n        loadPath: resolve('./public/locales/{{lng}}/{{ns}}.json'),\n      },\n    });\n\n  return instance;\n}\n\nexport default initializeServerI18n;\n", "import { resolve } from 'node:path';\nimport Backend from 'i18next-fs-backend';\nimport { RemixI18Next } from 'remix-i18next';\n\nimport i18nextOptions from './i18next.config';\n\nconst i18nNext = new RemixI18Next({\n  detection: {\n    supportedLanguages: i18nextOptions.supportedLanguages,\n    fallbackLanguage: i18nextOptions.fallbackLanguage,\n  },\n  i18next: {\n    ...i18nextOptions,\n    backend: {\n      loadPath: resolve('./public/locales/{{lng}}/{{ns}}.json'),\n    },\n  },\n  // @ts-ignore\n  backend: Backend,\n});\n\nexport default i18nNext;\n", "function isBrowser() {\n  return typeof window !== 'undefined';\n}\n\nexport default isBrowser;\n", "import isBrowser from '~/core/generic/is-browser';\n\nconst env = isBrowser() ? window.ENV : process.env;\nconst DEFAULT_LOCALE = env.DEFAULT_LOCALE ?? 'en';\n\nconst i18Config = {\n  fallbackLanguage: DEFAULT_LOCALE,\n  supportedLanguages: [DEFAULT_LOCALE],\n  defaultNS: [\n    'common',\n    'auth',\n    'organization',\n    'profile',\n    'subscription',\n    'task',\n    'photo',\n  ],\n  react: { useSuspense: false },\n};\n\nexport default i18Config;\n", "import stylesheetUrl from './styles/dist.css';\n\nimport type { LoaderArgs } from '@remix-run/server-runtime';\nimport type { LinksFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\n\nimport {\n  Links,\n  LiveReload,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n  Meta as RemixMeta,\n} from '@remix-run/react';\n\nimport classNames from 'classnames';\n\nimport Head from '~/core/ui/Head';\nimport { parseThemeCookie } from '~/lib/server/cookies/theme.cookie';\nimport AppRouteLoadingIndicator from '~/components/AppRouteLoadingIndicator';\nimport RootCatchBoundary from '~/components/RootCatchBoundary';\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: stylesheetUrl }];\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const theme = await parseThemeCookie(request);\n\n  return json({\n    theme,\n    ENV: getBrowserEnvironment(),\n  });\n};\n\nexport default function App() {\n  const data = useLoaderData<typeof loader>();\n\n  const className = classNames({\n    dark: data.theme === 'dark',\n  });\n\n  return (\n    <html lang=\"en\" className={className}>\n      <head>\n        <RemixMeta />\n        <Links />\n        <Head />\n\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `window.ENV = ${JSON.stringify(data.ENV)}`,\n          }}\n        />\n      </head>\n      <body className=\"h-full\">\n        <Outlet />\n        <AppRouteLoadingIndicator />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n\nexport const CatchBoundary = RootCatchBoundary;\n\nfunction getBrowserEnvironment() {\n  const env = process.env;\n\n  return {\n    FIREBASE_API_KEY: env.FIREBASE_API_KEY,\n    FIREBASE_PROJECT_ID: env.FIREBASE_PROJECT_ID,\n    FIREBASE_STORAGE_BUCKET: env.FIREBASE_STORAGE_BUCKET,\n    FIREBASE_AUTH_DOMAIN: env.FIREBASE_AUTH_DOMAIN,\n    FIREBASE_MESSAGING_SENDER_ID: env.FIREBASE_MESSAGING_SENDER_ID,\n    FIREBASE_APP_ID: env.FIREBASE_APP_ID,\n    FIREBASE_MEASUREMENT_ID: env.FIREBASE_MEASUREMENT_ID,\n    EMULATOR: env.EMULATOR,\n    EMULATOR_HOST: env.EMULATOR_HOST,\n    FIRESTORE_EMULATOR_PORT: env.FIRESTORE_EMULATOR_PORT,\n    SITE_URL: env.SITE_URL,\n    DEFAULT_LOCALE: env.DEFAULT_LOCALE,\n    NODE_ENV: env.NODE_ENV,\n    SENTRY_DSN: env.SENTRY_DSN,\n    APPCHECK_KEY: env.APPCHECK_KEY,\n  };\n}\n", "import { GoogleAuthProvider } from 'firebase/auth';\nimport getEnv from '~/core/get-env';\n\nconst env = getEnv() ?? {};\n\nconst configuration = {\n  site: {\n    name: 'Awesomely - Your SaaS Title',\n    description: 'Your SaaS Description',\n    themeColor: '#ffffff',\n    themeColorDark: '#0a0a0a',\n    siteUrl: env.SITE_URL,\n    siteName: 'Awesomely',\n    twitterHandle: '',\n    githubHandle: '',\n    language: 'en',\n    convertKitFormId: '',\n    locale: env.DEFAULT_LOCALE,\n  },\n  auth: {\n    // Enable MFA. You must upgrade to GCP Identity Platform to use it.\n    // see: https://cloud.google.com/identity-platform/docs/product-comparison\n    enableMultiFactorAuth: false,\n    // NB: Enable the providers below in the Firebase Console\n    // in your production project\n    providers: {\n      emailPassword: true,\n      phoneNumber: false,\n      emailLink: false,\n      oAuth: [GoogleAuthProvider],\n    },\n  },\n  emulatorHost: env.EMULATOR_HOST,\n  emulator: env.EMULATOR === 'true',\n  production: env.NODE_ENV === 'production',\n  environment: env.ENVIRONMENT,\n  paths: {\n    signIn: '/auth/sign-in',\n    signUp: '/auth/sign-up',\n    emailLinkSignIn: '/auth/link',\n    onboarding: `/onboarding`,\n    appHome: '/dashboard',\n    settings: {\n      profile: '/settings/profile',\n      authentication: '/settings/profile/authentication',\n      email: '/settings/profile/email',\n      password: '/settings/profile/password',\n    },\n    api: {\n      checkout: `/stripe/checkout`,\n      billingPortal: `/stripe/portal`,\n    },\n    searchIndex: `/public/search-index`,\n  },\n  appCheckSiteKey: env.APPCHECK_KEY,\n  email: {\n    host: '',\n    port: 587,\n    user: '',\n    password: '',\n    senderAddress: 'MakerKit Team <info@makerkit.dev>',\n  },\n  sentry: {\n    dsn: env.SENTRY_DSN,\n  },\n  stripe: {\n    plans: [\n      {\n        name: 'Basic',\n        description: 'Description of your Basic plan',\n        price: '$9/month',\n        stripePriceId: 'price_1LfXGaI1i3VnbZTq7l3VgZNa',\n        trialPeriodDays: 0,\n        features: [\n          'Basic Reporting',\n          'Up to 20 users',\n          '1GB for each user',\n          'Chat Support',\n        ],\n      },\n      {\n        name: 'Pro',\n        description: 'Description of your Pro plan',\n        price: '29/month',\n        stripePriceId: 'pro-plan',\n        features: [\n          'Advanced Reporting',\n          'Up to 50 users',\n          '5GB for each user',\n          'Chat and Phone Support',\n        ],\n      },\n      {\n        name: 'Premium',\n        description: 'Description of your Premium plan',\n        price: '$79/year',\n        stripePriceId: 'premium-plan',\n        features: [\n          'Advanced Reporting',\n          'Unlimited users',\n          '50GB for each user',\n          'Account Manager',\n        ],\n      },\n    ],\n  },\n};\n\nexport default configuration;\n", "import isBrowser from '~/core/generic/is-browser';\n\nfunction getEnv() {\n  return isBrowser() ? window.ENV : process.env;\n}\n\nexport default getEnv;\n", "import configuration from '~/configuration';\n\nconst Head = () => {\n  const siteUrl = configuration.site.siteUrl;\n\n  if (!siteUrl) {\n    throw new Error(`Please add the property siteUrl in the configuration`);\n  }\n\n  const structuredData = {\n    name: configuration.site.name,\n    url: siteUrl,\n    logo: `${siteUrl}/assets/images/favicon/favicon-150x150.png`,\n    '@context': 'https://schema.org',\n    '@type': 'Organization', // change to person for Personal websites\n  };\n\n  return (\n    <>\n      <title key={'title'}>{configuration.site.name}</title>\n\n      <link rel=\"shortcut icon\" href=\"/assets/images/favicon/favicon.ico\" />\n\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"144x144\"\n        href=\"/assets/images/favicon/apple-touch-icon.png\"\n      />\n\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"16x16\"\n        href=\"/assets/images/favicon/favicon-16x16.png\"\n      />\n\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"32x32\"\n        href=\"/assets/images/favicon/favicon-32x32.png\"\n      />\n\n      <link rel=\"manifest\" href=\"/assets/images/favicon/site.webmanifest\" />\n\n      <link\n        rel=\"mask-icon\"\n        href=\"/assets/images/favicon/safari-pinned-tab.svg\"\n        color=\"#000000\"\n      />\n\n      <link rel=\"dns-prefetch\" href=\"//fonts.googleapis.com\" />\n\n      <link\n        rel=\"preconnect\"\n        href=\"https://fonts.gstatic.com\"\n        crossOrigin={'true'}\n      />\n\n      <meta name=\"msapplication-TileColor\" content=\"#ffffff\" />\n      <meta name=\"msapplication-config\" content=\"/favicon/browserconfig.xml\" />\n\n      <meta name=\"theme-color\" content={configuration.site.themeColor} />\n\n      <meta\n        name=\"description\"\n        content={configuration.site.description}\n        key=\"meta:description\"\n      />\n\n      <meta\n        property=\"og:title\"\n        key=\"og:title\"\n        content={configuration.site.name}\n      />\n\n      <meta\n        property=\"og:description\"\n        key=\"og:description\"\n        content={configuration.site.description}\n      />\n\n      <meta property=\"og:site_name\" content={configuration.site.siteName} />\n      <meta property=\"twitter:title\" content={configuration.site.siteName} />\n      <meta property=\"twitter:card\" content=\"summary_large_image\" />\n\n      <meta\n        property=\"twitter:creator\"\n        content={configuration.site.twitterHandle}\n      />\n\n      <script\n        async\n        key=\"ld:json\"\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}\n      />\n    </>\n  );\n};\n\nexport default Head;\n", "function getCookieHeader(request: Request) {\n  return request.headers.get(`Cookie`);\n}\n\nexport default getCookieHeader;\n", "import getCookieHeader from '~/core/generic/get-cookie-header';\n\nconst THEME_COOKIE_NAME = 'theme';\n\nexport async function parseThemeCookie(request: Request) {\n  const cookie = await getThemeCookie();\n  return cookie.parse(getCookieHeader(request));\n}\n\nasync function getThemeCookie() {\n  const { createCookie } = await import('@remix-run/node');\n\n  return createCookie(THEME_COOKIE_NAME, {\n    path: '/',\n    httpOnly: false,\n    secure: process.env.EMULATOR !== `true`,\n    sameSite: 'lax' as const,\n  });\n}\n", "import { useTransition } from '@remix-run/react';\nimport { createRef, useEffect, lazy, useRef, useCallback } from 'react';\nimport type { LoadingBarRef } from 'react-top-loading-bar';\nimport ClientOnly from '~/core/ui/ClientOnly';\n\nconst LoadingBar = lazy(() => import('react-top-loading-bar'));\n\n// we wait 50ms before displaying the loading bar\n// to avoid useless animations when navigation is fast\nconst DEFAULT_MIN_WAITING = 50;\n\nfunction AppRouteLoadingIndicator() {\n  const ref = createRef<LoadingBarRef>();\n  const runningRef = useRef(false);\n  const timeoutRef = useRef<number>();\n  const transition = useTransition();\n\n  const scheduleAnimation = useCallback(() => {\n    return window.setTimeout(() => {\n      runningRef.current = true;\n      ref.current?.continuousStart();\n    }, DEFAULT_MIN_WAITING);\n  }, [ref]);\n\n  useEffect(() => {\n    const isIdle = transition.state === 'idle';\n    const isRouteLoading =\n      transition.type === 'normalLoad' && transition.state === 'loading';\n\n    if (isRouteLoading) {\n      timeoutRef.current = scheduleAnimation();\n    }\n\n    if (isIdle) {\n      if (timeoutRef.current) {\n        window.clearTimeout(timeoutRef.current);\n      }\n\n      if (runningRef.current) {\n        ref.current?.complete();\n        runningRef.current = false;\n      }\n    }\n  }, [ref, transition.type, transition.state, scheduleAnimation]);\n\n  return (\n    <ClientOnly>\n      <LoadingBar\n        waitingTime={200}\n        shadow={true}\n        className={'bg-primary-500'}\n        color={''}\n        ref={ref}\n      />\n    </ClientOnly>\n  );\n}\n\nexport default AppRouteLoadingIndicator;\n", "import type { ReactNode } from 'react';\nimport { Suspense, useEffect, useState } from 'react';\n\nfunction ClientOnly({ children }: { children: ReactNode }) {\n  let [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  return mounted ? <Suspense fallback={''}>{children}</Suspense> : null;\n}\n\nexport default ClientOnly;\n", "import { Links, Meta, Scripts, useCatch } from '@remix-run/react';\nimport { Trans } from 'react-i18next';\n\nimport Container from '~/core/ui/Container';\nimport Button from '~/core/ui/Button';\nimport Hero from '~/core/ui/Hero';\nimport If from '~/core/ui/If';\nimport SubHeading from '~/core/ui/SubHeading';\n\nimport SiteHeader from '~/components/SiteHeader';\nimport FirebaseAppShell from '~/core/firebase/components/FirebaseAppShell';\nimport FirebaseAuthProvider from '~/core/firebase/components/FirebaseAuthProvider';\n\nimport firebaseConfig from '../firebase.config';\nimport HttpStatusCode from '~/core/generic/http-status-code.enum';\n\nfunction RootCatchBoundary() {\n  const error = useCatch();\n\n  return (\n    <html>\n      <head>\n        <Meta />\n        <Links />\n        <Scripts />\n      </head>\n      <body>\n        <FirebaseAppShell config={firebaseConfig}>\n          <FirebaseAuthProvider\n            useEmulator={firebaseConfig.emulator}\n            userSession={undefined}\n            setUserSession={() => ({})}\n          >\n            <SiteHeader />\n\n            <Container>\n              <div>\n                <Hero>\n                  <If\n                    condition={error.status === HttpStatusCode.NotFound}\n                    fallback={<Trans i18nKey={'common:genericServerError'} />}\n                  >\n                    <Trans i18nKey={'common:pageNotFound'} />\n                  </If>\n                </Hero>\n\n                <SubHeading>\n                  <If\n                    condition={error.status === HttpStatusCode.NotFound}\n                    fallback={\n                      <Trans i18nKey={'common:genericServerErrorHeading'} />\n                    }\n                  >\n                    <Trans i18nKey={'common:pageNotFoundSubHeading'} />\n                  </If>\n                </SubHeading>\n              </div>\n\n              <div className={'my-4'}>\n                <Button href={'/'}>\n                  <Trans i18nKey={'common:backToHomePage'} />\n                </Button>\n              </div>\n            </Container>\n          </FirebaseAuthProvider>\n        </FirebaseAppShell>\n      </body>\n    </html>\n  );\n}\n\nexport default RootCatchBoundary;\n", "const Container: React.FCC = ({ children }) => {\n  return <div className=\"Container\">{children}</div>;\n};\n\nexport default Container;\n", "const Hero: React.FCC = ({ children }) => {\n  return <h1 className=\"Hero\">{children}</h1>;\n};\n\nexport default Hero;\n", "const SubHeading: React.FCC = ({ children }) => {\n  return <h2 className=\"SubHeading\">{children}</h2>;\n};\n\nexport default SubHeading;\n", "import { useCallback } from 'react';\nimport { useAuth } from 'reactfire';\nimport { ArrowRightIcon } from '@heroicons/react/24/outline';\n\nimport Logo from '~/core/ui/Logo';\nimport Container from '~/core/ui/Container';\nimport If from '~/core/ui/If';\nimport Button from '~/core/ui/Button';\nimport SiteNavigation from './SiteNavigation';\nimport ProfileDropdown from './ProfileDropdown';\nimport DarkModeToggle from '~/components/DarkModeToggle';\n\nimport configuration from '~/configuration';\nimport ClientOnly from '~/core/ui/ClientOnly';\nimport useUserSession from '~/core/hooks/use-user-session';\n\nconst fixedClassName = `FixedHeader`;\n\nconst SiteHeader: React.FCC<{\n  fixed?: boolean;\n}> = ({ fixed }) => {\n  const auth = useAuth();\n  const userSession = useUserSession();\n\n  const signOutRequested = useCallback(() => {\n    return auth.signOut();\n  }, [auth]);\n\n  return (\n    <div className={`w-full py-2.5 ${fixed ? fixedClassName : ''}`}>\n      <Container>\n        <div className=\"flex flex-row items-center\">\n          <div className={'flex items-center space-x-4'}>\n            <Logo />\n\n            <ClientOnly>\n              <DarkModeToggle />\n            </ClientOnly>\n          </div>\n\n          <div className={'flex flex-1 justify-end space-x-4'}>\n            <div\n              className={\n                'order-1 flex items-center space-x-4 lg:space-x-8' +\n                ' md:order-none md:ml-0'\n              }\n            >\n              <SiteNavigation />\n            </div>\n\n            <If condition={userSession?.auth} fallback={<AuthButtons />}>\n              {(user) => (\n                <ProfileDropdown\n                  user={user}\n                  signOutRequested={signOutRequested}\n                />\n              )}\n            </If>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nfunction AuthButtons() {\n  return (\n    <div className={'hidden space-x-2 lg:flex'}>\n      <Button color={'transparent'} href={configuration.paths.signIn}>\n        <span>Sign In</span>\n      </Button>\n\n      <Button href={configuration.paths.signUp}>\n        <span className={'flex items-center space-x-2'}>\n          <span>Sign Up</span>\n          <ArrowRightIcon className={'h-4'} />\n        </span>\n      </Button>\n    </div>\n  );\n}\n\nexport default SiteHeader;\n", "import { Link } from '@remix-run/react';\nimport LogoImage from './LogoImage';\n\nconst Logo: React.FCC<{ href?: string; className?: string }> = ({\n  href,\n  className,\n}) => {\n  return (\n    <Link to={href ?? '/'}>\n      <LogoImage className={className} />\n    </Link>\n  );\n};\n\nexport default Logo;\n", "import classNames from 'classnames';\n\nconst LogoImage: React.FCC<{\n  className?: string;\n}> = ({ className }) => {\n  return (\n    <svg\n      width={105}\n      className={classNames(`w-[95px] sm:w-[105px]`, className)}\n      viewBox=\"0 0 733 140\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M119.081 138V73.209C119.081 67.551 117.08 62.79 113.078 58.926C109.214 55.062 104.453 53.13 98.7951 53.13C93.2751 53.13 88.4451 55.062 84.3051 58.926C80.3031 62.652 78.3021 67.344 78.3021 73.002V138H59.4651V73.002C59.4651 67.206 57.5331 62.514 53.6691 58.926C49.5291 55.062 44.6301 53.13 38.9721 53.13C33.4521 53.13 28.7601 55.062 24.8961 58.926C20.7561 63.066 18.6861 67.965 18.6861 73.623V138H0.0560548V36.984H18.6861V44.643C21.0321 41.745 24.0681 39.33 27.7941 37.398C31.6581 35.466 35.3841 34.5 38.9721 34.5C45.0441 34.5 50.5641 35.742 55.5321 38.226C60.6381 40.572 65.0541 43.884 68.7801 48.162C72.5061 43.884 76.9221 40.572 82.0281 38.226C87.1341 35.742 92.7231 34.5 98.7951 34.5C104.177 34.5 109.214 35.466 113.906 37.398C118.598 39.33 122.738 42.09 126.326 45.678C129.914 49.266 132.674 53.475 134.606 58.305C136.676 62.997 137.711 67.965 137.711 73.209V138H119.081ZM242.173 138V122.268C237.757 127.374 232.651 131.445 226.855 134.481C221.059 137.517 214.918 139.035 208.432 139.035C201.256 139.035 194.494 137.724 188.146 135.102C181.936 132.48 176.416 128.754 171.586 123.924C166.756 119.232 162.961 113.712 160.201 107.364C157.579 100.878 156.268 94.116 156.268 87.078C156.268 80.04 157.579 73.347 160.201 66.999C162.961 60.513 166.756 54.855 171.586 50.025C176.416 45.195 181.936 41.469 188.146 38.847C194.494 36.225 201.256 34.914 208.432 34.914C215.056 34.914 221.266 36.294 227.062 39.054C232.996 41.814 238.033 45.678 242.173 50.646V36.984H260.803V138H242.173ZM208.432 53.337C203.878 53.337 199.462 54.234 195.184 56.028C191.044 57.684 187.456 60.03 184.42 63.066C181.384 66.102 178.969 69.759 177.175 74.037C175.519 78.177 174.691 82.524 174.691 87.078C174.691 91.632 175.519 95.979 177.175 100.119C178.969 104.259 181.384 107.847 184.42 110.883C187.456 113.919 191.044 116.334 195.184 118.128C199.462 119.784 203.878 120.612 208.432 120.612C212.986 120.612 217.333 119.784 221.473 118.128C225.613 116.334 229.201 113.919 232.237 110.883C235.273 107.847 237.619 104.259 239.275 100.119C241.069 95.979 241.966 91.632 241.966 87.078C241.966 82.524 241.069 78.177 239.275 74.037C237.619 69.759 235.273 66.102 232.237 63.066C229.201 60.03 225.613 57.684 221.473 56.028C217.333 54.234 212.986 53.337 208.432 53.337ZM331.127 138L299.663 99.705V138H281.447V0.344996H299.663V59.754L327.815 33.258H354.932L305.873 78.798L355.139 138H331.127ZM379.299 94.116C379.299 97.428 380.472 100.878 382.818 104.466C385.302 108.054 388.131 111.09 391.305 113.574C397.101 118.128 403.863 120.405 411.591 120.405C423.873 120.405 433.878 114.471 441.606 102.603L457.338 111.918C451.956 120.612 445.332 127.305 437.466 131.997C429.6 136.689 420.975 139.035 411.591 139.035C404.553 139.035 397.86 137.724 391.512 135.102C385.164 132.342 379.575 128.547 374.745 123.717C369.915 118.887 366.12 113.298 363.36 106.95C360.738 100.602 359.427 93.909 359.427 86.871C359.427 79.833 360.738 73.14 363.36 66.792C366.12 60.306 369.915 54.648 374.745 49.818C379.437 44.988 384.957 41.262 391.305 38.64C397.791 36.018 404.553 34.707 411.591 34.707C418.629 34.707 425.322 36.018 431.67 38.64C438.156 41.262 443.745 44.988 448.437 49.818C458.649 60.306 463.755 72.45 463.755 86.25C463.755 88.734 463.548 91.356 463.134 94.116H379.299ZM411.591 51.681C405.933 51.681 400.62 52.923 395.652 55.407C390.684 57.891 386.682 61.203 383.646 65.343C380.748 69.345 379.299 73.623 379.299 78.177H443.883C443.883 73.623 442.365 69.345 439.329 65.343C436.431 61.203 432.498 57.891 427.53 55.407C422.562 52.923 417.249 51.681 411.591 51.681ZM528.543 54.372C525.231 52.854 522.264 52.095 519.642 52.095C514.122 52.095 509.568 54.027 505.98 57.891C502.116 62.031 500.184 66.792 500.184 72.174V138H482.382V72.174C482.382 64.722 484.245 57.891 487.971 51.681C491.835 45.471 497.079 40.641 503.703 37.191C508.671 34.845 513.984 33.672 519.642 33.672C524.196 33.672 528.543 34.5 532.683 36.156C536.823 37.812 541.17 40.503 545.724 44.229L528.543 54.372ZM610.092 138L578.628 99.705V138H560.412V0.344996H578.628V59.754L606.78 33.258H633.897L584.838 78.798L634.104 138H610.092ZM656.049 19.596C653.427 19.596 651.15 18.699 649.218 16.905C647.424 14.973 646.527 12.696 646.527 10.074C646.527 7.45199 647.424 5.24399 649.218 3.44999C651.15 1.51799 653.427 0.551993 656.049 0.551993C658.671 0.551993 660.879 1.51799 662.673 3.44999C664.605 5.24399 665.571 7.45199 665.571 10.074C665.571 12.696 664.605 14.973 662.673 16.905C660.879 18.699 658.671 19.596 656.049 19.596ZM647.562 138V34.5H664.95V138H647.562ZM717.4 53.13V138H699.805V53.13H684.28V34.5H699.805V0.344996H717.4V34.5H732.925V53.13H717.4Z\"\n        fill=\"url(#paint0_linear_1666_2)\"\n      />\n      <defs>\n        <linearGradient\n          id=\"paint0_linear_1666_2\"\n          x1=\"1.12419\"\n          y1=\"78\"\n          x2=\"724.566\"\n          y2=\"63.6614\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#0E73CC\" />\n          <stop offset=\"0.255208\" stopColor=\"#8E79DE\" />\n          <stop offset=\"0.494792\" stopColor=\"#EF4444\" />\n          <stop offset=\"0.755208\" stopColor=\"#FCB061\" />\n          <stop offset=\"1\" stopColor=\"#FFE81D\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport default LogoImage;\n", "import { Menu } from '@headlessui/react';\nimport Bars3Icon from '@heroicons/react/24/outline/Bars3Icon';\n\nimport NavigationMenuItem from '~/core/ui/Navigation/NavigationItem';\nimport NavigationMenu from '~/core/ui/Navigation/NavigationMenu';\nimport Dropdown from '~/core/ui/Dropdown';\n\ninterface Link {\n  label: string;\n  path: string;\n}\n\nconst links: Record<string, Link> = {\n  SignIn: {\n    label: 'Sign In',\n    path: '/auth/sign-in',\n  },\n  Pricing: {\n    label: 'Pricing',\n    path: '/pricing',\n  },\n  FAQ: {\n    label: 'FAQ',\n    path: '/faq',\n  },\n};\n\nconst SiteNavigation = () => {\n  return (\n    <>\n      <div className={'hidden items-center space-x-0.5 lg:flex'}>\n        <NavigationMenu>\n          <NavigationMenuItem\n            className={'flex lg:hidden'}\n            link={links.SignIn}\n          />\n\n          <NavigationMenuItem link={links.Pricing} />\n          <NavigationMenuItem link={links.FAQ} />\n        </NavigationMenu>\n      </div>\n\n      <div className={'ml-4 flex items-center lg:hidden'}>\n        <MobileDropdown />\n      </div>\n    </>\n  );\n};\n\nfunction MobileDropdown() {\n  const Button = (\n    <Menu.Button>\n      <Bars3Icon className={'h-9'} />\n    </Menu.Button>\n  );\n\n  const Links = Object.values(links).map((item) => {\n    return (\n      <Dropdown.Item key={item.path} href={item.path}>\n        {item.label}\n      </Dropdown.Item>\n    );\n  });\n\n  return <Dropdown button={Button} items={Links} />;\n}\n\nexport default SiteNavigation;\n", "import { NavLink } from '@remix-run/react';\nimport { Trans } from 'react-i18next';\nimport classNames from 'classnames';\n\ninterface LinkModel {\n  path: string;\n  label: string;\n}\n\nconst NavigationMenuItem: React.FCC<{\n  link: LinkModel;\n  end?: boolean;\n  disabled?: boolean;\n  className?: string;\n}> = ({ link, className, end, disabled }) => {\n  const label = link.label;\n\n  return (\n    <NavLink\n      end={end}\n      className={(props) => {\n        return classNames(`NavigationItem`, className, {\n          [`NavigationItemActive`]: props.isActive,\n          [`NavigationItemNotActive`]: !props.isActive,\n        });\n      }}\n      aria-disabled={disabled}\n      to={disabled ? '' : link.path}\n    >\n      <Trans i18nKey={label} defaults={label} />\n    </NavLink>\n  );\n};\n\nexport default NavigationMenuItem;\n", "import type { PropsWithChildren } from 'react';\nimport classNames from 'classnames';\n\ntype Props =\n  | {\n      bordered?: boolean;\n      vertical?: boolean;\n    }\n  | {\n      secondary?: boolean;\n      vertical?: boolean;\n    };\n\nfunction NavigationMenu(props: PropsWithChildren<Props>) {\n  return (\n    <ul\n      className={classNames(`NavigationMenu`, {\n        BorderedNavigationMenu: 'bordered' in props && props.bordered,\n        SecondaryNavigationMenu: 'secondary' in props && props.secondary,\n        VerticalNavigationMenu: props.vertical,\n      })}\n    >\n      {props.children}\n    </ul>\n  );\n}\n\nexport default NavigationMenu;\n", "import { useMemo } from 'react';\n\nimport { Trans } from 'react-i18next';\nimport { Menu } from '@headlessui/react';\n\nimport {\n  ChevronDownIcon,\n  Cog8ToothIcon,\n  ArrowLeftOnRectangleIcon,\n  Squares2X2Icon,\n} from '@heroicons/react/24/outline';\n\nimport type { SerializedUserAuthData } from '~/core/session/types/user-session';\n\nimport Dropdown from '~/core/ui/Dropdown';\nimport ProfileAvatar from './ProfileAvatar';\n\nconst ProfileDropdown: React.FCC<{\n  user: Maybe<SerializedUserAuthData>;\n  signOutRequested: () => void;\n}> = ({ user, signOutRequested }) => {\n  const ProfileDropdownButton = (\n    <Menu.Button\n      as={'span'}\n      className={'flex cursor-pointer items-center space-x-2'}\n    >\n      <ProfileAvatar user={user} />\n      <ChevronDownIcon className={'hidden h-3 sm:block'} />\n    </Menu.Button>\n  );\n\n  const signedInAsLabel = useMemo(() => {\n    return (\n      user?.email ??\n      user?.phoneNumber ?? <Trans i18nKey={'common:anonymousUser'} />\n    );\n  }, [user]);\n\n  const items = [\n    <Dropdown.Item className={'rounded-none py-0'} key={'signedInAs'}>\n      <div\n        className={'flex flex-col justify-start text-left text-xs ellipsify'}\n      >\n        <div className={'text-gray-500'}>Signed in as</div>\n\n        <div>\n          <span className={'block ellipsify'}>{signedInAsLabel}</span>\n        </div>\n      </div>\n    </Dropdown.Item>,\n    <Dropdown.Divider key={'divider1'} />,\n    <ProfileDropdownMenuItem key={'profile'} href={'/dashboard'}>\n      <Squares2X2Icon className={'h-5'} />\n      <span>\n        <Trans i18nKey={'common:dashboardTabLabel'} />\n      </span>\n    </ProfileDropdownMenuItem>,\n    <ProfileDropdownMenuItem key={'profile'} href={'/settings/profile'}>\n      <Cog8ToothIcon className={'h-5'} />\n      <span>\n        <Trans i18nKey={'common:settingsTabLabel'} />\n      </span>\n    </ProfileDropdownMenuItem>,\n    <Dropdown.Divider key={'divider2'} />,\n    <ProfileDropdownMenuItem key={'sign-out'} onClick={signOutRequested}>\n      <ArrowLeftOnRectangleIcon className={'h-5'} />\n      <span>\n        <Trans i18nKey={'auth:signOut'} />\n      </span>\n    </ProfileDropdownMenuItem>,\n  ];\n\n  return <Dropdown button={ProfileDropdownButton} items={items} />;\n};\n\nfunction ProfileDropdownMenuItem(\n  props: React.PropsWithChildren<\n    | {\n        onClick?: () => void;\n      }\n    | {\n        href?: string;\n      }\n  >\n) {\n  const onClick = 'onClick' in props ? props.onClick : undefined;\n  const href = 'href' in props ? props.href : undefined;\n\n  return (\n    <Dropdown.Item href={href} onClick={onClick}>\n      <span className={'space-between flex w-full items-center space-x-4'}>\n        {props.children}\n      </span>\n    </Dropdown.Item>\n  );\n}\n\nexport default ProfileDropdown;\n", "import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Trans } from 'react-i18next';\nimport { Transition } from '@headlessui/react';\n\nimport MoonIcon from '@heroicons/react/24/outline/MoonIcon';\nimport SunIcon from '@heroicons/react/24/outline/SunIcon';\n\nimport {\n  setTheme,\n  getDefaultTheme,\n  getStoredTheme,\n  DARK_THEME_CLASSNAME,\n  LIGHT_THEME_CLASSNAME,\n} from '~/core/theming';\n\nimport Tooltip from '~/core/ui/Tooltip';\nimport IconButton from '~/core/ui/IconButton';\n\nconst DarkModeToggle = () => {\n  const defaultTheme = useMemo(() => {\n    return getDefaultTheme() || getStoredTheme();\n  }, []);\n\n  const [currentTheme, setCurrentTheme] = useState<string | null>(defaultTheme);\n\n  const toggleMode = useCallback(() => {\n    setCurrentTheme((currentTheme) => {\n      if (currentTheme === LIGHT_THEME_CLASSNAME) {\n        return DARK_THEME_CLASSNAME;\n      }\n\n      return LIGHT_THEME_CLASSNAME;\n    });\n  }, []);\n\n  const isDarkTheme = currentTheme === DARK_THEME_CLASSNAME;\n\n  const TooltipText = isDarkTheme ? (\n    <Trans i18nKey={'common:switchToLightTheme'} />\n  ) : (\n    <Trans i18nKey={'common:switchToDarkTheme'} />\n  );\n\n  const Icon = isDarkTheme ? (\n    <SunIcon className={'h-5'} />\n  ) : (\n    <MoonIcon className={'h-5'} />\n  );\n\n  useEffect(() => {\n    setTheme(currentTheme);\n  }, [currentTheme]);\n\n  return (\n    <Tooltip content={TooltipText}>\n      <IconButton\n        className={'flex items-center bg-transparent p-1'}\n        onClick={toggleMode}\n      >\n        <Transition\n          appear={true}\n          show={true}\n          enter=\"transition-opacity duration-500\"\n          enterFrom=\"opacity-60\"\n          enterTo=\"opacity-100\"\n        >\n          {Icon}\n        </Transition>\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default DarkModeToggle;\n", "import { unescapeComponent } from 'uri-js';\n\nexport function getCookie(name: string) {\n  const cookieDict = document.cookie\n    .split(';')\n    .map((x) => x.split('='))\n    .reduce((accum, current) => {\n      accum[current[0]] = current[1];\n      return accum;\n    }, Object());\n\n  return JSON.parse(decodeURIComponent(atob(cookieDict[name])));\n}\n\nexport function setCookie(name: string, value: string) {\n  document.cookie = `${name}=${encodeCookie(value)}; Path=/`;\n}\n\nexport function encodeCookie(value: string) {\n  return btoa(unescapeComponent(encodeURIComponent(JSON.stringify(value))));\n}\n", "import isBrowser from '~/core/generic/is-browser';\nimport configuration from '~/configuration';\nimport { getCookie, setCookie } from '~/core/generic/cookies';\n\nconst THEME_KEY = `theme`;\nconst LIGHT_THEME_META_COLOR = configuration.site.themeColor;\nconst DARK_THEME_META_COLOR = configuration.site.themeColorDark;\n\nexport const DARK_THEME_CLASSNAME = `dark`;\nexport const LIGHT_THEME_CLASSNAME = `light`;\n\nexport function getDefaultTheme() {\n  return getThemeFromHTML();\n}\n\nexport function getStoredTheme() {\n  return getCookie('theme');\n}\n\nexport function setTheme(theme: string | null) {\n  const root = getHtml();\n\n  if (getDefaultTheme() === theme) {\n    return;\n  }\n\n  if (theme === DARK_THEME_CLASSNAME) {\n    root.classList.add(DARK_THEME_CLASSNAME);\n    setMetaTag(DARK_THEME_META_COLOR);\n    setCookie(THEME_KEY, DARK_THEME_CLASSNAME);\n  } else {\n    root.classList.remove(DARK_THEME_CLASSNAME);\n    setMetaTag(LIGHT_THEME_META_COLOR);\n    setCookie(THEME_KEY, LIGHT_THEME_CLASSNAME);\n  }\n}\n\nexport function loadSelectedTheme() {}\n\nfunction getThemeFromHTML() {\n  if (isBrowser()) {\n    const root = getHtml();\n\n    return root.classList.contains(DARK_THEME_CLASSNAME)\n      ? DARK_THEME_CLASSNAME\n      : LIGHT_THEME_CLASSNAME;\n  }\n}\n\nfunction getHtml() {\n  return document.firstElementChild as HTMLHtmlElement;\n}\n\nfunction getThemeMetaTag() {\n  return document.querySelector(`meta[name='theme-color']`);\n}\n\nfunction setMetaTag(value: string) {\n  const callback = () => {\n    let tag = getThemeMetaTag();\n\n    if (tag) {\n      tag.setAttribute('content', value);\n    } else {\n      tag = document.createElement('meta');\n      tag.setAttribute('name', 'theme-color');\n      tag.setAttribute('content', value);\n      document.head.appendChild(tag);\n    }\n  };\n\n  if (document.readyState === 'complete') {\n    callback();\n  } else {\n    document.addEventListener('DOMContentLoaded', callback);\n  }\n}\n", "import type { TippyProps } from '@tippyjs/react';\nimport Tippy from '@tippyjs/react';\n\nconst Tooltip: React.FCC<TippyProps> = ({ children, className, ...props }) => {\n  return (\n    <Tippy {...props} disabled={!props.content} theme={'makerkit'}>\n      <div className={className}>{children}</div>\n    </Tippy>\n  );\n};\n\nexport default Tooltip;\n", "import type { FirebaseOptions } from 'firebase/app';\nimport { FirebaseAppProvider } from 'reactfire';\n\nfunction FirebaseAppShell({\n  children,\n  config,\n}: React.PropsWithChildren<{\n  config: FirebaseOptions;\n}>) {\n  return (\n    <FirebaseAppProvider firebaseConfig={config}>\n      {children}\n    </FirebaseAppProvider>\n  );\n}\n\nexport default FirebaseAppShell;\n", "import type { Dispatch } from 'react';\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport { AuthProvider, useAuth, useFirebaseApp } from 'reactfire';\n\nimport type { User } from 'firebase/auth';\n\nimport {\n  initializeAuth,\n  indexedDBLocalPersistence,\n  connectAuthEmulator,\n  inMemoryPersistence,\n} from 'firebase/auth';\n\nimport isBrowser from '~/core/generic/is-browser';\nimport useDestroySession from '~/core/hooks/use-destroy-session';\nimport type UserSession from '~/core/session/types/user-session';\n\nexport const FirebaseAuthStateListener: React.FCC<{\n  onAuthStateChange: (user: User | null) => void | Promise<void>;\n}> = ({ children, onAuthStateChange }) => {\n  const auth = useAuth();\n\n  // {@link onIdTokenChanged} will call the\n  // callback when the user ID token changes\n  // for example, when the user signs out\n  // we update user context when ID token changes\n  useEffect(() => {\n    const subscription = auth.onIdTokenChanged(onAuthStateChange);\n\n    return () => subscription();\n  }, [auth, onAuthStateChange]);\n\n  return <>{children}</>;\n};\n\nexport default function FirebaseAuthProvider({\n  userSession,\n  setUserSession,\n  children,\n  useEmulator,\n}: React.PropsWithChildren<{\n  useEmulator: boolean;\n  userSession: Maybe<UserSession>;\n  setUserSession: Dispatch<Maybe<UserSession>>;\n}>) {\n  const app = useFirebaseApp();\n  const signOut = useDestroySession();\n  const userRef = useRef<Maybe<User>>();\n\n  // make sure we're not using IndexedDB when SSR\n  // as it is only supported on browser environments\n  const persistence = useMemo(() => {\n    return isBrowser() ? indexedDBLocalPersistence : inMemoryPersistence;\n  }, []);\n\n  const sdk = useMemo(\n    () => initializeAuth(app, { persistence }),\n    [app, persistence]\n  );\n  const shouldConnectEmulator = useEmulator && !('emulator' in sdk.config);\n\n  const onAuthStateChanged = useCallback(\n    async (user: User | null) => {\n      if (user) {\n        const session: UserSession = {\n          auth: {\n            ...user,\n            customClaims: {},\n            disabled: userSession?.auth?.disabled ?? false,\n            multiFactor: userSession?.auth?.multiFactor ?? [],\n          },\n          data: userSession?.data,\n        };\n\n        userRef.current = user;\n\n        return setUserSession(session);\n      }\n\n      // if the user is no longer defined and user was originally signed-in\n      // (because userSession?.auth is defined) then we need to clear the\n      // session cookie\n      if (userRef.current) {\n        try {\n          // we need to delete the session cookie used for SSR\n          signOut();\n        } finally {\n          setUserSession(undefined);\n          userRef.current = undefined;\n        }\n      }\n    },\n    [\n      setUserSession,\n      signOut,\n      userSession?.auth?.disabled,\n      userSession?.auth?.multiFactor,\n      userSession?.data,\n    ]\n  );\n\n  useEffect(() => {\n    if (shouldConnectEmulator) {\n      const host = getAuthEmulatorHost();\n\n      connectAuthEmulator(sdk, host);\n    }\n  }, [sdk, shouldConnectEmulator]);\n\n  return (\n    <AuthProvider sdk={sdk}>\n      <FirebaseAuthStateListener onAuthStateChange={onAuthStateChanged}>\n        {children}\n      </FirebaseAuthStateListener>\n    </AuthProvider>\n  );\n}\n\nfunction getAuthEmulatorHost() {\n  const host = 'localhost';\n  const port = 9099;\n\n  return ['http://', host, ':', port].join('');\n}\n", "import { useFetcher } from '@remix-run/react';\nimport { useCallback } from 'react';\n\nfunction useDestroySession() {\n  const fetcher = useFetcher();\n\n  return useCallback(() => {\n    fetcher.submit(\n      {},\n      {\n        method: 'post',\n        action: '/auth/sign-out',\n      }\n    );\n\n    return fetcher;\n  }, [fetcher]);\n}\n\nexport default useDestroySession;\n", "import getEnv from '~/core/get-env';\n\nconst env = getEnv();\n\nconst firebaseConfig = {\n  apiKey: env.FIREBASE_API_KEY,\n  authDomain: env.FIREBASE_AUTH_DOMAIN,\n  projectId: env.FIREBASE_PROJECT_ID,\n  storageBucket: env.FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: env.FIREBASE_MESSAGING_SENDER_ID,\n  appId: env.FIREBASE_APP_ID,\n  measurementId: env.FIREBASE_MEASUREMENT_ID,\n  emulator: env.EMULATOR === 'true',\n};\n\nexport default firebaseConfig;\n", "enum HttpStatusCode {\n  Ok = 200,\n  MovedPermanently = 301,\n  MovedTemporarily = 302,\n  SeeOther = 303,\n  BadRequest = 400,\n  Unauthorized = 401,\n  Forbidden = 403,\n  NotFound = 404,\n  MethodNotAllowed = 405,\n  InternalServerError = 500,\n}\n\nexport default HttpStatusCode;\n", "import { useCallback, useState } from 'react';\nimport type { ActionArgs, LoaderArgs, MetaFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { useLoaderData, useNavigate } from '@remix-run/react';\nimport { z } from 'zod';\nimport { Trans } from 'react-i18next';\n\nimport Logo from '~/core/ui/Logo';\nimport If from '~/core/ui/If';\nimport Alert from '~/core/ui/Alert';\nimport Button from '~/core/ui/Button';\nimport { throwBadRequestException } from '~/core/http-exceptions';\n\nimport type { OrganizationInfoStepData } from '~/components/onboarding/OrganizationInfoStep';\nimport OrganizationInfoStep from '~/components/onboarding/OrganizationInfoStep';\nimport OnboardingIllustration from '~/components/onboarding/OnboardingIllustration';\nimport CompleteOnboardingStep from '~/components/onboarding/CompleteOnboardingStep';\n\nimport getCurrentOrganization from '~/lib/server/organizations/get-current-organization';\nimport completeOnboarding from '~/lib/server/onboarding/complete-onboarding';\nimport { serializeOrganizationIdCookie } from '~/lib/server/cookies/organization.cookie';\nimport { parseSessionIdCookie } from '~/lib/server/cookies/session.cookie';\n\nimport getLoggedInUser from '~/core/firebase/admin/auth/get-logged-in-user';\nimport FirebaseAppShell from '~/core/firebase/components/FirebaseAppShell';\nimport FirebaseAuthProvider from '~/core/firebase/components/FirebaseAuthProvider';\nimport getUserInfoById from '~/core/firebase/admin/auth/get-user-info-by-id';\n\nimport withMethodsGuard from '~/core/middleware/with-methods-guard';\nimport UserSessionContext from '~/core/session/contexts/user-session';\nimport type UserSession from '~/core/session/types/user-session';\n\nimport firebaseConfig from '../../firebase.config';\nimport configuration from '~/configuration';\n\ninterface Data {\n  organization: string;\n}\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: `Onboarding - ${configuration.site.siteName}`,\n  };\n};\n\nconst Onboarding = () => {\n  const data = useLoaderData() as UserSession;\n\n  const [currentStep, setCurrentStep] = useState(0);\n  const [userSession, setUserSession] = useState<Maybe<UserSession>>(data);\n  const [formData, setFormData] = useState<Data>();\n\n  const onFirstStepSubmitted = useCallback(\n    (organizationInfo: OrganizationInfoStepData) => {\n      setFormData({\n        organization: organizationInfo.organization,\n      });\n\n      setCurrentStep(1);\n    },\n    []\n  );\n\n  return (\n    <FirebaseAppShell config={firebaseConfig}>\n      <FirebaseAuthProvider\n        useEmulator={firebaseConfig.emulator}\n        userSession={userSession}\n        setUserSession={setUserSession}\n      >\n        <UserSessionContext.Provider value={{ userSession, setUserSession }}>\n          <div className={'flex flex-1 flex-col dark:bg-black-500'}>\n            <div\n              className={'flex divide-x divide-gray-100 dark:divide-black-300'}\n            >\n              <div\n                className={\n                  'flex h-screen flex-1 flex-col items-center justify-center' +\n                  ' w-full lg:w-6/12'\n                }\n              >\n                <div className={'absolute top-24 flex'}>\n                  <Logo href={'/onboarding'} />\n                </div>\n\n                <div className={'w-9/12'}>\n                  <If condition={currentStep === 0}>\n                    <OrganizationInfoStep onSubmit={onFirstStepSubmitted} />\n                  </If>\n\n                  <If condition={currentStep === 1 && formData}>\n                    {(formData) => <CompleteOnboardingStep data={formData} />}\n                  </If>\n                </div>\n              </div>\n\n              <div\n                className={\n                  'hidden w-6/12 flex-1 items-center bg-gray-50' +\n                  ' justify-center dark:bg-black-400 lg:flex'\n                }\n              >\n                <div>\n                  <OnboardingIllustration />\n                </div>\n              </div>\n            </div>\n          </div>\n        </UserSessionContext.Provider>\n      </FirebaseAuthProvider>\n    </FirebaseAppShell>\n  );\n};\n\nexport default Onboarding;\n\nexport function CatchBoundary() {\n  const navigate = useNavigate();\n\n  return (\n    <div\n      className={\n        'flex h-screen w-full flex-1 flex-col items-center justify-center'\n      }\n    >\n      <div className={'flex flex-col items-center space-y-8'}>\n        <div>\n          <Logo />\n        </div>\n\n        <Alert type={'error'}>\n          <Alert.Heading>\n            <Trans i18nKey={'common:genericServerError'} />\n          </Alert.Heading>\n\n          <Trans i18nKey={'common:genericServerErrorHeading'} />\n        </Alert>\n\n        <Button onClick={() => navigate('.')}>\n          <Trans i18nKey={'common:retry'} />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport async function action(args: ActionArgs) {\n  const req = args.request;\n  const formData = await req.formData();\n  const body = JSON.parse(formData.get('data') as string);\n  const parsedBody = await getBodySchema().safeParseAsync(body);\n\n  if (!parsedBody.success) {\n    return throwBadRequestException();\n  }\n\n  await withMethodsGuard(req, ['POST']);\n\n  const sessionId = await parseSessionIdCookie(req);\n  const user = await getLoggedInUser(sessionId);\n  const userId = user.uid;\n  const organizationName = parsedBody.data.organization;\n\n  const data = {\n    userId,\n    organizationName,\n  };\n\n  const organizationId = await completeOnboarding(data);\n\n  const headers = new Headers({\n    'Set-Cookie': await serializeOrganizationIdCookie(organizationId),\n  });\n\n  return redirect(configuration.paths.appHome, {\n    headers,\n  });\n}\n\nexport async function loader(args: LoaderArgs) {\n  const sessionId = await parseSessionIdCookie(args.request);\n  const user = await getLoggedInUser(sessionId).catch(() => undefined);\n\n  if (!user) {\n    throw redirectToSignIn();\n  }\n\n  const userId = user.uid;\n\n  const [userInfo, userData] = await Promise.all([\n    getUserInfoById(userId),\n    getUserData(userId),\n  ]);\n\n  // if we cannot find the user's Firestore record\n  // the user should go to the onboarding flow\n  // so that the record wil be created after the end of the flow\n  if (!userData) {\n    const response: UserSession = {\n      auth: userInfo || undefined,\n      data: userData,\n    };\n\n    return json(response);\n  }\n\n  const organization = await getCurrentOrganization(user.uid);\n  const onboarded = userInfo?.customClaims?.onboarded;\n\n  // there are two cases when we redirect the user to the onboarding\n  // 1. if they have not been onboarded yet\n  // 2. if they end up with 0 organizations (for example, if they get removed)\n  //\n  // NB: you should remove this if you want to\n  // allow organization-less users within the application\n  if (onboarded && organization) {\n    throw redirectToAppHome();\n  }\n\n  const response: UserSession = {\n    auth: userInfo || undefined,\n    data: userData,\n  };\n\n  return json(response);\n}\n\nfunction redirectToSignIn() {\n  return redirect(configuration.paths.signIn);\n}\n\nfunction redirectToAppHome() {\n  return redirect(configuration.paths.appHome);\n}\n\n/**\n * @name getUserData\n * @description Fetch User Firestore data decorated with its ID field\n * @param userId\n */\nasync function getUserData(userId: string) {\n  const { getUserRefById } = await import('~/lib/server/queries');\n\n  const ref = await getUserRefById(userId);\n  const data = ref.data();\n\n  if (data) {\n    return {\n      ...data,\n      id: ref.id,\n    };\n  }\n}\n\nfunction getBodySchema() {\n  return z.object({\n    organization: z.string(),\n  });\n}\n", "import HttpStatusCode from '~/core/generic/http-status-code.enum';\n\nexport const throwInternalServerErrorException = buildException(\n  HttpStatusCode.InternalServerError\n);\n\nexport const throwBadRequestException = buildException(\n  HttpStatusCode.BadRequest\n);\n\nexport const throwNotFoundException = buildException(HttpStatusCode.NotFound);\n\nexport const throwMethodNotAllowedException = function methodNotAllowed(\n  allowedMethodsList: string[],\n  methodNotAllowed?: string | undefined\n) {\n  const errorMessage = `Method ${\n    methodNotAllowed ?? '[unknown]'\n  } is not allowed. Please use one of the following methods: ${allowedMethodsList.join(\n    ', '\n  )}`;\n\n  throw new Response(errorMessage, {\n    status: HttpStatusCode.MethodNotAllowed,\n  });\n};\n\nexport const throwUnauthorizedException = buildException(\n  HttpStatusCode.Unauthorized\n);\n\nexport const throwForbiddenException = buildException(HttpStatusCode.Forbidden);\n\nfunction buildException(statusCode: HttpStatusCode) {\n  return (message?: string) => {\n    throw new Response(message ?? `Unknown Error`, {\n      status: statusCode,\n    });\n  };\n}\n", "import type { FormEvent } from 'react';\nimport { useCallback } from 'react';\nimport { ArrowRightIcon } from '@heroicons/react/24/outline';\n\nimport Heading from '~/core/ui/Heading';\nimport Button from '~/core/ui/Button';\nimport TextField from '~/core/ui/TextField';\nimport SubHeading from '~/core/ui/SubHeading';\nimport useUserSession from '~/core/hooks/use-user-session';\n\nexport interface OrganizationInfoStepData {\n  organization: string;\n}\n\nconst OrganizationInfoStep: React.FCC<{\n  onSubmit: (data: OrganizationInfoStepData) => void;\n}> = ({ onSubmit }) => {\n  const user = useUserSession();\n  const displayName = user?.auth?.displayName ?? user?.auth?.email ?? '';\n\n  const handleFormSubmit = useCallback(\n    (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n\n      const data = new FormData(event.currentTarget);\n      const organization = data.get(`organization`) as string;\n\n      onSubmit({\n        organization,\n      });\n    },\n    [onSubmit]\n  );\n\n  return (\n    <form\n      onSubmit={handleFormSubmit}\n      className={'flex w-full flex-1 flex-col space-y-6'}\n    >\n      <div className={'flex flex-col space-y-1.5'}>\n        <Heading type={2}>Hi, {displayName}!</Heading>\n        <SubHeading>Let&apos;s create your organization.</SubHeading>\n      </div>\n\n      <div className={'flex flex-1 flex-col space-y-2'}>\n        <TextField>\n          <TextField.Label>\n            Your organization&apos;s name\n            <TextField.Input\n              required\n              name={'organization'}\n              placeholder={'Organization Name'}\n            />\n          </TextField.Label>\n        </TextField>\n\n        <div>\n          <Button type={'submit'}>\n            <span className={'flex items-center space-x-2'}>\n              <span>Continue</span>\n              <ArrowRightIcon className={'h-5'} />\n            </span>\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default OrganizationInfoStep;\n", "import type { LegacyRef, RefObject } from 'react';\n\nimport React, {\n  createRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\n\nimport classNames from 'classnames';\nimport { Transition } from '@headlessui/react';\nimport XMarkIcon from '@heroicons/react/24/outline/XMarkIcon';\n\nimport Label from './Label';\nimport If from '~/core/ui/If';\nimport IconButton from '~/core/ui/IconButton';\n\ntype Props = React.InputHTMLAttributes<unknown> & {\n  innerRef?: RefObject<HTMLInputElement> | LegacyRef<HTMLInputElement>;\n  useResetButton?: boolean;\n  onClear?: EmptyCallback;\n  onValueChange?: (value: string | number | readonly string[]) => void;\n};\n\nconst Hint: React.FC<React.PropsWithChildren> = ({ children }) => {\n  return <span className={`TextFieldHint`}>{children}</span>;\n};\n\nconst Input: React.FC<Props> = ({\n  className,\n  innerRef,\n  children,\n  useResetButton,\n  onClear,\n  defaultValue,\n  onValueChange,\n  ...props\n}) => {\n  const ref = innerRef ?? createRef<HTMLInputElement>();\n  const currentValue = props.value ?? '';\n  const [value, setValue] = useState(currentValue);\n\n  const onReset = useCallback(() => {\n    if (ref) {\n      setValue('');\n\n      if (onClear) {\n        onClear();\n      }\n    }\n  }, [onClear, ref]);\n\n  const shouldShowResetButton = useMemo(() => {\n    return Boolean(useResetButton && value);\n  }, [value, useResetButton]);\n\n  const onChange: React.FormEventHandler<HTMLInputElement> = useCallback(\n    (event) => {\n      if (props.onChange) {\n        props.onChange(event);\n      }\n\n      const nextValue = event.currentTarget.value ?? '';\n\n      if (onValueChange) {\n        onValueChange(nextValue);\n      }\n\n      setValue(nextValue);\n    },\n    [onValueChange, props]\n  );\n\n  useEffect(() => {\n    setValue(currentValue);\n  }, [currentValue, onValueChange]);\n\n  return (\n    <div\n      className={classNames(`TextFieldInputContainer`, className, {\n        [`TextFieldInputContainerDisabled`]: props.disabled,\n      })}\n    >\n      <If condition={children}>\n        <span className={'flex pl-2.5'}>{children}</span>\n      </If>\n\n      <input\n        value={innerRef ? undefined : value}\n        defaultValue={defaultValue}\n        className={`TextFieldInput flex-1 ${className ?? ''}`}\n        {...props}\n        ref={ref}\n        onChange={onChange}\n      />\n\n      <If condition={shouldShowResetButton}>\n        <div className={'flex pr-2.5'}>\n          <IconButton type={'button'} onClick={onReset}>\n            <XMarkIcon className={'h-5'} />\n          </IconButton>\n        </div>\n      </If>\n    </div>\n  );\n};\n\ntype TextFieldComponent = React.FC<\n  React.PropsWithChildren<{\n    className?: string;\n  }>\n> & {\n  Label: typeof Label;\n  Hint: typeof Hint;\n  Input: typeof Input;\n  Error: typeof ErrorMessage;\n};\n\nconst TextField: TextFieldComponent = ({ children, className }) => {\n  return <div className={`TextField ${className ?? ''}`}>{children}</div>;\n};\n\nconst ErrorMessage: React.FC<\n  { error: Maybe<string> } & React.HTMLAttributes<unknown>\n> = ({ error, ...props }) => {\n  const shouldDisplay = !!error;\n\n  return (\n    <Transition\n      show={shouldDisplay}\n      appear={shouldDisplay}\n      enter=\"ease-out duration-200\"\n      enterFrom=\"opacity-0\"\n      enterTo=\"opacity-100\"\n      leave=\"ease-in duration-50\"\n      leaveFrom=\"opacity-100\"\n      leaveTo=\"opacity-0\"\n    >\n      <Hint>\n        <span {...props} className={'py-0.5 text-red-700 dark:text-red-500'}>\n          {error}\n        </span>\n      </Hint>\n    </Transition>\n  );\n};\n\nTextField.Hint = Hint;\nTextField.Label = Label;\nTextField.Input = Input;\nTextField.Error = ErrorMessage;\n\nexport default TextField;\n", "function OnboardingIllustration() {\n  return (\n    <svg\n      data-name=\"Layer 1\"\n      width=\"790\"\n      height=\"701.99219\"\n      viewBox=\"0 0 790 701.99219\"\n    >\n      <path transform=\"translate(-205 -99.00391)\" fill=\"#e6e6e6\" />\n\n      <path\n        d=\"M862.36664,222.11816c-.01538,0-.0296.0044-.045.00489v-87.4292a35.69,35.69,0,0,0-35.69-35.68994h-273.72a35.69,35.69,0,0,0-35.69,35.68994v44.8208a2.89173,2.89173,0,0,0-2.83008,2.88867v22.2002a2.891,2.891,0,0,0,2.83008,2.88818v23.25684h-.14508a2.89485,2.89485,0,0,0-2.895,2.895v42.92969a2.89486,2.89486,0,0,0,2.895,2.895h.14508v17.05029h-.04511a2.89485,2.89485,0,0,0-2.89495,2.895v43.34961a2.89485,2.89485,0,0,0,2.89495,2.895h.04511V764.68408a35.69,35.69,0,0,0,35.69,35.68994h273.72a35.69,35.69,0,0,0,35.69-35.68994V307.13379c.01538,0,.0296.00439.045.00439a5.15473,5.15473,0,0,0,5.155-5.15478v-74.71A5.15515,5.15515,0,0,0,862.36664,222.11816Z\"\n        transform=\"translate(-205 -99.00391)\"\n        className={'fill-primary-500'}\n      />\n      <path\n        d=\"M841.01166,144.684v610a27.41,27.41,0,0,1-27.41,27.4h-247.66a27.41,27.41,0,0,1-27.41-27.4v-610a27.41,27.41,0,0,1,27.41-27.41h37.06v4.81a22.58,22.58,0,0,0,22.57,22.57h126a22.57,22.57,0,0,0,22.52-22.57v-4.76h39.51A27.41,27.41,0,0,1,841.01166,144.684Z\"\n        transform=\"translate(-205 -99.00391)\"\n        className={'fill-white dark:fill-black-100'}\n      />\n      <path\n        d=\"M439.411,441.28564a10.74274,10.74274,0,0,0-14.42255,7.9585l-88.25427,47.98779,15.51715,17.46436,81.96-52.59912a10.80091,10.80091,0,0,0,5.19971-20.81153Z\"\n        transform=\"translate(-205 -99.00391)\"\n        className={'fill-primary-500'}\n      />\n      <polygon\n        points=\"211.903 687.551 222.9 680.438 200.697 634.635 184.466 645.133 211.903 687.551\"\n        className={'fill-primary-500'}\n      />\n      <path\n        d=\"M413.53251,772.48423h41.16277a0,0,0,0,1,0,0V788.388a0,0,0,0,1,0,0H428.84164a15.30912,15.30912,0,0,1-15.30912-15.30912v-.59467a0,0,0,0,1,0,0Z\"\n        transform=\"translate(1017.48743 1100.95886) rotate(147.10411)\"\n        fill=\"#2f2e41\"\n      />\n      <polygon\n        points=\"88.511 689.206 101.608 689.206 107.841 638.688 88.511 638.688 88.511 689.206\"\n        className={'fill-primary-500'}\n      />\n      <path\n        d=\"M290.7046,784.46734h41.16277a0,0,0,0,1,0,0v15.9038a0,0,0,0,1,0,0H306.01373A15.30912,15.30912,0,0,1,290.7046,785.062v-.59467A0,0,0,0,1,290.7046,784.46734Z\"\n        transform=\"translate(417.57198 1485.83458) rotate(-180)\"\n        fill=\"#2f2e41\"\n      />\n      <path\n        d=\"M594,197.99609H567a2.5,2.5,0,0,1,0-5h27a2.5,2.5,0,0,1,0,5Z\"\n        transform=\"translate(-205 -99.00391)\"\n        className={'fill-[#3f3d56] dark:fill-white'}\n      />\n      <path\n        d=\"M594,204.99609H567a2.5,2.5,0,0,1,0-5h27a2.5,2.5,0,0,1,0,5Z\"\n        transform=\"translate(-205 -99.00391)\"\n        className={'fill-[#3f3d56] dark:fill-white'}\n      />\n      <path\n        d=\"M594,211.99609H567a2.5,2.5,0,0,1,0-5h27a2.5,2.5,0,0,1,0,5Z\"\n        transform=\"translate(-205 -99.00391)\"\n        className={'fill-[#3f3d56] dark:fill-white'}\n      />\n      <path\n        d=\"M803.29156,205.04605h-.91l-.35-.29a7.61019,7.61019,0,0,0,1.78-4.89,7.44,7.44,0,1,0-7.4,7.48,7.73,7.73,0,0,0,4.88-1.78l.34.29v.92l5.74,5.75,1.72-1.72Zm-6.88,0a5.18,5.18,0,1,1,5.15992-5.2l.00006.02a5.15,5.15,0,0,1-5.11994,5.17992c-.0133.00008-.02667.00011-.04.00008Z\"\n        transform=\"translate(-205 -99.00391)\"\n        className={'fill-[#3f3d56] dark:fill-white'}\n      />\n      <path\n        d=\"M649.00537,289.99609H600.5a11,11,0,0,1,0-22h48.50537a11,11,0,0,1,0,22Z\"\n        transform=\"translate(-205 -99.00391)\"\n        className={'fill-primary-500'}\n      />\n      <path\n        d=\"M797.5,313.99609h-202a6,6,0,0,1,0-12h202a6,6,0,0,1,0,12Z\"\n        transform=\"translate(-205 -99.00391)\"\n        fill=\"#e6e6e6\"\n      />\n      <path\n        d=\"M669.7002,337.99609H595.5a6,6,0,0,1,0-12h74.2002a6,6,0,0,1,0,12Z\"\n        transform=\"translate(-205 -99.00391)\"\n        fill=\"#e6e6e6\"\n      />\n      <path\n        d=\"M649.00537,555.99609H600.5a11,11,0,0,1,0-22h48.50537a11,11,0,0,1,0,22Z\"\n        transform=\"translate(-205 -99.00391)\"\n        className={'fill-primary-500'}\n      />\n      <path\n        d=\"M797.5,579.99609h-202a6,6,0,0,1,0-12h202a6,6,0,0,1,0,12Z\"\n        transform=\"translate(-205 -99.00391)\"\n        fill=\"#e6e6e6\"\n      />\n      <path\n        d=\"M669.7002,603.99609H595.5a6,6,0,0,1,0-12h74.2002a6,6,0,0,1,0,12Z\"\n        transform=\"translate(-205 -99.00391)\"\n        fill=\"#e6e6e6\"\n      />\n      <path\n        d=\"M649.00537,678.99609H600.5a11,11,0,0,1,0-22h48.50537a11,11,0,0,1,0,22Z\"\n        transform=\"translate(-205 -99.00391)\"\n        className={'fill-primary-500'}\n      />\n      <path\n        d=\"M797.5,702.99609h-202a6,6,0,0,1,0-12h202a6,6,0,0,1,0,12Z\"\n        transform=\"translate(-205 -99.00391)\"\n        fill=\"#e6e6e6\"\n      />\n      <path\n        d=\"M669.7002,726.99609H595.5a6,6,0,0,1,0-12h74.2002a6,6,0,0,1,0,12Z\"\n        transform=\"translate(-205 -99.00391)\"\n        fill=\"#e6e6e6\"\n      />\n      <path\n        d=\"M826,493.49609H440a8.50981,8.50981,0,0,1-8.5-8.5v-105a8.50951,8.50951,0,0,1,8.5-8.5H826a8.50982,8.50982,0,0,1,8.5,8.5v105A8.51013,8.51013,0,0,1,826,493.49609Z\"\n        transform=\"translate(-205 -99.00391)\"\n        className={'fill-primary-500'}\n      />\n      <path\n        d=\"M301.23159,618.41614c3.69,25.89-15.85,140.59-13.68,140.57995l28.06-.15c1-1.92,13.88-63.81,17.92-73.74,5.64-13.78,11.33-27.73,13.55-42.45,2.09-13.82,1.06-27.9-.3-41.81a2.64,2.64,0,0,0-3.06-3l-37.65-1.94c-7.76-.4-9.6-2.1-8.42,5.52C298.47158,607.11615,300.41158,612.65613,301.23159,618.41614Z\"\n        transform=\"translate(-205 -99.00391)\"\n        fill=\"#2f2e41\"\n      />\n      <path\n        d=\"M308.63158,555.46616c-7.65,11-15.67,23.66-13.13,36.83,1.93,10,9.55,17.75,16.74,25,28.74,28.86,85.41,156.2,85.41,156.2,27.3484-17.50006-.6516.49994,27.1-18-2.46-.19-58.35-201.1-62.98-201.37C343.04159,552.88614,326.88158,551.05615,308.63158,555.46616Z\"\n        transform=\"translate(-205 -99.00391)\"\n        fill=\"#2f2e41\"\n      />\n      <path\n        d=\"M338.8901,450.76705c-3.88566-3.46527-31.19235-14.1516-31.19235-14.1516a4.68431,4.68431,0,0,0-1.5087.04526c-1.554.39225-2.26305,2.32338-1.93113,3.88489s-2.39129,27.22447-3.09283,38.89426c-1.22959,20.36744,10.76456,66.50345,10.659,67.91408a21.0765,21.0765,0,0,1-6.20829,13.29164c.93413,1.15954,60.265,3.48511,64.30074,4.858.81469-1.03345-4.594-74.2129-4.84293-78.34672C364.65868,480.88067,344.01966,455.51947,338.8901,450.76705Z\"\n        transform=\"translate(-205 -99.00391)\"\n        fill=\"#e6e6e6\"\n      />\n      <path\n        d=\"M296.57277,609.55457a10.74272,10.74272,0,0,0,3.84156-16.01843l25.033-138.54005-23.36007-.30784-17.384,136.99816a10.80091,10.80091,0,0,0,11.86954,17.86816Z\"\n        transform=\"translate(-205 -99.00391)\"\n        className={'fill-primary-500'}\n      />\n      <path\n        d=\"M296.37159,465.27612a4.43008,4.43008,0,0,1-2.76-.72c-1.39-1.19,9.95-19.4,12.19-19.67,7.29-.84,14.79-1.12,21.86.85s13.72,6.45,16.88,13.08c1.32,2.76-8.25,16.65-12.6,14.61C326.73159,470.98615,303.23159,465.44614,296.37159,465.27612Z\"\n        transform=\"translate(-205 -99.00391)\"\n        fill=\"#e6e6e6\"\n      />\n      <circle\n        cx=\"117.102\"\n        cy=\"309.88012\"\n        r=\"26.2388\"\n        className={'fill-primary-500'}\n      />\n      <path\n        d=\"M296.32988,452.26749A21.92466,21.92466,0,0,0,319.41549,423.542c-1.04421-3.13933-2.78963-6.01687-3.74586-9.1841s-.98231-6.91217,1.13861-9.45136c4.14967-4.968,12.14792-1.84307,18.54524-2.83076,6.81664-1.05242,12.04628-7.59224,12.59177-14.46805s-3.03837-13.68-8.37342-18.05169-12.21571-6.5243-19.08006-7.19875a51.59436,51.59436,0,0,0-52.95464,70.4952c2.86787,7.17557,7.55225,13.85879,14.20586,17.78854s15.44129,4.68471,22.07272.71765\"\n        transform=\"translate(-205 -99.00391)\"\n        fill=\"#2f2e41\"\n      />\n      <path\n        d=\"M577.277,419.49609h-67.0539c-4.25851,0-7.723-4.93457-7.723-11s3.46454-11,7.72305-11H577.277c4.25851,0,7.723,4.93457,7.723,11S581.53546,419.49609,577.277,419.49609Z\"\n        transform=\"translate(-205 -99.00391)\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M757.5,443.49609h-249a6,6,0,0,1,0-12h249a6,6,0,0,1,0,12Z\"\n        transform=\"translate(-205 -99.00391)\"\n        fill=\"#e6e6e6\"\n      />\n      <path\n        d=\"M629.7002,467.49609H508.5a6,6,0,0,1,0-12H629.7002a6,6,0,0,1,0,12Z\"\n        transform=\"translate(-205 -99.00391)\"\n        fill=\"#e6e6e6\"\n      />\n    </svg>\n  );\n}\n\nexport default OnboardingIllustration;\n", "import { useCallback, useEffect, useRef } from 'react';\nimport { useSubmit } from '@remix-run/react';\nimport { SpringSpinner } from 'react-epic-spinners';\ninterface CompleteOnboardingStepData {\n  organization: string;\n}\n\nconst CompleteOnboardingStep: React.FC<{\n  data: CompleteOnboardingStepData;\n}> = ({ data }) => {\n  const submit = useSubmit();\n  const onboardingCompleteRequested = useRef(false);\n\n  const callRequestCallback = useCallback(() => {\n    return submit(\n      { data: JSON.stringify(data) },\n      {\n        action: '/onboarding?index',\n        method: 'post',\n      }\n    );\n  }, [submit, data]);\n\n  useEffect(() => {\n    // React will run the effect twice\n    // so we use the ref to prevent it\n    if (!onboardingCompleteRequested.current) {\n      onboardingCompleteRequested.current = true;\n      void callRequestCallback();\n    }\n  }, [callRequestCallback]);\n\n  return (\n    <div className={'flex flex-1 flex-col items-center space-y-8'}>\n      <span>\n        <SpringSpinner size={52} color={'currentColor'} />\n      </span>\n\n      <span>Getting Started. Please wait...</span>\n    </div>\n  );\n};\n\nexport default CompleteOnboardingStep;\n", "import { getOrganizationById } from '../queries';\nimport type Organization from '~/lib/organizations/types/organization';\nimport { getOrganizationsCollection } from '~/lib/server/collections';\n\n/**\n * @name getCurrentOrganization\n * @description Fetch the selected organization (or the first one in the list)\n */\nexport default async function getCurrentOrganization(\n  userId: string,\n  organizationId?: Maybe<string>\n) {\n  return getOrganizationByIdOrFirst(userId, organizationId);\n}\n\n/**\n * @name getOrganizationByIdOrFirst\n * @description Given a user ID {@link userId}, this function will return\n * either:\n *\n * 1. The organizationId passed as first parameter, if passed\n * 2. Or, in case of errors, the first organization found the user belongs to as\n * fallback\n *\n * @param organizationId\n * @param userId\n */\nasync function getOrganizationByIdOrFirst(\n  userId: string,\n  organizationId?: Maybe<string>\n) {\n  // if the organization ID was passed from the cookie, we try read that\n  if (organizationId) {\n    const organization = await getOrganizationData(organizationId);\n\n    // check the user ID belongs to the organization members\n    const userBelongsToOrganization = userId in (organization?.members ?? {});\n\n    // if the user doesn't have permissions to access\n    // the organization, we simply return the first one\n    if (userBelongsToOrganization) {\n      return organization;\n    }\n  }\n\n  // if the organization ID was not passed\n  // or if somehow the user lacked the permissions\n  // we simply return the first organization they belong to\n  return getFirstOrganization(userId);\n}\n\n/**\n * @name getFirstOrganization\n * @description Get the first organization in the user's record\n */\nasync function getFirstOrganization(userId: string) {\n  try {\n    const organizations = await getOrganizationsByUserId(userId).limit(1).get();\n    const doc = organizations.docs[0];\n\n    return serializeOrganizationData(doc.data(), doc.id);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * @name getOrganizationData\n * @param organizationId\n */\nasync function getOrganizationData(organizationId: string) {\n  const organization = await getOrganizationById(organizationId);\n  const data = organization.data();\n\n  return data ? serializeOrganizationData(data, organizationId) : undefined;\n}\n\nfunction serializeOrganizationData(organization: Organization, id: string) {\n  const members = Object.keys(organization.members).reduce((acc, userId) => {\n    const member = organization.members[userId];\n\n    const item = {\n      role: member.role,\n      user: member.user.id,\n    };\n\n    return {\n      ...acc,\n      [userId]: item,\n    };\n  }, {});\n\n  return {\n    ...organization,\n    members,\n    id,\n  };\n}\n\n/**\n * @name getOrganizationsByUserId\n * @description Get all the organizations where the user {@link userId} is a member\n * @param userId\n */\nfunction getOrganizationsByUserId(userId: string) {\n  const organizations = getOrganizationsCollection();\n  const path = `members.${userId}`;\n\n  return organizations.where(path, '!=', null);\n}\n", "import { getFirestore } from 'firebase-admin/firestore';\nimport { getAuth } from 'firebase-admin/auth';\n\nimport MembershipRole from '~/lib/organizations/types/membership-role';\nimport GlobalRole from '~/core/session/types/global-role';\n\nimport { getOrganizationsCollection, getUsersCollection } from '../collections';\n\ninterface Params {\n  organizationName: string;\n  userId: string;\n}\n\n/**\n * @name completeOnboarding\n * @description Handles the submission of the onboarding flow. By default,\n * we use the submission to create the Organization and the user record\n * associated with the User who signed up using its ID\n * @param userId\n * @param organizationName\n */\nasync function completeOnboarding({ userId, organizationName }: Params) {\n  const firestore = getFirestore();\n  const auth = getAuth();\n\n  const batch = firestore.batch();\n\n  const organizationRef = getOrganizationsCollection().doc();\n  const userRef = getUsersCollection().doc(userId);\n\n  const organizationMembers = {\n    [userId]: {\n      user: userRef,\n      role: MembershipRole.Owner,\n    },\n  };\n\n  // create organization\n  batch.create(organizationRef, {\n    name: organizationName,\n    members: organizationMembers,\n  });\n\n  // create user\n  batch.set(userRef, {\n    role: GlobalRole.User,\n  });\n\n  await batch.commit();\n\n  // we can set the user as \"onboarded\" using the custom claims\n  // it helps with not having to query Firestore for each request\n  await auth.setCustomUserClaims(userId, {\n    onboarded: true,\n  });\n\n  return organizationRef.id;\n}\n\nexport default completeOnboarding;\n", "/**\n * @name GlobalRole\n * @description Use this enum to differentiate between a normal user and one\n * with advanced access (such as your own account)\n */\nenum GlobalRole {\n  User,\n  SuperAdmin,\n}\n\nexport default GlobalRole;\n", "import getCookieHeader from '~/core/generic/get-cookie-header';\n\nconst ORGANIZATION_ID_COOKIE_NAME = 'organizationId';\n\nexport async function getOrganizationCookie() {\n  const { createCookie } = await import('@remix-run/node');\n  const secure = process.env.EMULATOR !== 'true';\n\n  return createCookie(ORGANIZATION_ID_COOKIE_NAME, {\n    httpOnly: false,\n    secure,\n    path: '/',\n    sameSite: 'lax' as const,\n  });\n}\n\nexport async function parseOrganizationIdCookie(request: Request) {\n  const cookie = await getOrganizationCookie();\n\n  return cookie.parse(getCookieHeader(request));\n}\n\nexport async function serializeOrganizationIdCookie(organizationId: string) {\n  const cookie = await getOrganizationCookie();\n\n  return cookie.serialize(organizationId);\n}\n", "/**\n * @name createFirebaseSessionCookie\n * @description Given an ID Token sent by the Client SDK, create and return\n * a session cookie using Firebase Auth. The session cookie gets stored and\n * will be used for authenticating users server-side for SSR and API functions.\n * @param idToken\n * @param expiresIn\n */\nexport async function createFirebaseSessionCookie(\n  idToken: string,\n  expiresIn: number\n) {\n  const { getAuth } = await import('firebase-admin/auth');\n  const auth = getAuth();\n\n  // create a session cookie using Firebase Auth by passing\n  // to it the idToken returned by the client-side SDK\n  return auth.createSessionCookie(idToken, {\n    expiresIn,\n  });\n}\n\n/**\n *\n * @param days the number of days to keep the session-cookie working. By default, it is 14 days\n * @returns number\n */\nexport function getSessionCookieTTL(days = 14) {\n  const oneDayToMs = 8.64e7;\n\n  return oneDayToMs * days;\n}\n", "import type { Logger } from 'pino';\nimport pino from 'pino';\n\nlet logger: Logger;\n\nfunction getLogger() {\n  if (logger) {\n    return logger;\n  }\n\n  const isDev = process.env.NODE_ENV !== 'production';\n\n  if (isDev) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const pretty = require('pino-pretty');\n\n    logger = pino(\n      {},\n      pretty({\n        colorize: true,\n      })\n    );\n  } else {\n    logger = pino({\n      browser: {},\n      level: 'debug',\n      base: {\n        env: process.env.NODE_ENV,\n      },\n    });\n  }\n\n  return logger;\n}\n\nexport default getLogger;\n", "import { getSessionCookieTTL } from '~/lib/server/auth/save-session-cookie';\nimport getCookieHeader from '~/core/generic/get-cookie-header';\nimport getLogger from '~/core/logger';\n\nconst SESSION_COOKIE_NAME = `session`;\n\nexport function getSessionIdCookie() {\n  return createSessionCookie(SESSION_COOKIE_NAME);\n}\n\nexport async function deleteSessionIdCookie() {\n  const cookie = await getSessionIdCookie();\n  return cookie.serialize('', { maxAge: -1 });\n}\n\nexport async function serializeSessionIdCookie(sessionId: string) {\n  const cookie = await getSessionIdCookie();\n  return cookie.serialize(sessionId);\n}\n\nexport async function parseSessionIdCookie(request: Request) {\n  const cookie = await getSessionIdCookie();\n  return cookie.parse(getCookieHeader(request));\n}\n\nasync function createSessionCookie(cookieName: string) {\n  const { createCookie } = await import('@remix-run/node');\n\n  // only save cookie with secure flag if we're not in dev mode\n  const secure = shouldUseSecureCookies();\n  const secret = process.env.SECRET_KEY;\n  const secrets = secret ? [secret] : [];\n\n  if (!secrets.length) {\n    getLogger().warn(\n      `Please set your \"SECRET_KEY\" environment variable to sign your cookies`\n    );\n  }\n\n  const options = {\n    maxAge: getSessionCookieTTL(),\n    httpOnly: true,\n    secure,\n    path: '/',\n    sameSite: 'lax' as const,\n    secrets,\n  };\n\n  // when the session-cookie gets created\n  // we store it as an httpOnly cookie (important!)\n  return createCookie(cookieName, options);\n}\n\n/**\n * @name shouldUseSecureCookies\n * @description Only save cookie with secure flag if we're not in dev mode\n */\nfunction shouldUseSecureCookies() {\n  return process.env.EMULATOR !== 'true';\n}\n", "/**\n * @description Get the logged in user object using the session cookie\n * @param session\n */\nexport default async function getLoggedInUser(session: Maybe<string>) {\n  if (!session) {\n    return Promise.reject(`Session ID not found`);\n  }\n\n  const { getUserFromSessionCookie } = await import(\n    './get-user-from-session-cookie'\n  );\n\n  return getUserFromSessionCookie(session);\n}\n", "import { getAuth } from 'firebase-admin/auth';\nimport getLogger from '~/core/logger';\nimport serializeAuthUser from '~/core/firebase/utils/serialize-auth-user';\n\n/**\n * @description Serializes safely the user object\n * @param userId\n */\nexport default async function getUserInfoById(userId: string) {\n  const auth = getAuth();\n  const logger = getLogger();\n\n  try {\n    const user = await auth.getUser(userId);\n\n    if (!user) {\n      return null;\n    }\n\n    return serializeAuthUser(user);\n  } catch (e) {\n    logger.warn(\n      {\n        userId,\n      },\n      `User was not found`\n    );\n\n    return;\n  }\n}\n", "import type { UserRecord } from 'firebase-admin/auth';\n\nfunction serializeAuthUser(user: UserRecord) {\n  return {\n    uid: user.uid,\n    email: getValue(user.email),\n    emailVerified: user.emailVerified,\n    displayName: getValue(user.displayName),\n    photoURL: getValue(user.photoURL),\n    phoneNumber: getValue(user.phoneNumber),\n    disabled: user.disabled,\n    customClaims: user.customClaims ?? {},\n    tenantId: getValue(user.tenantId),\n    providerData: user.providerData.map((item) => {\n      return JSON.parse(JSON.stringify(item.toJSON()));\n    }),\n    multiFactor: user.multiFactor\n      ? user.multiFactor.enrolledFactors.map((item) => {\n          return {\n            displayName: getValue(item.displayName),\n            uid: item.uid,\n            factorId: item.factorId,\n            enrollmentTime: getValue(item.enrollmentTime),\n          };\n        })\n      : null,\n  };\n}\n\nexport default serializeAuthUser;\n\n/**\n * @description Guards against undefined values\n * @param value\n */\nfunction getValue<T>(value: Maybe<T>) {\n  return value ?? null;\n}\n", "import { throwMethodNotAllowedException } from '~/core/http-exceptions';\n\n/**\n * @description guard an API endpoint against unsupported methods\n * It can be used as a middleware for your writing your API handlers. For\n * example, if you API only supports GET requests\n *\n * @param request\n * @param methods\n */\nfunction withMethodsGuard(request: Request, methods: HttpMethod[]) {\n  const method = request.method as HttpMethod;\n\n  if (!methods.includes(method)) {\n    throwMethodNotAllowedException(methods, method);\n  }\n}\n\nexport default withMethodsGuard;\n", "import type { ActionArgs } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport { z } from 'zod';\nimport { join } from 'path';\n\nimport getLogger from '~/core/logger';\nimport HttpStatusCode from '~/core/generic/http-status-code.enum';\nimport getApiRefererPath from '~/core/generic/get-api-referer-path';\nimport getLoggedInUser from '~/core/firebase/admin/auth/get-logged-in-user';\nimport withCsrf from '~/core/middleware/with-csrf';\n\nimport createStripeCheckout from '~/lib/stripe/create-checkout';\nimport { canChangeBilling } from '~/lib/organizations/permissions';\nimport { getUserRoleByOrganization } from '~/lib/server/organizations/memberships.server';\nimport { parseOrganizationIdCookie } from '~/lib/server/cookies/organization.cookie';\nimport { parseSessionIdCookie } from '~/lib/server/cookies/session.cookie';\n\nexport async function action(props: ActionArgs) {\n  const req = props.request;\n  const data = await req.formData();\n  const body = Object.fromEntries(data.entries());\n  const bodyResult = await getBodySchema().safeParseAsync(body);\n\n  const redirectToErrorPage = () => {\n    const referer = getApiRefererPath(req.headers);\n    const url = join(referer, `?error=true`);\n\n    return redirect(url);\n  };\n\n  if (!bodyResult.success) {\n    return redirectToErrorPage();\n  }\n\n  await withCsrf(req, bodyResult.data.csrfToken);\n\n  const sessionId = await parseSessionIdCookie(req);\n  const user = await getLoggedInUser(sessionId);\n  const userId = user.uid;\n  const currentOrganizationId = await parseOrganizationIdCookie(req);\n\n  if (!bodyResult.success) {\n    return redirectToErrorPage();\n  }\n\n  const { organizationId, priceId, customerId, returnUrl } = bodyResult.data;\n  const matchesSessionOrganizationId = currentOrganizationId === organizationId;\n\n  if (!matchesSessionOrganizationId) {\n    return redirectToErrorPage();\n  }\n\n  // check the user's role has access to the checkout\n  const canChangeBilling = await getUserCanAccessCheckout({\n    organizationId,\n    userId,\n  });\n\n  // disallow if the user doesn't have permissions to change\n  // billing settings based on its role. To change the logic, please update\n  // {@link canChangeBilling}\n  if (!canChangeBilling) {\n    getLogger().debug(\n      {\n        userId,\n        organizationId,\n      },\n      `User attempted to access checkout but lacked permissions`\n    );\n\n    return redirectToErrorPage();\n  }\n\n  try {\n    const { url } = await createStripeCheckout({\n      returnUrl,\n      organizationId,\n      priceId,\n      customerId,\n    });\n\n    const portalUrl = getCheckoutPortalUrl(url, returnUrl);\n\n    // redirect user back based on the response\n    return redirect(portalUrl, {\n      status: HttpStatusCode.SeeOther,\n    });\n  } catch (e) {\n    getLogger().error(e, `Stripe Checkout error`);\n\n    return redirectToErrorPage();\n  }\n}\n\nasync function getUserCanAccessCheckout(params: {\n  organizationId: string;\n  userId: string;\n}) {\n  try {\n    const userRole = await getUserRoleByOrganization(params);\n\n    if (userRole === undefined) {\n      return false;\n    }\n\n    return canChangeBilling(userRole);\n  } catch (e) {\n    getLogger().error(e, `Could not retrieve user role`);\n\n    return false;\n  }\n}\n\nfunction getBodySchema() {\n  return z.object({\n    csrfToken: z.string().min(1),\n    organizationId: z.string().min(1),\n    priceId: z.string().min(1),\n    customerId: z.string().optional(),\n    returnUrl: z.string().min(1),\n  });\n}\n\n/**\n *\n * @param portalUrl\n * @param returnUrl\n * @description return the URL of the Checkout Portal\n * if running in emulator mode and the portal URL is undefined (as\n * stripe-mock does) then return the returnUrl (i.e. it redirects back to\n * the subscriptions page)\n */\nfunction getCheckoutPortalUrl(portalUrl: string | null, returnUrl: string) {\n  if (isTestingMode() && !portalUrl) {\n    return [returnUrl, 'success=true'].join('?');\n  }\n\n  return portalUrl as string;\n}\n\n/**\n * @description detect if Stripe is running in emulator mode\n */\nfunction isTestingMode() {\n  const enableStripeTesting = process.env.ENABLE_STRIPE_TESTING;\n\n  return enableStripeTesting === 'true';\n}\n", "import { URL } from 'url';\n\n/**\n * @description get the path from which an API handler is being called,\n * without taking into account the hostname\n *\n * For example, if https://localhost:3000/my/page is calling an API handler, the\n * function with return /my/page. This is useful to redirect the user back from\n * where they came from, for example in case of errors.\n * @param headers\n * @param defaultPath\n */\nexport default function getApiRefererPath(headers: Headers, defaultPath = '/') {\n  const fullPath = headers.get('referer') || headers.get('origin');\n\n  if (!fullPath) {\n    return defaultPath;\n  }\n\n  const url = new URL(fullPath);\n\n  return url.pathname;\n}\n", "import Csrf from 'csrf';\nimport { throwUnauthorizedException } from '~/core/http-exceptions';\nimport { parseCsrfSecretCookie } from '~/lib/server/cookies/csrf-secret.cookie';\n\ntype TokenProvider = ((req: Request) => string | Falsy) | string | Falsy;\n\n/**\n * @name withCsrf\n * @description Add CSRF protection to an API endpoint\n * @param request\n * @param tokenProvider\n *\n */\nasync function withCsrf(\n  request: Request,\n  tokenProvider: TokenProvider = defaultTokenProvider\n) {\n  const csrf = new Csrf();\n  const secret = await parseCsrfSecretCookie(request);\n  const token = await evaluateTokenProvider(tokenProvider)(request);\n\n  // when signing programmatically (i.e. during tests)\n  // we should skip the validation of the token\n  if (isMockToken(token)) {\n    return;\n  }\n\n  if (!token) {\n    return throwUnauthorizedException(`CSRF token is invalid`);\n  }\n\n  if (!secret) {\n    return throwUnauthorizedException(`CSRF secret not found`);\n  }\n\n  if (!csrf.verify(secret, token)) {\n    return throwUnauthorizedException(`CSRF check failed`);\n  }\n}\n\nfunction defaultTokenProvider(req: Request) {\n  return req.headers.get('x-csrf-token');\n}\n\nfunction isTestEnv() {\n  return process.env.NODE_ENV === 'test';\n}\n\nfunction isMockToken(token: string | Falsy) {\n  return isTestEnv() && token === 'MOCKCSRFTOKEN';\n}\n\nfunction evaluateTokenProvider(tokenProvider: TokenProvider) {\n  return (request: Request) => {\n    if (typeof tokenProvider === 'string') {\n      return tokenProvider;\n    } else if (typeof tokenProvider === 'function') {\n      return tokenProvider(request);\n    }\n  };\n}\n\nexport default withCsrf;\n", "import getCookieHeader from '~/core/generic/get-cookie-header';\nimport getLogger from '~/core/logger';\n\nconst CSRF_SECRET_COOKIE_NAME = 'csrfSecret';\n\nasync function getCsrfSecretCookie() {\n  const { createCookie } = await import('@remix-run/node');\n\n  const secret = process.env.SECRET_KEY;\n  const secrets = secret ? [secret] : [];\n\n  if (!secrets.length) {\n    getLogger().warn(\n      `Please set your \"SECRET_KEY\" environment variable to sign your cookies`\n    );\n  }\n\n  return createCookie(CSRF_SECRET_COOKIE_NAME, {\n    path: '/',\n    httpOnly: true,\n    secure: process.env.EMULATOR !== `true`,\n    sameSite: 'strict' as const,\n    secrets,\n  });\n}\n\nexport async function parseCsrfSecretCookie(request: Request) {\n  const cookie = await getCsrfSecretCookie();\n  return cookie.parse(getCookieHeader(request));\n}\n\nexport async function serializeCsrfSecretCookie(csrfSecret: string) {\n  const cookie = await getCsrfSecretCookie();\n  return cookie.serialize(csrfSecret);\n}\n\nexport async function deleteCsrfSecretCookie() {\n  const cookie = await getCsrfSecretCookie();\n  return cookie.serialize('', { maxAge: -1 });\n}\n", "import type { Stripe } from 'stripe';\nimport { URL } from 'url';\nimport getStripeInstance from '~/core/stripe/get-stripe';\n\ninterface CreateCheckoutParams {\n  returnUrl: string;\n  organizationId: string;\n  priceId: string;\n  customerId?: string;\n}\n\n/**\n * @name createStripeCheckout\n * @description Creates a Stripe Checkout session, and returns an Object\n * containing the session, which you can use to redirect the user to the\n * checkout page\n * @param params\n */\nexport default async function createStripeCheckout(\n  params: CreateCheckoutParams\n) {\n  const successUrl = getUrlWithParams(params.returnUrl, {\n    success: 'true',\n  });\n\n  const cancelUrl = getUrlWithParams(params.returnUrl, {\n    cancel: 'true',\n  });\n\n  // in MakerKit, a subscription belongs to an organization,\n  // rather than to a user\n  // if you wish to change it, use the current user ID instead\n  const clientReferenceId = params.organizationId;\n\n  // we pass an optional customer ID, so we do not duplicate the Stripe\n  // customers if an organization subscribes multiple times\n  const customer = params.customerId || undefined;\n\n  // if it's a one-time payment\n  // you should change this to \"payment\"\n  // docs: https://stripe.com/docs/billing/subscriptions/build-subscription\n  const mode: Stripe.Checkout.SessionCreateParams.Mode = 'subscription';\n\n  // get stripe instance\n  const stripe = await getStripeInstance();\n\n  const lineItem: Stripe.Checkout.SessionCreateParams.LineItem = {\n    quantity: 1,\n    price: params.priceId,\n  };\n\n  return stripe.checkout.sessions.create({\n    mode,\n    customer,\n    line_items: [lineItem],\n    success_url: successUrl,\n    cancel_url: cancelUrl,\n    client_reference_id: clientReferenceId,\n  });\n}\n\nfunction getUrlWithParams(origin: string, params: StringObject) {\n  const url = new URL(origin);\n  const returnUrl = cleanParams(url);\n\n  for (const param in params) {\n    returnUrl.searchParams.set(param, params[param]);\n  }\n\n  return returnUrl.toString();\n}\n\nfunction cleanParams(returnUrl: URL) {\n  returnUrl.searchParams.delete('cancel');\n  returnUrl.searchParams.delete('success');\n  returnUrl.searchParams.delete('error');\n\n  return returnUrl;\n}\n", "const STRIPE_API_VERSION = '2022-11-15';\n\n/**\n * @description returns a Stripe instance\n * If running in Cypress: it will use the Stripe emulated instance pointing\n * to the docker container\n */\nexport default async function getStripeInstance() {\n  if (isCypressEnv()) {\n    console.warn(`Stripe is running in Testing mode`);\n\n    return getStripeEmulatorInstance();\n  }\n\n  return getStripeProductionInstance();\n}\n\nasync function getStripeProductionInstance() {\n  const Stripe = await loadStripe();\n  const key = getStripeKey();\n\n  return new Stripe(key, {\n    apiVersion: STRIPE_API_VERSION,\n  });\n}\n\nfunction isCypressEnv() {\n  return process.env.IS_CI === `true`;\n}\n\nasync function getStripeEmulatorInstance() {\n  const Stripe = await loadStripe();\n\n  return new Stripe(`sk_test_12345`, {\n    host: `localhost`,\n    port: 12111,\n    apiVersion: STRIPE_API_VERSION,\n    protocol: `http`,\n  });\n}\n\nfunction getStripeKey() {\n  const STRIPE_SECRET_KEY = process.env.STRIPE_SECRET_KEY;\n\n  if (!STRIPE_SECRET_KEY) {\n    throw new Error(\n      `'STRIPE_SECRET_KEY' environment variable was not provided`\n    );\n  }\n\n  return STRIPE_SECRET_KEY;\n}\n\nasync function loadStripe() {\n  const { default: Stripe } = await import('stripe');\n\n  return Stripe;\n}\n", "import { FieldValue, getFirestore } from 'firebase-admin/firestore';\nimport type MembershipRole from '~/lib/organizations/types/membership-role';\nimport type Organization from '~/lib/organizations/types/organization';\n\nimport { getOrganizationById, getUserRefById } from '../queries';\n\nimport {\n  throwForbiddenException,\n  throwNotFoundException,\n  throwUnauthorizedException,\n} from '~/core/http-exceptions';\n\nimport { getInvitesCollection } from '~/lib/server/collections';\nimport { OrganizationPlanStatus } from '~/lib/organizations/types/organization-subscription';\nimport type MembershipInvite from '~/lib/organizations/types/membership-invite';\nimport serializeAuthUser from '~/core/firebase/utils/serialize-auth-user';\n\n/**\n * @name getOrganizationMembers\n * @description Returns the {@link UserInfo} object from the members of an organization\n */\nexport async function getOrganizationMembers(params: {\n  organizationId: string;\n  userId: string;\n}) {\n  const auth = await loadAuth();\n  const ref = await getOrganizationById(params.organizationId);\n  const organization = ref.data();\n\n  // forbid requests if the user does not belong to the organization\n  const userIsMember = params.userId in (organization?.members ?? {});\n\n  if (!organization || !userIsMember) {\n    return throwForbiddenException(`User is not part of the organization`);\n  }\n\n  const members = Object.values(organization.members);\n\n  const data = members.map(({ user }) => {\n    return auth.getUser(user.id).then(serializeAuthUser);\n  });\n\n  return await Promise.all(data);\n}\n\n/**\n * @name removeMemberFromOrganization\n * @description Remove a member with ID userId from an Organization\n * @param params\n */\nexport async function removeMemberFromOrganization(params: {\n  organizationId: string;\n  targetUserId: string;\n  currentUserId: string;\n}) {\n  const { targetUserId, currentUserId, organizationId } = params;\n  const doc = await getOrganizationById(organizationId);\n  const organization = doc.data();\n\n  if (!organization) {\n    throw throwNotFoundException();\n  }\n\n  assertUserCanUpdateMember({\n    organization,\n    currentUserId,\n    targetUserId,\n  });\n\n  const memberPath = getMemberPath(targetUserId);\n\n  return doc.ref.update({\n    [memberPath]: FieldValue.delete(),\n  });\n}\n\n/**\n * @name updateMemberRole\n * @description Update the role of a member within an organization\n * @param params\n */\nexport async function updateMemberRole(params: {\n  organizationId: string;\n  targetUserId: string;\n  currentUserId: string;\n  role: MembershipRole;\n}) {\n  const { role, currentUserId, targetUserId, organizationId } = params;\n  const doc = await getOrganizationById(organizationId);\n  const organization = doc.data();\n\n  if (!organization) {\n    throw throwNotFoundException();\n  }\n\n  assertUserCanUpdateMember({\n    organization,\n    currentUserId,\n    targetUserId,\n  });\n\n  const user = await getUserRefById(targetUserId);\n  const memberPath = getMemberPath(targetUserId);\n\n  await doc.ref.update({\n    [memberPath]: {\n      role,\n      user: user.ref,\n    },\n  });\n}\n\n/**\n * @name acceptInviteToOrganization\n * @description Add a member to an organization by using the invite code\n */\nexport async function acceptInviteToOrganization({\n  code,\n  userId,\n}: {\n  code: string;\n  userId: string;\n}) {\n  const firestore = getFirestore();\n  const auth = await loadAuth();\n  const batch = firestore.batch();\n  const inviteDoc = await getInviteByCode(code);\n\n  if (!inviteDoc?.exists) {\n    return throwNotFoundException();\n  }\n\n  const invite = inviteDoc.data();\n  const currentTime = new Date().getTime();\n  const isInviteExpired = currentTime > invite.expiresAt;\n\n  if (isInviteExpired) {\n    await inviteDoc.ref.delete();\n\n    throw new Error(`Invite is expired`);\n  }\n\n  const organizationId = invite.organization.id;\n  const role = invite.role;\n  const userPath = `/users/${userId}`;\n\n  const organizationRef = firestore.doc(`/organizations/${organizationId}`);\n  const userRef = firestore.doc(userPath);\n\n  // update the organization members list\n  const memberPath = getMemberPath(userId);\n\n  batch.update(organizationRef, {\n    [memberPath]: {\n      user: userRef,\n      role,\n    },\n  });\n\n  // create the user record\n  batch.set(userRef, {}, {});\n\n  // delete the invite\n  batch.delete(inviteDoc.ref);\n\n  // automatically set the user as \"onboarded\"\n  await auth.setCustomUserClaims(userId, {\n    onboarded: true,\n  });\n\n  await batch.commit();\n\n  return invite;\n}\n\nfunction getMemberPath(userId: string) {\n  const membersPropertyKey: keyof Organization = 'members';\n\n  return `${membersPropertyKey}.${userId}`;\n}\n\n/**\n * @name assertUserCanUpdateMember\n * @description Return an error when the current user cannot alter data of\n * the target user\n * @param params\n */\nfunction assertUserCanUpdateMember(params: {\n  organization: Organization;\n  currentUserId: string;\n  targetUserId: string;\n}) {\n  const members = params.organization.members;\n  const currentUser = members[params.currentUserId];\n  const targetUser = members[params.targetUserId];\n\n  if (!targetUser) {\n    return throwNotFoundException(`Target member was not found`);\n  }\n\n  if (!currentUser) {\n    return throwNotFoundException(`Current member was not found`);\n  }\n\n  if (currentUser.role <= targetUser.role) {\n    return throwUnauthorizedException(\n      `Current member does not have a greater role than target member`\n    );\n  }\n}\n\n/**\n * @name getInviteByCode\n * @description Fetch an invite by its ID, without having to know the\n * organization it belongs to\n * @param code\n */\nexport async function getInviteByCode(code: string) {\n  const collection = getInvitesCollection();\n  const path: keyof MembershipInvite = 'code';\n  const op = '==';\n\n  const query = collection.where(path, op, code);\n  const ref = await query.get();\n\n  if (ref.size) {\n    return ref.docs[0];\n  }\n}\n\n/**\n * @description Get the role of a user given an organization ID\n * @param params\n */\nexport async function getUserRoleByOrganization(params: {\n  userId: string;\n  organizationId: string;\n}) {\n  const ref = await getOrganizationById(params.organizationId);\n  const data = ref.data();\n\n  return data?.members[params.userId]?.role;\n}\n\n/**\n * @name getOrganizationSubscription\n * @description Returns the organization's subscription\n * @param organizationId\n */\nexport async function getOrganizationSubscription(organizationId: string) {\n  const organization = await getOrganizationById(organizationId);\n\n  return organization.data()?.subscription;\n}\n\n/**\n * @name isOrganizationSubscriptionActive\n * @description Returns whether the organization is on any paid\n * subscription, regardless of plan.\n * @param organizationId\n */\nexport async function isOrganizationSubscriptionActive(organizationId: string) {\n  const subscription = await getOrganizationSubscription(organizationId);\n\n  return subscription?.status === OrganizationPlanStatus.Paid;\n}\n\nexport async function loadAuth() {\n  const { getAuth } = await import('firebase-admin/auth');\n\n  return getAuth();\n}\n", "import type { Stripe } from 'stripe';\nimport type { ActionArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\n\nimport getStripeInstance from '~/core/stripe/get-stripe';\nimport StripeWebhooks from '~/core/stripe/stripe-webhooks.enum';\n\nimport {\n  throwBadRequestException,\n  throwInternalServerErrorException,\n} from '~/core/http-exceptions';\n\nimport {\n  activatePendingSubscription,\n  deleteOrganizationSubscription,\n  setOrganizationSubscription,\n  updateSubscriptionById,\n} from '~/lib/server/organizations/subscriptions';\n\nimport { OrganizationPlanStatus } from '~/lib/organizations/types/organization-subscription';\nimport { buildOrganizationSubscription } from '~/lib/stripe/build-organization-subscription';\nimport getLogger from '~/core/logger';\n\nconst STRIPE_SIGNATURE_HEADER = 'stripe-signature';\n\nconst webhookSecretKey = process.env.STRIPE_WEBHOOK_SECRET as string;\n\n/**\n * @description Handle the webhooks from Stripe related to checkouts\n */\nexport async function action(props: ActionArgs) {\n  const req = props.request;\n  const signature = req.headers.get(STRIPE_SIGNATURE_HEADER);\n\n  if (!webhookSecretKey) {\n    return throwInternalServerErrorException(\n      `The variable STRIPE_WEBHOOK_SECRET is unset. Please add the STRIPE_WEBHOOK_SECRET environment variable`\n    );\n  }\n\n  // verify signature header is not missing\n  if (!signature) {\n    return throwBadRequestException();\n  }\n\n  const logger = getLogger();\n  const rawBody = await req.text();\n  const stripe = await getStripeInstance();\n\n  const event = stripe.webhooks.constructEvent(\n    rawBody,\n    signature,\n    webhookSecretKey\n  );\n\n  logger.info(\n    {\n      type: event.type,\n    },\n    `[Stripe] Received Stripe Webhook`\n  );\n\n  try {\n    switch (event.type) {\n      case StripeWebhooks.Completed: {\n        const session = event.data.object as Stripe.Checkout.Session;\n        const subscriptionId = session.subscription as string;\n\n        const subscription = await stripe.subscriptions.retrieve(\n          subscriptionId\n        );\n\n        await onCheckoutCompleted(session, subscription);\n\n        break;\n      }\n\n      case StripeWebhooks.AsyncPaymentSuccess: {\n        const session = event.data.object as Stripe.Checkout.Session;\n        const organizationId = session.client_reference_id as string;\n\n        await activatePendingSubscription(organizationId);\n\n        break;\n      }\n\n      case StripeWebhooks.SubscriptionDeleted: {\n        const subscription = event.data.object as Stripe.Subscription;\n\n        await deleteOrganizationSubscription(subscription.id);\n\n        break;\n      }\n\n      case StripeWebhooks.SubscriptionUpdated: {\n        const subscription = event.data.object as Stripe.Subscription;\n\n        await onSubscriptionUpdated(subscription);\n\n        break;\n      }\n    }\n\n    return json({ success: true });\n  } catch (e) {\n    logger.error(\n      {\n        type: event.type,\n      },\n      `[Stripe] Webhook handling failed`\n    );\n\n    logger.debug(e);\n\n    return throwInternalServerErrorException();\n  }\n}\n\n/**\n * @description When the checkout is completed, we store the order. The\n * subscription is only activated if the order was paid successfully.\n * Otherwise, we have to wait for a further webhook\n */\nasync function onCheckoutCompleted(\n  session: Stripe.Checkout.Session,\n  subscription: Stripe.Subscription\n) {\n  const organizationId = session.client_reference_id as string;\n  const customerId = session.customer as string;\n  const status = getOrderStatus(session.payment_status);\n\n  // build organization subscription and set on the organization document\n  // we add just enough data in the DB, so we do not query\n  // Stripe for every bit of data\n  // if you need your DB record to contain further data\n  // add it to {@link buildOrganizationSubscription}\n  const subscriptionData = buildOrganizationSubscription(subscription, status);\n\n  return setOrganizationSubscription({\n    organizationId,\n    customerId,\n    subscription: subscriptionData,\n  });\n}\n\nasync function onSubscriptionUpdated(subscription: Stripe.Subscription) {\n  const subscriptionData = buildOrganizationSubscription(subscription);\n\n  await updateSubscriptionById(subscription.id, subscriptionData);\n}\n\nfunction getOrderStatus(paymentStatus: string) {\n  const isPaid = paymentStatus === 'paid';\n\n  return isPaid\n    ? OrganizationPlanStatus.Paid\n    : OrganizationPlanStatus.AwaitingPayment;\n}\n", "enum StripeWebhooks {\n  AsyncPaymentSuccess = 'checkout.session.async_payment_succeeded',\n  Completed = 'checkout.session.completed',\n  AsyncPaymentFailed = 'checkout.session.async_payment_failed',\n  SubscriptionDeleted = 'customer.subscription.deleted',\n  SubscriptionUpdated = 'customer.subscription.updated',\n}\n\nexport default StripeWebhooks;\n", "import type { UpdateData } from 'firebase-admin/firestore';\nimport { FieldValue } from 'firebase-admin/firestore';\n\nimport { getOrganizationsCollection } from '~/lib/server/collections';\nimport { OrganizationPlanStatus } from '~/lib/organizations/types/organization-subscription';\nimport type { OrganizationSubscription } from '~/lib/organizations/types/organization-subscription';\nimport type Organization from '~/lib/organizations/types/organization';\n\ninterface AddSubscriptionProps {\n  organizationId: string;\n  customerId: string;\n  subscription: OrganizationSubscription;\n}\n\n/**\n * @name setOrganizationSubscription\n * @description Adds or updates a subscription to an Organization\n */\nexport function setOrganizationSubscription(props: AddSubscriptionProps) {\n  const { customerId, subscription, organizationId } = props;\n  const organization = getOrganizationsCollection().doc(organizationId);\n\n  return organization.update({\n    subscription,\n    customerId,\n  });\n}\n\n/**\n * @name deleteOrganizationSubscription\n * @description Removes a subscription from an organization by\n * Stripe subscription ID\n * @param subscriptionId\n */\nexport async function deleteOrganizationSubscription(subscriptionId: string) {\n  const organization = await getOrganizationBySubscriptionId(subscriptionId);\n\n  return organization.update({\n    subscription: FieldValue.delete(),\n  });\n}\n\n/**\n * @name activatePendingSubscription\n * @description Activates a pending subscription once an async payment goes\n * through\n */\nexport async function activatePendingSubscription(organizationId: string) {\n  const organization = getOrganizationsCollection().doc(organizationId);\n\n  return organization.update({\n    'subscription.status': OrganizationPlanStatus.Paid,\n  } as UpdateData<Organization>);\n}\n\n/**\n * @name updateSubscriptionById\n * @default Update subscription with ID {@link subscriptionId} with data\n * object {@link subscription}\n * @param subscriptionId\n * @param subscription\n */\nexport async function updateSubscriptionById(\n  subscriptionId: string,\n  subscription: OrganizationSubscription\n) {\n  const organization = await getOrganizationBySubscriptionId(subscriptionId);\n\n  return organization.update({\n    subscription,\n  });\n}\n\n/**\n * @name getOrganizationBySubscriptionId\n * @description Retrieve a Firestore Organization given its\n * subscription ID {@link subscriptionId}. Throws an error when not found.\n * @param subscriptionId\n */\nasync function getOrganizationBySubscriptionId(subscriptionId: string) {\n  const path = 'subscription.id';\n  const op = '==';\n\n  const { docs, size } = await getOrganizationsCollection()\n    .where(path, op, subscriptionId)\n    .limit(1)\n    .get();\n\n  if (!size) {\n    throw new Error(\n      `No organization found with subscription ${subscriptionId}`\n    );\n  }\n\n  return docs[0].ref;\n}\n\n/**\n * @description Retrieve an organization using the customer ID assigned by\n * Stripe after the first checkout, e,g. when the customer record is created\n * @param customerId\n */\nexport async function getOrganizationByCustomerId(customerId: string) {\n  const organizations = getOrganizationsCollection();\n  const path = `customerId`;\n  const op = '==';\n\n  const result = await organizations.where(path, op, customerId).get();\n\n  return result.docs[0];\n}\n", "import type { Stripe } from 'stripe';\n\nimport type { OrganizationSubscription } from '~/lib/organizations/types/organization-subscription';\nimport { OrganizationPlanStatus } from '~/lib/organizations/types/organization-subscription';\n\nexport function buildOrganizationSubscription(\n  subscription: Stripe.Subscription,\n  status: OrganizationPlanStatus = OrganizationPlanStatus.Paid\n): OrganizationSubscription {\n  const lineItem = subscription.items.data[0];\n  const price = lineItem.price;\n\n  return {\n    id: subscription.id,\n    priceId: price?.id,\n    status,\n    currency: lineItem.price.currency ?? null,\n    interval: price?.recurring?.interval ?? null,\n    intervalCount: price?.recurring?.interval_count ?? null,\n    createdAt: subscription.created,\n    periodStartsAt: subscription.current_period_start,\n    periodEndsAt: subscription.current_period_end,\n    trialStartsAt: subscription.trial_start ?? null,\n    trialEndsAt: subscription.trial_end ?? null,\n  };\n}\n", "import { z } from 'zod';\nimport { join } from 'path';\nimport type { ActionArgs } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\n\nimport configuration from '~/configuration';\n\nimport getApiRefererPath from '~/core/generic/get-api-referer-path';\nimport HttpStatusCode from '~/core/generic/http-status-code.enum';\n\nimport { canChangeBilling } from '~/lib/organizations/permissions';\nimport { getUserRoleByOrganization } from '~/lib/server/organizations/memberships.server';\nimport { getOrganizationByCustomerId } from '~/lib/server/organizations/subscriptions';\nimport { parseSessionIdCookie } from '~/lib/server/cookies/session.cookie';\nimport createBillingPortalSession from '~/lib/stripe/create-billing-portal-session';\n\nimport getLoggedInUser from '~/core/firebase/admin/auth/get-logged-in-user';\nimport withCsrf from '~/core/middleware/with-csrf';\nimport getLogger from '~/core/logger';\n\nexport async function action(props: ActionArgs) {\n  const req = props.request;\n  const data = await req.formData();\n  const body = Object.fromEntries(data.entries());\n  const bodyResult = await getBodySchema().safeParseAsync(body);\n  const referrerPath = getApiRefererPath(req.headers);\n\n  if (!bodyResult.success) {\n    return redirectToErrorPage(referrerPath);\n  }\n\n  const { customerId, csrfToken } = bodyResult.data;\n\n  await withCsrf(req, csrfToken);\n\n  const logger = getLogger();\n  const session = await parseSessionIdCookie(req);\n  const user = await getLoggedInUser(session);\n  const userId = user.uid;\n\n  // we check that the user is authorized to access the portal\n  const canAccess = await getUserCanAccessCustomerPortal({\n    customerId,\n    userId,\n  });\n\n  if (!canAccess) {\n    return redirectToErrorPage(referrerPath);\n  }\n\n  try {\n    const referer = req.headers.get('referer');\n    const origin = req.headers.get('origin');\n    const returnUrl = referer || origin || configuration.paths.appHome;\n\n    const { url } = await createBillingPortalSession({\n      returnUrl,\n      customerId,\n    });\n\n    return redirect(url, {\n      status: HttpStatusCode.SeeOther,\n    });\n  } catch (error) {\n    logger.error(error, `Stripe Billing Portal redirect error`);\n\n    return redirectToErrorPage(referrerPath);\n  }\n}\n\n/**\n * @name getUserCanAccessCustomerPortal\n * @description Returns whether a user {@link userId} has access to the\n * Stripe portal of an organization with customer ID {@link customerId}\n */\nasync function getUserCanAccessCustomerPortal(params: {\n  customerId: string;\n  userId: string;\n}) {\n  try {\n    const organization = await getOrganizationByCustomerId(params.customerId);\n\n    const userRole = await getUserRoleByOrganization({\n      organizationId: organization.id,\n      userId: params.userId,\n    });\n\n    if (userRole === undefined) {\n      return false;\n    }\n\n    return canChangeBilling(userRole);\n  } catch (e) {\n    getLogger().error(e, `Could not retrieve user role`);\n\n    return false;\n  }\n}\n\nfunction getBodySchema() {\n  return z.object({\n    customerId: z.string(),\n    csrfToken: z.string(),\n  });\n}\n\nfunction redirectToErrorPage(referrerPath: string) {\n  const url = join(referrerPath, `?error=true`);\n\n  return redirect(url);\n}\n", "import getStripeInstance from '~/core/stripe/get-stripe';\n\n/**\n * @name createBillingPortalSession\n * @param params\n */\nexport default async function createBillingPortalSession(params: {\n  customerId: string;\n  returnUrl: string;\n}) {\n  const stripe = await getStripeInstance();\n\n  return stripe.billingPortal.sessions.create({\n    customer: params.customerId,\n    return_url: params.returnUrl,\n  });\n}\n", "import { Outlet } from '@remix-run/react';\nimport { useState } from 'react';\n\nimport firebaseConfig from '../firebase.config';\nimport FirebaseAppShell from '~/core/firebase/components/FirebaseAppShell';\nimport FirebaseAuthProvider from '~/core/firebase/components/FirebaseAuthProvider';\nimport UserSessionContext from '~/core/session/contexts/user-session';\nimport FirebaseAnalyticsProvider from '~/core/firebase/components/FirebaseAnalyticsProvider';\nimport type UserSession from '~/core/session/types/user-session';\nimport SiteHeader from '~/components/SiteHeader';\n\nfunction SiteLayout() {\n  const [userSession, setUserSession] = useState<UserSession>();\n\n  return (\n    <FirebaseAppShell config={firebaseConfig}>\n      <FirebaseAuthProvider\n        useEmulator={firebaseConfig.emulator}\n        userSession={userSession}\n        setUserSession={setUserSession}\n      >\n        <FirebaseAnalyticsProvider>\n          <UserSessionContext.Provider value={{ userSession, setUserSession }}>\n            <SiteHeader />\n            <Outlet />\n          </UserSessionContext.Provider>\n        </FirebaseAnalyticsProvider>\n      </FirebaseAuthProvider>\n    </FirebaseAppShell>\n  );\n}\n\nexport default SiteLayout;\n", "import { AnalyticsProvider, useInitAnalytics } from 'reactfire';\n\nimport configuration from '~/configuration';\nimport { useAnalyticsTracking } from '~/core/firebase/hooks/use-analytics-tracking';\nimport isBrowser from '~/core/generic/is-browser';\n\nconst FirebaseAnalyticsProvider: React.FCC = ({ children }) => {\n  const isEmulator = configuration.emulator;\n\n  if (isEmulator || !isBrowser()) {\n    return <>{children}</>;\n  }\n\n  return (\n    <BrowserFirebaseAnalyticsProvider>\n      {children}\n    </BrowserFirebaseAnalyticsProvider>\n  );\n};\n\nfunction BrowserFirebaseAnalyticsProvider(props: React.PropsWithChildren) {\n  const { data: sdk, status } = useInitAnalytics(async (app) => {\n    const { getAnalytics } = await import('firebase/analytics');\n\n    return getAnalytics(app);\n  });\n\n  if (status !== 'success') {\n    return <>{props.children}</>;\n  }\n\n  return (\n    <AnalyticsProvider sdk={sdk}>\n      <AnalyticsTrackingEventsProvider>\n        {props.children}\n      </AnalyticsTrackingEventsProvider>\n    </AnalyticsProvider>\n  );\n}\n\nfunction AnalyticsTrackingEventsProvider({\n  children,\n}: React.PropsWithChildren) {\n  useAnalyticsTracking();\n\n  return <>{children}</>;\n}\n\nexport default FirebaseAnalyticsProvider;\n", "import { useEffect } from 'react';\n\nimport isBrowser from '~/core/generic/is-browser';\nimport useUserSession from '~/core/hooks/use-user-session';\n\n/**\n * @name useTrackSignedInUser\n * @description tracks the current user ID\n */\nexport function useTrackSignedInUser() {\n  const user = useUserSession();\n  const userId = user?.auth?.uid;\n\n  useEffect(() => {\n    if (!isBrowser()) {\n      return;\n    }\n\n    void (async () => {\n      const { getAnalytics, setUserId } = await import('firebase/analytics');\n\n      if (userId) {\n        setUserId(getAnalytics(), userId);\n      }\n    })();\n  }, [userId]);\n}\n", "import { useTrackSignedInUser } from './use-track-signed-in-user';\n\n/**\n * @name useAnalyticsTracking\n * @description Hook to start tracking using other Analytics hooks\n */\nexport function useAnalyticsTracking() {\n  useTrackSignedInUser();\n}\n", "import type { MetaFunction } from '@remix-run/node';\n\nimport Container from '~/core/ui/Container';\nimport PricingTable from '~/components/PricingTable';\nimport Hero from '~/core/ui/Hero';\nimport SubHeading from '~/core/ui/SubHeading';\n\nimport configuration from '~/configuration';\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: `Pricing - ${configuration.site.siteName}`,\n  };\n};\n\nfunction Pricing() {\n  return (\n    <Container>\n      <Hero>Pricing</Hero>\n      <SubHeading>Fair pricing for your customers</SubHeading>\n\n      <div className={'mt-12'}>\n        <PricingTable />\n      </div>\n    </Container>\n  );\n}\n\nexport default Pricing;\n", "import CheckCircleIcon from '@heroicons/react/24/outline/CheckCircleIcon';\nimport classNames from 'classnames';\nimport { Trans } from 'react-i18next';\n\nimport Heading from '~/core/ui/Heading';\nimport Button from '~/core/ui/Button';\nimport If from '~/core/ui/If';\n\nimport configuration from '~/configuration';\n\nconst PLANS = configuration.stripe.plans;\n\nconst PricingTable: React.FC & {\n  Item: typeof PricingItem;\n  Price: typeof Price;\n  FeaturesList: typeof FeaturesList;\n} = () => {\n  return (\n    <div\n      className={\n        'flex flex-col items-start items-center space-y-6 lg:space-y-0' +\n        ' justify-center lg:flex-row lg:space-x-4'\n      }\n    >\n      {PLANS.map((plan) => {\n        return <PricingItem selectable key={plan.stripePriceId} plan={plan} />;\n      })}\n    </div>\n  );\n};\n\nexport default PricingTable;\n\nPricingTable.Item = PricingItem;\nPricingTable.Price = Price;\nPricingTable.FeaturesList = FeaturesList;\n\nfunction PricingItem(\n  props: React.PropsWithChildren<{\n    selectable: boolean;\n    plan: {\n      name: string;\n      stripePriceId: string;\n      description: string;\n      price: string;\n      features: string[];\n    };\n  }>\n) {\n  const linkHref = `${configuration.paths.signUp}?utm_source=${props.plan.stripePriceId}`;\n\n  return (\n    <div\n      className={classNames(\n        `\n         relative flex w-full flex-col justify-between rounded-2xl border-2 border-gray-100\n         p-4 shadow-2xl shadow-transparent transition-all duration-500 dark:border-black-300 dark:bg-black-500 \n         sm:p-6 lg:w-4/12 xl:p-8 2xl:w-3/12\n      `,\n        {\n          ['dark:hover:border-primary-500 dark:hover:bg-black-500' +\n          ' hover:scale-[1.01] dark:hover:shadow-primary-500/40']:\n            props.selectable,\n        }\n      )}\n    >\n      <div className={'flex flex-col space-y-4'}>\n        <Heading type={2}>\n          <span className={'font-semibold dark:text-white'}>\n            {props.plan.name}\n          </span>\n        </Heading>\n\n        <Price>{props.plan.price}</Price>\n\n        <span className={'text-xl text-gray-500 dark:text-gray-400'}>\n          {props.plan.description}\n        </span>\n      </div>\n\n      <div className={'my-4 py-4'}>\n        <FeaturesList features={props.plan.features} />\n      </div>\n\n      <If condition={props.selectable}>\n        <div className={'bottom-0 left-0 w-full p-0'}>\n          <Button size={'large'} block href={linkHref}>\n            <Trans i18nKey={'common:getStarted'} />\n          </Button>\n        </div>\n      </If>\n    </div>\n  );\n}\n\nfunction FeaturesList(\n  props: React.PropsWithChildren<{\n    features: string[];\n  }>\n) {\n  return (\n    <ul className={'flex flex-col space-y-2'}>\n      {props.features.map((feature) => {\n        return (\n          <ListItem key={feature}>\n            <Trans\n              i18nKey={`common:plans.features.${feature}`}\n              defaults={feature}\n            />\n          </ListItem>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction Price({ children }: React.PropsWithChildren) {\n  return (\n    <div>\n      <span className={'text-3xl font-extrabold lg:text-4xl'}>{children}</span>\n    </div>\n  );\n}\n\nfunction ListItem({ children }: React.PropsWithChildren) {\n  return (\n    <li className={'flex items-center space-x-3 text-lg font-medium'}>\n      <div>\n        <CheckCircleIcon className={'h-7 text-green-500'} />\n      </div>\n\n      <span>{children}</span>\n    </li>\n  );\n}\n", "import {\n  ArrowRightIcon,\n  FireIcon,\n  UserGroupIcon,\n} from '@heroicons/react/24/outline';\n\nimport ConvertkitSignupForm from '~/components/newsletter/ConvertkitSignupForm';\nimport Container from '~/core/ui/Container';\nimport Heading from '~/core/ui/Heading';\nimport Button from '~/core/ui/Button';\nimport Hero from '~/core/ui/Hero';\nimport Footer from '~/components/Footer';\nimport SubHeading from '~/core/ui/SubHeading';\n\nimport configuration from '~/configuration';\n\nexport default function Index() {\n  return (\n    <main>\n      <Container>\n        <div\n          className={\n            'my-8 mb-8 flex flex-col items-center md:mt-24 md:flex-row' +\n            ' mx-auto flex-1 justify-center'\n          }\n        >\n          <div\n            className={'flex w-full flex-1 flex-col items-center space-y-12'}\n          >\n            <HeroTitle>\n              <span>Tell your visitors why</span>\n              <span className={'text-primary-500'}>your SaaS is awesome</span>\n            </HeroTitle>\n\n            <div className={'text-center text-gray-700 dark:text-gray-400'}>\n              <SubHeading>\n                Here you can write a short description of your SaaS\n              </SubHeading>\n\n              <SubHeading>\n                This subheading is usually laid out on multiple lines\n              </SubHeading>\n\n              <SubHeading>Just like this.</SubHeading>\n            </div>\n\n            <div className={'flex flex-col items-center space-y-2.5'}>\n              <Button\n                className={'GradientButton rounded-full p-1'}\n                size={'large'}\n                href={'/auth/sign-up'}\n              >\n                <span className={'flex items-center space-x-2 text-xl'}>\n                  <span>Get Started for free</span>\n                  <ArrowRightIcon className={'h-6'} />\n                </span>\n              </Button>\n\n              <span className={'text-xs'}>No credit-card required</span>\n            </div>\n          </div>\n        </div>\n\n        <div className={'flex justify-center py-12'}>\n          <img\n            decoding={'async'}\n            className={'rounded-2xl'}\n            width={800}\n            height={600}\n            src={`/assets/images/browser.webp`}\n            alt={`App`}\n          />\n        </div>\n      </Container>\n\n      <Divider />\n\n      <Container>\n        <div\n          className={\n            'flex flex-col items-center justify-center space-y-24 py-12'\n          }\n        >\n          <div\n            className={\n              'flex max-w-3xl flex-col items-center space-y-4 text-center'\n            }\n          >\n            <div className={'flex flex-col items-center space-y-2'}>\n              <div>\n                <FireIcon className={'h-6 text-primary-500'} />\n              </div>\n\n              <b className={'text-primary-500'}>Features</b>\n            </div>\n\n            <Hero>The best tool in the space</Hero>\n\n            <SubHeading>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus\n              malesuada nisi tellus, non imperdiet nisi tempor at.\n            </SubHeading>\n          </div>\n\n          <div>\n            <div className={'grid gap-12 lg:grid-cols-3'}>\n              <div className={'flex flex-col space-y-2 text-center'}>\n                <Heading type={3}>Item</Heading>\n\n                <div className={'text-gray-500 dark:text-gray-400'}>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Phasellus malesuada nisi tellus, non imperdiet nisi tempor at.\n                </div>\n              </div>\n\n              <div className={'flex flex-col space-y-2 text-center'}>\n                <Heading type={3}>Item</Heading>\n\n                <div className={'text-gray-500 dark:text-gray-400'}>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Phasellus malesuada nisi tellus, non imperdiet nisi tempor at.\n                </div>\n              </div>\n\n              <div className={'flex flex-col space-y-2 text-center'}>\n                <Heading type={3}>Item</Heading>\n\n                <div className={'text-gray-500 dark:text-gray-400'}>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Phasellus malesuada nisi tellus, non imperdiet nisi tempor at.\n                </div>\n              </div>\n\n              <div className={'flex flex-col space-y-2 text-center'}>\n                <Heading type={3}>Item</Heading>\n\n                <div className={'text-gray-500 dark:text-gray-400'}>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Phasellus malesuada nisi tellus, non imperdiet nisi tempor at.\n                </div>\n              </div>\n\n              <div className={'flex flex-col space-y-2 text-center'}>\n                <Heading type={3}>Item</Heading>\n\n                <div className={'text-gray-500 dark:text-gray-400'}>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Phasellus malesuada nisi tellus, non imperdiet nisi tempor at.\n                </div>\n              </div>\n\n              <div className={'flex flex-col space-y-2 text-center'}>\n                <Heading type={3}>Item</Heading>\n\n                <div className={'text-gray-500 dark:text-gray-400'}>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Phasellus malesuada nisi tellus, non imperdiet nisi tempor at.\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n\n      <Divider />\n\n      <Container>\n        <div\n          className={\n            'flex flex-col items-center justify-center space-y-24 py-12'\n          }\n        >\n          <div\n            className={\n              'flex max-w-3xl flex-col items-center space-y-4 text-center'\n            }\n          >\n            <div className={'flex flex-col items-center space-y-2'}>\n              <div>\n                <UserGroupIcon className={'h-6 text-primary-500'} />\n              </div>\n\n              <b className={'text-primary-500'}>Testimonials</b>\n            </div>\n\n            <Hero>Trusted by indie-hackers all over the world</Hero>\n\n            <SubHeading>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus\n              malesuada nisi tellus, non imperdiet nisi tempor at.\n            </SubHeading>\n          </div>\n\n          <div>\n            <div className={'grid gap-12 lg:grid-cols-3'}>\n              <div className={'flex flex-col space-y-2 text-center'}>\n                <Heading type={3}>Item</Heading>\n\n                <div className={'text-gray-500 dark:text-gray-400'}>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Phasellus malesuada nisi tellus, non imperdiet nisi tempor at.\n                </div>\n              </div>\n\n              <div className=\"flex flex-col space-y-2 text-center\">\n                <Heading type={3}>Item</Heading>\n\n                <div className={'text-gray-500 dark:text-gray-400'}>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Phasellus malesuada nisi tellus, non imperdiet nisi tempor at.\n                </div>\n              </div>\n\n              <div className=\"flex flex-col space-y-2 text-center\">\n                <Heading type={3}>Item</Heading>\n\n                <div className={'text-gray-500 dark:text-gray-400'}>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Phasellus malesuada nisi tellus, non imperdiet nisi tempor at.\n                </div>\n              </div>\n\n              <div className=\"flex flex-col space-y-2 text-center\">\n                <Heading type={3}>Item</Heading>\n\n                <div className={'text-gray-500 dark:text-gray-400'}>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Phasellus malesuada nisi tellus, non imperdiet nisi tempor at.\n                </div>\n              </div>\n\n              <div className=\"flex flex-col space-y-2 text-center\">\n                <Heading type={3}>Item</Heading>\n\n                <div className={'text-gray-500 dark:text-gray-400'}>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Phasellus malesuada nisi tellus, non imperdiet nisi tempor at.\n                </div>\n              </div>\n\n              <div className=\"flex flex-col space-y-2 text-center\">\n                <Heading type={3}>Item</Heading>\n\n                <div className={'text-gray-500 dark:text-gray-400'}>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                  Phasellus malesuada nisi tellus, non imperdiet nisi tempor at.\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n\n      <Container>\n        <div className={'py-12'}>\n          <div\n            className={\n              'flex flex-col justify-between rounded-lg md:flex-row' +\n              ' space-y-2 bg-primary-50 px-8 py-12 dark:bg-primary-600/10' +\n              ' md:space-y-0'\n            }\n          >\n            <div className={'flex flex-col justify-between space-y-2'}>\n              <Heading type={2}>\n                <p className={'text-gray-800 dark:text-white'}>\n                  The application you were waiting for.\n                </p>\n              </Heading>\n\n              <Heading type={2}>\n                <p className={'text-primary-500'}>Sign up for free, today.</p>\n              </Heading>\n            </div>\n\n            <div className={'flex flex-col justify-end space-y-2'}>\n              <div>\n                <Button\n                  className={'w-full md:w-auto'}\n                  size={'large'}\n                  href={'/auth/sign-up'}\n                >\n                  Get Started for free\n                </Button>\n              </div>\n\n              <div className=\"flex flex-col space-y-2 text-center\">\n                <span className={'text-xs'}>No credit-card required</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n\n      <Container>\n        <NewsletterSignup />\n      </Container>\n\n      <Divider />\n\n      <Footer />\n    </main>\n  );\n}\n\nfunction NewsletterSignup() {\n  const formId = configuration.site.convertKitFormId;\n\n  return (\n    <div\n      className={\n        'flex flex-col items-center justify-center space-y-4 py-16 text-sm text-gray-500 dark:text-gray-400 lg:py-24'\n      }\n    >\n      <p>Let&apos;s stay in touch.</p>\n\n      <p>Subscribe to Makerkit&apos;s Newsletter to receive updates.</p>\n\n      <ConvertkitSignupForm formId={formId}>Subscribe</ConvertkitSignupForm>\n\n      <p className={'text-center text-xs'}>No spam. Ever.</p>\n    </div>\n  );\n}\n\nfunction Divider() {\n  return <hr className={'border border-gray-50 dark:border-black-400'} />;\n}\n\nfunction HeroTitle({ children }: React.PropsWithChildren) {\n  return (\n    <h1\n      className={\n        'text-center text-4xl text-black-500 dark:text-white' +\n        ' flex flex-col space-y-2 font-extrabold md:text-6xl' +\n        ' xl:text-7xl 2xl:text-8xl'\n      }\n    >\n      {children}\n    </h1>\n  );\n}\n", "import Button from '~/core/ui/Button';\nimport TextField from '~/core/ui/TextField';\n\nconst ConvertkitSignupForm: React.FCC<{\n  formId: string;\n}> = ({ formId, children }) => {\n  const action = `https://app.convertkit.com/forms/${formId}/subscriptions`;\n\n  return (\n    <form\n      action={action}\n      method={'POST'}\n      target=\"_blank\"\n      className={`space-around flex w-full flex-1 justify-center`}\n    >\n      <TextField>\n        <TextField.Input\n          type=\"email\"\n          className=\"formkit-input w-50 !rounded-tr-none !rounded-br-none border-r-transparent py-1 text-sm hover:border-r-transparent sm:w-60 md:w-80 md:text-base\"\n          name=\"email_address\"\n          aria-label=\"Your email address\"\n          placeholder=\"your@email.com\"\n          required\n        />\n      </TextField>\n\n      <Button className=\"flex justify-center rounded-tl-none rounded-bl-none text-sm md:text-base\">\n        {children}\n      </Button>\n    </form>\n  );\n};\n\nexport default ConvertkitSignupForm;\n", "import { Link } from '@remix-run/react';\n\nimport Container from '~/core/ui/Container';\nimport LogoImage from '~/core/ui/Logo/LogoImage';\nimport Heading from '~/core/ui/Heading';\nimport configuration from '~/configuration';\n\nconst YEAR = new Date().getFullYear();\n\nfunction Footer() {\n  return (\n    <footer className={'Footer'}>\n      <Container>\n        <div\n          className={\n            'flex flex-col space-y-8 lg:flex-row lg:space-y-0 lg:space-y-0' +\n            ' lg:justify-between'\n          }\n        >\n          <div className={'flex w-full space-x-8 lg:w-4/12'}>\n            <div className={'flex flex-col space-y-2.5'}>\n              <div>\n                <LogoImage className={'w-[85px] md:w-[115px]'} />\n              </div>\n\n              <div>\n                <p className={'text-sm text-gray-500 dark:text-gray-400'}>\n                  Add a short tagline about your product\n                </p>\n              </div>\n\n              <div className={'flex text-xs text-gray-500 dark:text-gray-400'}>\n                <p>\n                  \u00A9 Copyright {YEAR} {configuration.site.siteName}. All Rights\n                  Reserved.\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div\n            className={\n              'flex flex-col space-y-8 lg:space-y-0 lg:space-x-24' +\n              ' lg:flex-row lg:justify-end'\n            }\n          >\n            <div>\n              <div className={'flex flex-col space-y-2.5'}>\n                <Heading type={6}>Our Company</Heading>\n\n                <ul\n                  className={\n                    'flex flex-col space-y-2 text-sm text-gray-600 dark:text-gray-400'\n                  }\n                >\n                  <li>\n                    <Link to={'#'}>Who we are</Link>\n                  </li>\n                  <li>\n                    <Link to={'/blog'}>Blog</Link>\n                  </li>\n                  <li>\n                    <Link to={'/contact'}>Contact</Link>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <div>\n              <div className={'flex flex-col space-y-2.5'}>\n                <Heading type={6}>Product</Heading>\n\n                <ul\n                  className={\n                    'flex flex-col space-y-2 text-sm text-gray-600 dark:text-gray-400'\n                  }\n                >\n                  <li>\n                    <Link to={'/docs'}>Documentation</Link>\n                  </li>\n                  <li>\n                    <Link to={'#'}>Help Center</Link>\n                  </li>\n                  <li>\n                    <Link to={'#'}>Changelog</Link>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <div>\n              <div className={'flex flex-col space-y-4'}>\n                <Heading type={6}>Legal</Heading>\n\n                <ul\n                  className={\n                    'flex flex-col space-y-2 text-sm text-gray-600 dark:text-gray-400'\n                  }\n                >\n                  <li>\n                    <Link to={'#'}>Terms of Service</Link>\n                  </li>\n                  <li>\n                    <Link to={'#'}>Privacy Policy</Link>\n                  </li>\n                  <li>\n                    <Link to={'#'}>Cookie Policy</Link>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n", "import type { MetaFunction } from '@remix-run/node';\nimport configuration from '~/configuration';\nimport Hero from '~/core/ui/Hero';\nimport Container from '~/core/ui/Container';\nimport Heading from '~/core/ui/Heading';\nimport SubHeading from '~/core/ui/SubHeading';\nimport Footer from '~/components/Footer';\n\nconst DATA = [\n  {\n    question: `Here goes a question`,\n    answer: `<p>And here is the answer</p>`,\n  },\n];\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: `FAQ - ${configuration.site.siteName}`,\n  };\n};\n\nconst Faq = () => {\n  const structuredData = {\n    '@context': 'https://schema.org',\n    '@type': 'FAQPage',\n    mainEntity: DATA.map((item) => {\n      return {\n        '@type': 'Question',\n        name: item.question,\n        acceptedAnswer: {\n          '@type': 'Answer',\n          text: item.answer,\n        },\n      };\n    }),\n  };\n\n  return (\n    <div>\n      <script\n        key={'ld:json'}\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}\n      />\n\n      <Container>\n        <Hero>FAQ</Hero>\n\n        <SubHeading>Frequently Asked Questions</SubHeading>\n\n        <div className={'my-8'}>\n          <div className=\"flex flex-col space-y-6\">\n            {DATA.map((item, index) => {\n              return (\n                <div className={'FaqItem'} key={index}>\n                  <Heading type={2}>\n                    <span className={'font-semibold dark:text-white'}>\n                      {item.question}\n                    </span>\n                  </Heading>\n\n                  <div\n                    className={\n                      'flex flex-col space-y-4 py-4 text-lg lg:text-xl' +\n                      ' dark:text-gray-400'\n                    }\n                    dangerouslySetInnerHTML={{ __html: item.answer }}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </Container>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Faq;\n", "import { Outlet } from '@remix-run/react';\nimport AuthPageShell from '~/components/auth/AuthPageShell';\n\nfunction InviteLayout() {\n  return (\n    <AuthPageShell>\n      <Outlet />\n    </AuthPageShell>\n  );\n}\n\nexport default InviteLayout;\n", "import Logo from '~/core/ui/Logo';\nimport FirebaseAuthProvider from '~/core/firebase/components/FirebaseAuthProvider';\nimport FirebaseAppShell from '~/core/firebase/components/FirebaseAppShell';\nimport firebaseConfig from '../../firebase.config';\n\nfunction AuthPageShell({ children }: React.PropsWithChildren) {\n  return (\n    <FirebaseAppShell config={firebaseConfig}>\n      <FirebaseAuthProvider\n        useEmulator={firebaseConfig.emulator}\n        userSession={undefined}\n        setUserSession={() => ({})}\n      >\n        <div\n          className={\n            'flex h-screen flex-col items-center justify-center space-y-8' +\n            ' lg:bg-gray-50 dark:lg:bg-black-700'\n          }\n        >\n          <div>\n            <Logo />\n          </div>\n\n          <div\n            className={`flex w-11/12 max-w-xl flex-col items-center space-y-5 rounded-xl border border-transparent bg-white p-8 dark:bg-black-600 dark:bg-black-500 sm:border-gray-100 dark:sm:border-black-500 md:w-8/12 lg:w-5/12 xl:w-4/12 2xl:w-3/12`}\n          >\n            {children}\n          </div>\n        </div>\n      </FirebaseAuthProvider>\n    </FirebaseAppShell>\n  );\n}\n\nexport default AuthPageShell;\n", "import { useCallback, useEffect, useState } from 'react';\nimport { Trans } from 'react-i18next';\nimport { z } from 'zod';\n\nimport type { ActionArgs, LoaderArgs, MetaFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { useLoaderData, useSubmit, useTransition } from '@remix-run/react';\nimport { useAuth, useSigninCheck } from 'reactfire';\n\nimport {\n  acceptInviteToOrganization,\n  getInviteByCode,\n  getUserRoleByOrganization,\n} from '~/lib/server/organizations/memberships.server';\n\nimport { serializeOrganizationIdCookie } from '~/lib/server/cookies/organization.cookie';\nimport { serializeCsrfSecretCookie } from '~/lib/server/cookies/csrf-secret.cookie';\n\nimport {\n  getSessionIdCookie,\n  parseSessionIdCookie,\n} from '~/lib/server/cookies/session.cookie';\n\nimport If from '~/core/ui/If';\nimport Button from '~/core/ui/Button';\nimport Heading from '~/core/ui/Heading';\n\nimport configuration from '~/configuration';\nimport isBrowser from '~/core/generic/is-browser';\n\nimport OAuthProviders from '~/components/auth/OAuthProviders';\nimport PageLoadingIndicator from '~/core/ui/PageLoadingIndicator';\n\nimport GuardedPage from '~/core/firebase/components/GuardedPage';\nimport getLoggedInUser from '~/core/firebase/admin/auth/get-logged-in-user';\nimport createCsrfToken from '~/core/generic/create-csrf-token';\nimport createServerSideSession from '~/core/firebase/admin/auth/create-server-side-session';\n\nimport {\n  throwBadRequestException,\n  throwForbiddenException,\n  throwNotFoundException,\n} from '~/core/http-exceptions';\n\nimport EmailPasswordSignUpContainer from '~/components/auth/EmailPasswordSignUpContainer';\nimport EmailPasswordSignInContainer from '~/components/auth/EmailPasswordSignInContainer';\nimport PhoneNumberSignInContainer from '~/components/auth/PhoneNumberSignInContainer';\nimport EmailLinkAuth from '~/components/auth/EmailLinkAuth';\n\nimport useGetCsrfToken from '~/core/firebase/hooks/use-get-csrf-token';\nimport withCsrf from '~/core/middleware/with-csrf';\nimport type { SerializedUserAuthData } from '~/core/session/types/user-session';\nimport withFirebaseAdmin from '~/core/middleware/with-firebase-admin';\nimport getUserInfoById from '~/core/firebase/admin/auth/get-user-info-by-id';\nimport getLogger from '~/core/logger';\nimport AuthCatchBoundary from '~/components/auth/AuthCatchBoundary';\n\nenum Mode {\n  SignUp,\n  SignIn,\n}\n\ninterface Invite {\n  code: string;\n\n  organization: {\n    id: string;\n    name: string;\n  };\n}\n\nexport const CatchBoundary = AuthCatchBoundary;\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    title: `Join Organization`,\n    'csrf-token': data?.csrfToken,\n  };\n};\n\nconst InvitePage = () => {\n  const data = useLoaderData<typeof loader>();\n  const [user, setUser] = useState(data.user);\n  const signInCheck = useSigninCheck();\n\n  const transition = useTransition();\n  const invite = data.invite as Invite;\n  const organization = invite.organization;\n\n  useEffect(() => {\n    if (signInCheck.status === 'success' && !signInCheck.data.signedIn) {\n      setUser(undefined);\n    }\n  }, [signInCheck]);\n\n  if (transition.state === 'submitting') {\n    return (\n      <PageLoadingIndicator>\n        <Trans\n          i18nKey={'auth:addingToOrganization'}\n          values={{ name: organization.name }}\n          components={{ b: <b /> }}\n        />\n      </PageLoadingIndicator>\n    );\n  }\n\n  return (\n    <>\n      <Heading type={4}>\n        <Trans\n          i18nKey={'auth:joinOrganizationHeading'}\n          values={{\n            organization: invite.organization.name,\n          }}\n        />\n      </Heading>\n\n      <div>\n        <p className={'text-center'}>\n          <Trans\n            i18nKey={'auth:joinOrganizationSubHeading'}\n            values={{\n              organization: invite.organization.name,\n            }}\n            components={{ b: <b /> }}\n          />\n        </p>\n\n        <p className={'text-center'}>\n          <If condition={!user}>\n            <Trans i18nKey={'auth:signUpToAcceptInvite'} />\n          </If>\n        </p>\n      </div>\n\n      <AcceptInviteContainer inviteCode={invite.code} user={user} />\n    </>\n  );\n};\n\nfunction AcceptInviteContainer({\n  inviteCode,\n  user,\n}: React.PropsWithChildren<{\n  inviteCode: string;\n  user: Maybe<SerializedUserAuthData> | null;\n}>) {\n  const auth = useAuth();\n  const submit = useSubmit();\n  const getCsrfToken = useGetCsrfToken();\n  const transition = useTransition();\n  const redirectOnSignOut = getRedirectPath();\n  const [mode, setMode] = useState<Mode>(Mode.SignUp);\n\n  const onInviteAccepted = useCallback(\n    (idToken: string) => {\n      const csrfToken = getCsrfToken() ?? '';\n\n      const body = {\n        code: inviteCode,\n        idToken,\n        csrfToken,\n      };\n\n      return submit(body, {\n        method: 'post',\n      });\n    },\n    [getCsrfToken, inviteCode, submit]\n  );\n\n  if (transition.state !== 'idle') {\n    return <PageLoadingIndicator />;\n  }\n\n  return (\n    <>\n      {/* FLOW FOR AUTHENTICATED USERS */}\n      <If condition={user}>\n        <GuardedPage whenSignedOut={redirectOnSignOut}>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              return onInviteAccepted('');\n            }}\n            className={'flex flex-col space-y-8'}\n          >\n            <p className={'text-center text-sm'}>\n              <Trans\n                i18nKey={'auth:clickToAcceptAs'}\n                values={{ email: user?.email }}\n                components={{ b: <b /> }}\n              />\n            </p>\n\n            <Button data-cy={'accept-invite-submit-button'} type={'submit'}>\n              <Trans i18nKey={'auth:acceptInvite'} />\n            </Button>\n\n            <div>\n              <div className={'flex flex-col space-y-2'}>\n                <p className={'text-center'}>\n                  <span\n                    className={\n                      'text-center text-sm text-gray-700 dark:text-gray-300'\n                    }\n                  >\n                    <Trans i18nKey={'auth:acceptInviteWithDifferentAccount'} />\n                  </span>\n                </p>\n\n                <Button\n                  block\n                  color={'transparent'}\n                  size={'small'}\n                  onClick={() => auth.signOut()}\n                  type={'button'}\n                >\n                  <Trans i18nKey={'auth:signOut'} />\n                </Button>\n              </div>\n            </div>\n          </form>\n        </GuardedPage>\n      </If>\n\n      {/* FLOW FOR NEW USERS */}\n      <If condition={!user}>\n        <OAuthProviders onSignIn={onInviteAccepted} />\n\n        <If condition={configuration.auth.providers.emailPassword}>\n          <If condition={mode === Mode.SignUp}>\n            <div className={'flex w-full flex-col items-center space-y-4'}>\n              <EmailPasswordSignUpContainer onSignUp={onInviteAccepted} />\n\n              <Button\n                block\n                color={'transparent'}\n                size={'small'}\n                onClick={() => setMode(Mode.SignIn)}\n              >\n                <Trans i18nKey={'auth:alreadyHaveAccountStatement'} />\n              </Button>\n            </div>\n          </If>\n\n          <If condition={mode === Mode.SignIn}>\n            <div className={'flex w-full flex-col items-center space-y-4'}>\n              <EmailPasswordSignInContainer onSignIn={onInviteAccepted} />\n\n              <Button\n                block\n                color={'transparent'}\n                size={'small'}\n                onClick={() => setMode(Mode.SignUp)}\n              >\n                <Trans i18nKey={'auth:doNotHaveAccountStatement'} />\n              </Button>\n            </div>\n          </If>\n        </If>\n\n        <If condition={configuration.auth.providers.phoneNumber}>\n          <PhoneNumberSignInContainer onSignIn={onInviteAccepted} />\n        </If>\n\n        <If condition={configuration.auth.providers.emailLink}>\n          <EmailLinkAuth />\n        </If>\n      </If>\n    </>\n  );\n}\n\nexport default InvitePage;\n\nexport async function loader(args: LoaderArgs) {\n  await withFirebaseAdmin();\n\n  const code = args.params.code;\n  const logger = getLogger();\n\n  // if the code wasn't provided we cannot continue\n  // so, we redirect to 404\n  if (!code) {\n    return throwNotFoundException();\n  }\n\n  const inviteRef = await getInviteByCode(code).catch(() => undefined);\n  const invite = inviteRef?.data();\n\n  // if the invite wasn't found, it's 404\n  if (!invite) {\n    logger.warn(\n      {\n        code,\n      },\n      `User navigated to invite page, but it wasn't found. Redirecting to home page...`\n    );\n\n    return throwNotFoundException();\n  }\n\n  try {\n    const sessionId = await parseSessionIdCookie(args.request);\n    const user = await getLoggedInUser(sessionId).catch(() => undefined);\n    const userId = user?.uid;\n    const userData = userId ? await getUserInfoById(userId) : undefined;\n\n    const organizationId = invite.organization.id;\n\n    // We check if the user is already part of the organization\n    if (userId) {\n      const userRole = await getUserRoleByOrganization({\n        organizationId,\n        userId,\n      });\n\n      const isPartOfOrganization = userRole !== undefined;\n\n      // if yes, we redirect the user to the error page\n      if (isPartOfOrganization) {\n        return throwForbiddenException();\n      }\n    }\n\n    const { token: csrfToken, secret } = await createCsrfToken();\n\n    return json(\n      {\n        user: userData,\n        invite,\n        csrfToken,\n      },\n      {\n        headers: {\n          'Set-Cookie': await serializeCsrfSecretCookie(secret),\n        },\n      }\n    );\n  } catch (e) {\n    logger.debug(e);\n\n    logger.error(\n      `Error encountered while fetching invite. Redirecting to home page...`\n    );\n\n    return redirectToHomePage();\n  }\n}\n\n/**\n * @name action\n * @param args\n */\nexport async function action(args: ActionArgs) {\n  const req = args.request;\n  const formData = await req.formData();\n  const fields = Object.fromEntries(formData.entries());\n  const result = await getBodySchema().safeParseAsync(fields);\n\n  if (!result.success) {\n    return throwBadRequestException();\n  }\n\n  await withCsrf(req, result.data.csrfToken);\n\n  const logger = getLogger();\n  const headers = new Headers();\n  const { code, idToken } = result.data;\n\n  let userId: string;\n\n  if (idToken) {\n    const serializedSessionId = await createServerSideSession(idToken);\n    const cookie = await getSessionIdCookie();\n    const sessionId = await cookie.parse(serializedSessionId);\n    const user = await getLoggedInUser(sessionId);\n\n    userId = user?.uid;\n\n    headers.append('Set-Cookie', serializedSessionId);\n  } else {\n    userId = await getUserIdFromSession(req);\n  }\n\n  logger.info(\n    {\n      code,\n      userId,\n    },\n    `Adding member to organization...`\n  );\n\n  const invite = await acceptInviteToOrganization({ code, userId });\n  const organizationId = invite.organization.id;\n\n  logger.info(\n    {\n      code,\n      organizationId,\n      userId,\n    },\n    `Member successfully added to organization`\n  );\n\n  headers.append(\n    'Set-Cookie',\n    await serializeOrganizationIdCookie(organizationId)\n  );\n\n  return redirect(configuration.paths.appHome, {\n    headers,\n  });\n}\n\nfunction redirectToHomePage() {\n  return redirect('/');\n}\n\nfunction getRedirectPath() {\n  return isBrowser() ? window.location.pathname : undefined;\n}\n\nfunction getBodySchema() {\n  return z.object({\n    code: z.string().min(1),\n    idToken: z.string(),\n    csrfToken: z.string().min(1),\n  });\n}\n\nasync function getUserIdFromSession(request: Request) {\n  const sessionId = await parseSessionIdCookie(request);\n  const user = await getLoggedInUser(sessionId);\n\n  return user.uid;\n}\n", "import { useCallback, useState } from 'react';\nimport { Trans } from 'react-i18next';\n\nimport type { MultiFactorError, UserCredential, User } from 'firebase/auth';\n\nimport AuthProviderButton from '~/core/ui/AuthProviderButton';\nimport { useSignInWithProvider } from '~/core/firebase/hooks';\nimport getFirebaseErrorCode from '~/core/firebase/utils/get-firebase-error-code';\n\nimport If from '~/core/ui/If';\n\nimport AuthErrorMessage from './AuthErrorMessage';\nimport MultiFactorAuthChallengeModal from '~/components/auth/MultiFactorAuthChallengeModal';\nimport isMultiFactorError from '~/core/firebase/utils/is-multi-factor-error';\nimport PageLoadingIndicator from '~/core/ui/PageLoadingIndicator';\n\nimport configuration from '~/configuration';\n\nconst OAUTH_PROVIDERS = configuration.auth.providers.oAuth;\n\nconst OAuthProviders: React.FCC<{\n  onSignIn: (idToken: string) => unknown;\n}> = ({ onSignIn }) => {\n  const {\n    signInWithProvider,\n    state: signInWithProviderState,\n    resetState,\n  } = useSignInWithProvider();\n\n  // we make the UI \"busy\" until the next page is fully loaded\n  const loading = signInWithProviderState.loading;\n\n  const [multiFactorAuthError, setMultiFactorAuthError] =\n    useState<Maybe<MultiFactorError>>();\n\n  const createSession = useCallback(\n    async (user: User) => {\n      const idToken = await user.getIdToken();\n\n      onSignIn(idToken);\n    },\n    [onSignIn]\n  );\n\n  const onSignInWithProvider = useCallback(\n    async (signInRequest: () => Promise<UserCredential | undefined>) => {\n      try {\n        const credential = await signInRequest();\n\n        if (!credential) {\n          return Promise.reject();\n        }\n\n        await createSession(credential.user);\n      } catch (error) {\n        if (isMultiFactorError(error)) {\n          setMultiFactorAuthError(error as MultiFactorError);\n        } else {\n          throw getFirebaseErrorCode(error);\n        }\n      }\n    },\n    [setMultiFactorAuthError, createSession]\n  );\n\n  if (!OAUTH_PROVIDERS || !OAUTH_PROVIDERS.length) {\n    return null;\n  }\n\n  return (\n    <>\n      <If condition={loading}>\n        <PageLoadingIndicator />\n      </If>\n\n      <div className={'flex w-full flex-1 flex-col space-y-3'}>\n        <div className={'flex-col space-y-2'}>\n          {OAUTH_PROVIDERS.map((OAuthProviderClass) => {\n            const providerInstance = new OAuthProviderClass();\n            const providerId = providerInstance.providerId;\n\n            return (\n              <AuthProviderButton\n                key={providerId}\n                providerId={providerId}\n                onClick={() => {\n                  return onSignInWithProvider(() =>\n                    signInWithProvider(providerInstance)\n                  );\n                }}\n              >\n                <Trans\n                  i18nKey={'auth:signInWithProvider'}\n                  values={{\n                    provider: getProviderName(providerId),\n                  }}\n                />\n              </AuthProviderButton>\n            );\n          })}\n        </div>\n\n        <If condition={signInWithProviderState.error}>\n          {(error) => <AuthErrorMessage error={getFirebaseErrorCode(error)} />}\n        </If>\n      </div>\n\n      <If condition={multiFactorAuthError}>\n        {(error) => (\n          <MultiFactorAuthChallengeModal\n            error={error}\n            isOpen={true}\n            setIsOpen={(isOpen: boolean) => {\n              setMultiFactorAuthError(undefined);\n\n              // when the MFA modal gets closed without verification\n              // we reset the state\n              if (!isOpen) {\n                resetState();\n              }\n            }}\n            onSuccess={async (credential) => {\n              return createSession(credential.user);\n            }}\n          />\n        )}\n      </If>\n    </>\n  );\n};\n\nfunction getProviderName(providerId: string) {\n  const capitalize = (value: string) =>\n    value.slice(0, 1).toUpperCase() + value.slice(1);\n\n  if (providerId.endsWith('.com')) {\n    return capitalize(providerId.split('.com')[0]);\n  }\n\n  return capitalize(providerId);\n}\n\nexport default OAuthProviders;\n", "import Button from '../ui/Button';\nimport AuthProviderLogo from '~/core/ui/AuthProviderLogo';\n\nconst AuthProviderButton: React.FCC<{\n  providerId: string;\n  onClick: () => unknown;\n}> = ({ children, providerId, onClick }) => {\n  return (\n    <Button\n      data-cy={'auth-provider-button'}\n      block\n      color={'custom'}\n      size={'large'}\n      className={`AuthProviderButton`}\n      onClick={onClick}\n      data-provider={providerId}\n    >\n      <span className={'absolute left-3 flex items-center justify-start'}>\n        <AuthProviderLogo firebaseProviderId={providerId} />\n      </span>\n\n      <span className={'flex w-full flex-1 items-center'}>\n        <span className={'flex w-full items-center justify-center'}>\n          <span className={'text-current'}>{children}</span>\n        </span>\n      </span>\n    </Button>\n  );\n};\n\nexport default AuthProviderButton;\n", "import {\n  AtSymbolIcon,\n  DevicePhoneMobileIcon,\n} from '@heroicons/react/24/outline';\n\nconst DEFAULT_IMAGE_SIZE = 28;\n\nconst AuthProviderLogo: React.FC<{\n  firebaseProviderId: string;\n  width?: number;\n  height?: number;\n}> = ({ firebaseProviderId, width, height }) => {\n  const image = getOAuthProviderLogos()[firebaseProviderId];\n\n  if (typeof image === `string`) {\n    return (\n      <img\n        loading={'lazy'}\n        src={image}\n        alt={`${firebaseProviderId} logo`}\n        width={width ?? DEFAULT_IMAGE_SIZE}\n        height={height ?? DEFAULT_IMAGE_SIZE}\n      />\n    );\n  }\n\n  return <>{image}</>;\n};\n\nfunction getOAuthProviderLogos(): Record<string, string | JSX.Element> {\n  return {\n    password: <AtSymbolIcon className={'h-7'} />,\n    phone: <DevicePhoneMobileIcon className={'h-7'} />,\n    'google.com': '/assets/images/google.webp',\n    'facebook.com': '/assets/images/facebook.webp',\n    'twitter.com': '/assets/images/twitter.webp',\n    'github.com': '/assets/images/github.webp',\n    'microsoft.com': '/assets/images/microsoft.webp',\n    'apple.com': '/assets/images/apple.webp',\n  };\n}\n\nexport default AuthProviderLogo;\n", "import { useCallback } from 'react';\n\nimport { useAuth } from 'reactfire';\nimport type { FirebaseError } from 'firebase/app';\nimport type { UserCredential } from 'firebase/auth';\n\nimport useRequestState from '../../hooks/use-request-state';\n\nexport function useSignUpWithEmailAndPassword() {\n  const auth = useAuth();\n\n  const { state, setLoading, setData, setError } = useRequestState<\n    UserCredential,\n    FirebaseError\n  >();\n\n  const signUp = useCallback(\n    async (email: string, password: string) => {\n      setLoading(true);\n\n      try {\n        const { createUserWithEmailAndPassword } = await import(\n          'firebase/auth'\n        );\n\n        const credential = await createUserWithEmailAndPassword(\n          auth,\n          email,\n          password\n        );\n\n        setData(credential);\n\n        return credential;\n      } catch (error) {\n        setError(error as FirebaseError);\n      }\n    },\n    [auth, setData, setError, setLoading]\n  );\n\n  return [signUp, state] as [typeof signUp, typeof state];\n}\n", "import { useCallback } from 'react';\n\nimport { useAuth } from 'reactfire';\nimport type { FirebaseError } from 'firebase/app';\nimport type { UserCredential, AuthProvider, Auth } from 'firebase/auth';\n\nimport useRequestState from '~/core/hooks/use-request-state';\n\nexport function useSignInWithProvider() {\n  const auth = useAuth();\n\n  const { state, setLoading, setData, setError, resetState } = useRequestState<\n    UserCredential,\n    FirebaseError\n  >();\n\n  const signInWithProvider = useCallback(\n    async (provider: AuthProvider) => {\n      setLoading(true);\n\n      try {\n        const credential = await getCredential(auth, provider);\n\n        setData(credential);\n\n        return credential;\n      } catch (error) {\n        setError(error as FirebaseError);\n\n        return Promise.reject(error);\n      }\n    },\n    [auth, setData, setError, setLoading]\n  );\n\n  return { signInWithProvider, state, resetState };\n}\n\nasync function getCredential(auth: Auth, provider: AuthProvider) {\n  const user = auth.currentUser;\n\n  const {\n    signInWithPopup,\n    browserPopupRedirectResolver,\n    reauthenticateWithPopup,\n  } = await import('firebase/auth');\n\n  if (user) {\n    return reauthenticateWithPopup(\n      user,\n      provider,\n      browserPopupRedirectResolver\n    );\n  }\n\n  return signInWithPopup(auth, provider, browserPopupRedirectResolver);\n}\n", "import { FirebaseError } from 'firebase/app';\n\nexport default function getFirebaseErrorCode(error: Maybe<unknown>) {\n  if (!error) {\n    return;\n  }\n\n  return isFirebaseError(error) ? error.code : undefined;\n}\n\nfunction isFirebaseError(error: unknown): error is FirebaseError {\n  return error instanceof FirebaseError;\n}\n", "import { Trans } from 'react-i18next';\nimport Alert from '~/core/ui/Alert';\n\n/**\n * @name AuthErrorMessage\n * @param error This error comes from Firebase as the code returned on errors\n * This error is mapped from the translation auth:errors.{error}\n * To update the error messages, please update the translation file\n * @constructor\n */\nexport default function AuthErrorMessage({ error }: { error: Maybe<string> }) {\n  if (!error) {\n    return null;\n  }\n\n  const DefaultError = <Trans i18nKey=\"auth:errors.default\" />;\n\n  return (\n    <Alert className={'w-full'} type={'error'}>\n      <p className={'text-sm font-semibold'} data-cy={'auth-error-message'}>\n        <Trans\n          i18nKey={`auth:errors.${error}`}\n          defaults={'<DefaultError />'}\n          components={{ DefaultError }}\n        />\n      </p>\n    </Alert>\n  );\n}\n", "import type { MultiFactorError, UserCredential } from 'firebase/auth';\n\nimport {\n  getMultiFactorResolver,\n  PhoneAuthProvider,\n  PhoneMultiFactorGenerator,\n} from 'firebase/auth';\n\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\nimport { useAuth } from 'reactfire';\nimport { SpringSpinner } from 'react-epic-spinners';\nimport type { FirebaseError } from 'firebase/app';\nimport { Trans } from 'react-i18next';\n\nimport Modal from '~/core/ui/Modal';\nimport TextField from '~/core/ui/TextField';\nimport Button from '~/core/ui/Button';\nimport If from '~/core/ui/If';\nimport Alert from '~/core/ui/Alert';\n\nimport useRequestState from '~/core/hooks/use-request-state';\nimport useRecaptchaVerifier from '~/core/firebase/hooks/use-recaptcha-verifier';\nimport AuthErrorMessage from '~/components/auth/AuthErrorMessage';\n\nconst buttonId = `multi-factor-auth-challenge-button`;\n\nconst MultiFactorAuthChallengeModal: React.FC<{\n  error: MultiFactorError;\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  onSuccess: (credential: UserCredential) => unknown;\n  cancelButton?: boolean;\n}> = ({ error, isOpen, setIsOpen, onSuccess, cancelButton }) => {\n  const auth = useAuth();\n\n  const verificationIdState = useRequestState<string>();\n  const verificationCodeState = useRequestState<void>();\n  const getRecaptchaVerifier = useRecaptchaVerifier(buttonId);\n  const phoneVerificationSent = useRef(false);\n\n  const resolver = useMemo(() => {\n    return getMultiFactorResolver(auth, error);\n  }, [auth, error]);\n\n  const { setLoading, setData, setError, state } = verificationIdState;\n\n  const onCodeSubmit = useCallback(\n    async (verificationCode: string) => {\n      const verificationId = state.data;\n\n      if (!verificationId) {\n        return;\n      }\n\n      verificationCodeState.setLoading(true);\n\n      const phoneAuthCredential = PhoneAuthProvider.credential(\n        verificationId,\n        verificationCode\n      );\n\n      const multiFactorAssertion =\n        PhoneMultiFactorGenerator.assertion(phoneAuthCredential);\n\n      try {\n        const credential = await resolver.resolveSignIn(multiFactorAssertion);\n\n        onSuccess(credential);\n      } catch (e) {\n        const error = e as FirebaseError;\n        verificationCodeState.setError(error.code);\n      }\n    },\n    [onSuccess, resolver, state.data, verificationCodeState]\n  );\n\n  useEffect(() => {\n    if (state.loading || state.data || phoneVerificationSent.current) {\n      return;\n    }\n\n    setLoading(true);\n    phoneVerificationSent.current = true;\n\n    const phoneInfoOptions = {\n      multiFactorHint: resolver.hints[0],\n      session: resolver.session,\n    };\n\n    const phoneAuthProvider = new PhoneAuthProvider(auth);\n\n    void (async () => {\n      try {\n        const recaptchaVerifier = await getRecaptchaVerifier();\n\n        const verificationId = await phoneAuthProvider.verifyPhoneNumber(\n          phoneInfoOptions,\n          recaptchaVerifier\n        );\n\n        setData(verificationId);\n      } catch (e) {\n        console.error(e);\n        setError(e);\n      }\n    })();\n  }, [\n    auth,\n    resolver.session,\n    resolver.hints,\n    getRecaptchaVerifier,\n    setData,\n    setLoading,\n    setError,\n    state.data,\n    state.loading,\n  ]);\n\n  return (\n    <>\n      <div id={buttonId} />\n\n      <Modal\n        heading={<Trans i18nKey={'auth:verificationCode'} />}\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        closeButton={cancelButton}\n      >\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n\n            const data = new FormData(e.currentTarget);\n            const code = data.get(`verificationCode`) as string;\n\n            if (!code) {\n              return;\n            }\n\n            await onCodeSubmit(code);\n          }}\n        >\n          <If condition={state.loading}>\n            <LoadingSpinner />\n          </If>\n\n          <If condition={state.error}>\n            <Alert type={'error'}>\n              <Trans i18nKey={'auth:sendMfaCodeError'} />\n            </Alert>\n          </If>\n\n          <If condition={state.data}>\n            <div className={'flex flex-col space-y-3'}>\n              <TextField.Label>\n                <Trans i18nKey={'auth:verificationCode'} />\n\n                <TextField.Input\n                  autoComplete={'off'}\n                  required\n                  name={'verificationCode'}\n                />\n\n                <TextField.Hint>\n                  <Trans i18nKey={'auth:verificationCodeHint'} />\n                </TextField.Hint>\n              </TextField.Label>\n\n              <If condition={verificationCodeState.state.error}>\n                <AuthErrorMessage\n                  error={verificationCodeState.state.error as string}\n                />\n              </If>\n\n              <Button\n                loading={verificationCodeState.state.loading}\n                block\n                type={'submit'}\n              >\n                <Trans i18nKey={'auth:verificationCodeSubmitButtonLabel'} />\n              </Button>\n            </div>\n          </If>\n        </form>\n      </Modal>\n    </>\n  );\n};\n\nfunction LoadingSpinner() {\n  return (\n    <div className={'my-6 flex flex-col items-center justify-center space-y-4'}>\n      <div>\n        <SpringSpinner color={'currentColor'} size={36} />\n      </div>\n\n      <div>\n        <p>\n          <Trans i18nKey={'auth:sendingMfaCode'} />\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default MultiFactorAuthChallengeModal;\n", "import { useAuth } from 'reactfire';\nimport { useCallback } from 'react';\n\nfunction useRecaptchaVerifier(id: string) {\n  const auth = useAuth();\n\n  return useCallback(async () => {\n    const { RecaptchaVerifier } = await import('firebase/auth');\n\n    return new RecaptchaVerifier(\n      id,\n      {\n        size: 'invisible',\n      },\n      auth\n    );\n  }, [auth, id]);\n}\n\nexport default useRecaptchaVerifier;\n", "import { FirebaseError } from 'firebase/app';\nimport type { MultiFactorError } from 'firebase/auth';\n\nexport default function isMultiFactorError(\n  error: unknown\n): error is MultiFactorError {\n  if (error instanceof FirebaseError) {\n    return error.code === `auth/multi-factor-auth-required`;\n  }\n\n  return false;\n}\n", "import type { PropsWithChildren } from 'react';\nimport { FulfillingBouncingCircleSpinner } from 'react-epic-spinners';\n\nimport LogoImage from '~/core/ui/Logo/LogoImage';\nimport If from '~/core/ui/If';\n\nexport default function PageLoadingIndicator({\n  children,\n  fullPage,\n  displayLogo,\n}: PropsWithChildren<{\n  fullPage?: boolean;\n  displayLogo?: boolean;\n}>) {\n  const useFullPage = fullPage ?? true;\n  const shouldDisplayLogo = displayLogo ?? true;\n\n  return (\n    <div\n      className={`flex flex-col items-center justify-center space-y-6 ${\n        useFullPage\n          ? 'fixed top-0 left-0 z-[100] h-screen w-screen bg-white' +\n            ' dark:bg-black-500'\n          : ''\n      }`}\n    >\n      <If condition={shouldDisplayLogo}>\n        <div className={'my-2'}>\n          <LogoImage />\n        </div>\n      </If>\n\n      <FulfillingBouncingCircleSpinner size={48} color={`currentColor`} />\n\n      <div className={'text-sm font-medium'}>{children}</div>\n    </div>\n  );\n}\n", "import { useCallback, useEffect } from 'react';\nimport { useAuth, useSigninCheck } from 'reactfire';\n\nimport isBrowser from '~/core/generic/is-browser';\nimport useClearFirestoreCache from '~/core/hooks/use-clear-firestore-cache';\n\nconst AuthRedirectListener: React.FCC<{\n  whenSignedOut?: string;\n}> = ({ children, whenSignedOut }) => {\n  const auth = useAuth();\n  const { status } = useSigninCheck();\n  const redirectUserAway = useRedirectUserAway();\n  const clearCache = useClearFirestoreCache();\n  const isSignInCheckDone = status === 'success';\n\n  useEffect(() => {\n    // this should run once and only on success\n    if (!isSignInCheckDone) {\n      return;\n    }\n\n    // keep this running for the whole session\n    // unless the component was unmounted, for example, on log-outs\n    const listener = auth.onAuthStateChanged((user) => {\n      // log user out if user is falsy\n      // and if the consumer provided a route to redirect the user\n      const shouldLogOut = !user && whenSignedOut;\n\n      if (!user) {\n        clearCache();\n      }\n\n      if (shouldLogOut) {\n        return redirectUserAway(whenSignedOut);\n      }\n    });\n\n    // destroy listener on un-mounts\n    return () => listener();\n  }, [\n    auth,\n    clearCache,\n    isSignInCheckDone,\n    redirectUserAway,\n    status,\n    whenSignedOut,\n  ]);\n\n  return <>{children}</>;\n};\n\nexport default function GuardedPage({\n  children,\n  whenSignedOut,\n}: React.PropsWithChildren<{\n  whenSignedOut?: string;\n}>) {\n  const shouldActivateListener = isBrowser();\n\n  // we only activate the listener if\n  // we are rendering in the browser\n  if (!shouldActivateListener) {\n    return <>{children}</>;\n  }\n\n  return (\n    <AuthRedirectListener whenSignedOut={whenSignedOut}>\n      {children}\n    </AuthRedirectListener>\n  );\n}\n\nfunction useRedirectUserAway() {\n  return useCallback((path: string) => {\n    const currentPath = window.location.pathname;\n    const isNotCurrentPage = currentPath !== path;\n\n    // we then redirect the user to the page\n    // specified in the props of the component\n    if (isNotCurrentPage) {\n      window.location.assign(path);\n    }\n  }, []);\n}\n", "import { useCallback } from 'react';\n\n/**\n * @name useClearFirestoreCache\n * @description This function needs to be called on sign-out to clear the\n * Firestore cache before it throws a permissions error\n * Solves: https://github.com/FirebaseExtended/reactfire/discussions/228#discussioncomment-2101193\n */\nfunction useClearFirestoreCache() {\n  return useCallback(() => {\n    const reactFirePreloadedObservables = (\n      globalThis as Record<string, unknown>\n    )['_reactFirePreloadedObservables'] as Map<string, unknown> | undefined;\n\n    if (reactFirePreloadedObservables) {\n      Array.from(reactFirePreloadedObservables.keys())\n        .filter((key) => key.includes('firestore'))\n        .forEach((key) => reactFirePreloadedObservables.delete(key));\n    }\n  }, []);\n}\n\nexport default useClearFirestoreCache;\n", "import Csrf from 'csrf';\n\n/**\n * @name createCsrfToken\n */\nasync function createCsrfToken() {\n  const csrf = new Csrf();\n  const secret = await csrf.secret();\n  const token = csrf.create(secret);\n\n  return {\n    token,\n    secret,\n  };\n}\n\nexport default createCsrfToken;\n", "import {\n  createFirebaseSessionCookie,\n  getSessionCookieTTL,\n} from '~/lib/server/auth/save-session-cookie';\n\nimport { serializeSessionIdCookie } from '~/lib/server/cookies/session.cookie';\n\nasync function createServerSideSession(idToken: string) {\n  const expiresIn = getSessionCookieTTL();\n\n  const sessionCookie = await createFirebaseSessionCookie(idToken, expiresIn);\n\n  return serializeSessionIdCookie(sessionCookie);\n}\n\nexport default createServerSideSession;\n", "import { useCallback, useEffect, useRef } from 'react';\nimport type { FirebaseError } from 'firebase/app';\nimport type { User } from 'firebase/auth';\n\nimport If from '~/core/ui/If';\nimport { useSignUpWithEmailAndPassword } from '~/core/firebase/hooks';\nimport getFirebaseErrorCode from '~/core/firebase/utils/get-firebase-error-code';\n\nimport AuthErrorMessage from './AuthErrorMessage';\nimport EmailPasswordSignUpForm from '~/components/auth/EmailPasswordSignUpForm';\n\nconst EmailPasswordSignUpContainer: React.FCC<{\n  onSignUp: (idToken: string) => unknown;\n  onError?: (error: FirebaseError) => unknown;\n}> = ({ onSignUp, onError }) => {\n  const [signUp, state] = useSignUpWithEmailAndPassword();\n  const redirecting = useRef(false);\n\n  const loading = state.loading || redirecting.current;\n\n  const callOnErrorCallback = useCallback(() => {\n    if (state.error && onError) {\n      onError(state.error);\n    }\n  }, [state.error, onError]);\n\n  const createSession = useCallback(\n    async (user: User) => {\n      // using the ID token, we will make a request to initiate the session\n      // to make SSR possible via session cookie\n      const idToken = await user.getIdToken();\n\n      redirecting.current = true;\n\n      // we notify the parent component that\n      // the user signed up successfully, so they can be redirected\n      onSignUp(idToken);\n    },\n    [onSignUp]\n  );\n\n  useEffect(() => {\n    callOnErrorCallback();\n  }, [callOnErrorCallback]);\n\n  const onSubmit = useCallback(\n    async (params: { email: string; password: string }) => {\n      if (loading) {\n        return;\n      }\n\n      const credential = await signUp(params.email, params.password);\n\n      if (credential) {\n        await createSession(credential.user);\n      }\n    },\n    [loading, signUp, createSession]\n  );\n\n  return (\n    <>\n      <If condition={state.error}>\n        {(error) => <AuthErrorMessage error={getFirebaseErrorCode(error)} />}\n      </If>\n\n      <EmailPasswordSignUpForm onSubmit={onSubmit} loading={loading} />\n    </>\n  );\n};\n\nexport default EmailPasswordSignUpContainer;\n", "import { Trans, useTranslation } from 'react-i18next';\nimport { useForm } from 'react-hook-form';\n\nimport TextField from '~/core/ui/TextField';\nimport Button from '~/core/ui/Button';\nimport If from '~/core/ui/If';\n\nconst EmailPasswordSignUpForm: React.FCC<{\n  onSubmit: (params: {\n    email: string;\n    password: string;\n    repeatPassword: string;\n  }) => unknown;\n  loading: boolean;\n}> = ({ onSubmit, loading }) => {\n  const { t } = useTranslation();\n\n  const { register, handleSubmit, watch, formState } = useForm({\n    defaultValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n    },\n  });\n\n  const emailControl = register('email', { required: true });\n  const errors = formState.errors;\n\n  const passwordControl = register('password', {\n    required: true,\n    minLength: {\n      value: 6,\n      message: t<string>(`auth:passwordLengthError`),\n    },\n  });\n\n  const passwordValue = watch(`password`);\n\n  const repeatPasswordControl = register('repeatPassword', {\n    required: true,\n    minLength: {\n      value: 6,\n      message: t<string>(`auth:passwordLengthError`),\n    },\n    validate: (value) => {\n      if (value !== passwordValue) {\n        return t<string>(`auth:passwordsDoNotMatch`);\n      }\n\n      return true;\n    },\n  });\n\n  return (\n    <form className={'w-full'} onSubmit={handleSubmit(onSubmit)}>\n      <div className={'flex-col space-y-4'}>\n        <TextField>\n          <TextField.Label>\n            <Trans i18nKey={'common:emailAddress'} />\n\n            <TextField.Input\n              data-cy={'email-input'}\n              required\n              type=\"email\"\n              placeholder={'your@email.com'}\n              innerRef={emailControl.ref}\n              onBlur={emailControl.onBlur}\n              onChange={emailControl.onChange}\n              name={emailControl.name}\n            />\n          </TextField.Label>\n\n          <TextField.Error error={errors.email?.message} />\n        </TextField>\n\n        <TextField>\n          <TextField.Label>\n            <Trans i18nKey={'common:password'} />\n\n            <TextField.Input\n              data-cy={'password-input'}\n              required\n              type=\"password\"\n              placeholder={''}\n              innerRef={passwordControl.ref}\n              onBlur={passwordControl.onBlur}\n              onChange={passwordControl.onChange}\n              name={passwordControl.name}\n            />\n\n            <TextField.Hint>\n              <Trans i18nKey={'auth:passwordHint'} />\n            </TextField.Hint>\n\n            <TextField.Error\n              data-cy=\"password-error\"\n              error={errors.password?.message}\n            />\n          </TextField.Label>\n        </TextField>\n\n        <TextField>\n          <TextField.Label>\n            <Trans i18nKey={'auth:repeatPassword'} />\n\n            <TextField.Input\n              data-cy={'repeat-password-input'}\n              required\n              type=\"password\"\n              placeholder={''}\n              innerRef={repeatPasswordControl.ref}\n              onBlur={repeatPasswordControl.onBlur}\n              onChange={repeatPasswordControl.onChange}\n              name={repeatPasswordControl.name}\n            />\n\n            <TextField.Hint>\n              <Trans i18nKey={'auth:repeatPasswordHint'} />\n            </TextField.Hint>\n\n            <TextField.Error\n              data-cy=\"repeat-password-error\"\n              error={errors.repeatPassword?.message}\n            />\n          </TextField.Label>\n        </TextField>\n\n        <div>\n          <Button\n            size={'large'}\n            data-cy={'auth-submit-button'}\n            className={'w-full'}\n            color={'primary'}\n            type=\"submit\"\n            loading={loading}\n          >\n            <If\n              condition={loading}\n              fallback={<Trans i18nKey={'auth:getStarted'} />}\n            >\n              <Trans i18nKey={'auth:signingUp'} />\n            </If>\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default EmailPasswordSignUpForm;\n", "import { useCallback, useState } from 'react';\n\nimport type { MultiFactorError, Auth } from 'firebase/auth';\nimport {\n  signInWithEmailAndPassword,\n  reauthenticateWithCredential,\n  EmailAuthProvider,\n} from 'firebase/auth';\n\nimport { useAuth } from 'reactfire';\n\nimport MultiFactorAuthChallengeModal from '~/components/auth/MultiFactorAuthChallengeModal';\nimport isMultiFactorError from '~/core/firebase/utils/is-multi-factor-error';\n\nimport getFirebaseErrorCode from '~/core/firebase/utils/get-firebase-error-code';\nimport useRequestState from '~/core/hooks/use-request-state';\n\nimport AuthErrorMessage from '~/components/auth/AuthErrorMessage';\nimport EmailPasswordSignInForm from '~/components/auth/EmailPasswordSignInForm';\n\nimport If from '~/core/ui/If';\n\nconst EmailPasswordSignInContainer: React.FCC<{\n  onSignIn: (idToken: string) => unknown;\n}> = ({ onSignIn }) => {\n  const auth = useAuth();\n  const requestState = useRequestState<void>();\n\n  const [multiFactorAuthError, setMultiFactorAuthError] =\n    useState<Maybe<MultiFactorError>>();\n\n  const isLoading = requestState.state.loading;\n\n  const signInWithCredentials = useCallback(\n    async (params: { email: string; password: string }) => {\n      if (isLoading) {\n        return;\n      }\n\n      requestState.setLoading(true);\n\n      try {\n        const credential = await getCredential(auth, params);\n\n        if (credential) {\n          // using the ID token, we will make a request to initiate the session\n          // to make SSR possible via session cookie\n          const idToken = await credential.user.getIdToken();\n\n          // we notify the parent component that\n          // the user signed in successfully, so they can be redirected\n          onSignIn(idToken);\n        }\n      } catch (error) {\n        if (isMultiFactorError(error)) {\n          setMultiFactorAuthError(error);\n        } else {\n          requestState.setError(error);\n        }\n      }\n    },\n    [isLoading, auth, onSignIn, requestState]\n  );\n\n  return (\n    <>\n      <If condition={requestState.state.error}>\n        <AuthErrorMessage\n          error={getFirebaseErrorCode(requestState.state.error)}\n        />\n      </If>\n\n      <EmailPasswordSignInForm\n        onSubmit={signInWithCredentials}\n        loading={isLoading}\n      />\n\n      <If condition={multiFactorAuthError}>\n        {(error) => (\n          <MultiFactorAuthChallengeModal\n            error={error}\n            isOpen={true}\n            setIsOpen={(isOpen) => {\n              setMultiFactorAuthError(undefined);\n\n              // when the MFA modal gets closed without verification\n              // we reset the state\n              if (!isOpen) {\n                requestState.resetState();\n              }\n            }}\n            onSuccess={async (credential) => {\n              const idToken = await credential.user.getIdToken();\n\n              // we notify the parent component that\n              // the user signed in successfully, so they can be redirected\n              onSignIn(idToken);\n            }}\n          />\n        )}\n      </If>\n    </>\n  );\n};\n\nasync function getCredential(\n  auth: Auth,\n  params: { email: string; password: string }\n) {\n  const { email, password } = params;\n  const user = auth.currentUser;\n\n  if (user) {\n    const credential = EmailAuthProvider.credential(email, password);\n\n    return reauthenticateWithCredential(user, credential);\n  }\n\n  return signInWithEmailAndPassword(auth, email, password);\n}\n\nexport default EmailPasswordSignInContainer;\n", "import { Link } from '@remix-run/react';\nimport { Trans } from 'react-i18next';\nimport { useForm } from 'react-hook-form';\n\nimport TextField from '~/core/ui/TextField';\nimport Button from '~/core/ui/Button';\nimport If from '~/core/ui/If';\n\nconst EmailPasswordSignInForm: React.FCC<{\n  onSubmit: (params: { email: string; password: string }) => unknown;\n  loading: boolean;\n}> = ({ onSubmit, loading }) => {\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const emailControl = register('email', { required: true });\n  const passwordControl = register('password', { required: true });\n\n  return (\n    <form className={'w-full'} onSubmit={handleSubmit(onSubmit)}>\n      <div className={'flex-col space-y-4'}>\n        <TextField>\n          <TextField.Label>\n            <Trans i18nKey={'common:emailAddress'} />\n\n            <TextField.Input\n              data-cy={'email-input'}\n              required\n              type=\"email\"\n              placeholder={'your@email.com'}\n              innerRef={emailControl.ref}\n              onBlur={emailControl.onBlur}\n              onChange={emailControl.onChange}\n              name={emailControl.name}\n            />\n          </TextField.Label>\n        </TextField>\n\n        <TextField>\n          <TextField.Label>\n            <Trans i18nKey={'common:password'} />\n\n            <TextField.Input\n              required\n              data-cy={'password-input'}\n              type=\"password\"\n              placeholder={''}\n              innerRef={passwordControl.ref}\n              onBlur={passwordControl.onBlur}\n              onChange={passwordControl.onChange}\n              name={passwordControl.name}\n            />\n\n            <div className={'py-0.5 text-xs'}>\n              <Link to={'/auth/password-reset'} className={'hover:underline'}>\n                <Trans i18nKey={'auth:passwordForgottenQuestion'} />\n              </Link>\n            </div>\n          </TextField.Label>\n        </TextField>\n\n        <div>\n          <Button\n            size={'large'}\n            className={'w-full'}\n            color={'primary'}\n            data-cy=\"auth-submit-button\"\n            type=\"submit\"\n            loading={loading}\n          >\n            <If\n              condition={loading}\n              fallback={<Trans i18nKey={'auth:signIn'} />}\n            >\n              <Trans i18nKey={'auth:signingIn'} />\n            </If>\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default EmailPasswordSignInForm;\n", "import { useCallback } from 'react';\nimport type { UserCredential } from 'firebase/auth';\nimport PhoneNumberCredentialForm from '~/components/auth/PhoneNumberCredentialForm';\n\nconst PhoneNumberSignInContainer: React.FC<{\n  onSignIn: (idToken: string) => unknown;\n}> = ({ onSignIn }) => {\n  const onSuccess = useCallback(\n    async (credential: UserCredential) => {\n      const idToken = await credential.user.getIdToken();\n\n      onSignIn(idToken);\n    },\n    [onSignIn]\n  );\n\n  return <PhoneNumberCredentialForm action={'signIn'} onSuccess={onSuccess} />;\n};\n\nexport default PhoneNumberSignInContainer;\n", "import type { FormEventHandler } from 'react';\nimport { useCallback } from 'react';\nimport type { FirebaseError } from 'firebase/app';\nimport type { ConfirmationResult, UserCredential } from 'firebase/auth';\nimport { useAuth } from 'reactfire';\nimport toaster from 'react-hot-toast';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport useRecaptchaVerifier from '~/core/firebase/hooks/use-recaptcha-verifier';\nimport getFirebaseErrorCode from '~/core/firebase/utils/get-firebase-error-code';\nimport useRequestState from '~/core/hooks/use-request-state';\n\nimport If from '~/core/ui/If';\nimport TextField from '~/core/ui/TextField';\nimport Button from '~/core/ui/Button';\n\nimport AuthErrorMessage from '~/components/auth/AuthErrorMessage';\n\ntype ActionType = 'signIn' | 'link';\n\nconst RECAPTCHA_ACTION_BUTTON_ID = 'phone-recaptcha-button';\n\nconst PhoneNumberCredentialForm: React.FC<{\n  action: ActionType;\n  onSuccess: (credential: UserCredential) => void;\n}> = ({ action, onSuccess }) => {\n  const { t } = useTranslation();\n\n  const verifyPhoneNumberState = useRequestState<ConfirmationResult>();\n  const verifyVerificationCodeState = useRequestState<void>();\n  const getPhoneNumberSignInMethod = useGetPhoneNumberSignInMethod(action);\n\n  const onLinkPhoneNumberSubmit: FormEventHandler<HTMLFormElement> =\n    useCallback(\n      async (event) => {\n        event.preventDefault();\n\n        verifyPhoneNumberState.setLoading(true);\n\n        const data = new FormData(event.currentTarget);\n        const phoneNumber = data.get('phoneNumber') as string;\n\n        const promise = getPhoneNumberSignInMethod(phoneNumber)\n          .then((confirmationResult) => {\n            // when confirmationResult is received\n            // we set it as the state of verifyPhoneNumberState\n            verifyPhoneNumberState.setData(confirmationResult);\n          })\n          .catch((error) => {\n            verifyPhoneNumberState.setError(error);\n\n            throw getFirebaseErrorCode(error);\n          });\n\n        await toaster.promise(promise, {\n          loading: t<string>(`profile:verifyPhoneNumberLoading`),\n          success: t<string>(`profile:verifyPhoneNumberSuccess`),\n          error: t<string>(`profile:verifyPhoneNumberError`),\n        });\n      },\n      [verifyPhoneNumberState, getPhoneNumberSignInMethod, t]\n    );\n\n  const onVerificationCodeSubmit: FormEventHandler<HTMLFormElement> =\n    useCallback(\n      async (event) => {\n        event.preventDefault();\n\n        const data = new FormData(event.currentTarget);\n        const verificationCode = data.get('verificationCode') as string;\n\n        // confirmation code is stored as the state of verifyPhoneNumberState\n        const confirmationResult = verifyPhoneNumberState.state.data;\n\n        // in the weird event we do not have a verifyPhoneNumberState\n        // we simply exit the function\n        if (!confirmationResult) {\n          return;\n        }\n\n        verifyVerificationCodeState.setLoading(true);\n\n        // we verify that the verification code is correct\n        const promise = confirmationResult\n          .confirm(verificationCode)\n          .then(onSuccess)\n          .catch((error: FirebaseError) => {\n            verifyVerificationCodeState.setError(error);\n\n            throw getFirebaseErrorCode(error);\n          });\n\n        await toaster.promise(promise, {\n          loading: t<string>(`profile:verificationCodeLoading`),\n          success: t<string>(`profile:verificationCodeSuccess`),\n          error: t<string>(`profile:verificationCodeError`),\n        });\n      },\n      [\n        verifyPhoneNumberState.state.data,\n        verifyVerificationCodeState,\n        t,\n        onSuccess,\n      ]\n    );\n\n  // if verifyPhoneNumberState's state is not set, we dispplay the phone\n  // number form\n  const shouldDisplayPhoneNumberForm =\n    verifyPhoneNumberState.state.data === undefined;\n\n  // otherwise, we display the verification code form\n  const shouldDisplayVerificationCodeForm = !shouldDisplayPhoneNumberForm;\n\n  return (\n    <>\n      <If condition={shouldDisplayPhoneNumberForm}>\n        <form className={'w-full'} onSubmit={onLinkPhoneNumberSubmit}>\n          <div className={'flex flex-col space-y-2'}>\n            <TextField.Label>\n              <Trans i18nKey={'profile:phoneNumberLabel'} />\n\n              <TextField.Input\n                required\n                pattern={'^\\\\+?[1-9]\\\\d{1,14}$'}\n                name={'phoneNumber'}\n                type={'tel'}\n                placeholder={'Ex. +919367788755'}\n                disabled={verifyPhoneNumberState.state.loading}\n              />\n            </TextField.Label>\n\n            <If condition={verifyPhoneNumberState.state.error}>\n              {(error) => (\n                <AuthErrorMessage error={getFirebaseErrorCode(error)} />\n              )}\n            </If>\n\n            <Button\n              size={'large'}\n              id={RECAPTCHA_ACTION_BUTTON_ID}\n              block\n              type={'submit'}\n              loading={verifyPhoneNumberState.state.loading}\n            >\n              <If condition={action === 'link'}>\n                <Trans i18nKey={'profile:verifyPhoneNumberSubmitLabel'} />\n              </If>\n\n              <If condition={action === 'signIn'}>\n                <Trans i18nKey={'auth:signInWithPhoneNumber'} />\n              </If>\n            </Button>\n          </div>\n        </form>\n      </If>\n\n      <If condition={shouldDisplayVerificationCodeForm}>\n        <form className={'w-full'} onSubmit={onVerificationCodeSubmit}>\n          <div className={'flex flex-col space-y-3'}>\n            <TextField.Label>\n              <Trans i18nKey={'profile:verificationCode'} />\n\n              <TextField.Input\n                required\n                autoComplete={'off'}\n                name={'verificationCode'}\n              />\n\n              <TextField.Hint>\n                <Trans i18nKey={'profile:verifyActivationCodeDescription'} />\n              </TextField.Hint>\n            </TextField.Label>\n\n            <If condition={verifyVerificationCodeState.state.error}>\n              {(error) => (\n                <AuthErrorMessage error={getFirebaseErrorCode(error)} />\n              )}\n            </If>\n\n            <Button\n              size={'large'}\n              block\n              loading={verifyVerificationCodeState.state.loading}\n            >\n              <Trans i18nKey={'profile:verifyActivationCodeSubmitLabel'} />\n            </Button>\n          </div>\n        </form>\n      </If>\n    </>\n  );\n};\n\nfunction useGetPhoneNumberSignInMethod(action: ActionType) {\n  const auth = useAuth();\n  const getRecaptchaVerifier = useRecaptchaVerifier(RECAPTCHA_ACTION_BUTTON_ID);\n\n  return useCallback(\n    async (phoneNumber: string) => {\n      const verifier = await getRecaptchaVerifier();\n\n      if (action === `link`) {\n        const { linkWithPhoneNumber } = await import('firebase/auth');\n        const user = auth.currentUser;\n\n        if (!user) {\n          return Promise.reject(`User is not logged in`);\n        }\n\n        return linkWithPhoneNumber(user, phoneNumber, verifier);\n      }\n\n      if (action === `signIn`) {\n        const { signInWithPhoneNumber } = await import('firebase/auth');\n\n        return signInWithPhoneNumber(auth, phoneNumber, verifier);\n      }\n\n      return Promise.reject(`Invalid action \"${action}\"`);\n    },\n    [action, auth, getRecaptchaVerifier]\n  );\n}\n\nexport default PhoneNumberCredentialForm;\n", "import { Trans, useTranslation } from 'react-i18next';\nimport type { FormEventHandler } from 'react';\nimport { useCallback } from 'react';\nimport { useAuth } from 'reactfire';\nimport { sendSignInLinkToEmail } from 'firebase/auth';\nimport toast from 'react-hot-toast';\n\nimport useRequestState from '~/core/hooks/use-request-state';\nimport getFirebaseErrorCode from '~/core/firebase/utils/get-firebase-error-code';\n\nimport TextField from '~/core/ui/TextField';\nimport Button from '~/core/ui/Button';\nimport If from '~/core/ui/If';\nimport Alert from '~/core/ui/Alert';\n\nimport configuration from '~/configuration';\n\nconst EmailLinkAuth: React.FC = () => {\n  const auth = useAuth();\n  const { t } = useTranslation();\n  const { state, setLoading, setData, setError } = useRequestState<void>();\n\n  const onSubmit: FormEventHandler<HTMLFormElement> = useCallback(\n    async (event) => {\n      event.preventDefault();\n\n      const target = event.currentTarget;\n      const data = new FormData(target);\n      const email = data.get('email') as string;\n      const url = getAuthUrl();\n\n      setLoading(true);\n\n      const settings = {\n        url,\n        handleCodeInApp: true,\n      };\n\n      const promise = sendSignInLinkToEmail(auth, email, settings)\n        .then(() => {\n          storeEmailInStorage(email);\n\n          setData();\n        })\n        .catch((error) => {\n          setError(error);\n\n          throw getFirebaseErrorCode(error);\n        });\n\n      await toast.promise(promise, {\n        loading: t<string>('auth:sendingEmailLink'),\n        success: t<string>(`auth:sendLinkSuccessToast`),\n        error: t<string>(`auth:errors.link`),\n      });\n    },\n    [auth, t, setData, setError, setLoading]\n  );\n\n  if (state.success) {\n    return (\n      <Alert type={'success'}>\n        <Trans i18nKey={'auth:sendLinkSuccess'} />\n      </Alert>\n    );\n  }\n\n  return (\n    <form className={'w-full'} onSubmit={onSubmit}>\n      <div className={'flex flex-col space-y-4'}>\n        <TextField>\n          <TextField.Label>\n            <Trans i18nKey={'common:emailAddress'} />\n\n            <TextField.Input\n              data-cy={'email-input'}\n              required\n              type=\"email\"\n              placeholder={'your@email.com'}\n              name={'email'}\n            />\n          </TextField.Label>\n        </TextField>\n\n        <Button size={'large'} loading={state.loading}>\n          <If\n            condition={state.loading}\n            fallback={<Trans i18nKey={'auth:sendEmailLink'} />}\n          >\n            <Trans i18nKey={'auth:sendingEmailLink'} />\n          </If>\n        </Button>\n      </div>\n\n      <If condition={state.error}>\n        <Alert type={'error'}>\n          <Trans i18nKey={'auth:errors.link'} />\n        </Alert>\n      </If>\n    </form>\n  );\n};\n\nfunction getAuthUrl() {\n  const origin = window.location.origin;\n  const path = configuration.paths.emailLinkSignIn;\n\n  return [origin, path].join('');\n}\n\nfunction storeEmailInStorage(email: string) {\n  window.localStorage.setItem('emailForSignIn', email);\n}\n\nexport default EmailLinkAuth;\n", "import configuration from '~/configuration';\nimport firebaseConfig from '../../../firebase.config';\nimport invariant from 'tiny-invariant';\n\n/**\n * @description Initializes the firebase Admin app.\n * If emulator=true, will start the emulator admin\n */\nexport default async function initializeFirebaseAdminApp() {\n  const emulator = configuration.emulator;\n\n  if (emulator) {\n    const { createEmulatorAdminApp } = await import(\n      './create-emulator-admin-app'\n    );\n\n    return createEmulatorAdminApp();\n  }\n\n  const clientEmail = process.env.FIREBASE_CLIENT_EMAIL;\n  const privateKey = process.env.FIREBASE_PRIVATE_KEY;\n  const projectId = firebaseConfig.projectId;\n  const storageBucket = firebaseConfig.storageBucket;\n\n  invariant(clientEmail, `Firebase Client email not provided`);\n  invariant(privateKey, `Firebase Private key not provided`);\n  invariant(projectId, `GCloud Project ID not provided`);\n  invariant(storageBucket, `Firebase Storage bucket not provided`);\n\n  const { createFirebaseAdminApp } = await import('./create-admin-app');\n\n  return createFirebaseAdminApp({\n    projectId,\n    storageBucket,\n    clientEmail,\n    privateKey,\n  });\n}\n", "import initializeFirebaseAdminApp from '../firebase/admin/initialize-firebase-admin-app';\n\n/**\n * @description This middleware wraps an API handler so that the Firebase\n * admin is initialized when the handler gets executed\n */\nfunction withFirebaseAdmin() {\n  return initializeFirebaseAdminApp();\n}\n\nexport default withFirebaseAdmin;\n", "import { useNavigate } from '@remix-run/react';\n\nimport { Trans } from 'react-i18next';\nimport AuthErrorMessage from '~/components/auth/AuthErrorMessage';\nimport Button from '~/core/ui/Button';\n\nfunction AuthCatchBoundary() {\n  const navigate = useNavigate();\n\n  return (\n    <div className={'flex flex-col space-y-4'}>\n      <AuthErrorMessage error={'generic'}></AuthErrorMessage>\n\n      <Button onClick={() => navigate('.')}>\n        <Trans i18nKey={'common:retry'} default={'Retry'} />\n      </Button>\n    </div>\n  );\n}\n\nexport default AuthCatchBoundary;\n", "import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Outlet, useLoaderData } from '@remix-run/react';\nimport type { MetaFunction } from '@remix-run/node';\n\nimport type UserSession from '~/core/session/types/user-session';\nimport type Organization from '~/lib/organizations/types/organization';\nimport loadAppData from '~/lib/server/loaders/load-app-data';\n\nimport FirebaseAppShell from '~/core/firebase/components/FirebaseAppShell';\nimport FirebaseAuthProvider from '~/core/firebase/components/FirebaseAuthProvider';\nimport FirebaseAnalyticsProvider from '~/core/firebase/components/FirebaseAnalyticsProvider';\nimport OrganizationContext from '~/lib/contexts/organization';\nimport UserSessionContext from '~/core/session/contexts/user-session';\n\nimport RouteShell from '~/components/RouteShell';\nimport firebaseConfig from '../firebase.config';\n\nexport const loader = loadAppData;\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    'csrf-token': data.csrfToken,\n  };\n};\n\nfunction AppRoot() {\n  const data = useLoaderData<typeof loadAppData>();\n\n  const userSessionContext: UserSession = useMemo(() => {\n    return {\n      auth: data.session,\n      data: data.user,\n    };\n  }, [data]);\n\n  const [organization, setOrganization] = useState<Maybe<WithId<Organization>>>(\n    data.organization || undefined\n  );\n\n  const [userSession, setUserSession] =\n    useState<Maybe<UserSession>>(userSessionContext);\n\n  const updateCurrentOrganization = useCallback(() => {\n    setOrganization(data.organization ?? undefined);\n  }, [data.organization]);\n\n  const updateCurrentUser = useCallback(() => {\n    if (userSessionContext.auth) {\n      setUserSession(userSessionContext);\n    }\n  }, [userSessionContext]);\n\n  useEffect(updateCurrentOrganization, [updateCurrentOrganization]);\n  useEffect(updateCurrentUser, [updateCurrentUser]);\n\n  const sidebarCollapsed = data?.ui?.sidebarState === 'collapsed';\n\n  return (\n    <FirebaseAppShell config={firebaseConfig}>\n      <FirebaseAuthProvider\n        useEmulator={firebaseConfig.emulator}\n        userSession={userSession}\n        setUserSession={setUserSession}\n      >\n        <FirebaseAnalyticsProvider>\n          <UserSessionContext.Provider value={{ userSession, setUserSession }}>\n            <OrganizationContext.Provider\n              value={{ organization, setOrganization }}\n            >\n              <RouteShell sidebarCollapsed={sidebarCollapsed}>\n                <Outlet />\n              </RouteShell>\n            </OrganizationContext.Provider>\n          </UserSessionContext.Provider>\n        </FirebaseAnalyticsProvider>\n      </FirebaseAuthProvider>\n    </FirebaseAppShell>\n  );\n}\n\nexport default AppRoot;\n", "import { json, redirect } from '@remix-run/node';\nimport type { LoaderArgs } from '@remix-run/server-runtime';\n\nimport HttpStatusCode from '~/core/generic/http-status-code.enum';\nimport getLoggedInUser from '~/core/firebase/admin/auth/get-logged-in-user';\nimport initializeFirebaseAdminApp from '~/core/firebase/admin/initialize-firebase-admin-app';\nimport getUserInfoById from '~/core/firebase/admin/auth/get-user-info-by-id';\nimport createCsrfCookie from '~/core/generic/create-csrf-token';\nimport getCurrentOrganization from '~/lib/server/organizations/get-current-organization';\n\nimport { getUserData } from '~/lib/server/queries';\nimport { parseSessionIdCookie } from '~/lib/server/cookies/session.cookie';\nimport { serializeCsrfSecretCookie } from '~/lib/server/cookies/csrf-secret.cookie';\n\nimport {\n  parseOrganizationIdCookie,\n  serializeOrganizationIdCookie,\n} from '~/lib/server/cookies/organization.cookie';\n\nimport getUIStateCookies from '~/lib/server/loaders/utils/get-ui-state-cookies';\n\nimport configuration from '~/configuration';\n\nconst loadAppData = async ({ request }: LoaderArgs) => {\n  try {\n    await initializeFirebaseAdminApp();\n\n    const session = await parseSessionIdCookie(request);\n    const metadata = await getUserAuthMetadata(session);\n\n    // if for any reason we're not able to fetch the user's data, we redirect\n    // back to the login page\n    if (!metadata) {\n      return redirectToLogin(request.url);\n    }\n\n    const isOnboarded = Boolean(metadata?.customClaims?.onboarded);\n\n    // when the user is not yet onboarded,\n    // we simply redirect them back to the onboarding flow\n    if (!isOnboarded) {\n      return redirectToOnboarding();\n    }\n\n    // we fetch the user record from Firestore\n    // which is a separate object from the auth metadata\n    const user = await getUserData(metadata.uid);\n    const currentOrganizationId = await parseOrganizationIdCookie(request);\n\n    // if the user wasn't found, redirect to the onboarding\n    if (!user) {\n      return redirectToOnboarding();\n    }\n\n    const organization = await getCurrentOrganization(\n      user.id,\n      currentOrganizationId\n    );\n\n    const headers = new Headers();\n\n    // if the organization is found, save the ID in a cookie\n    // so that we can fetch it on the next request\n    if (organization) {\n      const organizationIdCookie = await serializeOrganizationIdCookie(\n        organization.id\n      );\n\n      headers.append('Set-Cookie', organizationIdCookie);\n    }\n\n    const { token: csrfToken, secret } = await createCsrfCookie();\n    headers.append('Set-Cookie', await serializeCsrfSecretCookie(secret));\n\n    const ui = await getUIStateCookies(request);\n\n    return json(\n      {\n        csrfToken,\n        organization,\n        session: metadata,\n        user,\n        ui,\n      },\n      {\n        headers,\n      }\n    );\n  } catch (e) {\n    // if the user is signed out, we save the requested URL\n    // so, we can redirect them to where they originally navigated to\n    return redirectToLogin(request.url);\n  }\n};\n\nasync function getUserAuthMetadata(session: Maybe<string>) {\n  const user = await getLoggedInUser(session);\n\n  return getUserInfoById(user.uid);\n}\n\nfunction redirectToOnboarding() {\n  return redirect(configuration.paths.onboarding);\n}\n\nfunction redirectToLogin(\n  returnUrl: string,\n  redirectPath = configuration.paths.signIn\n) {\n  // we build the sign in URL\n  // appending the \"returnUrl\" query parameter so that we can redirect the user\n  // straight to where they were headed and the \"signOut\" parameter\n  // to force the client to sign the user out from the client SDK\n  const destination = `${redirectPath}?returnUrl=${returnUrl}&signOut=true`;\n\n  return redirect(destination, {\n    status: HttpStatusCode.SeeOther,\n  });\n}\n\nexport default loadAppData;\n", "import getCookieHeader from '~/core/generic/get-cookie-header';\n\nconst SIDEBAR_STATE_COOKIE_NAME = 'sidebarState';\n\nexport async function parseSidebarStateCookie(request: Request) {\n  const cookie = await getSidebarCookie();\n  return cookie.parse(getCookieHeader(request));\n}\n\nexport async function getSidebarCookie() {\n  const { createCookie } = await import('@remix-run/node');\n\n  return createCookie(SIDEBAR_STATE_COOKIE_NAME, {\n    path: '/',\n    httpOnly: false,\n    secure: process.env.EMULATOR !== `true`,\n    sameSite: 'strict' as const,\n  });\n}\n", "import { parseSidebarStateCookie } from '~/lib/server/cookies/sidebar-state.cookie';\nimport { parseThemeCookie } from '~/lib/server/cookies/theme.cookie';\n\nasync function getUIStateCookies(request: Request) {\n  const [theme, sidebarState] = await Promise.all([\n    parseThemeCookie(request),\n    parseSidebarStateCookie(request),\n  ]);\n\n  return {\n    theme,\n    sidebarState,\n  };\n}\n\nexport default getUIStateCookies;\n", "import React, { useEffect } from 'react';\nimport { Toaster } from 'react-hot-toast';\n\nimport GuardedPage from '~/core/firebase/components/GuardedPage';\nimport FirebaseFirestoreProvider from '~/core/firebase/components/FirebaseFirestoreProvider';\nimport SidebarContext from '~/lib/contexts/sidebar';\n\nimport isBrowser from '~/core/generic/is-browser';\nimport useCollapsible from '~/core/hooks/use-sidebar-state';\nimport AppSidebar from '~/components/AppSidebar';\n\nconst redirectPathWhenSignedOut = '/';\n\nconst RouteShell: React.FCC<{\n  sidebarCollapsed: boolean;\n}> = (props) => {\n  return (\n    <FirebaseFirestoreProvider>\n      <GuardedPage whenSignedOut={redirectPathWhenSignedOut}>\n        <main>\n          <Toaster />\n\n          <RouteShellWithSidebar collapsed={props.sidebarCollapsed}>\n            {props.children}\n          </RouteShellWithSidebar>\n        </main>\n      </GuardedPage>\n    </FirebaseFirestoreProvider>\n  );\n};\n\nexport default RouteShell;\n\nfunction RouteShellWithSidebar(\n  props: React.PropsWithChildren<{\n    collapsed: boolean;\n  }>\n) {\n  const [collapsed, setCollapsed] = useCollapsible(props.collapsed);\n\n  useDisableBodyScrolling();\n\n  return (\n    <div className={'flex h-full flex-1 overflow-hidden'}>\n      <SidebarContext.Provider value={{ collapsed, setCollapsed }}>\n        <div className={'hidden lg:block'}>\n          <AppSidebar />\n        </div>\n\n        <div className={'relative mx-auto h-screen w-full overflow-y-auto'}>\n          <div>{props.children}</div>\n        </div>\n      </SidebarContext.Provider>\n    </div>\n  );\n}\n\nfunction useDisableBodyScrolling() {\n  useEffect(() => {\n    if (!isBrowser()) {\n      return;\n    }\n\n    document.body.style.setProperty('overflow', 'hidden');\n\n    return () => {\n      document.body.style.removeProperty('overflow');\n    };\n  }, []);\n}\n", "import { FirestoreProvider, useFirebaseApp } from 'reactfire';\n\nimport type { Firestore } from 'firebase/firestore';\nimport {\n  enableIndexedDbPersistence,\n  connectFirestoreEmulator,\n  initializeFirestore,\n} from 'firebase/firestore';\n\nimport isBrowser from '~/core/generic/is-browser';\nimport configuration from '~/configuration';\nimport getEnv from '~/core/get-env';\n\nexport default function FirebaseFirestoreProvider({\n  children,\n  useEmulator,\n}: React.PropsWithChildren<{ useEmulator?: boolean }>) {\n  const app = useFirebaseApp();\n  const firestore = initializeFirestore(app, getFirestoreConfig());\n\n  const isEmulatorEnv = configuration.emulator ?? useEmulator;\n\n  // connect to emulator if enabled\n  if (isEmulatorEnv) {\n    const host = getFirestoreHost();\n    const port = Number(getFirestorePort());\n\n    try {\n      executeSafely(() => {\n        if (!didFirestoreInitialize(firestore)) {\n          connectFirestoreEmulator(firestore, host, port);\n        }\n      });\n    } catch (e) {\n      // this may happen on re-renderings\n    }\n  }\n\n  const enablePersistence =\n    isBrowser() && !didFirestoreInitialize(firestore) && !isTestEnv();\n\n  // We enable offline capabilities by caching Firestore in IndexedDB\n  // NB: if you don't want to cache results, please remove the next few lines\n  if (enablePersistence) {\n    executeSafely(() => enableIndexedDbPersistence(firestore));\n  }\n\n  return <FirestoreProvider sdk={firestore}>{children}</FirestoreProvider>;\n}\n\n/**\n * @name executeSafely\n * @description wrap callback for exceptions which may happen due to re-renderings and HMR\n * @param callback\n */\nfunction executeSafely(callback: () => Promise<unknown> | void) {\n  try {\n    void callback();\n  } catch (e) {\n    // the exception may be thrown on re-renderings\n  }\n}\n\nfunction getFirestoreHost() {\n  return getEnv().FIREBASE_EMULATOR_HOST ?? 'localhost';\n}\n\nfunction getFirestorePort() {\n  return getEnv().FIRESTORE_EMULATOR_PORT ?? 8080;\n}\n\n/**\n * @description ReactFire is affected by a weird bug. We use this to check\n * that Firestore hasn't been initialized\n * @param firestore\n */\nfunction didFirestoreInitialize(firestore: Firestore) {\n  if ('_settingsFrozen' in firestore) {\n    return (firestore as Firestore & { _settingsFrozen: boolean })[\n      '_settingsFrozen'\n    ];\n  }\n}\n\n/**\n * @description Check that Cypress is attached to the global window object.\n * If so, we're running in a testing environment\n */\nfunction isTestEnv() {\n  return isBrowser() && 'Cypress' in window;\n}\n\n/**\n * @description The configuration below is needed to make Firestore work with\n * Cypress. Otherwise, it will hang.\n */\nfunction getFirestoreConfig() {\n  return isTestEnv()\n    ? {\n        ssl: false,\n        host: '',\n        experimentalForceLongPolling: true,\n      }\n    : {};\n}\n", "import { createContext } from 'react';\n\nconst SidebarContext = createContext<{\n  collapsed: boolean;\n  setCollapsed: (collapsed: boolean) => void;\n}>({\n  collapsed: false,\n  setCollapsed: (_) => _,\n});\n\nexport default SidebarContext;\n", "import { useCallback, useState } from 'react';\nimport { setCookie } from '~/core/generic/cookies';\n\nconst SIDEBAR_COLLAPSED_STORAGE_KEY = 'sidebarState';\n\nfunction useCollapsible(initialValue?: boolean) {\n  const [isCollapsed, setIsCollapsed] = useState(initialValue);\n\n  const onCollapseChange = useCallback((collapsed: boolean) => {\n    setIsCollapsed(collapsed);\n    storeCollapsibleState(collapsed);\n  }, []);\n\n  return [isCollapsed, onCollapseChange] as [boolean, typeof onCollapseChange];\n}\n\nfunction storeCollapsibleState(collapsed: boolean) {\n  setCookie(\n    SIDEBAR_COLLAPSED_STORAGE_KEY,\n    collapsed ? 'collapsed' : 'expanded'\n  );\n}\n\nexport default useCollapsible;\n", "import { useContext } from 'react';\n\nimport { Trans } from 'react-i18next';\nimport classNames from 'classnames';\n\nimport {\n  ArrowRightCircleIcon,\n  ArrowLeftCircleIcon,\n} from '@heroicons/react/24/outline';\n\nimport Logo from '~/core/ui/Logo';\nimport LogoMini from '~/core/ui/Logo/LogoMini';\nimport IconButton from '~/core/ui/IconButton';\nimport Tooltip from '~/core/ui/Tooltip';\n\nimport configuration from '~/configuration';\nimport SidebarContext from '~/lib/contexts/sidebar';\nimport AppSidebarNavigation from './AppSidebarNavigation';\n\nconst AppSidebar: React.FC = () => {\n  const { collapsed, setCollapsed } = useContext(SidebarContext);\n\n  return (\n    <div\n      className={classNames('AppSidebar', {\n        'AppSidebarCollapsed w-[5rem]': collapsed,\n        [`w-2/12 max-w-xs sm:min-w-[12rem] lg:min-w-[16rem]`]: !collapsed,\n      })}\n    >\n      <div className={'flex w-full flex-col space-y-7 px-3'}>\n        <AppSidebarHeader collapsed={collapsed} />\n        <AppSidebarNavigation collapsed={collapsed} />\n      </div>\n\n      <AppSidebarFooterMenu collapsed={collapsed} setCollapsed={setCollapsed} />\n    </div>\n  );\n};\n\nfunction AppSidebarHeader({\n  collapsed,\n}: React.PropsWithChildren<{ collapsed: boolean }>) {\n  const logoHref = configuration.paths.appHome;\n\n  return (\n    <div className={'flex justify-center px-2.5 py-1'}>\n      {collapsed ? <LogoMini href={logoHref} /> : <Logo href={logoHref} />}\n    </div>\n  );\n}\n\nfunction AppSidebarFooterMenu(\n  props: React.PropsWithChildren<{\n    collapsed: boolean;\n    setCollapsed: (collapsed: boolean) => void;\n  }>\n) {\n  return (\n    <div\n      className={classNames(`absolute bottom-8 w-full`, {\n        'px-6': !props.collapsed,\n        'flex justify-center px-2': props.collapsed,\n      })}\n    >\n      <div className={'AppSidebarFooterItem'}>\n        <CollapsibleButton\n          collapsed={props.collapsed}\n          onClick={props.setCollapsed}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction CollapsibleButton(\n  props: React.PropsWithChildren<{\n    collapsed: boolean;\n    onClick: (collapsed: boolean) => void;\n  }>\n) {\n  if (props.collapsed) {\n    return (\n      <Tooltip content={<Trans i18nKey={'common:expandSidebar'} />}>\n        <IconButton onClick={() => props.onClick(!props.collapsed)}>\n          <ArrowRightCircleIcon className={'h-6'} />\n        </IconButton>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <div className={'AppFooterItem'}>\n      <button\n        className={'flex items-center space-x-2 bg-transparent'}\n        onClick={() => props.onClick(!props.collapsed)}\n      >\n        <ArrowLeftCircleIcon className={'h-6'} />\n\n        <span>\n          <Trans i18nKey={'common:collapseSidebar'} />\n        </span>\n      </button>\n    </div>\n  );\n}\n\nexport default AppSidebar;\n", "import { Link } from '@remix-run/react';\nimport LogoImageMini from '~/core/ui/Logo/LogoImageMini';\n\nconst LogoMini: React.FCC<{ href?: string }> = ({ href }) => {\n  return (\n    <Link to={href ?? '/'}>\n      <LogoImageMini />\n    </Link>\n  );\n};\n\nexport default LogoMini;\n", "const LogoImageMini = () => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 334 250\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M288.338 250V93.5C288.338 79.8333 283.505 68.3333 273.838 59C264.505 49.6667 253.005 45 239.338 45C226.005 45 214.338 49.6667 204.338 59C194.671 68 189.838 79.3333 189.838 93V250H144.338V93C144.338 79 139.671 67.6667 130.338 59C120.338 49.6667 108.505 45 94.8379 45C81.5046 45 70.1712 49.6667 60.8379 59C50.8379 69 45.8379 80.8333 45.8379 94.5V250H0.837891V5.99998H45.8379V24.5C51.5046 17.5 58.8379 11.6667 67.8379 6.99998C77.1712 2.33333 86.1712 0 94.8379 0C109.505 0 122.838 3 134.838 8.99999C147.171 14.6667 157.838 22.6667 166.838 33C175.838 22.6667 186.505 14.6667 198.838 8.99999C211.171 3 224.671 0 239.338 0C252.338 0 264.505 2.33333 275.838 6.99998C287.171 11.6667 297.171 18.3333 305.838 27C314.505 35.6667 321.171 45.8333 325.838 57.5C330.838 68.8333 333.338 80.8333 333.338 93.5V250H288.338Z\"\n        fill=\"url(#paint0_linear_1667_17)\"\n      />\n      <defs>\n        <linearGradient\n          id=\"paint0_linear_1667_17\"\n          x1=\"-73.1035\"\n          y1=\"106.673\"\n          x2=\"403.784\"\n          y2=\"104.812\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset=\"0.0104167\" stopColor=\"#2563EB\" />\n          <stop offset=\"0.135417\" stopColor=\"#7657A8\" />\n          <stop offset=\"0.489583\" stopColor=\"#EF4444\" />\n          <stop offset=\"0.802083\" stopColor=\"#F79B3F\" />\n          <stop offset=\"1\" stopColor=\"#FFEB3B\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport default LogoImageMini;\n", "import { NavLink } from '@remix-run/react';\nimport { Trans } from 'react-i18next';\nimport classNames from 'classnames';\nimport Tooltip from '~/core/ui/Tooltip';\n\nimport NAVIGATION_CONFIG from '../navigation.config';\n\nfunction AppSidebarNavigation({\n  collapsed,\n}: React.PropsWithChildren<{\n  collapsed: boolean;\n}>) {\n  const iconClassName = classNames('AppSidebarItemIcon', {\n    'h-6': !collapsed,\n    'h-7': collapsed,\n  });\n\n  return (\n    <div className={'flex flex-col space-y-1.5'}>\n      {NAVIGATION_CONFIG.items.map((item) => {\n        const Label = <Trans i18nKey={item.label} defaults={item.label} />;\n\n        return (\n          <AppSidebarItem key={item.path} href={item.path}>\n            <Tooltip placement={'right'} content={collapsed ? Label : null}>\n              <item.Icon className={iconClassName} />\n            </Tooltip>\n\n            <span>{Label}</span>\n          </AppSidebarItem>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction AppSidebarItem({\n  children,\n  href,\n}: React.PropsWithChildren<{\n  href: string;\n}>) {\n  return (\n    <NavLink\n      to={href}\n      className={({ isActive }) => {\n        return classNames(`AppSidebarItem`, {\n          AppSidebarItemActive: isActive,\n          AppSidebarItemNotActive: !isActive,\n        });\n      }}\n    >\n      {children}\n    </NavLink>\n  );\n}\n\nexport default AppSidebarNavigation;\n", "import configuration from '~/configuration';\nimport { Cog8ToothIcon, Squares2X2Icon, ClipboardDocumentIcon, PhotoIcon } from '@heroicons/react/24/outline';\n\nconst NAVIGATION_CONFIG = {\n  items: [\n    {\n      label: 'common:dashboardTabLabel',\n      path: configuration.paths.appHome,\n      Icon: ({ className }: { className: string }) => {\n        return <Squares2X2Icon className={className} />;\n      },\n    },\n    {\n      label: 'common:settingsTabLabel',\n      path: '/settings',\n      Icon: ({ className }: { className: string }) => {\n        return <Cog8ToothIcon className={className} />;\n      },\n    },\n    {\n      label: 'common:tasksTabLabel',\n      path: '/tasks',\n      Icon: ({ className }: { className: string }) => {\n        return <ClipboardDocumentIcon className={className} />\n      }\n    },\n    {\n      label: 'common:photosTabLabel',\n      path: '/photos',\n      Icon: ({ className }: { className: string }) => {\n        return <PhotoIcon className={className} />\n      }\n    }\n  ],\n};\n\nexport default NAVIGATION_CONFIG;\n", "import React from 'react';\nimport type { MetaFunction } from '@remix-run/node';\nimport { Trans } from 'react-i18next';\n\nimport DashboardDemo from '~/components/dashboard/DashboardDemo';\nimport ClientOnly from '~/core/ui/ClientOnly';\nimport AppHeader from '~/components/AppHeader';\nimport AppContainer from '~/components/AppContainer';\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Dashboard',\n  };\n};\n\nfunction DashboardPage() {\n  return (\n    <>\n      <AppHeader>\n        <Trans i18nKey={'common:dashboardTabLabel'} />\n      </AppHeader>\n\n      <ClientOnly>\n        <AppContainer>\n          <DashboardDemo />\n        </AppContainer>\n      </ClientOnly>\n    </>\n  );\n}\n\nexport default DashboardPage;\n", "import { useUser } from 'reactfire';\nimport { Line, ResponsiveContainer, LineChart, XAxis } from 'recharts';\nimport { useMemo } from 'react';\n\nimport Tile from '~/core/ui/Tile';\nimport Heading from '~/core/ui/Heading';\n\nexport default function DashboardDemo() {\n  const mrr = useMemo(() => generateDemoData(), []);\n  const visitors = useMemo(() => generateDemoData(), []);\n  const returningVisitors = useMemo(() => generateDemoData(), []);\n  const churn = useMemo(() => generateDemoData(), []);\n  const netRevenue = useMemo(() => generateDemoData(), []);\n  const fees = useMemo(() => generateDemoData(), []);\n  const newCustomers = useMemo(() => generateDemoData(), []);\n  const tickets = useMemo(() => generateDemoData(), []);\n  const activeUsers = useMemo(() => generateDemoData(), []);\n\n  return (\n    <div className={'flex flex-col space-y-6 pb-36'}>\n      <UserGreetings />\n\n      <div\n        className={\n          'grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3' +\n          ' xl:grid-cols-4'\n        }\n      >\n        <Tile>\n          <Tile.Heading>Monthly Recurring Revenue</Tile.Heading>\n\n          <Tile.Body>\n            <div className={'flex justify-between'}>\n              <Tile.Figure>{`$${mrr[1]}`}</Tile.Figure>\n              <Tile.Trend trend={'up'}>20%</Tile.Trend>\n            </div>\n\n            <Chart data={mrr[0]} />\n          </Tile.Body>\n        </Tile>\n\n        <Tile>\n          <Tile.Heading>Revenue</Tile.Heading>\n\n          <Tile.Body>\n            <div className={'flex justify-between'}>\n              <Tile.Figure>{`$${netRevenue[1]}`}</Tile.Figure>\n              <Tile.Trend trend={'up'}>12%</Tile.Trend>\n            </div>\n\n            <Chart data={netRevenue[0]} />\n          </Tile.Body>\n        </Tile>\n\n        <Tile>\n          <Tile.Heading>Fees</Tile.Heading>\n\n          <Tile.Body>\n            <div className={'flex justify-between'}>\n              <Tile.Figure>{`$${fees[1]}`}</Tile.Figure>\n              <Tile.Trend trend={'up'}>9%</Tile.Trend>\n            </div>\n\n            <Chart data={fees[0]} />\n          </Tile.Body>\n        </Tile>\n\n        <Tile>\n          <Tile.Heading>New Customers</Tile.Heading>\n\n          <Tile.Body>\n            <div className={'flex justify-between'}>\n              <Tile.Figure>{`${newCustomers[1]}`}</Tile.Figure>\n              <Tile.Trend trend={'down'}>-25%</Tile.Trend>\n            </div>\n\n            <Chart data={newCustomers[0]} />\n          </Tile.Body>\n        </Tile>\n\n        <Tile>\n          <Tile.Heading>Visitors</Tile.Heading>\n\n          <Tile.Body>\n            <div className={'flex justify-between'}>\n              <Tile.Figure>{visitors[1]}</Tile.Figure>\n              <Tile.Trend trend={'down'}>-4.3%</Tile.Trend>\n            </div>\n\n            <Chart data={visitors[0]} />\n          </Tile.Body>\n        </Tile>\n\n        <Tile>\n          <Tile.Heading>Returning Visitors</Tile.Heading>\n\n          <Tile.Body>\n            <div className={'flex justify-between'}>\n              <Tile.Figure>{returningVisitors[1]}</Tile.Figure>\n              <Tile.Trend trend={'stale'}>10%</Tile.Trend>\n            </div>\n\n            <Chart data={returningVisitors[0]} />\n          </Tile.Body>\n        </Tile>\n\n        <Tile>\n          <Tile.Heading>Churn</Tile.Heading>\n\n          <Tile.Body>\n            <div className={'flex justify-between'}>\n              <Tile.Figure>{churn[1]}%</Tile.Figure>\n              <Tile.Trend trend={'up'}>-10%</Tile.Trend>\n            </div>\n\n            <Chart data={churn[0]} />\n          </Tile.Body>\n        </Tile>\n\n        <Tile>\n          <Tile.Heading>Support Tickets</Tile.Heading>\n\n          <Tile.Body>\n            <div className={'flex justify-between'}>\n              <Tile.Figure>{tickets[1]}</Tile.Figure>\n              <Tile.Trend trend={'up'}>-30%</Tile.Trend>\n            </div>\n\n            <Chart data={tickets[0]} />\n          </Tile.Body>\n        </Tile>\n      </div>\n\n      <div>\n        <Tile>\n          <Tile.Heading>Active Users</Tile.Heading>\n\n          <Tile.Body>\n            <div className={'flex justify-between'}>\n              <Tile.Figure>{activeUsers[1]}</Tile.Figure>\n              <Tile.Trend trend={'up'}>10%</Tile.Trend>\n            </div>\n\n            <Chart data={activeUsers[0]} />\n          </Tile.Body>\n        </Tile>\n      </div>\n\n      <div>\n        <Tile>\n          <Tile.Heading>Customers</Tile.Heading>\n\n          <Tile.Body>\n            <CustomersTable></CustomersTable>\n          </Tile.Body>\n        </Tile>\n      </div>\n    </div>\n  );\n}\n\nfunction UserGreetings() {\n  const user = useUser();\n  const userDisplayName = user.data?.displayName ?? user.data?.email ?? '';\n\n  return (\n    <div>\n      <Heading type={4}>Welcome Back, {userDisplayName}</Heading>\n\n      <p className={'text-gray-500 dark:text-gray-400'}>\n        <span>Here&apos;s what is happening in your SaaS</span>\n      </p>\n    </div>\n  );\n}\n\nfunction generateDemoData() {\n  const today = new Date();\n  const formatter = new Intl.DateTimeFormat('en-us', {\n    month: 'long',\n    year: '2-digit',\n  });\n\n  const data: { value: string; name: string }[] = [];\n\n  for (let n = 8; n > 0; n -= 1) {\n    const date = new Date(today.getFullYear(), today.getMonth() - n, 1);\n\n    data.push({\n      name: formatter.format(date) as string,\n      value: (Math.random() * 1000).toFixed(1),\n    });\n  }\n\n  return [data, data[data.length - 1].value] as [typeof data, string];\n}\n\nfunction Chart(\n  props: React.PropsWithChildren<{ data: { value: string; name: string }[] }>\n) {\n  return (\n    <div className={'h-36'}>\n      <ResponsiveContainer width={'100%'} height={'100%'}>\n        <LineChart width={400} height={100} data={props.data}>\n          <Line\n            type=\"monotone\"\n            dataKey=\"value\"\n            stroke=\"#3b82f6\"\n            strokeWidth={2.5}\n            dot={false}\n          />\n\n          <XAxis\n            style={{ fontSize: 9 }}\n            axisLine={false}\n            tickSize={0}\n            dataKey=\"name\"\n            height={15}\n            dy={10}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nfunction CustomersTable() {\n  return (\n    <table className={'Table'}>\n      <thead>\n        <tr>\n          <th>Customer</th>\n          <th>Plan</th>\n          <th>MRR</th>\n          <th>Logins</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr>\n          <td>Pippin Oddo</td>\n          <td>Pro</td>\n          <td>$100.2</td>\n          <td>920</td>\n          <td>\n            <Tile.Badge trend={'up'}>Healthy</Tile.Badge>\n          </td>\n        </tr>\n\n        <tr>\n          <td>V\u00E4in\u00F6 P\u00E1nfilo</td>\n          <td>Basic</td>\n          <td>$40.6</td>\n          <td>300</td>\n          <td>\n            <Tile.Badge trend={'stale'}>Possible Churn</Tile.Badge>\n          </td>\n        </tr>\n\n        <tr>\n          <td>Giorgos Quinten</td>\n          <td>Pro</td>\n          <td>$2004.3</td>\n          <td>1000</td>\n          <td>\n            <Tile.Badge trend={'up'}>Healthy</Tile.Badge>\n          </td>\n        </tr>\n\n        <tr>\n          <td>Adhelm Otis</td>\n          <td>Basic</td>\n          <td>$0</td>\n          <td>10</td>\n          <td>\n            <Tile.Badge trend={'down'}>Churned</Tile.Badge>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n", "import { useMemo } from 'react';\n\nimport Heading from '~/core/ui/Heading';\n\nimport {\n  ArrowSmallDownIcon,\n  ArrowSmallUpIcon,\n  Bars2Icon,\n} from '@heroicons/react/24/outline';\n\nconst Tile: React.FCC & {\n  Header: typeof TileHeader;\n  Heading: typeof TileHeading;\n  Body: typeof TileBody;\n  Figure: typeof TileFigure;\n  Trend: typeof TileTrend;\n  Badge: typeof TileBadge;\n} = ({ children }) => {\n  return (\n    <div\n      className={\n        'flex flex-col space-y-3 rounded-2xl border border-gray-100' +\n        ' bg-white p-5 dark:border-black-400 dark:bg-black-500'\n      }\n    >\n      {children}\n    </div>\n  );\n};\n\nfunction TileHeader(props: React.PropsWithChildren) {\n  return <div className={'flex'}>{props.children}</div>;\n}\n\nfunction TileHeading(props: React.PropsWithChildren) {\n  return (\n    <Heading type={5}>\n      <span\n        className={'font-normal font-medium text-gray-600 dark:text-gray-400'}\n      >\n        {props.children}\n      </span>\n    </Heading>\n  );\n}\n\nfunction TileBody(props: React.PropsWithChildren) {\n  return <div className={'flex flex-col space-y-5'}>{props.children}</div>;\n}\n\nfunction TileFigure(props: React.PropsWithChildren) {\n  return <div className={'text-3xl font-bold'}>{props.children}</div>;\n}\n\nfunction TileTrend(\n  props: React.PropsWithChildren<{\n    trend: 'up' | 'down' | 'stale';\n  }>\n) {\n  const Icon = useMemo(() => {\n    switch (props.trend) {\n      case 'up':\n        return <ArrowSmallUpIcon className={'h-4 text-green-500'} />;\n      case 'down':\n        return <ArrowSmallDownIcon className={'h-4 text-red-500'} />;\n      case 'stale':\n        return <Bars2Icon className={'h-4 text-yellow-500'} />;\n    }\n  }, [props.trend]);\n\n  return (\n    <TileBadge trend={props.trend}>\n      <span className={'flex items-center space-x-1'}>\n        {Icon}\n        <span>{props.children}</span>\n      </span>\n    </TileBadge>\n  );\n}\n\nfunction TileBadge(\n  props: React.PropsWithChildren<{\n    trend: 'up' | 'down' | 'stale';\n  }>\n) {\n  const className = `inline-flex items-center rounded-3xl py-1 px-2.5 text-sm font-semibold justify-center`;\n\n  if (props.trend === `up`) {\n    return (\n      <div\n        className={`${className} bg-green-50 text-green-600 dark:bg-green-500/10`}\n      >\n        <span>{props.children}</span>\n      </div>\n    );\n  }\n\n  if (props.trend === `down`) {\n    return (\n      <div className={`${className} bg-red-50 text-red-600 dark:bg-red-500/10`}>\n        <span>{props.children}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={`${className} bg-yellow-50 text-yellow-600 dark:bg-yellow-500/10`}\n    >\n      <span>{props.children}</span>\n    </div>\n  );\n}\n\nTile.Header = TileHeader;\nTile.Heading = TileHeading;\nTile.Body = TileBody;\nTile.Figure = TileFigure;\nTile.Trend = TileTrend;\nTile.Badge = TileBadge;\n\nexport default Tile;\n", "import React from 'react';\nimport { useAuth } from 'reactfire';\nimport ChevronRightIcon from '@heroicons/react/20/solid/ChevronRightIcon';\n\nimport useUserSession from '~/core/hooks/use-user-session';\nimport ProfileDropdown from '~/components/ProfileDropdown';\nimport MobileNavigation from '~/components/MobileNavigation';\n\nimport If from '~/core/ui/If';\nimport Heading from '~/core/ui/Heading';\nimport AppContainer from '~/components/AppContainer';\nimport OrganizationsSelector from '~/components/organizations/OrganizationsSelector';\n\nconst AppHeader: React.FCC = ({ children }) => {\n  const userSession = useUserSession();\n  const auth = useAuth();\n\n  return (\n    <div className=\"AppHeader\">\n      <AppContainer>\n        <div className={'flex w-full flex-1 justify-between'}>\n          <div\n            className={\n              'flex items-center justify-between space-x-2 lg:space-x-0'\n            }\n          >\n            <div className={'lg:hidden'}>\n              <MobileNavigation />\n            </div>\n\n            <div className={'flex items-center space-x-1 lg:space-x-2'}>\n              <div className={'min-w-[8rem]'}>\n                <If condition={userSession?.auth?.uid}>\n                  {(uid) => <OrganizationsSelector userId={uid} />}\n                </If>\n              </div>\n\n              <ChevronRightIcon className={'h-6'} />\n\n              <Heading type={4}>\n                <span className={'font-semibold dark:text-white'}>\n                  {children}\n                </span>\n              </Heading>\n            </div>\n          </div>\n\n          <div className={'flex items-center'}>\n            <ProfileDropdown\n              user={userSession?.auth}\n              signOutRequested={() => auth.signOut()}\n            />\n          </div>\n        </div>\n      </AppContainer>\n    </div>\n  );\n};\n\nexport default AppHeader;\n", "import { Trans } from 'react-i18next';\nimport { Menu } from '@headlessui/react';\nimport Bars3Icon from '@heroicons/react/24/outline/Bars3Icon';\n\nimport Dropdown from '~/core/ui/Dropdown';\nimport NAVIGATION_CONFIG from '../navigation.config';\n\nconst MobileNavigation: React.FC = () => {\n  const Button = (\n    <Menu.Button>\n      <Bars3Icon className={'h-9'} />\n    </Menu.Button>\n  );\n\n  const Links = NAVIGATION_CONFIG.items.map((item) => {\n    return (\n      <Dropdown.Item key={item.path} href={item.path}>\n        <span className={'flex items-center space-x-4'}>\n          <item.Icon className={'h-6'} />\n\n          <span>\n            <Trans i18nKey={item.label} defaults={item.label} />\n          </span>\n        </span>\n      </Dropdown.Item>\n    );\n  });\n\n  return <Dropdown button={Button} items={Links} />;\n};\n\nexport default MobileNavigation;\n", "function AppContainer(props: React.PropsWithChildren) {\n  return <div className={'w-full p-3'}>{props.children}</div>;\n}\n\nexport default AppContainer;\n", "import { useCallback, useContext, useState } from 'react';\nimport { Trans } from 'react-i18next';\nimport { PlusCircleIcon } from '@heroicons/react/24/outline';\n\nimport type Organization from '~/lib/organizations/types/organization';\nimport useFetchUserOrganizations from '~/lib/organizations/hooks/use-fetch-user-organizations';\nimport OrganizationContext from '~/lib/contexts/organization';\nimport { setCookie } from '~/core/generic/cookies';\n\nimport { PopoverDropdown, PopoverDropdownItem } from '~/core/ui/Popover';\nimport If from '~/core/ui/If';\n\nimport CreateOrganizationModal from './CreateOrganizationModal';\nimport ClientOnly from '~/core/ui/ClientOnly';\n\nconst PopoverButton: React.FCC<{\n  organization: Maybe<WithId<Organization>>;\n}> = ({ organization }) => {\n  if (organization) {\n    return <OrganizationItem organization={organization} />;\n  }\n\n  return null;\n};\n\nconst OrganizationsSelector: React.FCC<{ userId: string }> = ({ userId }) => {\n  const [isOrganizationModalOpen, setIsOrganizationModalOpen] = useState(false);\n  const { organization, setOrganization } = useContext(OrganizationContext);\n\n  const organizationSelected = useCallback(\n    (item: WithId<Organization>) => {\n      // update the global Organization context\n      // with the selected organization\n      setOrganization(item);\n\n      // we save the selected organization in\n      // a cookie so that we can return to it when\n      // the user refreshes or navigates elsewhere\n      saveOrganizationIdInCookie(item.id);\n    },\n    [setOrganization]\n  );\n\n  return (\n    <>\n      <div data-cy={'organization-selector'}>\n        <PopoverDropdown button={<PopoverButton organization={organization} />}>\n          <ClientOnly>\n            <OrganizationsOptions\n              organizationId={organization?.id}\n              userId={userId}\n              onSelect={organizationSelected}\n            />\n          </ClientOnly>\n\n          <PopoverDropdownItem\n            className={'border-t border-gray-100 dark:border-black-400'}\n            onClick={() => setIsOrganizationModalOpen(true)}\n          >\n            <PopoverDropdownItem.Label>\n              <span\n                data-cy={'create-organization-button'}\n                className={'flex flex-row items-center space-x-2 ellipsify'}\n              >\n                <PlusCircleIcon className={'h-5'} />\n\n                <span>\n                  <Trans\n                    i18nKey={'organization:createOrganizationDropdownLabel'}\n                  />\n                </span>\n              </span>\n            </PopoverDropdownItem.Label>\n          </PopoverDropdownItem>\n        </PopoverDropdown>\n      </div>\n\n      <CreateOrganizationModal\n        setIsOpen={setIsOrganizationModalOpen}\n        isOpen={isOrganizationModalOpen}\n        onCreate={organizationSelected}\n      />\n    </>\n  );\n};\n\nfunction OrganizationsOptions(\n  props: React.PropsWithChildren<{\n    userId: string;\n    organizationId: Maybe<string>;\n    onSelect: (organization: WithId<Organization>) => unknown;\n  }>\n) {\n  const { data: organizations, status } = useFetchUserOrganizations(\n    props.userId\n  );\n\n  if (status !== 'success') {\n    return null;\n  }\n\n  return (\n    <>\n      {(organizations ?? []).map((item) => {\n        const isSelected = item.id === props.organizationId;\n\n        if (!isSelected) {\n          return (\n            <PopoverDropdownItem\n              key={item.name}\n              onClick={() => props.onSelect(item)}\n            >\n              <PopoverDropdownItem.Label>\n                <OrganizationItem organization={item} />\n              </PopoverDropdownItem.Label>\n            </PopoverDropdownItem>\n          );\n        }\n\n        return null;\n      })}\n    </>\n  );\n}\n\nfunction OrganizationItem({ organization }: { organization: Organization }) {\n  const { logoURL, name } = organization;\n  const imageSize = 18;\n\n  return (\n    <span\n      data-cy={'organization-selector-item'}\n      className={`flex max-w-[12rem] items-center space-x-2`}\n    >\n      <If condition={logoURL}>\n        <span className={'flex items-center'}>\n          <img\n            decoding={'async'}\n            loading={'lazy'}\n            style={{\n              width: imageSize,\n              height: imageSize,\n            }}\n            width={imageSize}\n            height={imageSize}\n            alt={`${name} Logo`}\n            className={'object-contain'}\n            src={logoURL as string}\n          />\n        </span>\n      </If>\n\n      <span className={'w-auto text-left font-medium ellipsify'}>{name}</span>\n    </span>\n  );\n}\n\nfunction saveOrganizationIdInCookie(id: string) {\n  setCookie('organizationId', id);\n}\n\nexport default OrganizationsSelector;\n", "import type { CollectionReference } from 'firebase/firestore';\nimport { collection, where, query } from 'firebase/firestore';\n\nimport { useFirestore, useFirestoreCollectionData } from 'reactfire';\nimport type Organization from '~/lib/organizations/types/organization';\nimport { ORGANIZATIONS_COLLECTION } from '~/lib/firestore-collections';\n\n/**\n * @description Hook to fetch the user's organizations\n * @param userId\n */\nexport default function useFetchUserOrganizations(userId: string) {\n  const firestore = useFirestore();\n\n  const organizationsCollection = collection(\n    firestore,\n    ORGANIZATIONS_COLLECTION\n  ) as CollectionReference<WithId<Organization>>;\n\n  const userPath = `members.${userId}`;\n  const operator = '!=';\n\n  // we query Firestore for all the organizations\n  // where the user is a member, therefore where he path\n  // members.<user_id> is not null\n  const constraint = where(userPath, operator, null);\n  const organizationsQuery = query(organizationsCollection, constraint);\n\n  return useFirestoreCollectionData(organizationsQuery, {\n    idField: `id`,\n  });\n}\n", "import React, { createContext, Fragment, useContext } from 'react';\n\nimport { Popover, Transition } from '@headlessui/react';\nimport ChevronDownIcon from '@heroicons/react/20/solid/ChevronDownIcon';\n\nconst PopoverItem = createContext({\n  close() {\n    return;\n  },\n});\n\nconst PopoverDropdown: PopoverDropdownComponent<{\n  button: JSX.Element;\n}> = ({ children, button }) => {\n  return (\n    <Popover className=\"relative\">\n      {({ open, close }) => (\n        <>\n          <Popover.Button\n            className={`PopoverButton ${open ? 'PopoverButtonActive' : ' '}`}\n          >\n            {button}\n\n            <span className=\"flex flex-1 justify-end\">\n              <ChevronDownIcon\n                className={`PopoverChevronDownIcon ${\n                  open ? '' : 'text-opacity-70'\n                }`}\n                aria-hidden=\"true\"\n              />\n            </span>\n          </Popover.Button>\n\n          <Transition\n            as={Fragment}\n            enter=\"transition ease-out duration-200\"\n            enterFrom=\"opacity-0 translate-y-1\"\n            enterTo=\"opacity-100 translate-y-0\"\n            leave=\"transition ease-in duration-150\"\n            leaveFrom=\"opacity-100 translate-y-0\"\n            leaveTo=\"opacity-0 translate-y-1\"\n          >\n            <Popover.Panel className=\"PopoverPanel\">\n              <div className=\"overflow-hidden rounded-md\">\n                <div className=\"relative flex flex-col bg-white dark:bg-black-300\">\n                  <PopoverItem.Provider value={{ close }}>\n                    {children}\n                  </PopoverItem.Provider>\n                </div>\n              </div>\n            </Popover.Panel>\n          </Transition>\n        </>\n      )}\n    </Popover>\n  );\n};\n\nconst ItemIcon: React.FCC = ({ children }) => {\n  return <div className=\"PopoverItemIcon\">{children}</div>;\n};\n\nconst ItemLabel: React.FCC<{\n  className?: string;\n}> = ({ children, className }) => {\n  return <p className={`PopoverItemLabel ${className ?? ''}`}>{children}</p>;\n};\n\nconst Item: PopoverDropdownItemComponent = ({\n  children,\n  className,\n  onClick,\n}) => {\n  const popover = useContext(PopoverItem);\n\n  const itemClicked = () => {\n    if (onClick) {\n      onClick();\n    }\n\n    popover.close();\n  };\n\n  return (\n    <div\n      className={`PopoverPanelItem ${className ?? ''}`}\n      onClick={itemClicked}\n    >\n      {children}\n    </div>\n  );\n};\n\ntype PopoverDropdownComponent<Props> = React.FCC<Props> & {\n  Item: typeof Item;\n};\n\ntype PopoverDropdownItemComponent = React.FCC<{\n  onClick?: () => void;\n  className?: string;\n}> & {\n  Label: typeof ItemLabel;\n  Icon: typeof ItemIcon;\n};\n\nItem.Label = ItemLabel;\nItem.Icon = ItemIcon;\n\nPopoverDropdown.Item = Item;\n\nexport const PopoverDropdownItem = Item;\nexport { PopoverDropdown };\n", "import type { FormEvent } from 'react';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport toast from 'react-hot-toast';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport Modal from '~/core/ui/Modal';\nimport TextField from '~/core/ui/TextField';\nimport Button from '~/core/ui/Button';\n\nimport useCreateOrganization from '~/lib/organizations/hooks/use-create-organization';\nimport type Organization from '~/lib/organizations/types/organization';\n\nconst CreateOrganizationModal: React.FC<{\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => unknown;\n  onCreate: (organization: WithId<Organization>) => void;\n}> = ({ isOpen, setIsOpen, onCreate }) => {\n  const [createOrganization, createOrganizationState] = useCreateOrganization();\n  const { loading, data: newOrganization } = createOrganizationState;\n  const { t } = useTranslation();\n\n  const Heading = useMemo(\n    () => <Trans i18nKey={'organization:createOrganizationModalHeading'} />,\n    []\n  );\n\n  // Report error when user leaves input empty\n  const onError = useCallback(() => {\n    toast.error(`Please use a valid name`);\n  }, []);\n\n  const onSubmit = useCallback(\n    async (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n\n      const data = new FormData(event.currentTarget);\n      const name = data.get(`name`) as string;\n\n      // Adjust logic for error handling as needed\n      const isNameInvalid = !name || name.trim().length === 0;\n\n      if (isNameInvalid) {\n        return onError();\n      }\n\n      await toast.promise(createOrganization(name), {\n        success: t<string>(`organization:createOrganizationSuccess`),\n        error: t<string>(`organization:createOrganizationError`),\n        loading: t<string>(`organization:createOrganizationLoading`),\n      });\n\n      setIsOpen(false);\n    },\n    [createOrganization, onError, setIsOpen, t]\n  );\n\n  useEffect(() => {\n    if (newOrganization) {\n      onCreate(newOrganization);\n    }\n  }, [newOrganization, onCreate]);\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen} heading={Heading}>\n      <form onSubmit={onSubmit}>\n        <div className={'flex flex-col space-y-4'}>\n          <TextField>\n            <TextField.Label>\n              <Trans i18nKey={'organization:organizationNameLabel'} />\n\n              <TextField.Input\n                data-cy={'create-organization-name-input'}\n                name={'name'}\n                minLength={1}\n                required\n                placeholder={'ex. IndieCorp'}\n              />\n            </TextField.Label>\n          </TextField>\n\n          <Button\n            data-cy={'confirm-create-organization-button'}\n            block\n            loading={loading}\n          >\n            <Trans i18nKey={'organization:createOrganizationSubmitLabel'} />\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CreateOrganizationModal;\n", "import { useCallback } from 'react';\nimport { useUser } from 'reactfire';\n\nimport type { FirebaseError } from 'firebase/app';\n\nimport type { DocumentReference } from 'firebase/firestore';\nimport { getFirestore, collection, doc, writeBatch } from 'firebase/firestore';\n\nimport useRequestState from '~/core/hooks/use-request-state';\nimport MembershipRole from '~/lib/organizations/types/membership-role';\nimport type Organization from '~/lib/organizations/types/organization';\nimport type UserData from '~/core/session/types/user-data';\n\nimport {\n  ORGANIZATIONS_COLLECTION,\n  USERS_COLLECTION,\n} from '~/lib/firestore-collections';\n\n/**\n * @name useCreateOrganization\n * @description Hook to create a new organization\n */\nfunction useCreateOrganization() {\n  const user = useUser();\n  const userId = user.data?.uid as string;\n\n  const { state, setError, setData, setLoading } =\n    useRequestState<WithId<Organization>>();\n\n  const createOrganizationCallback = useCallback(\n    async (name: string) => {\n      const firestore = getFirestore();\n      const batch = writeBatch(firestore);\n\n      try {\n        setLoading(true);\n\n        const organizations = collection(firestore, ORGANIZATIONS_COLLECTION);\n\n        const userDoc = doc(\n          firestore,\n          USERS_COLLECTION,\n          userId\n        ) as DocumentReference<UserData>;\n\n        const organizationDoc = doc(organizations);\n\n        const organizationData = {\n          name,\n          members: {\n            [userDoc.id]: {\n              role: MembershipRole.Owner,\n              user: userDoc,\n            },\n          },\n        };\n\n        batch.set(organizationDoc, organizationData);\n\n        await batch.commit();\n\n        setData({\n          name,\n          id: organizationDoc.id,\n          members: {\n            [userDoc.id]: {\n              role: MembershipRole.Owner,\n              user: userDoc,\n            },\n          },\n        });\n      } catch (e) {\n        setError((e as FirebaseError).message);\n      }\n    },\n    [setData, setError, setLoading, userId]\n  );\n\n  return [createOrganizationCallback, state] as [\n    typeof createOrganizationCallback,\n    typeof state\n  ];\n}\n\nexport default useCreateOrganization;\n", "function PhotosPage() {\n  return (\n    <>\n      <h2>hola mundo desde photosPage</h2>\n    </>\n  );\n}\n\nexport default PhotosPage;\n", "import { Trans } from 'react-i18next';\nimport AppContainer from '~/components/AppContainer';\nimport AppHeader from '~/components/AppHeader';\nimport TasksContainer from '~/components/tasks/TasksContainer';\nimport ClientOnly from '~/core/ui/ClientOnly';\n\nfunction TasksPage() {\n  return (\n    <>\n      <AppHeader>\n        <Trans i18nKey={'common:tasksTabLabel'} />\n      </AppHeader>\n      <ClientOnly>\n        <AppContainer>\n          <TasksContainer />\n        </AppContainer>\n      </ClientOnly>\n    </>\n  );\n}\n\nexport default TasksPage;\n", "import React from 'react';\nimport Heading from '~/core/ui/Heading';\nimport CreateTaskForm from './CreateTaskForm';\nimport ListTasks from './ListTasks';\n\nconst TasksContainer: React.FC<{}> = () => {\n  return (\n    <>\n      <div className=\"flex flex-col \">\n        <div>\n          <CreateTaskForm />\n        </div>\n        <hr className={'mt-3 mb-3'} />\n        <div className=\"text-center\">\n          <Heading type={2}>Tasks To Do</Heading>\n        </div>\n        <div>\n          <ListTasks />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TasksContainer;\n", "import React, { useCallback, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-hot-toast';\nimport { Trans, useTranslation } from 'react-i18next';\nimport Button from '~/core/ui/Button';\nimport TextField from '~/core/ui/TextField';\nimport useCreateTask from '~/lib/tasks/hooks/use-create-task';\n\nconst CreateTaskForm: React.FC<{}> = () => {\n  const [createTask, createTaskState] = useCreateTask();\n  const { loading } = createTaskState;\n  const { t } = useTranslation();\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: {\n      title: '',\n      description: '',\n    },\n  });\n\n  const titleControl = register('title', { required: true });\n  const descriptionControl = register('description', { required: true });\n\n  const onError = useCallback(() => {\n    toast.error('Error: please fill in all the required fields');\n  }, []);\n\n  const onSubmit = async (title: string, description: string) => {\n    console.log(title);\n    console.log(description);\n\n    if (!title || !description) {\n      return onError();\n    }\n\n    await toast.promise(createTask(title, description), {\n      success: t<string>(`task:createTaskSuccess`),\n      error: t<string>(`task:createTaskError`),\n      loading: t<string>(`task:createTaskLoading`),\n    });\n\n    reset({\n      title: '',\n      description: '',\n    });\n  };\n\n  useEffect(() => {\n    reset({ title: '', description: '' });\n  }, [reset]);\n\n  return (\n    <>\n      <form\n        onSubmit={handleSubmit((value) => {\n          return onSubmit(value.title, value.description);\n        })}\n      >\n        <div className={'flex items-center space-y-4'}>\n          <div className={'ml-2 mr-2 flex-auto'}>\n            <TextField>\n              <TextField.Label>\n                <Trans i18nKey={'task:titleInputLabel'} />\n                <TextField.Input\n                  name={titleControl.name}\n                  innerRef={titleControl.ref}\n                  onChange={titleControl.onChange}\n                  onBlur={titleControl.onBlur}\n                  required\n                  data-cy={'task-title-input'}\n                  placeholder={'Ex. \"Do this by night\"'}\n                />\n              </TextField.Label>\n            </TextField>\n            <TextField className={'pt-1'}>\n              <TextField.Label>\n                <Trans i18nKey={'task:descriptionInputLabel'} />\n                <TextField.Input\n                  name={descriptionControl.name}\n                  innerRef={descriptionControl.ref}\n                  onChange={descriptionControl.onChange}\n                  onBlur={descriptionControl.onBlur}\n                  required\n                  data-cy={'task-description-input'}\n                  placeholder={'Write a detailed description about your task.'}\n                />\n              </TextField.Label>\n            </TextField>\n          </div>\n          <div className={'ml-2 mr-2 flex-initial pb-1'}>\n            <Button\n              className={'w-full md:w-auto'}\n              data-cy={'create-task-submit-button'}\n              loading={loading}\n            >\n              <Trans i18nKey={'task:createTaskSubmitLabel'} />\n            </Button>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default CreateTaskForm;\n", "import { TASKS_COLLECTION } from '../../firestore-collections';\nimport { useCallback } from 'react';\nimport useRequestState from '~/core/hooks/use-request-state';\nimport { getFirestore, addDoc, collection } from 'firebase/firestore';\nimport type Task from '../@types/task';\nimport type { FirebaseError } from 'firebase/app';\n\n/**\n * @name useCreateTask\n * @description Hook to create a brand new task\n */\n\nfunction useCreateTask() {\n  const { state, setLoading, setData, setError } =\n    useRequestState<WithId<Task>>();\n\n  const createTaskCallback = useCallback(\n    async (title: string, description: string) => {\n      const firestore = getFirestore();\n      const tasksCollection = collection(firestore, TASKS_COLLECTION);\n      try {\n        setLoading(true);\n        const data: Task = {\n          title: title,\n          description: description,\n          isCompleted: false,\n        };\n        const docRef = await addDoc(tasksCollection, data);\n        setData({\n          id: docRef.id,\n          title: title,\n          description: description,\n          isCompleted: data.isCompleted,\n        });\n      } catch (error) {\n        setError((error as FirebaseError).message);\n      }\n    },\n    [setData, setError, setLoading]\n  );\n  return [createTaskCallback, state] as [\n    typeof createTaskCallback,\n    typeof state\n  ];\n}\n\nexport default useCreateTask;\n", "import React from 'react';\nimport { Trans } from 'react-i18next';\nimport Alert from '~/core/ui/Alert';\nimport If from '~/core/ui/If';\nimport SubHeading from '~/core/ui/SubHeading';\nimport useListTasks from '~/lib/tasks/hooks/use-list-tasks';\nimport TaskCard from './TaskCard';\n\nconst ListTasks: React.FC<{}> = () => {\n  const { data: tasks, error, status } = useListTasks();\n\n  if (status === 'loading') {\n    return <SubHeading>Loading ...</SubHeading>;\n  }\n\n  if (status === 'error') {\n    return (\n      <Alert type=\"error\">\n        <Trans i18nKey=\"task: loadTasksError\" />\n        <span>{error?.message}</span>\n      </Alert>\n    );\n  }\n\n  return (\n    <div\n      className={`flex flex-col space-y-4 md:space-y-0 lg:mt-8 lg:flex-row lg:space-x-14 xl:space-x-20`}\n    >\n      <div className={'grid grid-cols-4'}>\n        <If condition={status === 'success'}>\n          {tasks.map((task) => {\n            return <TaskCard key={task.id} task={task} />;\n          })}\n        </If>\n      </div>\n    </div>\n  );\n};\n\nexport default ListTasks;\n", "import { TASKS_COLLECTION } from './../../firestore-collections';\nimport { collection, query, where } from 'firebase/firestore';\nimport { useFirestore, useFirestoreCollectionData } from 'reactfire';\n\nimport type { CollectionReference } from 'firebase/firestore';\nimport type Task from '../@types/task';\n\n/**\n * @name useListTasks\n * @description Returns a stream with the posts which belong to the selected organization.\n * @param organizationId\n */\n\nfunction useListTasks() {\n  const firestore = useFirestore();\n\n  const taskCollection = collection(\n    firestore,\n    TASKS_COLLECTION\n  ) as CollectionReference<Task>;\n\n  const listTaskQuery = query(\n    taskCollection\n    // where('organizationId','==',organizationId)\n    // orderBy('createdAt','asc')\n  );\n\n  return useFirestoreCollectionData(listTaskQuery, {\n    initialData: [],\n    idField: 'id',\n  });\n}\n\nexport default useListTasks;\n", "import { TrashIcon } from '@heroicons/react/24/outline';\nimport IconButton from '~/core/ui/IconButton';\nimport toaster from 'react-hot-toast';\nimport React, { useCallback, useState } from 'react';\nimport useDeleteTask from '~/lib/tasks/hooks/use-delete-task';\nimport { Trans, useTranslation } from 'react-i18next';\nimport If from '~/core/ui/If';\nimport Modal from '~/core/ui/Modal';\nimport Button from '~/core/ui/Button';\n\nconst DeleteTaskButton: React.FCC<{ taskId: string }> = ({ taskId }) => {\n  const [isDeleting, setIsDeleting] = useState(false);\n  const deleteTaskRequest = useDeleteTask();\n  const { t } = useTranslation();\n\n  const onTaskDeleteRequest = useCallback(async () => {\n    const promise = deleteTaskRequest(taskId);\n\n    await toaster.promise(promise, {\n      success: t<string>(`post:deletePostSuccessMessage`),\n      error: t<string>(`post:deletePostErrorMessage`),\n      loading: t<string>(`post:deletePostLoadingMessage`),\n    });\n\n    setIsDeleting(false);\n  }, [deleteTaskRequest, taskId, t]);\n\n  return (\n    <>\n      <IconButton\n        data-cy={'delete-post-button'}\n        onClick={() => setIsDeleting(true)}\n      >\n        <TrashIcon className=\"dark h-6\" />\n      </IconButton>\n      <If condition={isDeleting}>\n        <Modal\n          heading={<Trans i18nKey={'post:deletePostModalHeading'} />}\n          isOpen={isDeleting}\n          setIsOpen={setIsDeleting}\n        >\n          <div className={'flex flex-col space-y-4'}>\n            <p>\n              <Trans i18nKey={'common:modalConfirmationQuestion'} />\n            </p>\n            <Button\n              data-cy={'confirm-delete-post-button'}\n              color={'danger'}\n              onClick={onTaskDeleteRequest}\n            >\n              <Trans i18nKey={'post:deletePostSubmitLabel'} />\n            </Button>\n          </div>\n        </Modal>\n      </If>\n    </>\n  );\n};\n\nexport default DeleteTaskButton;\n", "import { useFirestore } from 'reactfire';\nimport { doc, deleteDoc } from 'firebase/firestore';\nimport { TASKS_COLLECTION } from '~/lib/firestore-collections';\n\nimport type { DocumentReference } from 'firebase/firestore';\nimport type Task from '../@types/task';\nimport { useCallback } from 'react';\n\n/**\n * @name useeleteTask\n * @description Returns a stream with the posts which belong to the selected organization\n * @param organizationId\n */\n\nfunction useDeleteTask() {\n    const firestore = useFirestore();\n\n    const deletePostCallback = useCallback(\n        (taskId: string) => {\n          const postRef = doc(\n            firestore,\n            TASKS_COLLECTION,\n            taskId\n          ) as DocumentReference<Task>;\n    \n          return deleteDoc(postRef);\n        },\n        [firestore]\n      );\n    \n      return deletePostCallback;\n}\n\nexport default useDeleteTask;\n", "import { PencilSquareIcon } from '@heroicons/react/24/outline';\nimport { useState } from 'react';\nimport IconButton from '~/core/ui/IconButton';\nimport If from '~/core/ui/If';\nimport UpdateTaskCard from './UpdateTasksCard';\n\nimport task from '~/lib/tasks/@types/task';\n\nconst EditTaskButton: React.FCC<{ task: task }> = ({ task }) => {\n  const [isUpdateTaskOpen, setIsUpdateTaskOpen] = useState(false);\n\n  return (\n    <>\n      <IconButton\n        data-cy={'update-post-button'}\n        onClick={() => setIsUpdateTaskOpen(true)}\n      >\n        {/* TODO: build a checkbox or switch for isComplete property */}\n        <PencilSquareIcon className=\"dark h-6\" />\n      </IconButton>\n      <If condition={isUpdateTaskOpen}>\n        <UpdateTaskCard\n          isOpen={isUpdateTaskOpen}\n          setIsOpen={setIsUpdateTaskOpen}\n          task={task}\n        />\n      </If>\n    </>\n  );\n};\n\nexport default EditTaskButton;\n", "import React, { useCallback, useContext, useEffect } from 'react';\nimport Button from '~/core/ui/Button';\nimport Modal from '~/core/ui/Modal';\nimport TextField from '~/core/ui/TextField';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { useForm } from 'react-hook-form';\nimport useUpdateTask from '~/lib/tasks/hooks/use-update-task';\nimport toast from 'react-hot-toast';\nimport OrganizationContext from '~/lib/contexts/organization';\n\nimport type Task from '~/lib/tasks/@types/task';\n\nconst EditTaskButton: React.FC<{\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => unknown;\n  task: Task;\n}> = ({ isOpen, setIsOpen, task }) => {\n  const { organization } = useContext(OrganizationContext);\n  const { t } = useTranslation();\n  const currentTaskText = task.taskText ?? '';\n  const [updateTask, updateTaskstate] = useUpdateTask();\n  const { loading } = updateTaskstate;\n\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: {\n      taskText: currentTaskText,\n    },\n  });\n\n  const taskTextControl = register('taskText', { value: currentTaskText });\n\n  const onError = useCallback(() => {\n    toast.error(`Please write some text to post`);\n  }, []);\n\n  const onSubmit = async (taskText: string) => {\n    const isTextInvalid = !taskText;\n    if (isTextInvalid) {\n      return onError();\n    }\n\n    await toast.promise(\n      updateTask(task.id as string, taskText, organization?.id as string),\n      {\n        success: () => {\n          setIsOpen(false);\n          return t<string>(`post:updateTaskSuccess`);\n        },\n        error: t<string>(`post:updateTaskError`),\n        loading: t<string>(`post:updateTaskLoading`),\n      }\n    );\n  };\n\n  useEffect(() => {\n    reset({\n      taskText: currentTaskText,\n    });\n  }, [currentTaskText, reset]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      setIsOpen={setIsOpen}\n      heading={t<string>('post:EditTaskButtonHeading')}\n    >\n      <form\n        onSubmit={handleSubmit((value) => {\n          return onSubmit(value.taskText);\n        })}\n      >\n        <div className={'flex flex-col space-y-4'}>\n        <TextField>\n              <TextField.Label>\n                <Trans i18nKey={'task:titleInputLabel'} />\n                <TextField.Input\n                  name={taskTextControl.name}\n                  innerRef={taskTextControl.ref}\n                  onChange={taskTextControl.onChange}\n                  onBlur={taskTextControl.onBlur}\n                  required\n                  data-cy={'task-title-input'}\n                  placeholder={'Ex. \"Do this by night\"'}\n                />\n              </TextField.Label>\n            </TextField>\n          <TextField>\n            <TextField.Label>\n              <Trans i18nKey={'post:taskTextInputLabel'} />\n              <TextField.Input\n                data-cy={'task-title-input'}\n                required\n                name={taskTextControl.name}\n                innerRef={taskTextControl.ref}\n                onChange={taskTextControl.onChange}\n                onBlur={taskTextControl.onBlur}\n              />\n            </TextField.Label>\n          </TextField>\n          <Button\n            data-cy={'create-task-submit-button'}\n            className={'w-full md:w-auto'}\n            loading={loading}\n          >\n            <Trans i18nKey={'post:updateTaskSubmitLabel'} />\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default EditTaskButton;", "import { useCallback } from 'react';\nimport { useUser } from 'reactfire';\nimport {\n  getFirestore,\n  collection,\n  doc,\n  updateDoc,\n  serverTimestamp,\n} from 'firebase/firestore';\nimport useRequestState from '~/core/hooks/use-request-state';\nimport {\n  TASKS_COLLECTION,\n  USERS_COLLECTION,\n} from '~/lib/firestore-collections';\n\nimport type { FirebaseError } from 'firebase/app';\nimport type { DocumentReference, Timestamp } from 'firebase/firestore';\nimport type Task from '../@types/task';\nimport type UserData from '~/core/session/types/user-data';\n\n/**\n * @name useUpdateTask\n * @description Update a task\n * @param taskId\n */\nfunction useUpdateTask() {\n  const user = useUser();\n  const userId = user.data?.uid as string;\n\n  const { state, setError, setData, setLoading } =\n    useRequestState<WithId<Task>>();\n\n  const createTaskCallback = useCallback(\n    async (tasktId: string, taskText: string, organizationId: string) => {\n      const firestore = getFirestore();\n\n      try {\n        setLoading(true);\n\n        const tasksCollection = collection(firestore, TASKS_COLLECTION);\n\n        const userDoc = doc(\n          firestore,\n          USERS_COLLECTION,\n          userId\n        ) as DocumentReference<UserData>;\n\n        const taskDoc = doc(tasksCollection, `/${tasktId}`);\n\n        const updatedAt = serverTimestamp() as Timestamp;\n\n        const taskData = {\n          taskText,\n          userId: userDoc.id,\n          updatedAt,\n        };\n\n        updateDoc(taskDoc, taskData);\n\n        setData({\n          id: taskDoc.id,\n          taskText,\n          userId: userDoc.id,\n          //   organizationId: organizationId,\n          updatedAt,\n        });\n      } catch (e) {\n        console.error((e as FirebaseError).message);\n        setError((e as FirebaseError).message);\n      }\n    },\n    [setData, setError, setLoading, userId]\n  );\n\n  return [createTaskCallback, state] as [\n    typeof createTaskCallback,\n    typeof state\n  ];\n}\n\nexport default useUpdateTask;\n", "import DeleteTaskButton from './DeleteTaskButton';\nimport EditTaskButton from './EditTaskButton';\n\nimport type Task from '~/lib/tasks/@types/task';\n\nconst TaskCard: React.FC<{ task: Task }> = ({ task }) => {\n  return (\n    <div className=\"h-30 p6 border-1 m-5 flex flex-col rounded border-inherit text-center\">\n      <h1 className=\"text-center text-base font-bold\">{task.title}</h1>\n      <p className=\"text-base\">{task.description}</p>\n      <div className=\"flex justify-around\">\n        <div>\n          <EditTaskButton task={task} />\n        </div>\n        <div>\n          <DeleteTaskButton taskId={task.id as string} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskCard;\n", "import React from 'react';\nimport { Outlet } from '@remix-run/react';\nimport { Trans } from 'react-i18next';\n\nimport NavigationMenu from '~/core/ui/Navigation/NavigationMenu';\nimport NavigationItem from '~/core/ui/Navigation/NavigationItem';\nimport AppHeader from '~/components/AppHeader';\nimport AppContainer from '~/components/AppContainer';\n\nconst links = [\n  {\n    path: '/settings/profile',\n    label: 'common:profileSettingsTabLabel',\n  },\n  {\n    path: '/settings/organization',\n    label: 'common:organizationSettingsTabLabel',\n  },\n  {\n    path: '/settings/subscription',\n    label: 'common:subscriptionSettingsTabLabel',\n  },\n];\n\nfunction SettingsLayout() {\n  return (\n    <>\n      <AppHeader>\n        <Trans i18nKey={'common:settingsTabLabel'} />\n      </AppHeader>\n\n      <AppContainer>\n        <NavigationMenu>\n          {links.map((link) => (\n            <NavigationItem link={link} key={link.path} />\n          ))}\n        </NavigationMenu>\n\n        <div\n          className={`flex flex-col space-y-4 md:space-y-0 lg:mt-8 lg:flex-row lg:space-x-16 xl:space-x-24`}\n        >\n          <Outlet />\n        </div>\n      </AppContainer>\n    </>\n  );\n}\n\nexport default SettingsLayout;\n", "import type { MetaFunction } from '@remix-run/node';\n\nimport React, { useEffect, useState } from 'react';\nimport { Trans } from 'react-i18next';\n\nimport Plans from '~/components/subscriptions/Plans';\nimport SettingsTile from '~/components/settings/SettingsTile';\n\nimport If from '~/core/ui/If';\nimport Alert from '~/core/ui/Alert';\nenum SubscriptionStatusQueryParams {\n  Success = 'success',\n  Cancel = 'cancel',\n  Error = 'error',\n}\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Subscription',\n  };\n};\n\nconst SubscriptionSettingsPage = () => {\n  const status = useSubscriptionStatus();\n\n  return (\n    <>\n      <div className={'w-full'}>\n        <SettingsTile\n          heading={<Trans i18nKey={'common:subscriptionSettingsTabLabel'} />}\n          subHeading={\n            <Trans i18nKey={'subscription:subscriptionTabSubheading'} />\n          }\n        >\n          <div className={'flex flex-col space-y-4'}>\n            <If condition={status !== undefined}>\n              <PlansStatusAlert\n                status={status as SubscriptionStatusQueryParams}\n              />\n            </If>\n\n            <Plans />\n          </div>\n        </SettingsTile>\n      </div>\n    </>\n  );\n};\n\nexport default SubscriptionSettingsPage;\n\nfunction PlansStatusAlert({\n  status,\n}: {\n  status: SubscriptionStatusQueryParams;\n}) {\n  switch (status) {\n    case SubscriptionStatusQueryParams.Cancel:\n      return (\n        <Alert type={'warn'} useCloseButton={true}>\n          <Alert.Heading>\n            <Trans i18nKey={'subscription:checkOutCanceledAlertHeading'} />\n          </Alert.Heading>\n\n          <p>\n            <Trans i18nKey={'subscription:checkOutCanceledAlert'} />\n          </p>\n        </Alert>\n      );\n\n    case SubscriptionStatusQueryParams.Error:\n      return (\n        <Alert type={'error'} useCloseButton={true}>\n          <Alert.Heading>\n            <Trans i18nKey={'subscription:unknownErrorAlertHeading'} />\n          </Alert.Heading>\n\n          <p>\n            <Trans i18nKey={'subscription:unknownErrorAlert'} />\n          </p>\n        </Alert>\n      );\n\n    case SubscriptionStatusQueryParams.Success:\n      return (\n        <Alert type={'success'} useCloseButton={true}>\n          <Alert.Heading>\n            <Trans i18nKey={'subscription:checkOutCompletedAlertHeading'} />\n          </Alert.Heading>\n\n          <p>\n            <Trans i18nKey={'subscription:checkOutCompletedAlert'} />\n          </p>\n        </Alert>\n      );\n  }\n}\n\nfunction useSubscriptionStatus() {\n  const [status, setStatus] = useState<SubscriptionStatusQueryParams>();\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n\n    const error = params.has(SubscriptionStatusQueryParams.Error);\n    const canceled = params.has(SubscriptionStatusQueryParams.Cancel);\n    const success = params.has(SubscriptionStatusQueryParams.Success);\n\n    if (canceled) {\n      setStatus(SubscriptionStatusQueryParams.Cancel);\n    } else if (success) {\n      setStatus(SubscriptionStatusQueryParams.Success);\n    } else if (error) {\n      setStatus(SubscriptionStatusQueryParams.Error);\n    }\n  }, []);\n\n  return status;\n}\n", "import React from 'react';\nimport { Trans } from 'react-i18next';\n\nimport useCurrentOrganization from '~/lib/organizations/hooks/use-current-organization';\n\nimport PlanSelectionForm from '~/components/subscriptions/PlanSelectionForm';\nimport BillingPortalRedirectButton from '~/components/subscriptions/BillingRedirectButton';\n\nimport If from '~/core/ui/If';\nimport SubscriptionCard from './SubscriptionCard';\nimport Alert from '~/core/ui/Alert';\n\nimport { canChangeBilling } from '~/lib/organizations/permissions';\nimport IfHasPermissions from '~/components/IfHasPermissions';\nimport { OrganizationPlanStatus } from '~/lib/organizations/types/organization-subscription';\n\nconst Plans: React.FC = () => {\n  const organization = useCurrentOrganization();\n\n  if (!organization) {\n    return null;\n  }\n\n  const customerId = organization.customerId;\n  const subscription = organization.subscription;\n\n  if (!subscription) {\n    return <PlanSelectionForm organization={organization} />;\n  }\n\n  const isAwaitingPayment =\n    subscription.status === OrganizationPlanStatus.AwaitingPayment;\n\n  return (\n    <div className={'flex flex-col space-y-4'}>\n      <If condition={isAwaitingPayment}>\n        <AwaitingPaymentAlert />\n      </If>\n\n      <SubscriptionCard subscription={subscription} />\n\n      <IfHasPermissions condition={canChangeBilling}>\n        <If condition={customerId}>\n          <BillingPortalRedirectButton customerId={customerId as string}>\n            <Trans i18nKey={'subscription:manageBilling'} />\n          </BillingPortalRedirectButton>\n        </If>\n      </IfHasPermissions>\n    </div>\n  );\n};\n\nfunction AwaitingPaymentAlert() {\n  return (\n    <Alert type={'warn'}>\n      <Alert.Heading>\n        <Trans i18nKey={'subscription:awaitingPaymentAlertHeading'} />\n      </Alert.Heading>\n\n      <span data-cy={'awaiting-payment-alert'}>\n        <Trans i18nKey={'subscription:awaitingPaymentAlert'} />\n      </span>\n    </Alert>\n  );\n}\n\nexport default Plans;\n", "import React, { useState } from 'react';\nimport { Trans } from 'react-i18next';\n\nimport configuration from '~/configuration';\n\nimport PlanSelector from '~/components/subscriptions/PlanSelector';\nimport CheckoutRedirectButton from '~/components/subscriptions/CheckoutRedirectButton';\nimport BillingPortalRedirectButton from '~/components/subscriptions/BillingRedirectButton';\n\nimport type Organization from '~/lib/organizations/types/organization';\nimport type { Plan } from '~/lib/organizations/types/plan';\n\nimport IfHasPermissions from '~/components/IfHasPermissions';\nimport { canChangeBilling } from '~/lib/organizations/permissions';\n\nimport If from '~/core/ui/If';\n\nconst stripePlans = configuration.stripe.plans;\n\nconst PlanSelectionForm: React.FCC<{\n  organization: WithId<Organization>;\n}> = ({ organization }) => {\n  const initialPlan = stripePlans.find((item) => {\n    return item.stripePriceId === organization?.subscription?.priceId;\n  });\n\n  const [selectedPlan, setSelectedPlan] = useState<Maybe<Plan>>(initialPlan);\n\n  const isCheckoutDisabled =\n    initialPlan?.stripePriceId === selectedPlan?.stripePriceId;\n\n  const customerId = organization.customerId;\n\n  return (\n    <div className={'flex flex-col space-y-6'}>\n      <IfHasPermissions condition={canChangeBilling}>\n        <div className={'w-full'}>\n          <PlanSelector plan={selectedPlan} setPlan={setSelectedPlan} />\n        </div>\n\n        <div\n          className={\n            'flex flex-col items-center space-y-4 lg:flex-row lg:space-y-0 lg:space-x-4'\n          }\n        >\n          <CheckoutRedirectButton\n            organizationId={organization.id}\n            priceId={selectedPlan?.stripePriceId}\n            customerId={customerId}\n            disabled={isCheckoutDisabled}\n          >\n            <Trans i18nKey={'subscription:goToCheckout'} />\n          </CheckoutRedirectButton>\n\n          <If condition={customerId}>\n            <BillingPortalRedirectButton customerId={customerId as string}>\n              <Trans i18nKey={'subscription:manageBilling'} />\n            </BillingPortalRedirectButton>\n          </If>\n        </div>\n      </IfHasPermissions>\n    </div>\n  );\n};\n\nexport default PlanSelectionForm;\n", "import type { PropsWithChildren } from 'react';\nimport { RadioGroup } from '@headlessui/react';\nimport classNames from 'classnames';\n\nimport configuration from '~/configuration';\nimport If from '~/core/ui/If';\nimport type { Plan } from '~/lib/organizations/types/plan';\nimport PricingTable from '~/components/PricingTable';\nimport Heading from '~/core/ui/Heading';\n\nconst STRIPE_PLANS = configuration.stripe.plans;\n\nexport default function PlanSelector(\n  props: PropsWithChildren<{\n    plan: Maybe<Plan>;\n    setPlan: React.Dispatch<React.SetStateAction<Maybe<Plan>>>;\n  }>\n) {\n  return (\n    <div\n      className={\n        'flex flex-col space-y-8 lg:flex-row lg:space-y-0 lg:space-x-12'\n      }\n    >\n      <RadioGroup\n        className={'w-full lg:w-6/12 2xl:w-4/12'}\n        value={props.plan}\n        onChange={props.setPlan}\n      >\n        <div className=\"w-full space-y-2.5\">\n          {STRIPE_PLANS.map((plan) => (\n            <RadioGroup.Option\n              key={plan.name}\n              value={plan}\n              data-cy={`subscription-plan`}\n              className={({ active, checked }) =>\n                classNames(`PlanSelectorRadioItem`, {\n                  PlanSelectorRadioItemNonActive: !active,\n                  PlanSelectorRadioItemChecked: checked,\n                })\n              }\n            >\n              {({ checked }) => (\n                <>\n                  <div className=\"flex w-full items-center justify-between\">\n                    <div className=\"flex w-full items-center space-x-6\">\n                      <div className=\"flex-shrink-0\">\n                        <If condition={checked} fallback={<UncheckIcon />}>\n                          <CheckIcon className=\"PlanSelectorCheckIcon\" />\n                        </If>\n                      </div>\n\n                      <div className=\"flex-auto text-sm\">\n                        <RadioGroup.Label as=\"p\" className={`PlanSelectorName`}>\n                          {plan.name}\n                        </RadioGroup.Label>\n\n                        <RadioGroup.Description\n                          as=\"span\"\n                          className={classNames(`inline text-base`, {\n                            'dark:text-gray-300': checked,\n                            'text-gray-500 dark:text-gray-400': !checked,\n                          })}\n                        >\n                          {plan.description}\n                        </RadioGroup.Description>\n                      </div>\n\n                      <span className={'PlanSelectorPrice'}>{plan.price}</span>\n                    </div>\n                  </div>\n                </>\n              )}\n            </RadioGroup.Option>\n          ))}\n        </div>\n      </RadioGroup>\n\n      <If condition={props.plan}>\n        {(plan) => {\n          return (\n            <div className={'flex w-full flex-1 flex-col space-y-6'}>\n              <div className={'flex flex-col space-y-2'}>\n                <Heading type={2}>{plan.name}</Heading>\n                <Heading type={4}>{plan.description}</Heading>\n              </div>\n\n              <PricingTable.Price>{plan.price}</PricingTable.Price>\n\n              <PricingTable.FeaturesList features={plan.features} />\n            </div>\n          );\n        }}\n      </If>\n    </div>\n  );\n}\n\nfunction CheckIcon(props: { className: string }) {\n  return (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      <circle cx={12} cy={12} r={12} fill=\"#fff\" opacity=\"0.2\" />\n      <path\n        d=\"M7 13l3 3 7-7\"\n        stroke=\"#fff\"\n        strokeWidth={1.5}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n}\n\nfunction UncheckIcon() {\n  return (\n    <svg viewBox=\"0 0 24 24\" className={'h-6 w-6'}>\n      <circle cx={12} cy={12} r={12} fill=\"currentColor\" opacity=\"0.2\" />;\n    </svg>\n  );\n}\n", "import React from 'react';\nimport { ArrowRightIcon } from '@heroicons/react/24/outline';\n\nimport Button from '~/core/ui/Button';\nimport configuration from '~/configuration';\nimport isBrowser from '~/core/generic/is-browser';\nimport useGetCsrfToken from '~/core/firebase/hooks/use-get-csrf-token';\nimport ClientOnly from '~/core/ui/ClientOnly';\n\nconst CHECKOUT_SESSION_API_ENDPOINT = configuration.paths.api.checkout;\n\nconst CheckoutRedirectButton: React.FCC<{\n  disabled?: boolean;\n  priceId: Maybe<string>;\n  organizationId: Maybe<string>;\n  customerId: Maybe<string>;\n}> = ({ children, ...props }) => {\n  return (\n    <form\n      data-cy={'checkout-form'}\n      action={CHECKOUT_SESSION_API_ENDPOINT}\n      method=\"POST\"\n    >\n      <ClientOnly>\n        <CheckoutFormData\n          customerId={props.customerId}\n          organizationId={props.organizationId}\n          priceId={props.priceId}\n        />\n      </ClientOnly>\n\n      <Button\n        size={'large'}\n        color={'primary'}\n        type=\"submit\"\n        disabled={props.disabled}\n      >\n        <span className={'flex items-center space-x-2'}>\n          <span>{children}</span>\n\n          <ArrowRightIcon className={'h-6'} />\n        </span>\n      </Button>\n    </form>\n  );\n};\n\nexport default CheckoutRedirectButton;\n\nfunction CheckoutFormData(\n  props: React.PropsWithChildren<{\n    organizationId: Maybe<string>;\n    priceId: Maybe<string>;\n    customerId: Maybe<string>;\n  }>\n) {\n  const getCsrfToken = useGetCsrfToken();\n\n  return (\n    <>\n      <input\n        type=\"hidden\"\n        name={'organizationId'}\n        defaultValue={props.organizationId}\n      />\n\n      <input\n        type=\"hidden\"\n        name={'csrfToken'}\n        defaultValue={getCsrfToken() ?? ''}\n      />\n\n      <input type=\"hidden\" name={'returnUrl'} defaultValue={getReturnUrl()} />\n      <input type=\"hidden\" name={'priceId'} defaultValue={props.priceId} />\n\n      <input\n        type=\"hidden\"\n        name={'customerId'}\n        defaultValue={props.customerId}\n      />\n    </>\n  );\n}\n\nfunction getReturnUrl() {\n  return isBrowser()\n    ? [window.location.origin, window.location.pathname].join('')\n    : undefined;\n}\n", "import React from 'react';\nimport { ArrowRightIcon } from '@heroicons/react/24/outline';\n\nimport Button from '~/core/ui/Button';\nimport useGetCsrfToken from '~/core/firebase/hooks/use-get-csrf-token';\nimport ClientOnly from '~/core/ui/ClientOnly';\n\nimport configuration from '~/configuration';\nconst BILLING_PORTAL_REDIRECT_ENDPOINT = configuration.paths.api.billingPortal;\n\nconst BillingPortalRedirectButton: React.FCC<{\n  customerId: string;\n  className?: string;\n}> = ({ children, customerId, className }) => {\n  return (\n    <form method=\"POST\" action={BILLING_PORTAL_REDIRECT_ENDPOINT}>\n      <input type={'hidden'} name={'customerId'} value={customerId} />\n\n      <ClientOnly>\n        <CsrfTokenInput />\n      </ClientOnly>\n\n      <Button size={'large'} color={'secondary'} className={className}>\n        <span className={'flex items-center space-x-2'}>\n          <span>{children}</span>\n\n          <ArrowRightIcon className={'h-6'} />\n        </span>\n      </Button>\n    </form>\n  );\n};\n\nfunction CsrfTokenInput() {\n  const getCsrfToken = useGetCsrfToken();\n\n  return (\n    <input\n      type=\"hidden\"\n      name={'csrfToken'}\n      defaultValue={getCsrfToken() ?? ''}\n    />\n  );\n}\n\nexport default BillingPortalRedirectButton;\n", "import React, { useMemo } from 'react';\nimport { Trans } from 'react-i18next';\n\nimport type { OrganizationSubscription } from '~/lib/organizations/types/organization-subscription';\nimport { OrganizationPlanStatus } from '~/lib/organizations/types/organization-subscription';\n\nimport Heading from '~/core/ui/Heading';\nimport Badge from '~/core/ui/Badge';\n\nimport configuration from '~/configuration';\nimport If from '~/core/ui/If';\n\nconst SubscriptionCard: React.FC<{\n  subscription: OrganizationSubscription;\n}> = ({ subscription }) => {\n  const plans = useMemo(() => getPlans(), []);\n\n  const plan = useMemo(() => {\n    return plans.find((item) => {\n      return item.stripePriceId === subscription.priceId;\n    });\n  }, [plans, subscription.priceId]);\n\n  const endDate = useMemo(() => {\n    const endDateMs = subscription.periodEndsAt * 1000;\n\n    return new Date(endDateMs).toLocaleDateString();\n  }, [subscription.periodEndsAt]);\n\n  const isSubscriptionActive = useMemo(() => {\n    return subscription.status === OrganizationPlanStatus.Paid;\n  }, [subscription.status]);\n\n  if (!plan) {\n    return null;\n  }\n\n  return (\n    <div className={'flex flex-col space-y-6'} data-cy={'subscription-card'}>\n      <div className={'flex flex-col space-y-2.5'}>\n        <span className={'text-xs text-gray-700 dark:text-gray-400'}>\n          <Trans i18nKey={'subscription:currentPlan'} />\n        </span>\n\n        <div className={'flex items-center space-x-4'}>\n          <Heading type={3}>\n            <span data-cy={'subscription-name'}>{plan.name}</span>\n          </Heading>\n\n          <If condition={isSubscriptionActive}>\n            <Badge size={'small'} color={'success'}>\n              <Trans i18nKey={'subscription:subscriptionActiveBadge'} />\n            </Badge>\n          </If>\n        </div>\n\n        <Heading type={6}>\n          <span className={'text-gray-700 dark:text-gray-400'}>\n            {plan.description}\n          </span>\n        </Heading>\n      </div>\n\n      <div className={'my-4'}>\n        <p>\n          <span data-cy={'subscription-period-end'}>\n            <Trans\n              i18nKey={'subscription:subscriptionWillEndOn'}\n              values={{ endDate }}\n            />\n          </span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nfunction getPlans() {\n  const { plans } = configuration.stripe;\n\n  /**\n   * This is read-only, so we also include the testing plans\n   * so we can test them.\n   *\n   * In production, of course, they should never show up\n   */\n  return [...plans, ...getTestingPlans()];\n}\n\n/**\n * @name getTestingPlans\n * @description These plans are added for testing-purposes only\n */\nfunction getTestingPlans() {\n  return [\n    {\n      name: 'Testing Plan',\n      description: 'Description of your Testing plan',\n      price: '$999/year',\n      stripePriceId: 'price_1LFibmKr5l4rxPx3wWcSO8UY',\n      features: [],\n    },\n  ];\n}\n\nexport default SubscriptionCard;\n", "import Heading from '~/core/ui/Heading';\nimport If from '~/core/ui/If';\n\nconst SettingsTile: React.FCC<{\n  heading?: string | React.ReactNode;\n  subHeading?: string | React.ReactNode;\n}> = ({ children, heading, subHeading }) => {\n  return (\n    <div className={'flex flex-col space-y-6'}>\n      <div className={'flex flex-col space-y-1.5'}>\n        <If condition={heading}>\n          <Heading type={3}>{heading}</Heading>\n        </If>\n\n        <If condition={subHeading}>\n          <p className={'text-xl font-medium text-gray-500 dark:text-gray-400'}>\n            {subHeading}\n          </p>\n        </If>\n      </div>\n\n      <div\n        className={\n          'rounded-lg border border-gray-100 p-2.5 dark:border-black-300 lg:p-6'\n        }\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsTile;\n", "import { Outlet } from '@remix-run/react';\n\nimport SettingsContentContainer from '~/components/settings/SettingsContentContainer';\nimport OrganizationSettingsTabs from '~/components/organizations/OrganizationSettingsTabs';\n\nfunction OrganizationSettingsLayout() {\n  return (\n    <>\n      <div>\n        <OrganizationSettingsTabs />\n      </div>\n\n      <SettingsContentContainer>\n        <Outlet />\n      </SettingsContentContainer>\n    </>\n  );\n}\n\nexport default OrganizationSettingsLayout;\n", "const SettingsContentContainer: React.FCC = ({ children }) => {\n  return <div className={'w-full lg:max-w-4xl'}>{children}</div>;\n};\n\nexport default SettingsContentContainer;\n", "import NavigationItem from '~/core/ui/Navigation/NavigationItem';\nimport NavigationMenu from '~/core/ui/Navigation/NavigationMenu';\n\nconst links = {\n  General: {\n    path: '/settings/organization',\n    label: 'organization:generalTabLabel',\n  },\n  Members: {\n    path: '/settings/organization/members',\n    label: 'organization:membersTabLabel',\n  },\n};\n\nconst OrganizationSettingsTabs = () => {\n  const itemClassName = `flex justify-center lg:justify-start items-center flex-auto lg:flex-initial`;\n\n  return (\n    <div>\n      <NavigationMenu secondary vertical>\n        <NavigationItem end className={itemClassName} link={links.General} />\n        <NavigationItem className={itemClassName} link={links.Members} />\n      </NavigationMenu>\n    </div>\n  );\n};\n\nexport default OrganizationSettingsTabs;\n", "import type { ActionArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { z } from 'zod';\n\nimport withCsrf from '~/core/middleware/with-csrf';\nimport withMethodsGuard from '~/core/middleware/with-methods-guard';\n\nimport {\n  throwBadRequestException,\n  throwForbiddenException,\n} from '~/core/http-exceptions';\n\nimport { parseOrganizationIdCookie } from '~/lib/server/cookies/organization.cookie';\nimport { parseSessionIdCookie } from '~/lib/server/cookies/session.cookie';\n\nimport {\n  removeMemberFromOrganization,\n  updateMemberRole,\n} from '~/lib/server/organizations/memberships.server';\nimport getLoggedInUser from '~/core/firebase/admin/auth/get-logged-in-user';\n\nimport MembershipRole from '~/lib/organizations/types/membership-role';\nimport getLogger from '~/core/logger';\n\nexport async function action(args: ActionArgs) {\n  const req = args.request;\n  const targetUserId = args.params.member as string;\n\n  await withCsrf(req);\n  await withMethodsGuard(req, ['DELETE', 'PUT']);\n\n  switch (req.method) {\n    case 'PUT':\n      return handleMemberRoleUpdate(req, targetUserId);\n\n    case 'DELETE':\n      return handleMemberRemovedFromOrganization(req, targetUserId);\n  }\n}\n\nasync function handleMemberRoleUpdate(req: Request, targetUserId: string) {\n  const body = await req.json();\n  const result = await getUpdateMemberBodySchema().safeParseAsync(body);\n\n  if (!result.success) {\n    return throwBadRequestException();\n  }\n\n  const logger = getLogger();\n  const organizationId = await parseOrganizationIdCookie(req);\n  const sessionId = await parseSessionIdCookie(req);\n  const currentUser = await getLoggedInUser(sessionId);\n  const currentUserId = currentUser.uid;\n\n  const role = result.data.role;\n\n  const payload = {\n    organizationId,\n    currentUserId,\n    targetUserId,\n  };\n\n  if (payload.targetUserId === currentUserId) {\n    logger.warn(`The current user cannot dispatch actions about itself`);\n\n    return throwForbiddenException();\n  }\n\n  // update member role\n  const updatePayload = { ...payload, role };\n  await updateMemberRole(updatePayload);\n\n  logger.info(updatePayload, `User role successfully updated`);\n\n  return json({ success: true });\n}\n\nasync function handleMemberRemovedFromOrganization(\n  req: Request,\n  targetUserId: string\n) {\n  const organizationId = await parseOrganizationIdCookie(req);\n  const sessionId = await parseSessionIdCookie(req);\n  const currentUser = await getLoggedInUser(sessionId);\n  const currentUserId = currentUser.uid;\n\n  const payload = {\n    organizationId,\n    currentUserId,\n    targetUserId,\n  };\n\n  await removeMemberFromOrganization(payload);\n\n  getLogger().info(payload, `User removed from organization`);\n\n  return json({ success: true });\n}\n\nfunction getUpdateMemberBodySchema() {\n  return z.object({\n    role: z.nativeEnum(MembershipRole),\n  });\n}\n", "import { Trans } from 'react-i18next';\nimport type { ActionArgs, MetaFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport ArrowLeftIcon from '@heroicons/react/24/outline/ArrowLeftIcon';\nimport { z } from 'zod';\n\nimport {\n  throwBadRequestException,\n  throwInternalServerErrorException,\n} from '~/core/http-exceptions';\n\nimport getLoggedInUser from '~/core/firebase/admin/auth/get-logged-in-user';\nimport inviteMembers from '~/lib/server/organizations/invite-members';\n\nimport InviteMembersForm from '~/components/organizations/InviteMembersForm';\nimport SettingsTile from '~/components/settings/SettingsTile';\n\nimport Button from '~/core/ui/Button';\nimport MembershipRole from '~/lib/organizations/types/membership-role';\nimport withCsrf from '~/core/middleware/with-csrf';\nimport withMethodsGuard from '~/core/middleware/with-methods-guard';\nimport { parseSessionIdCookie } from '~/lib/server/cookies/session.cookie';\nimport { parseOrganizationIdCookie } from '~/lib/server/cookies/organization.cookie';\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Invite Members',\n  };\n};\n\nexport async function action(props: ActionArgs) {\n  const req = props.request;\n\n  await withCsrf(req);\n  await withMethodsGuard(req, ['POST']);\n\n  const session = await parseSessionIdCookie(req);\n  const organizationId = await parseOrganizationIdCookie(req);\n  const user = await getLoggedInUser(session);\n\n  const json = await req.json();\n  const result = await getInviteMembersBodySchema().safeParseAsync(json);\n\n  if (!result.success) {\n    return throwBadRequestException();\n  }\n\n  const params = {\n    invites: result.data,\n    organizationId,\n    inviterId: user.uid,\n  };\n\n  try {\n    await inviteMembers(params);\n\n    return redirect('/settings/organization/members');\n  } catch (e) {\n    return throwInternalServerErrorException();\n  }\n}\n\nconst OrganizationMembersInvitePage = () => {\n  return (\n    <>\n      <SettingsTile\n        heading={<Trans i18nKey={'organization:inviteMembersPageHeading'} />}\n        subHeading={\n          <Trans i18nKey={'organization:inviteMembersPageSubheading'} />\n        }\n      >\n        <InviteMembersForm />\n      </SettingsTile>\n\n      <div className={'mt-4'}>\n        <GoBackToMembersButton />\n      </div>\n    </>\n  );\n};\n\nexport default OrganizationMembersInvitePage;\n\nfunction GoBackToMembersButton() {\n  return (\n    <Button\n      size={'small'}\n      color={'transparent'}\n      href={'/settings/organization/members'}\n    >\n      <span className={'flex items-center space-x-1'}>\n        <ArrowLeftIcon className={'h-3'} />\n\n        <span>\n          <Trans i18nKey={'organization:goBackToMembersPage'} />\n        </span>\n      </span>\n    </Button>\n  );\n}\n\nfunction getInviteMembersBodySchema() {\n  return z.array(\n    z.object({\n      role: z.nativeEnum(MembershipRole),\n      email: z.string().email(),\n    })\n  );\n}\n", "import { addDays } from 'date-fns';\n\nimport type MembershipRole from '~/lib/organizations/types/membership-role';\nimport type MembershipInvite from '~/lib/organizations/types/membership-invite';\n\nimport { canInviteUser } from '~/lib/organizations/permissions';\nimport renderInviteEmail from '~/lib/emails/invite';\n\nimport sendEmail from '~/core/email/send-email';\nimport getUserInfoById from '~/core/firebase/admin/auth/get-user-info-by-id';\n\nimport { getOrganizationById } from '../queries';\nimport getLogger from '~/core/logger';\nimport configuration from '~/configuration';\n\ninterface Invite {\n  email: string;\n  role: MembershipRole;\n}\n\ninterface Params {\n  organizationId: string;\n  inviterId: string;\n  invites: Invite[];\n}\n\n// change this constant to set a different amount of days\n// for the invite to expire\nconst INVITE_EXPIRATION_DAYS = 7;\n\nexport default async function inviteMembers(params: Params) {\n  const { organizationId, invites, inviterId } = params;\n  const logger = getLogger();\n\n  const inviter = await getUserInfoById(inviterId);\n  const organization = await getOrganizationById(organizationId);\n  const organizationData = organization.data();\n\n  if (!organizationData) {\n    throw new Error(\n      `Organization data with ID ${organizationId} was not found`\n    );\n  }\n\n  const organizationName = organizationData.name;\n  const inviterRole = organizationData?.members[inviterId].role;\n\n  // validate that the inviter is currently in the organization\n  if (inviterRole === undefined) {\n    throw new Error(\n      `Invitee with ID ${inviterId} does not belong to the organization`\n    );\n  }\n\n  const invitesCollection = organization.ref.collection(`invites`);\n  const requests: Array<Promise<unknown>> = [];\n  const expiresAt = addDays(new Date(), INVITE_EXPIRATION_DAYS).getTime();\n\n  for (const invite of invites) {\n    const ref = invitesCollection.doc();\n\n    // validate that the user has permissions\n    // to invite the user based on their roles\n    if (!canInviteUser(inviterRole, invite.role)) {\n      return;\n    }\n\n    const inviterDisplayName =\n      inviter?.displayName ?? inviter?.email ?? undefined;\n\n    const organizationLogo = organizationData?.logoURL ?? undefined;\n\n    const sendEmailRequest = () =>\n      sendInviteEmail({\n        invitedUserEmail: invite.email,\n        inviteCode: ref.id,\n        organizationName,\n        organizationLogo,\n        inviter: inviterDisplayName,\n      });\n\n    const field: keyof MembershipInvite = 'email';\n    const op = '==';\n\n    const existingInvite = await invitesCollection\n      .where(field, op, invite.email)\n      .get();\n\n    const inviteExists = !existingInvite.empty;\n\n    // this callback will be called when the promise fails\n    const catchCallback = (error: unknown) => {\n      logger.error(\n        {\n          inviteId: ref.id,\n          inviter: inviter?.uid,\n          organizationId,\n        },\n        `Error while sending invite to member`\n      );\n\n      logger.debug(error);\n\n      return Promise.reject(error);\n    };\n\n    // if an invitation to the email {invite.email} already exists,\n    // then we update the existing document\n    if (inviteExists) {\n      const doc = existingInvite.docs[0];\n\n      const request = async () => {\n        try {\n          // update invitation document\n          await doc.ref.update({ ...invite });\n\n          // send email\n          await sendEmailRequest();\n        } catch (e) {\n          return catchCallback(e);\n        }\n      };\n\n      // add a promise for each invite\n      requests.push(request());\n    } else {\n      // otherwise, we create a new document with the invite\n      const request = async () => {\n        const data: MembershipInvite = {\n          ...invite,\n          code: ref.id,\n          expiresAt,\n          organization: {\n            id: organizationId,\n            name: organizationData?.name ?? '',\n          },\n        };\n\n        try {\n          // add invite to the Firestore collection\n          const doc = await invitesCollection.add(data);\n\n          logger.info(\n            {\n              organizationId,\n              inviteId: doc.id,\n            },\n            `Invite successfully added`\n          );\n\n          // send email to user\n          await sendEmailRequest();\n\n          logger.info(\n            {\n              organizationId,\n              inviteId: doc.id,\n            },\n            `Invite successfully sent`\n          );\n        } catch (e) {\n          return catchCallback(e);\n        }\n      };\n\n      // add a promise for each invite\n      requests.push(request());\n    }\n  }\n\n  return Promise.all(requests);\n}\n\nfunction sendInviteEmail(props: {\n  invitedUserEmail: string;\n  inviteCode: string;\n  organizationName: string;\n  organizationLogo: Maybe<string>;\n  inviter: Maybe<string>;\n}) {\n  const {\n    invitedUserEmail,\n    inviteCode,\n    organizationName,\n    organizationLogo,\n    inviter,\n  } = props;\n\n  const sender = configuration.email.senderAddress;\n  const productName = configuration.site.siteName;\n\n  const subject = 'You have been invited to join an organization!';\n  const link = getInvitePageFullUrl(inviteCode);\n\n  const { html, errors } = renderInviteEmail({\n    productName,\n    link,\n    organizationName,\n    organizationLogo,\n    invitedUserEmail,\n    inviter,\n  });\n\n  if (errors.length) {\n    throw new Error(\n      `Found errors while rendering invitation email: ${JSON.stringify(\n        errors,\n        null,\n        2\n      )}`\n    );\n  }\n\n  return sendEmail({\n    to: invitedUserEmail,\n    from: sender,\n    subject,\n    html,\n  });\n}\n\n/**\n * @name getInvitePageFullUrl\n * @description Return the full URL to the invite page link. For example,\n * makerkit.dev/invite/{INVITE_CODE}\n * @param inviteCode\n */\nfunction getInvitePageFullUrl(inviteCode: string) {\n  let siteUrl = configuration.site.siteUrl;\n\n  if (configuration.emulator) {\n    siteUrl = getEmulatorHost();\n  }\n\n  assertSiteUrl(siteUrl);\n\n  return [siteUrl, 'invite', inviteCode].join('/');\n}\n\nfunction assertSiteUrl(siteUrl: Maybe<string>): asserts siteUrl is string {\n  if (!siteUrl && configuration.production) {\n    throw new Error(\n      `Please configure the \"siteUrl\" property in the configuration file ~/configuration.ts`\n    );\n  }\n}\n\nfunction getEmulatorHost() {\n  const host = `http://localhost`;\n  const port = 3000;\n\n  return [host, port].join(':');\n}\n", "import {\n  render,\n  Mjml,\n  MjmlHead,\n  MjmlTitle,\n  MjmlPreview,\n  MjmlBody,\n  MjmlSection,\n  MjmlColumn,\n  MjmlText,\n} from 'mjml-react';\n\nimport EmailNavbar from '~/components/emails/EmailNavbar';\nimport CallToActionButton from '~/components/emails/CallToActionButton';\n\ninterface Props {\n  organizationName: string;\n  organizationLogo?: string;\n  inviter: Maybe<string>;\n  invitedUserEmail: string;\n  link: string;\n  productName: string;\n}\n\nexport default function renderInviteEmail(props: Props) {\n  const title = `You have been invited to join ${props.organizationName}`;\n\n  return render(\n    <Mjml>\n      <MjmlHead>\n        <MjmlTitle>{title}</MjmlTitle>\n        <MjmlPreview>{title}</MjmlPreview>\n      </MjmlHead>\n\n      <MjmlBody width={500}>\n        <EmailNavbar />\n\n        <MjmlSection fullWidth>\n          <MjmlColumn>\n            <MjmlText>Hi,</MjmlText>\n\n            <MjmlText>\n              {props.inviter} with {props.organizationName} has invited you to\n              use {props.productName} to collaborate with them.\n            </MjmlText>\n\n            <MjmlText>\n              Use the button below to set up your account and get started:\n            </MjmlText>\n          </MjmlColumn>\n        </MjmlSection>\n\n        <MjmlSection>\n          <MjmlColumn>\n            <CallToActionButton href={props.link}>\n              Join {props.organizationName}\n            </CallToActionButton>\n          </MjmlColumn>\n        </MjmlSection>\n\n        <MjmlSection>\n          <MjmlColumn>\n            <MjmlText>Welcome aboard,</MjmlText>\n            <MjmlText>The {props.productName} Team</MjmlText>\n          </MjmlColumn>\n        </MjmlSection>\n      </MjmlBody>\n    </Mjml>,\n    { validationLevel: 'soft' }\n  );\n}\n", "import { MjmlColumn, MjmlSection, MjmlText } from 'mjml-react';\nimport configuration from '~/configuration';\n\nfunction EmailNavbar(\n  props: React.PropsWithChildren<{\n    productName?: string;\n  }>\n) {\n  const productName = props.productName ?? configuration.site.name;\n\n  return (\n    <MjmlSection fullWidth>\n      <MjmlColumn>\n        <MjmlText align={'center'}>\n          {/* Add your logo here */}\n\n          {productName}\n        </MjmlText>\n      </MjmlColumn>\n    </MjmlSection>\n  );\n}\n\nexport default EmailNavbar;\n", "import { MjmlButton } from 'mjml-react';\n\n// update this with your brand's primary color\nconst PRIMARY_COLOR = `#3b82f6`;\n\nfunction CallToActionButton(\n  props: React.PropsWithChildren<{\n    href: string;\n  }>\n) {\n  return (\n    <MjmlButton\n      padding=\"12px\"\n      backgroundColor={PRIMARY_COLOR}\n      borderRadius={'8px'}\n      href={props.href}\n    >\n      {props.children}\n    </MjmlButton>\n  );\n}\n\nexport default CallToActionButton;\n", "import configuration from '../../configuration';\n\ninterface SendEmailParams {\n  from: string;\n  to: string;\n  subject: string;\n  text?: string;\n  html?: string;\n}\n\nexport default async function sendEmail(config: SendEmailParams) {\n  const transporter = await getTransporter();\n\n  return transporter.sendMail(config);\n}\n\nfunction getTransporter() {\n  if (process.env.IS_CI) {\n    return getMockMailTransporter();\n  }\n\n  if (configuration.emulator) {\n    return getEtherealMailTransporter();\n  }\n\n  return getSMTPTransporter();\n}\n\n/**\n * @description SMTP Transporter for production use. Add your favorite email\n * API details (Mailgun, Sendgrid, etc.) to the configuration.\n */\nasync function getSMTPTransporter() {\n  const nodemailer = await import('nodemailer');\n\n  const { host, port, user, password: pass } = configuration.email;\n  const secure = port === 465 && !configuration.emulator;\n\n  return nodemailer.createTransport({\n    host,\n    port,\n    secure,\n    auth: {\n      user,\n      pass,\n    },\n  });\n}\n\n/**\n * @description Dev transport for https://ethereal.email that you can use to\n * debug your emails for free. It's the default for the dev environment\n */\nasync function getEtherealMailTransporter() {\n  const nodemailer = await import('nodemailer');\n  const testAccount = await getEtherealTestAccount();\n\n  const host = 'smtp.ethereal.email';\n  const port = 587;\n\n  return nodemailer.createTransport({\n    host,\n    port,\n    secure: false,\n    auth: {\n      user: testAccount.user,\n      pass: testAccount.pass,\n    },\n  });\n}\n\nfunction getMockMailTransporter() {\n  return {\n    sendMail(params: SendEmailParams) {\n      console.log(\n        `Using mock email transporter with params`,\n        JSON.stringify(params, null, 2)\n      );\n    },\n  };\n}\n\nasync function getEtherealTestAccount() {\n  const user = process.env.ETHEREAL_EMAIL;\n  const pass = process.env.ETHEREAL_PASSWORD;\n\n  // if we have added an Ethereal account, we reuse these credentials to\n  // send the email\n  if (user && pass) {\n    console.log(`Sending email with Ethereal test account...`);\n\n    return {\n      user,\n      pass,\n    };\n  }\n\n  // Otherwise, we create a new account and recommend to add the credentials\n  // to the configuration file\n  return createEtherealTestAccount();\n}\n\nasync function createEtherealTestAccount() {\n  const nodemailer = await import('nodemailer');\n  const newAccount = await nodemailer.createTestAccount();\n\n  console.warn(`\n    Configuration property \"emailEtherealTestAccount\" was not found! \n    Consider adding a fixed Ethereal account so that you don't need to update the credentials each time you use it.\n    To do so, please use the guide at https://makerkit.dev/docs/email\n  `);\n\n  console.log(\n    `Created Ethereal test account: ${JSON.stringify(newAccount, null, 2)}`\n  );\n\n  console.log(`Consider adding these credentials to your configuration file`);\n\n  return newAccount;\n}\n", "import { Trans, useTranslation } from 'react-i18next';\nimport { Fragment, useCallback } from 'react';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport toast from 'react-hot-toast';\n\nimport PlusCircleIcon from '@heroicons/react/24/outline/PlusCircleIcon';\nimport XMarkIcon from '@heroicons/react/24/outline/XMarkIcon';\n\nimport MembershipRole from '~/lib/organizations/types/membership-role';\nimport { useInviteMembers } from '~/lib/organizations/hooks/use-invite-members';\n\nimport If from '~/core/ui/If';\nimport TextField from '~/core/ui/TextField';\nimport Button from '~/core/ui/Button';\nimport IconButton from '~/core/ui/IconButton';\nimport Tooltip from '~/core/ui/Tooltip';\n\nimport MembershipRoleSelector from './MembershipRoleSelector';\nimport useUserSession from '~/core/hooks/use-user-session';\n\ntype InviteModel = ReturnType<typeof memberFactory>;\n\nconst InviteMembersForm = () => {\n  const { t } = useTranslation('organization');\n  const user = useUserSession();\n  const [inviteMembers, { loading }] = useInviteMembers();\n\n  const { register, handleSubmit, setValue, control, clearErrors, watch } =\n    useInviteMembersForm();\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'members',\n    shouldUnregister: true,\n  });\n\n  const watchFieldArray = watch('members');\n\n  const controlledFields = fields.map((field, index) => {\n    return {\n      ...field,\n      ...watchFieldArray[index],\n    };\n  });\n\n  const onSubmit = useCallback(\n    async ({ members }: { members: InviteModel[] }) => {\n      const promise = inviteMembers(members);\n\n      return toast.promise(promise, {\n        success: t<string>(`inviteMembersSuccess`),\n        error: t<string>(`inviteMembersError`),\n        loading: t<string>(`inviteMembersLoading`),\n      });\n    },\n    [inviteMembers, t]\n  );\n\n  return (\n    <form\n      className={'flex flex-col space-y-4'}\n      data-cy={'invite-members-form'}\n      onSubmit={(event) => {\n        void handleSubmit(onSubmit)(event);\n      }}\n    >\n      <div className=\"flex flex-col space-y-2\">\n        {controlledFields.map((field, index) => {\n          const emailInputName = `members.${index}.email` as const;\n          const roleInputName = `members.${index}.role` as const;\n\n          // register email control\n          const emailControl = register(emailInputName, {\n            required: true,\n            validate: (value) => {\n              const invalid = getFormValidator(watchFieldArray)(value, index);\n\n              if (invalid) {\n                return t<string>(`duplicateInviteEmailError`);\n              }\n\n              const isSameAsCurrentUserEmail = user?.auth?.email === value;\n\n              if (isSameAsCurrentUserEmail) {\n                return t<string>(`invitingOwnAccountError`);\n              }\n\n              return true;\n            },\n          });\n\n          // register role control\n          register(roleInputName, {\n            value: field.role,\n          });\n\n          return (\n            <Fragment key={field.id}>\n              <div className={'flex items-center space-x-0.5 md:space-x-2'}>\n                <div className={'w-7/12 md:w-8/12'}>\n                  <TextField.Input\n                    data-cy={'invite-email-input'}\n                    name={emailControl.name}\n                    onChange={(event) => {\n                      void emailControl.onChange(event);\n                    }}\n                    onBlur={(event) => {\n                      void emailControl.onBlur(event);\n                    }}\n                    innerRef={emailControl.ref}\n                    placeholder=\"member@email.com\"\n                    type=\"email\"\n                    required\n                  />\n                </div>\n\n                <div className={'w-4/12 md:w-3/12'}>\n                  <MembershipRoleSelector\n                    value={field.role}\n                    onChange={(role) => {\n                      setValue(roleInputName, role);\n                    }}\n                  />\n                </div>\n\n                <If condition={fields.length > 1}>\n                  <div className={'w-1/12'}>\n                    <Tooltip\n                      className={'flex justify-center'}\n                      content={t('removeInviteButtonLabel')}\n                    >\n                      <IconButton\n                        data-cy={'remove-invite-button'}\n                        label={t<string>('removeInviteButtonLabel')}\n                        onClick={() => {\n                          remove(index);\n                          clearErrors(emailInputName);\n                        }}\n                      >\n                        <XMarkIcon className={'h-4 lg:h-5'} />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </If>\n              </div>\n            </Fragment>\n          );\n        })}\n\n        <div>\n          <Button\n            data-cy={'append-new-invite-button'}\n            type={'button'}\n            color={'transparent'}\n            size={'small'}\n            disabled={loading}\n            onClick={() => append(memberFactory())}\n          >\n            <span className={'flex items-center space-x-2'}>\n              <PlusCircleIcon className={'h-5'} />\n\n              <span>\n                <Trans i18nKey={'organization:addAnotherMemberButtonLabel'} />\n              </span>\n            </span>\n          </Button>\n        </div>\n      </div>\n\n      <div>\n        <Button\n          className={'w-full lg:w-auto'}\n          data-cy={'send-invites-button'}\n          type={'submit'}\n          loading={loading}\n        >\n          <If condition={!loading}>\n            <Trans i18nKey={'organization:inviteMembersSubmitLabel'} />\n          </If>\n\n          <If condition={loading}>\n            <Trans i18nKey={'organization:inviteMembersLoading'} />\n          </If>\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nfunction memberFactory() {\n  return {\n    email: '',\n    role: MembershipRole.Member,\n  };\n}\n\nfunction useInviteMembersForm() {\n  return useForm({\n    defaultValues: {\n      members: [memberFactory()],\n    },\n    shouldUseNativeValidation: true,\n    shouldFocusError: true,\n    shouldUnregister: true,\n  });\n}\n\nfunction getFormValidator(members: InviteModel[]) {\n  return function isValueInvalid(value: string, index: number) {\n    const emails = members.map((member) => member.email);\n    const valueIndex = emails.indexOf(value);\n\n    return valueIndex >= 0 && valueIndex !== index;\n  };\n}\n\nexport default InviteMembersForm;\n", "import useApiRequest from '~/core/hooks/use-api';\nimport type MembershipRole from '../types/membership-role';\n\ninterface Invite {\n  email: string;\n  role: MembershipRole;\n}\n\nexport function useInviteMembers() {\n  return useApiRequest<void, Invite[]>(\n    `/settings/organization/members/invite`,\n    'POST',\n    {\n      redirect: 'follow',\n    }\n  );\n}\n", "import { lazy, useEffect, useRef } from 'react';\nimport type { LoaderArgs } from '@remix-run/server-runtime';\nimport type { MetaFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { useLoaderData, useNavigate } from '@remix-run/react';\nimport { UserPlusIcon } from '@heroicons/react/24/outline';\nimport { Trans } from 'react-i18next';\n\nimport SettingsTile from '~/components/settings/SettingsTile';\n\nimport Button from '~/core/ui/Button';\nimport If from '~/core/ui/If';\nimport ClientOnly from '~/core/ui/ClientOnly';\n\nimport useCurrentOrganization from '~/lib/organizations/hooks/use-current-organization';\nimport useUserCanInviteUsers from '~/lib/organizations/hooks/use-user-can-invite-users';\nimport { getOrganizationMembers } from '~/lib/server/organizations/memberships.server';\n\nimport getLoggedInUser from '~/core/firebase/admin/auth/get-logged-in-user';\nimport initializeFirebaseAdminApp from '~/core/firebase/admin/initialize-firebase-admin-app';\nimport { parseSessionIdCookie } from '~/lib/server/cookies/session.cookie';\nimport { parseOrganizationIdCookie } from '~/lib/server/cookies/organization.cookie';\n\nimport configuration from '~/configuration';\n\nconst OrganizationMembersList = lazy(\n  () => import('~/components/organizations/OrganizationMembersList')\n);\n\nconst OrganizationInvitedMembersList = lazy(\n  () => import('~/components/organizations/OrganizationInvitedMembersList')\n);\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Members',\n  };\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  await initializeFirebaseAdminApp();\n\n  const organizationId = await parseOrganizationIdCookie(request);\n\n  if (!organizationId) {\n    return redirect(configuration.paths.appHome);\n  }\n\n  const session = await parseSessionIdCookie(request);\n  const user = await getLoggedInUser(session);\n\n  const members = await getOrganizationMembers({\n    organizationId,\n    userId: user.uid,\n  });\n\n  return json(members);\n};\n\nconst OrganizationMembersPage = () => {\n  const members = useLoaderData<typeof loader>();\n  const canInviteUsers = useUserCanInviteUsers();\n  const organization = useCurrentOrganization();\n  const organizationId = organization?.id;\n\n  useReloadMembersOnOrganizationChanged();\n\n  if (!organizationId) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className={'my-4 flex justify-end'}>\n        <If condition={canInviteUsers}>\n          <InviteMembersButton />\n        </If>\n      </div>\n\n      <div className=\"flex flex-1 flex-col space-y-6\">\n        <SettingsTile\n          heading={<Trans i18nKey={'organization:membersTabLabel'} />}\n          subHeading={<Trans i18nKey={'organization:membersTabSubheading'} />}\n        >\n          <ClientOnly>\n            <OrganizationMembersList\n              membersMetadata={members}\n              organizationId={organizationId}\n            />\n          </ClientOnly>\n        </SettingsTile>\n\n        <SettingsTile\n          heading={<Trans i18nKey={'organization:pendingInvitesHeading'} />}\n          subHeading={\n            <Trans i18nKey={'organization:pendingInvitesSubheading'} />\n          }\n        >\n          <ClientOnly>\n            <OrganizationInvitedMembersList organizationId={organizationId} />\n          </ClientOnly>\n        </SettingsTile>\n      </div>\n    </>\n  );\n};\n\nexport default OrganizationMembersPage;\n\nfunction useReloadMembersOnOrganizationChanged() {\n  const navigate = useNavigate();\n  const organization = useCurrentOrganization();\n  const organizationId = organization?.id;\n  const oldOrganizationId = useRef(organizationId);\n\n  useEffect(() => {\n    if (organizationId !== oldOrganizationId.current) {\n      void navigate('.', { replace: true });\n    }\n  }, [navigate, organizationId]);\n}\n\nfunction InviteMembersButton() {\n  return (\n    <Button\n      className={'w-full lg:w-auto'}\n      data-cy={'invite-form-link'}\n      type=\"button\"\n      href={'/settings/organization/members/invite'}\n    >\n      <span className=\"flex items-center space-x-2\">\n        <UserPlusIcon className=\"h-5\" />\n\n        <span>\n          <Trans i18nKey={'organization:inviteMembersButtonLabel'} />\n        </span>\n      </span>\n    </Button>\n  );\n}\n", "import { canInviteUsers } from '~/lib/organizations/permissions';\nimport useCurrentUserRole from './use-current-user-role';\n\nexport default function useUserCanInviteUsers() {\n  const role = useCurrentUserRole();\n\n  return role !== undefined && canInviteUsers(role);\n}\n", "import type { ActionArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { z } from 'zod';\nimport type { UpdateData } from 'firebase-admin/firestore';\n\nimport { parseOrganizationIdCookie } from '~/lib/server/cookies/organization.cookie';\nimport { parseSessionIdCookie } from '~/lib/server/cookies/session.cookie';\nimport getLoggedInUser from '~/core/firebase/admin/auth/get-logged-in-user';\n\nimport { getOrganizationById } from '~/lib/server/queries';\n\nimport {\n  throwForbiddenException,\n  throwNotFoundException,\n} from '~/core/http-exceptions';\n\nimport MembershipRole from '~/lib/organizations/types/membership-role';\nimport type Organization from '~/lib/organizations/types/organization';\nimport withCsrf from '~/core/middleware/with-csrf';\nimport withMethodsGuard from '~/core/middleware/with-methods-guard';\nimport getLogger from '~/core/logger';\n\nexport async function action(args: ActionArgs) {\n  const req = args.request;\n\n  await withCsrf(req);\n  await withMethodsGuard(req, ['PUT']);\n\n  const body = await req.json();\n  const logger = getLogger();\n\n  const organizationId = await parseOrganizationIdCookie(req);\n  const sessionId = await parseSessionIdCookie(req);\n  const user = await getLoggedInUser(sessionId);\n\n  const { userId: targetUserId } = getBodySchema().parse(body);\n\n  const currentUserId = user.uid;\n  const organizationRef = await getOrganizationById(organizationId);\n  const organization = organizationRef.data();\n\n  logger.info(\n    {\n      organizationId,\n      currentUserId,\n      targetUserId,\n    },\n    `Transferring Ownership`\n  );\n\n  // we check that the organization exists\n  if (!organizationRef.exists || !organization) {\n    return throwNotFoundException(`Organization was not found`);\n  }\n\n  // now, we want to validate that:\n  // 1. the members exist\n  // 2. the member calling the action is the owner of the organization\n\n  const members = organization.members;\n  const currentUserMembership = members[currentUserId];\n  const targetUserMembership = members[targetUserId];\n\n  if (!targetUserMembership) {\n    return throwNotFoundException(`Target member was not found`);\n  }\n\n  if (!currentUserMembership) {\n    return throwNotFoundException(`Current member was not found`);\n  }\n\n  if (currentUserMembership.role !== MembershipRole.Owner) {\n    return throwForbiddenException(`Current member is not the Owner`);\n  }\n\n  // validation finished! We should be good to go.\n\n  // let's build the firestore update object to deeply update the nested\n  // properties\n  const updateData = {\n    [`members.${currentUserId}.role`]: MembershipRole.Admin,\n    [`members.${targetUserId}.role`]: MembershipRole.Owner,\n  } as unknown as UpdateData<Organization>;\n\n  // now we can swap the roles by updating the members' roles in the\n  // organization's \"members\" object\n  await organizationRef.ref.update(updateData);\n\n  logger.info(\n    {\n      organizationId,\n      currentUserId,\n      targetUserId,\n    },\n    `Ownership successfully transferred to target user`\n  );\n\n  return json({ success: true });\n}\n\nfunction getBodySchema() {\n  return z.object({\n    userId: z.string().min(1),\n  });\n}\n", "import { Trans } from 'react-i18next';\nimport type { MetaFunction } from '@remix-run/node';\n\nimport FirebaseStorageProvider from '~/core/firebase/components/FirebaseStorageProvider';\nimport UpdateOrganizationForm from '~/components/organizations/UpdateOrganizationForm';\nimport SettingsTile from '~/components/settings/SettingsTile';\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Organization Details',\n  };\n};\n\nconst OrganizationSettingsPage = () => {\n  return (\n    <SettingsTile\n      heading={<Trans i18nKey={'organization:generalTabLabel'} />}\n      subHeading={<Trans i18nKey={'organization:generalTabLabelSubheading'} />}\n    >\n      <FirebaseStorageProvider>\n        <UpdateOrganizationForm />\n      </FirebaseStorageProvider>\n    </SettingsTile>\n  );\n};\n\nexport default OrganizationSettingsPage;\n", "import React from 'react';\nimport configuration from '~/configuration';\n\nimport type { FirebaseStorage } from 'firebase/storage';\nimport { StorageProvider, useInitStorage } from 'reactfire';\nimport firebaseConfig from '../../../firebase.config';\n\nexport default function FirebaseStorageProvider({\n  children,\n  useEmulator,\n}: React.PropsWithChildren<{ useEmulator?: boolean }>) {\n  const emulator = useEmulator ?? firebaseConfig.emulator;\n\n  const { data: sdk, status } = useInitStorage(async (app) => {\n    const bucketUrl = firebaseConfig.storageBucket;\n    const { getStorage } = await import('firebase/storage');\n    const storage = getStorage(app, bucketUrl);\n\n    if (emulator) {\n      await connectToEmulator(storage);\n    }\n\n    return storage;\n  });\n\n  const loading = status === 'loading';\n\n  // while loading, we display an indicator\n  // this will avoid issue where the SDK was not initialized\n  // when using the Storage SDK by calling useStorage()\n  // NB: it also means SSR won't work for children of this provider\n  if (loading) {\n    return null;\n  }\n\n  return <StorageProvider sdk={sdk}>{children}</StorageProvider>;\n}\n\nasync function connectToEmulator(storage: FirebaseStorage) {\n  const { connectStorageEmulator } = await import('firebase/storage');\n\n  const port = 9199;\n  const emulatorHost = configuration.emulatorHost ?? 'localhost';\n\n  connectStorageEmulator(storage, emulatorHost, port);\n}\n", "import { useCallback, useContext, useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useStorage } from 'reactfire';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useForm } from 'react-hook-form';\n\nimport type { FirebaseStorage } from 'firebase/storage';\n\nimport {\n  deleteObject,\n  getDownloadURL,\n  ref,\n  uploadBytes,\n} from 'firebase/storage';\n\nimport OrganizationContext from '~/lib/contexts/organization';\nimport useUpdateOrganization from '~/lib/organizations/hooks/use-update-organization';\nimport type Organization from '~/lib/organizations/types/organization';\n\nimport Button from '~/core/ui/Button';\nimport TextField from '~/core/ui/TextField';\nimport ImageUploadInput from '~/core/ui/ImageUploadInput';\nimport Label from '~/core/ui/Label';\n\nconst UpdateOrganizationForm = () => {\n  const storage = useStorage();\n  const { organization, setOrganization } = useContext(OrganizationContext);\n  const [updateOrganization, { loading }] = useUpdateOrganization();\n\n  const [logoIsDirty, setLogoIsDirty] = useState(false);\n  const { t } = useTranslation('organization');\n\n  const currentOrganizationName = organization?.name ?? '';\n  const currentLogoUrl = organization?.logoURL || null;\n\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: {\n      name: currentOrganizationName,\n      logoURL: currentLogoUrl,\n    },\n  });\n\n  const onLogoCleared = useCallback(() => {\n    setLogoIsDirty(true);\n  }, []);\n\n  const onSubmit = useCallback(\n    async (organizationName: string, logoFile: Maybe<File>) => {\n      const organizationId = organization?.id;\n\n      if (!organizationId) {\n        const errorMessage = t<string>(`updateOrganizationErrorMessage`);\n        return toast.error(errorMessage);\n      }\n\n      const logoName = logoFile?.name;\n\n      const logoURL = logoName\n        ? await uploadLogo({\n            logo: logoFile,\n            storage,\n            organizationId,\n          }).catch(() => {\n            const errorMessage = t<string>(`updateLogoErrorMessage`);\n            toast.error(errorMessage);\n\n            return undefined;\n          })\n        : currentLogoUrl;\n\n      const isLogoRemoved = logoIsDirty && !logoName;\n\n      // delete existing logo if different\n      if (isLogoRemoved && currentLogoUrl) {\n        try {\n          await deleteObject(ref(storage, currentLogoUrl));\n        } catch (e) {\n          // old logo not found\n        }\n      }\n\n      const organizationData: WithId<Partial<Organization>> = {\n        id: organization.id,\n        name: organizationName,\n        logoURL: isLogoRemoved ? null : logoURL,\n      };\n\n      const promise = updateOrganization(organizationData).then(() => {\n        setOrganization({\n          ...organization,\n          ...organizationData,\n        });\n      });\n\n      await toast.promise(promise, {\n        loading: t<string>(`updateOrganizationLoadingMessage`),\n        success: t<string>(`updateOrganizationSuccessMessage`),\n        error: t<string>(`updateOrganizationErrorMessage`),\n      });\n    },\n    [\n      logoIsDirty,\n      currentLogoUrl,\n      organization,\n      setOrganization,\n      storage,\n      t,\n      updateOrganization,\n    ]\n  );\n\n  useEffect(() => {\n    reset({\n      name: organization?.name,\n      logoURL: organization?.logoURL,\n    });\n  }, [organization, reset]);\n\n  const nameControl = register('name', {\n    required: true,\n  });\n\n  const logoControl = register('logoURL');\n\n  return (\n    <form\n      onSubmit={handleSubmit((value) => {\n        return onSubmit(value.name, getLogoFile(value.logoURL));\n      })}\n      className={'space-y-4'}\n    >\n      <div className={'flex flex-col space-y-4'}>\n        <TextField>\n          <TextField.Label>\n            <Trans i18nKey={'organization:organizationNameInputLabel'} />\n\n            <TextField.Input\n              data-cy={'organization-name-input'}\n              required\n              name={nameControl.name}\n              innerRef={nameControl.ref}\n              onChange={nameControl.onChange}\n              onBlur={nameControl.onBlur}\n              placeholder={'ex. IndieCorp'}\n            />\n          </TextField.Label>\n        </TextField>\n\n        <Label>\n          <Trans i18nKey={'organization:organizationLogoInputLabel'} />\n\n          <ImageUploadInput\n            name={logoControl.name}\n            onChange={logoControl.onChange}\n            onBlur={logoControl.onBlur}\n            innerRef={logoControl.ref}\n            image={currentLogoUrl}\n            onClear={onLogoCleared}\n          >\n            <Trans i18nKey={'common:imageInputLabel'} />\n          </ImageUploadInput>\n        </Label>\n\n        <div>\n          <Button\n            className={'w-full md:w-auto'}\n            data-cy={'update-organization-submit-button'}\n            loading={loading}\n          >\n            <Trans i18nKey={'organization:updateOrganizationSubmitLabel'} />\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\n/**\n * @description Upload file to Storage\n * @param storage\n * @param organizationId\n * @param logo\n */\nasync function uploadLogo({\n  storage,\n  organizationId,\n  logo,\n}: {\n  storage: FirebaseStorage;\n  organizationId: string;\n  logo: File;\n}) {\n  const path = getLogoStoragePath(organizationId, logo.name);\n  const bytes = await logo.arrayBuffer();\n  const fileRef = ref(storage, path);\n\n  // first, we upload the logo to Firebase Storage\n  await uploadBytes(fileRef, bytes);\n\n  // now we can get the download URL from its reference\n  return await getDownloadURL(fileRef);\n}\n\n/**\n *\n * @param organizationId\n * @param fileName\n */\nfunction getLogoStoragePath(organizationId: string, fileName: string) {\n  return [`/organizations`, organizationId, fileName].join('/');\n}\n\nfunction getLogoFile(value: string | null | FileList) {\n  if (!value || typeof value === 'string') {\n    return;\n  }\n\n  return value.item(0) ?? undefined;\n}\n\nexport default UpdateOrganizationForm;\n", "import type { FirebaseError } from 'firebase/app';\nimport { doc, updateDoc } from 'firebase/firestore';\nimport { useFirestore } from 'reactfire';\nimport { useCallback } from 'react';\n\nimport useRequestState from '~/core/hooks/use-request-state';\nimport type Organization from '~/lib/organizations/types/organization';\n\nimport { ORGANIZATIONS_COLLECTION } from '~/lib/firestore-collections';\n\n/**\n * @name useUpdateOrganization\n * @description Hook to update an organization's general information (name, logo and timezone)\n */\nexport default function useUpdateOrganization() {\n  const { state, setError, setData, setLoading } =\n    useRequestState<Partial<WithId<Organization>>>();\n\n  const firestore = useFirestore();\n\n  const updateOrganization = useCallback(\n    async (organization: WithId<Partial<Organization>>) => {\n      setLoading(true);\n\n      try {\n        const ref = doc(firestore, ORGANIZATIONS_COLLECTION, organization.id);\n\n        await updateDoc(ref, organization);\n\n        setData(organization);\n      } catch (e) {\n        setError((e as FirebaseError).message);\n      }\n    },\n    [firestore, setData, setError, setLoading]\n  );\n\n  return [updateOrganization, state] as [\n    typeof updateOrganization,\n    typeof state\n  ];\n}\n", "import type { FormEvent, MouseEventHandler, RefCallback } from 'react';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { CloudArrowUpIcon, XMarkIcon } from '@heroicons/react/24/outline';\n\nimport Label from '~/core/ui/Label';\nimport If from '~/core/ui/If';\nimport IconButton from '~/core/ui/IconButton';\n\ntype Props = Omit<React.InputHTMLAttributes<unknown>, 'value'> & {\n  innerRef?: RefCallback<HTMLInputElement>;\n  image?: string | null;\n  onClear?: () => void;\n};\n\nconst IMAGE_SIZE = 22;\n\nconst ImageUploadInput: React.FCC<Props> = ({\n  children,\n  image,\n  onClear,\n  innerRef,\n  ...props\n}) => {\n  const propValue = image ?? null;\n  const [value, setValue] = useState<string | null>(propValue);\n  const [fileName, setFileName] = useState<string>('');\n  const ref = useRef<HTMLInputElement>();\n\n  const onInput = (e: FormEvent<HTMLInputElement>) => {\n    e.preventDefault();\n\n    const files = e.currentTarget.files;\n\n    if (files?.length) {\n      const file = files[0];\n      const data = URL.createObjectURL(file);\n\n      setValue(data);\n      setFileName(file.name);\n    }\n\n    if (props.onInput) {\n      props.onInput(e);\n    }\n  };\n\n  const imageRemoved: MouseEventHandler = (e) => {\n    e.preventDefault();\n\n    setValue('');\n    setFileName('');\n\n    if (ref.current) {\n      ref.current.value = '';\n    }\n\n    if (onClear) {\n      onClear();\n    }\n  };\n\n  useEffect(() => {\n    setValue(propValue);\n  }, [propValue]);\n\n  return (\n    <div className={'ImageUploadInput'}>\n      <input\n        {...props}\n        ref={(inputRef) => {\n          ref.current = inputRef ?? undefined;\n\n          if (innerRef) {\n            innerRef(inputRef);\n          }\n        }}\n        className={'hidden'}\n        type={'file'}\n        onInput={onInput}\n        accept=\"image/*\"\n      />\n\n      <div className={'flex items-center space-x-4'}>\n        <div className={'flex'}>\n          <If condition={!value}>\n            <CloudArrowUpIcon\n              className={'h-5 text-gray-500 dark:text-black-100'}\n            />\n          </If>\n\n          <If condition={value}>\n            <img\n              loading={'lazy'}\n              style={{\n                width: IMAGE_SIZE,\n                height: IMAGE_SIZE,\n              }}\n              className={'object-contain'}\n              width={IMAGE_SIZE}\n              height={IMAGE_SIZE}\n              src={value as string}\n              alt={props.alt ?? ''}\n            />\n          </If>\n        </div>\n\n        <If condition={!value}>\n          <div className={'flex flex-auto'}>\n            <Label as={'span'} className={'cursor-pointer text-xs'}>\n              {children}\n            </Label>\n          </div>\n        </If>\n\n        <If condition={value as string}>\n          <div className={'flex flex-auto'}>\n            <If\n              condition={fileName}\n              fallback={\n                <Label\n                  as={'span'}\n                  className={'cursor-pointer text-xs ellipsify'}\n                >\n                  {children}\n                </Label>\n              }\n            >\n              <Label as=\"span\" className={'text-xs ellipsify'}>\n                {fileName}\n              </Label>\n            </If>\n          </div>\n        </If>\n\n        <If condition={value}>\n          <IconButton onClick={imageRemoved}>\n            <XMarkIcon className=\"h-3 w-3\" />\n          </IconButton>\n        </If>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUploadInput;\n", "import { Outlet } from '@remix-run/react';\nimport ProfileSettingsTabs from '~/components/profile/ProfileSettingsTabs';\nimport SettingsContentContainer from '~/components/settings/SettingsContentContainer';\n\nfunction ProfileSettingsLayout() {\n  return (\n    <>\n      <div>\n        <ProfileSettingsTabs />\n      </div>\n\n      <SettingsContentContainer>\n        <Outlet />\n      </SettingsContentContainer>\n    </>\n  );\n}\n\nexport default ProfileSettingsLayout;\n", "import React, { useMemo } from 'react';\nimport { EmailAuthProvider } from 'firebase/auth';\nimport { useUser } from 'reactfire';\n\nimport NavigationItem from '~/core/ui/Navigation/NavigationItem';\nimport NavigationMenu from '~/core/ui/Navigation/NavigationMenu';\n\nconst links = {\n  General: {\n    path: '/settings/profile',\n    label: 'profile:generalTab',\n  },\n  Authentication: {\n    path: '/settings/profile/authentication',\n    label: 'profile:authenticationTab',\n  },\n  Email: {\n    path: '/settings/profile/email',\n    label: 'profile:emailTab',\n  },\n  Password: {\n    path: '/settings/profile/password',\n    label: 'profile:passwordTab',\n  },\n};\n\nconst ProfileSettingsTabs = () => {\n  const { data: user } = useUser();\n\n  // user can only edit email and password\n  // if they signed up with the EmailAuthProvider provider\n  const canEditEmailAndPassword = useMemo(() => {\n    const emailProviderId = EmailAuthProvider.PROVIDER_ID;\n\n    if (!user) {\n      return false;\n    }\n\n    return user.providerData.some((item) => {\n      return item.providerId === emailProviderId;\n    });\n  }, [user]);\n\n  const itemClassName = `flex justify-center md:justify-start items-center flex-auto md:flex-initial`;\n\n  return (\n    <NavigationMenu vertical secondary>\n      <NavigationItem end className={itemClassName} link={links.General} />\n\n      <NavigationItem className={itemClassName} link={links.Authentication} />\n\n      <NavigationItem\n        className={itemClassName}\n        disabled={!canEditEmailAndPassword}\n        link={links.Email}\n      />\n\n      <NavigationItem\n        className={itemClassName}\n        disabled={!canEditEmailAndPassword}\n        link={links.Password}\n      />\n    </NavigationMenu>\n  );\n};\n\nexport default ProfileSettingsTabs;\n", "import { useCallback, useMemo, useState } from 'react';\nimport { Trans } from 'react-i18next';\nimport type { MetaFunction } from '@remix-run/node';\n\nimport SettingsTile from '~/components/settings/SettingsTile';\nimport ConnectedAccountsContainer from '~/components/profile/accounts/ConnectedAccountsContainer';\nimport MultiFactorAuthSetupContainer from '~/components/profile/mfa/MultiFactorAuthSetupContainer';\nimport DisableMultiFactorButton from '~/components/profile/mfa/DisableMultiFactorButton';\nimport ReauthenticationModal from '~/components/auth/ReauthenticationModal';\n\nimport If from '~/core/ui/If';\nimport Alert from '~/core/ui/Alert';\nimport Heading from '~/core/ui/Heading';\n\nimport configuration from '~/configuration';\nimport useUserSession from '~/core/hooks/use-user-session';\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Authentication',\n  };\n};\n\nconst ProfileAuthenticationPage = () => {\n  const user = useUserSession();\n\n  const multiFactor = useMemo(\n    () => user?.auth?.multiFactor ?? [],\n    [user?.auth?.multiFactor]\n  );\n\n  const [shouldReauthenticate, setShouldReauthenticate] = useState(false);\n\n  const refreshPage = useCallback((success: boolean) => {\n    if (success) {\n      // this little trick forces the page to refresh\n      // it's quick & dirty way to provide UI feedback with the updated\n      // user data when enabling/disabling MFA\n      window.location.reload();\n    }\n  }, []);\n\n  return (\n    <>\n      <div className={'flex flex-col space-y-8'}>\n        <SettingsTile\n          heading={<Trans i18nKey={'profile:manageConnectedAccounts'} />}\n          subHeading={\n            <Trans i18nKey={'profile:manageConnectedAccountsSubheading'} />\n          }\n        >\n          <ConnectedAccountsContainer />\n        </SettingsTile>\n\n        {/* DISPLAY TILE IF APP SUPPORTS MFA */}\n        <If condition={configuration.auth.enableMultiFactorAuth}>\n          <SettingsTile\n            heading={<Trans i18nKey={'profile:multiFactorAuth'} />}\n            subHeading={<Trans i18nKey={'profile:multiFactorAuthSubheading'} />}\n          >\n            {/* MFA DISABLED BY USER: SHOW SETUP CONTAINER */}\n            <If condition={!multiFactor}>\n              <MultiFactorAuthSetupContainer onComplete={refreshPage} />\n            </If>\n\n            {/* MFA ENABLED BY USER: SHOW DISABLE BUTTON */}\n            <If condition={multiFactor}>\n              <div className={'flex flex-col space-y-2'}>\n                <MultiFactorSuccessAlert />\n\n                <DisableMultiFactorButton\n                  onDisable={async () => {\n                    // After the user Disables MFA, Firebase will revoke the\n                    // session cookie permissions. We must ask the user\n                    // to reauthenticate\n                    setShouldReauthenticate(true);\n                  }}\n                />\n              </div>\n            </If>\n\n            <If condition={shouldReauthenticate}>\n              <ReauthenticationModal\n                isOpen={true}\n                setIsOpen={async () => {\n                  setShouldReauthenticate(false);\n\n                  // After the user Disables MFA, Firebase will revoke the\n                  // session cookie permissions. Therefore, we need to\n                  // refresh the page only after reauthenticating\n                  await refreshPage(true);\n                }}\n              />\n            </If>\n          </SettingsTile>\n        </If>\n      </div>\n    </>\n  );\n};\n\nexport default ProfileAuthenticationPage;\n\nfunction MultiFactorSuccessAlert() {\n  return (\n    <Alert type={'success'} className={'flex flex-col space-y-2'}>\n      <Heading type={4}>\n        <Trans i18nKey={'profile:mfaEnabledSuccessTitle'} />\n      </Heading>\n\n      <p>\n        <Trans i18nKey={'profile:mfaEnabledSuccessDescription'} />\n      </p>\n    </Alert>\n  );\n}\n", "import {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport toaster from 'react-hot-toast';\nimport { useUser } from 'reactfire';\n\nimport type {\n  OAuthProvider,\n  MultiFactorError,\n  AuthProvider,\n} from 'firebase/auth';\n\nimport {\n  browserPopupRedirectResolver,\n  EmailAuthProvider,\n  linkWithPopup,\n  unlink,\n  PhoneAuthProvider,\n} from 'firebase/auth';\n\nimport { Trans, useTranslation } from 'react-i18next';\nimport { CheckCircleIcon } from '@heroicons/react/24/outline';\n\nimport type FirebaseAuthProviderClass from '~/core/firebase/types/auth-provider-class';\n\nimport Button from '~/core/ui/Button';\nimport If from '~/core/ui/If';\nimport Modal from '~/core/ui/Modal';\nimport Heading from '~/core/ui/Heading';\n\nimport MultiFactorAuthChallengeModal from '~/components/auth/MultiFactorAuthChallengeModal';\nimport isMultiFactorError from '~/core/firebase/utils/is-multi-factor-error';\n\nimport LinkPhoneNumberModal from '~/components/profile/accounts/LinkPhoneNumberModal';\nimport LinkEmailPasswordModal from '~/components/profile/accounts/LinkEmailPasswordModal';\nimport AuthProviderButton from '~/core/ui/AuthProviderButton';\nimport AuthProviderLogo from '~/core/ui/AuthProviderLogo';\nimport getFirebaseAuthProviderId from '~/core/firebase/utils/get-firebase-auth-provider-id';\nimport getFirebaseErrorCode from '~/core/firebase/utils/get-firebase-error-code';\n\nimport configuration from '~/configuration';\n\ntype GenericOAuthProvider = { new (): AuthProvider } & typeof OAuthProvider;\n\nconst ConnectedAccountsContainer = () => {\n  const { data: user } = useUser();\n  const { t } = useTranslation();\n  const supportedProviders = useSupportedAuthProviders();\n\n  const [linkWithPhoneNumber, setLinkWithPhoneNumber] = useState(false);\n  const [linkWithPassword, setLinkWithPassword] = useState(false);\n\n  const [displayUnlinkConfirmationModal, setDisplayUnlinkConfirmationModal] =\n    useState(false);\n\n  const [multiFactorAuthError, setMultiFactorAuthError] =\n    useState<Maybe<MultiFactorError>>();\n\n  const selectedUnlinkProvider = useRef<string>();\n\n  const providerData = useMemo(\n    () => user?.providerData ?? [],\n    [user?.providerData]\n  );\n\n  const [providers, setProviders] = useState(providerData);\n  const canUnlink = providers.length > 1;\n\n  const onUnlinkRequested = useCallback(\n    async (providerId: string) => {\n      if (!user || user.providerData.length < 2) {\n        return;\n      }\n\n      const promise = unlink(user, providerId);\n\n      await toaster.promise(promise, {\n        success: t<string>(`profile:unlinkActionSuccess`),\n        loading: t<string>(`profile:unlinkActionLoading`),\n        error: t<string>(`profile:unlinkActionError`),\n      });\n\n      setProviders((providers) =>\n        providers.filter((provider) => provider.providerId !== providerId)\n      );\n    },\n    [user, t]\n  );\n\n  const onLinkSuccess = useCallback(() => {\n    const message = t<string>(`profile:linkActionSuccess`);\n    return toaster.success(message);\n  }, [t]);\n\n  const onLinkError = useCallback(\n    (error?: Maybe<string>) => {\n      const message = error\n        ? t<string>(`auth:errors.${error}`)\n        : t<string>(`profile:linkActionError`);\n\n      toaster.error(message);\n    },\n    [t]\n  );\n\n  const connectedProviders = useMemo(() => {\n    return supportedProviders.filter((supportedProvider) => {\n      return providers.some(\n        (connectedProvider) =>\n          connectedProvider.providerId ===\n          getFirebaseAuthProviderId(supportedProvider)\n      );\n    });\n  }, [providers, supportedProviders]);\n\n  const notConnectedProviders = useMemo(() => {\n    return supportedProviders.filter((supportedProvider) => {\n      return !connectedProviders.includes(supportedProvider);\n    });\n  }, [connectedProviders, supportedProviders]);\n\n  const linkPopupAuthProvider = useCallback(\n    async (AuthProviderClass: GenericOAuthProvider) => {\n      if (!user) {\n        return null;\n      }\n\n      try {\n        const authCredential = await linkWithPopup(\n          user,\n          new AuthProviderClass(),\n          browserPopupRedirectResolver\n        );\n\n        const oAuthCredential =\n          AuthProviderClass.credentialFromResult(authCredential);\n\n        return oAuthCredential ? onLinkSuccess() : onLinkError();\n      } catch (error) {\n        if (isMultiFactorError(error)) {\n          setMultiFactorAuthError(error);\n        } else {\n          onLinkError(getFirebaseErrorCode(error));\n        }\n      }\n    },\n    [onLinkError, onLinkSuccess, user]\n  );\n\n  const onLinkRequested = useCallback(\n    async (provider: FirebaseAuthProviderClass) => {\n      if (!user) {\n        return null;\n      }\n\n      const providerId = getFirebaseAuthProviderId(provider);\n\n      switch (providerId) {\n        case EmailAuthProvider.PROVIDER_ID:\n          return setLinkWithPassword(true);\n\n        case PhoneAuthProvider.PROVIDER_ID:\n          return setLinkWithPhoneNumber(true);\n\n        default:\n          return linkPopupAuthProvider(provider as GenericOAuthProvider);\n      }\n    },\n    [linkPopupAuthProvider, user]\n  );\n\n  useEffect(() => {\n    setProviders(providerData);\n  }, [providerData]);\n\n  return (\n    <div className={'flex flex-col space-y-6'}>\n      <div>\n        <div className={'mb-2'}>\n          <Heading type={4}>\n            <Trans i18nKey={'profile:connectedAccounts'} />\n          </Heading>\n\n          <div>\n            <span className={'text-gray-500 dark:text-gray-400'}>\n              <Trans i18nKey={'profile:connectedAccountsSubheading'} />\n            </span>\n          </div>\n        </div>\n\n        <div\n          className={\n            'mt-4 flex flex-col divide-y divide-gray-50 dark:divide-black-400'\n          }\n        >\n          {connectedProviders.map((provider, index) => {\n            const providerId = getFirebaseAuthProviderId(provider);\n\n            return (\n              <Fragment key={index}>\n                <UnlinkAuthProviderButton\n                  canUnlink={canUnlink}\n                  providerId={providerId}\n                  onUnlink={() => {\n                    if (!canUnlink) {\n                      return;\n                    }\n\n                    selectedUnlinkProvider.current = providerId;\n                    setDisplayUnlinkConfirmationModal(true);\n                  }}\n                />\n              </Fragment>\n            );\n          })}\n        </div>\n      </div>\n\n      <If condition={notConnectedProviders.length}>\n        <div>\n          <div className={'mb-4'}>\n            <Heading type={4}>\n              <Trans i18nKey={'profile:availableProviders'} />\n            </Heading>\n\n            <p>\n              <span className={'text-gray-500 dark:text-gray-400'}>\n                <Trans i18nKey={'profile:availableProvidersSubheading'} />\n              </span>\n            </p>\n          </div>\n\n          <div className={'flex flex-col space-y-1.5'}>\n            {notConnectedProviders.map((provider, index) => {\n              return (\n                <div key={index}>\n                  <ConnectAuthProviderButton\n                    provider={provider}\n                    onLink={() => onLinkRequested(provider)}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </If>\n\n      <If condition={multiFactorAuthError}>\n        {(error) => (\n          <MultiFactorAuthChallengeModal\n            error={error}\n            isOpen={true}\n            setIsOpen={() => setMultiFactorAuthError(undefined)}\n            onSuccess={async () => {\n              return;\n            }}\n          />\n        )}\n      </If>\n\n      <If condition={linkWithPassword}>\n        <LinkEmailPasswordModal isOpen={true} setIsOpen={setLinkWithPassword} />\n      </If>\n\n      <If condition={linkWithPhoneNumber}>\n        {() => (\n          <LinkPhoneNumberModal\n            isOpen={true}\n            setIsOpen={setLinkWithPhoneNumber}\n          />\n        )}\n      </If>\n\n      <ConfirmUnlinkAccountModal\n        isOpen={displayUnlinkConfirmationModal}\n        setIsOpen={(isOpen) => {\n          if (!isOpen) {\n            selectedUnlinkProvider.current = undefined;\n          }\n\n          setDisplayUnlinkConfirmationModal(isOpen);\n        }}\n        onUnlink={async () => {\n          if (selectedUnlinkProvider.current) {\n            await onUnlinkRequested(selectedUnlinkProvider.current);\n\n            setDisplayUnlinkConfirmationModal(false);\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nfunction ConnectAuthProviderButton({\n  onLink,\n  provider,\n}: React.PropsWithChildren<{\n  provider: FirebaseAuthProviderClass;\n  onLink: EmptyCallback;\n}>) {\n  const providerId = getFirebaseAuthProviderId(provider);\n  const providerName = capitalize(providerId);\n\n  return (\n    <div className={'max-w-md'}>\n      <AuthProviderButton\n        data-cy={'link-provider-button'}\n        data-provider={providerId}\n        providerId={providerId}\n        onClick={onLink}\n      >\n        <Trans\n          i18nKey={`profile:connectWithProvider`}\n          values={{ provider: providerName }}\n        />\n      </AuthProviderButton>\n    </div>\n  );\n}\n\nfunction UnlinkAuthProviderButton({\n  providerId,\n  canUnlink,\n  onUnlink,\n}: React.PropsWithChildren<{\n  providerId: string;\n  canUnlink: boolean;\n  onUnlink: EmptyCallback;\n}>) {\n  const provider = capitalize(providerId);\n\n  return (\n    <div className={'flex items-center justify-between py-1'}>\n      <div className={'flex items-center space-x-6'}>\n        <span className={'flex items-center space-x-4 font-medium'}>\n          <AuthProviderLogo firebaseProviderId={providerId} />\n\n          <span\n            className={\n              'flex items-center space-x-2 text-sm font-semibold' +\n              ' text-green-600 dark:text-green-500'\n            }\n          >\n            <span>\n              <Trans\n                i18nKey={`profile:connectedWithProvider`}\n                values={{ provider }}\n              />\n            </span>\n\n            <CheckCircleIcon className={'h-5'} />\n          </span>\n        </span>\n      </div>\n\n      <If condition={canUnlink}>\n        <Button\n          data-cy={'unlink-provider-button'}\n          data-provider={providerId}\n          className={'font-medium'}\n          color={'danger'}\n          variant={'flat'}\n          onClick={onUnlink}\n        >\n          <span>\n            <Trans i18nKey={`profile:unlinkActionLabel`} />\n          </span>\n        </Button>\n      </If>\n    </div>\n  );\n}\n\nfunction ConfirmUnlinkAccountModal({\n  isOpen,\n  setIsOpen,\n  onUnlink,\n}: React.PropsWithChildren<{\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  onUnlink: EmptyCallback;\n}>) {\n  return (\n    <Modal\n      heading={<Trans i18nKey={'profile:unlinkAccountModalHeading'} />}\n      isOpen={isOpen}\n      setIsOpen={setIsOpen}\n    >\n      <div className={'flex flex-col space-y-4'}>\n        <div>\n          <p>\n            <Trans i18nKey={'profile:confirmUnlink'} />\n          </p>\n\n          <p>\n            <Trans i18nKey={'common:modalConfirmationQuestion'} />\n          </p>\n        </div>\n\n        <Button\n          data-cy={'confirm-unlink-provider-button'}\n          block\n          color={'danger'}\n          onClick={onUnlink}\n        >\n          <Trans i18nKey={'profile:confirmUnlinkSubmitLabel'} />\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction useSupportedAuthProviders() {\n  return useMemo(() => {\n    const providers = configuration.auth.providers;\n\n    return [\n      ...(providers.phoneNumber ? [PhoneAuthProvider] : []),\n      ...(providers.emailPassword ? [EmailAuthProvider] : []),\n      ...(providers.oAuth ?? []),\n    ];\n  }, []);\n}\n\nfunction capitalize(providerId: string) {\n  return providerId.slice(0, 1).toUpperCase() + providerId.slice(1);\n}\n\nexport default ConnectedAccountsContainer;\n", "import { Trans } from 'react-i18next';\nimport Modal from '~/core/ui/Modal';\nimport PhoneNumberCredentialForm from '~/components/auth/PhoneNumberCredentialForm';\n\nfunction LinkPhoneNumberModal({\n  isOpen,\n  setIsOpen,\n  onSuccess,\n}: React.PropsWithChildren<{\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  onSuccess?: (phoneNumber: string) => void;\n}>) {\n  return (\n    <Modal\n      heading={<Trans i18nKey={'profile:linkPhoneNumber'} />}\n      isOpen={isOpen}\n      setIsOpen={setIsOpen}\n    >\n      <PhoneNumberCredentialForm\n        action={'link'}\n        onSuccess={(credential) => {\n          if (onSuccess) {\n            const phoneNumber = credential.user.phoneNumber;\n\n            // adding condition for type-safety but this\n            // should always be the case\n            if (phoneNumber) {\n              onSuccess(phoneNumber);\n            }\n          }\n\n          setIsOpen(false);\n        }}\n      />\n    </Modal>\n  );\n}\n\nexport default LinkPhoneNumberModal;\n", "import { useAuth } from 'reactfire';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport type { MultiFactorError } from 'firebase/auth';\nimport {\n  EmailAuthProvider,\n  linkWithCredential,\n  signInWithCredential,\n} from 'firebase/auth';\n\nimport { useForm } from 'react-hook-form';\nimport toaster from 'react-hot-toast';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport isMultiFactorError from '~/core/firebase/utils/is-multi-factor-error';\nimport useCreateServerSideSession from '~/core/hooks/use-create-server-side-session';\nimport useRequestState from '~/core/hooks/use-request-state';\n\nimport AuthErrorMessage from '~/components/auth/AuthErrorMessage';\nimport getFirebaseErrorCode from '~/core/firebase/utils/get-firebase-error-code';\nimport MultiFactorAuthChallengeModal from '~/components/auth/MultiFactorAuthChallengeModal';\n\nimport Modal from '~/core/ui/Modal';\nimport TextField from '~/core/ui/TextField';\nimport If from '~/core/ui/If';\nimport Button from '~/core/ui/Button';\n\nfunction LinkEmailPasswordModal({\n  isOpen,\n  setIsOpen,\n}: React.PropsWithChildren<{\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n}>) {\n  const { t } = useTranslation();\n  const { state, setLoading, setError, resetState } = useRequestState<void>();\n  const auth = useAuth();\n  const [sessionRequest] = useCreateServerSideSession();\n\n  const [multiFactorAuthError, setMultiFactorAuthError] =\n    useState<Maybe<MultiFactorError>>();\n\n  const user = auth.currentUser;\n\n  const { register, handleSubmit, watch, reset, formState } = useForm({\n    defaultValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n    },\n  });\n\n  const errors = formState.errors;\n  const emailControl = register('email', { required: true });\n\n  const passwordControl = register('password', {\n    required: true,\n    minLength: {\n      value: 6,\n      message: t<string>(`auth:passwordLengthError`),\n    },\n  });\n\n  const passwordValue = watch(`password`);\n\n  const repeatPasswordControl = register('repeatPassword', {\n    required: true,\n    minLength: {\n      value: 6,\n      message: t<string>(`auth:passwordLengthError`),\n    },\n    validate: (value) => {\n      if (value !== passwordValue) {\n        return t<string>(`auth:passwordsDoNotMatch`);\n      }\n\n      return true;\n    },\n  });\n\n  const onSubmit = useCallback(\n    async (params: { email: string; password: string }) => {\n      if (state.loading || !user) {\n        return;\n      }\n\n      setLoading(true);\n\n      const authCredential = EmailAuthProvider.credential(\n        params.email,\n        params.password\n      );\n\n      const promise = new Promise<void>((resolve, reject) => {\n        return linkWithCredential(user, authCredential)\n          .then(async () => {\n            const newCredential = await signInWithCredential(\n              auth,\n              authCredential\n            );\n\n            // we need to re-create the server-side session, because for\n            // some reason Firebase expires the session cookie after linking\n            // a password\n            await sessionRequest(newCredential.user);\n\n            resolve();\n          })\n          .catch((error) => {\n            if (isMultiFactorError(error)) {\n              setMultiFactorAuthError(error);\n              setIsOpen(false);\n              toaster.dismiss();\n            } else {\n              setError(error);\n\n              return reject();\n            }\n          });\n      });\n\n      await toaster.promise(promise, {\n        success: t<string>(`profile:linkActionSuccess`),\n        error: t<string>(`profile:linkActionError`),\n        loading: t<string>(`profile:linkActionLoading`),\n      });\n\n      resetState();\n      setIsOpen(false);\n      reset();\n    },\n    [\n      state.loading,\n      setLoading,\n      t,\n      resetState,\n      setIsOpen,\n      reset,\n      user,\n      auth,\n      sessionRequest,\n      setError,\n    ]\n  );\n\n  useEffect(() => {\n    if (!isOpen) {\n      reset();\n    }\n\n    return () => {\n      reset();\n    };\n  }, [reset, isOpen]);\n\n  return (\n    <>\n      <Modal heading={`Link Password`} isOpen={isOpen} setIsOpen={setIsOpen}>\n        <form className={'w-full'} onSubmit={handleSubmit(onSubmit)}>\n          <div className={'flex-col space-y-2.5'}>\n            <TextField>\n              <TextField.Label>\n                <Trans i18nKey={'common:emailAddress'} />\n\n                <TextField.Input\n                  data-cy={'email-input'}\n                  required\n                  type=\"email\"\n                  placeholder={'your@email.com'}\n                  innerRef={emailControl.ref}\n                  onBlur={emailControl.onBlur}\n                  onChange={emailControl.onChange}\n                  name={emailControl.name}\n                />\n              </TextField.Label>\n            </TextField>\n\n            <TextField>\n              <TextField.Label>\n                <Trans i18nKey={'common:password'} />\n\n                <TextField.Input\n                  data-cy={'password-input'}\n                  required\n                  type=\"password\"\n                  placeholder={''}\n                  innerRef={passwordControl.ref}\n                  onBlur={passwordControl.onBlur}\n                  onChange={passwordControl.onChange}\n                  name={passwordControl.name}\n                />\n\n                <TextField.Hint>\n                  <Trans i18nKey={'auth:passwordHint'} />\n                </TextField.Hint>\n\n                <TextField.Error error={errors.password?.message} />\n              </TextField.Label>\n            </TextField>\n\n            <TextField>\n              <TextField.Label>\n                <Trans i18nKey={'auth:repeatPassword'} />\n\n                <TextField.Input\n                  data-cy={'repeat-password-input'}\n                  required\n                  type=\"password\"\n                  placeholder={''}\n                  innerRef={repeatPasswordControl.ref}\n                  onBlur={repeatPasswordControl.onBlur}\n                  onChange={repeatPasswordControl.onChange}\n                  name={repeatPasswordControl.name}\n                />\n              </TextField.Label>\n\n              <TextField.Error error={errors.repeatPassword?.message} />\n            </TextField>\n\n            <If condition={state.error}>\n              {(error) => (\n                <AuthErrorMessage error={getFirebaseErrorCode(error)} />\n              )}\n            </If>\n\n            <div>\n              <Button\n                size={'large'}\n                data-cy={'auth-submit-button'}\n                className={'w-full'}\n                color={'primary'}\n                type=\"submit\"\n                loading={state.loading}\n              >\n                <If\n                  condition={state.loading}\n                  fallback={<Trans i18nKey={'profile:linkAccount'} />}\n                >\n                  <Trans i18nKey={'profile:linkActionLoading'} />\n                </If>\n              </Button>\n            </div>\n          </div>\n        </form>\n      </Modal>\n\n      <If condition={multiFactorAuthError}>\n        {(error) => (\n          <MultiFactorAuthChallengeModal\n            error={error}\n            isOpen={true}\n            setIsOpen={() => setMultiFactorAuthError(undefined)}\n            onSuccess={async (credential) => {\n              await sessionRequest(credential.user);\n\n              setMultiFactorAuthError(undefined);\n              reset();\n              resetState();\n            }}\n          />\n        )}\n      </If>\n    </>\n  );\n}\n\nexport default LinkEmailPasswordModal;\n", "import { useCallback } from 'react';\nimport type { User } from 'firebase/auth';\n\nimport { useCreateSession } from '~/core/hooks/use-create-session';\n\nfunction useCreateServerSideSession() {\n  const [signIn, signInState] = useCreateSession();\n\n  const signInCallback = useCallback(\n    async (user: User, forceRefresh = true) => {\n      const idToken = await user.getIdToken(forceRefresh);\n\n      return signIn({ idToken });\n    },\n    [signIn]\n  );\n\n  return [signInCallback, signInState] as [\n    typeof signInCallback,\n    typeof signInState\n  ];\n}\n\nexport default useCreateServerSideSession;\n", "import useApiRequest from '~/core/hooks/use-api';\n\ninterface Body {\n  idToken: string;\n}\n\nexport function useCreateSession() {\n  return useApiRequest<void, Body>('/auth/session', 'POST');\n}\n", "import type FirebaseAuthProviderClass from '~/core/firebase/types/auth-provider-class';\nimport type { EmailAuthProvider, PhoneAuthProvider } from 'firebase/auth';\n\nconst cache = new WeakMap();\n\n/**\n * @name getFirebaseAuthProviderId\n * @param AuthProviderClass\n */\nfunction getFirebaseAuthProviderId(\n  AuthProviderClass:\n    | FirebaseAuthProviderClass\n    | typeof EmailAuthProvider\n    | typeof PhoneAuthProvider\n) {\n  if (cache.has(AuthProviderClass)) {\n    return cache.get(AuthProviderClass);\n  }\n\n  // if it's a default Firebase Auth class\n  // we have already the ID defined as PROVIDER_ID\n  if ('PROVIDER_ID' in AuthProviderClass) {\n    const id = AuthProviderClass.PROVIDER_ID as string;\n\n    cache.set(AuthProviderClass, id);\n\n    return id;\n  }\n\n  // if it's a custom AuthProvider, we need to get the ID by instantiating it\n  const id = new AuthProviderClass().providerId;\n\n  cache.set(AuthProviderClass, id);\n\n  return id;\n}\n\nexport default getFirebaseAuthProviderId;\n", "import { Trans } from 'react-i18next';\nimport { ShieldCheckIcon } from '@heroicons/react/24/outline';\nimport { useState } from 'react';\nimport { useUser } from 'reactfire';\n\nimport Alert from '~/core/ui/Alert';\nimport Button from '~/core/ui/Button';\nimport If from '~/core/ui/If';\n\nimport EnrolMultiFactorAuthContainer from '~/components/profile/mfa/EnrolMultiFactorAuthContainer';\nimport EmailVerificationAlert from '~/components/profile/mfa/EmailVerificationAlert';\n\nconst MultiFactorAuthSetupContainer: React.FC<{\n  onComplete: (success: boolean) => void;\n}> = ({ onComplete }) => {\n  const [enableMFAVisible, setEnableMFAVisible] = useState(false);\n  const { data: user, status } = useUser();\n\n  if (!user || status === `loading`) {\n    return null;\n  }\n\n  const isEmailVerified = user.emailVerified;\n\n  return (\n    <>\n      <div className={'flex flex-col space-y-6'}>\n        <Alert type={'info'}>\n          <Alert.Heading>\n            <Trans i18nKey={'profile:multiFactorAuthHeading'} />\n          </Alert.Heading>\n\n          <p>\n            <Trans i18nKey={'profile:multiFactorAuthDescription'} />\n          </p>\n        </Alert>\n\n        <If condition={isEmailVerified}>\n          <div>\n            <EnableMFAButton onClick={() => setEnableMFAVisible(true)} />\n          </div>\n        </If>\n\n        <If\n          condition={isEmailVerified}\n          fallback={<EmailVerificationAlert user={user} />}\n        >\n          <If condition={enableMFAVisible}>\n            <EnrolMultiFactorAuthContainer\n              onComplete={(success) => {\n                onComplete(success);\n                setEnableMFAVisible(false);\n              }}\n            />\n          </If>\n        </If>\n      </div>\n    </>\n  );\n};\n\nfunction EnableMFAButton(\n  props: React.PropsWithChildren<{ onClick: EmptyCallback }>\n) {\n  return (\n    <Button color={'primary'} onClick={props.onClick}>\n      <span className={'flex space-x-2'}>\n        <ShieldCheckIcon className={'h-5'} />\n\n        <span>\n          <Trans i18nKey={'profile:setupMfaButtonLabel'} />\n        </span>\n      </span>\n    </Button>\n  );\n}\n\nexport default MultiFactorAuthSetupContainer;\n", "import { useCallback, useRef, useState } from 'react';\nimport { Trans } from 'react-i18next';\nimport { useAuth } from 'reactfire';\n\nimport Modal from '~/core/ui/Modal';\nimport If from '~/core/ui/If';\n\nimport MultiFactorAuthPhoneNumberForm from '~/components/profile/mfa/MultiFactorAuthPhoneNumberForm';\nimport MultiFactorAuthVerificationCodeForm from '~/components/profile/mfa/VerificationCodeForm';\nimport ReauthenticationForm from '~/components/auth/ReauthenticationForm';\nimport useCreateServerSideSession from '~/core/hooks/use-create-server-side-session';\n\nenum Status {\n  Reauthenticate,\n  PhoneNumberForm,\n  VerificationCodeForm,\n}\n\nconst EnrolMultiFactorAuthContainer: React.FC<{\n  onComplete: (success: boolean) => void;\n}> = ({ onComplete }) => {\n  const auth = useAuth();\n  const [createServerSideSession] = useCreateServerSideSession();\n  const [status, setStatus] = useState<Status>(Status.PhoneNumberForm);\n  const verificationIdRef = useRef<string>();\n\n  const onSuccessfulEnrollment = useCallback(async () => {\n    const user = await auth.currentUser;\n\n    if (user) {\n      await createServerSideSession(user);\n    }\n  }, [createServerSideSession, auth]);\n\n  return (\n    <Modal\n      heading={<Trans i18nKey={'profile:multiFactorAuth'} />}\n      isOpen={true}\n      setIsOpen={() => onComplete(false)}\n    >\n      <If condition={status === Status.Reauthenticate}>\n        <div className={'my-4'}>\n          <p>\n            <Trans i18nKey={'auth:reauthenticateDescription'} />\n          </p>\n        </div>\n\n        <ReauthenticationForm\n          onSuccess={() => setStatus(Status.PhoneNumberForm)}\n        />\n      </If>\n\n      <If condition={status === Status.PhoneNumberForm}>\n        <MultiFactorAuthPhoneNumberForm\n          onReauthenticateError={() => {\n            setStatus(Status.Reauthenticate);\n          }}\n          onComplete={(verificationId) => {\n            verificationIdRef.current = verificationId;\n            setStatus(Status.VerificationCodeForm);\n          }}\n        />\n      </If>\n\n      <If condition={status === Status.VerificationCodeForm}>\n        <If condition={verificationIdRef.current}>\n          {(verificationId) => {\n            return (\n              <MultiFactorAuthVerificationCodeForm\n                verificationId={verificationId}\n                onComplete={async (isSuccessful) => {\n                  if (isSuccessful) {\n                    await onSuccessfulEnrollment();\n                  }\n\n                  onComplete(isSuccessful);\n                }}\n              />\n            );\n          }}\n        </If>\n      </If>\n    </Modal>\n  );\n};\n\nexport default EnrolMultiFactorAuthContainer;\n", "import type { FormEventHandler } from 'react';\nimport { useCallback } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { multiFactor, PhoneAuthProvider } from 'firebase/auth';\nimport type { FirebaseError } from 'firebase/app';\n\nimport toaster from 'react-hot-toast';\nimport { useAuth } from 'reactfire';\n\nimport TextField from '~/core/ui/TextField';\nimport Button from '~/core/ui/Button';\nimport If from '~/core/ui/If';\n\nimport AuthErrorMessage from '~/components/auth/AuthErrorMessage';\nimport useRequestState from '~/core/hooks/use-request-state';\nimport useRecaptchaVerifier from '~/core/firebase/hooks/use-recaptcha-verifier';\nimport getFirebaseErrorCode from '~/core/firebase/utils/get-firebase-error-code';\n\nconst buttonId = `multi-factor-auth-phone-number-button`;\n\nconst MultiFactorAuthPhoneNumberForm: React.FC<{\n  onComplete: (verificationId: string) => void;\n  onReauthenticateError: () => void;\n}> = ({ onComplete, onReauthenticateError }) => {\n  const auth = useAuth();\n  const { t } = useTranslation();\n  const requestState = useRequestState<void>();\n  const getRecaptchaVerifier = useRecaptchaVerifier(buttonId);\n\n  const onVerifyPhoneNumber = useCallback(\n    async (phoneNumber: string) => {\n      const user = auth.currentUser;\n\n      if (!user || requestState.state.loading) {\n        return;\n      }\n\n      requestState.setLoading(true);\n\n      const multiFactorSession = await multiFactor(user).getSession();\n\n      const phoneInfoOptions = {\n        phoneNumber: phoneNumber,\n        session: multiFactorSession,\n      };\n\n      const phoneAuthProvider = new PhoneAuthProvider(auth);\n      const recaptchaVerifier = await getRecaptchaVerifier();\n\n      const promise = phoneAuthProvider\n        .verifyPhoneNumber(phoneInfoOptions, recaptchaVerifier)\n        .then((verificationId) => {\n          requestState.setData();\n\n          onComplete(verificationId);\n\n          return t<string>(`profile:verifyPhoneNumberSuccess`);\n        })\n        .catch((error: FirebaseError) => {\n          // when we receive a reauthentication error\n          // we simply ask the container to change form rather than displaying\n          // an actual error\n          if (isNeedsReauthenticationError(error)) {\n            onReauthenticateError();\n\n            return t<string>(`auth:auth/requires-recent-login`);\n          } else {\n            // otherwise, it's a real error and we display it\n            requestState.setError(error);\n\n            throw error.code;\n          }\n        });\n\n      await toaster.promise(promise, {\n        success: (value) => value,\n        error: t<string>(`profile:verifyPhoneNumberError`),\n        loading: t<string>(`profile:verifyPhoneNumberLoading`),\n      });\n    },\n    [\n      auth,\n      requestState,\n      getRecaptchaVerifier,\n      t,\n      onComplete,\n      onReauthenticateError,\n    ]\n  );\n\n  const onSubmit: FormEventHandler<HTMLFormElement> = useCallback(\n    async (e) => {\n      e.preventDefault();\n\n      const data = new FormData(e.currentTarget);\n      const phoneNumber = data.get('phoneNumber') as string;\n\n      return onVerifyPhoneNumber(phoneNumber);\n    },\n    [onVerifyPhoneNumber]\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className={'mb-2.5 text-gray-400 dark:text-gray-400'}>\n        <Trans i18nKey={'profile:verifyPhoneNumberDescription'} />\n      </div>\n\n      <div className={'flex flex-col space-y-2'}>\n        <TextField.Label>\n          <Trans i18nKey={'profile:phoneNumberLabel'} />\n\n          <TextField.Input\n            required\n            pattern={'^\\\\+?[1-9]\\\\d{1,14}$'}\n            name={'phoneNumber'}\n            type={'tel'}\n            placeholder={'Ex. +919367788755'}\n            disabled={requestState.state.loading}\n          />\n        </TextField.Label>\n\n        <If condition={requestState.state.error}>\n          <AuthErrorMessage\n            error={getFirebaseErrorCode(requestState.state.error)}\n          />\n        </If>\n\n        <Button\n          id={buttonId}\n          block\n          type={'submit'}\n          loading={requestState.state.loading}\n        >\n          <Trans i18nKey={'profile:verifyPhoneNumberSubmitLabel'} />\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nfunction isNeedsReauthenticationError(error: FirebaseError) {\n  return error.code === 'auth/requires-recent-login';\n}\n\nexport default MultiFactorAuthPhoneNumberForm;\n", "import type { FormEventHandler } from 'react';\nimport { useCallback } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport {\n  multiFactor,\n  PhoneAuthProvider,\n  PhoneMultiFactorGenerator,\n} from 'firebase/auth';\n\nimport toaster from 'react-hot-toast';\nimport { useAuth } from 'reactfire';\n\nimport TextField from '~/core/ui/TextField';\nimport Button from '~/core/ui/Button';\nimport useRequestState from '~/core/hooks/use-request-state';\n\nconst MultiFactorAuthVerificationCodeForm: React.FC<{\n  verificationId: string;\n  onComplete: (success: boolean) => void;\n}> = ({ onComplete, verificationId }) => {\n  const auth = useAuth();\n  const { t } = useTranslation();\n  const requestState = useRequestState<void>();\n  const user = auth.currentUser;\n\n  const onEnrolRequested = useCallback(\n    async (params: { verificationCode: string; authFactorName: string }) => {\n      if (!user || requestState.state.loading) {\n        return;\n      }\n\n      requestState.setLoading(true);\n\n      const { verificationCode, authFactorName } = params;\n\n      const phoneAuthCredential = PhoneAuthProvider.credential(\n        verificationId,\n        verificationCode\n      );\n\n      const multiFactorAssertion =\n        PhoneMultiFactorGenerator.assertion(phoneAuthCredential);\n\n      const displayName = authFactorName ?? null;\n\n      const promise = multiFactor(user)\n        .enroll(multiFactorAssertion, displayName)\n        .then(() => {\n          const success = true;\n          onComplete(success);\n        })\n        .catch((error) => {\n          requestState.setError(error);\n\n          throw error.code;\n        });\n\n      return await toaster.promise(promise, {\n        success: t<string>(`profile:mfaEnabledSuccessTitle`),\n        error: t<string>(`profile:verificationCodeError`),\n        loading: t<string>(`profile:mfaActivationLoading`),\n      });\n    },\n    [verificationId, t, onComplete, user, requestState]\n  );\n\n  const onSubmit: FormEventHandler<HTMLFormElement> = useCallback(\n    (e) => {\n      e.preventDefault();\n\n      const data = new FormData(e.currentTarget);\n      const verificationCode = data.get('verificationCode') as string;\n      const authFactorName = data.get('authFactorName') as string;\n\n      return onEnrolRequested({ verificationCode, authFactorName });\n    },\n    [onEnrolRequested]\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className={'mb-2.5 text-gray-400 dark:text-gray-400'}>\n        <Trans i18nKey={'profile:verifyActivationCodeDescription'} />\n      </div>\n\n      <div className={'flex flex-col space-y-3'}>\n        <TextField.Label>\n          <Trans i18nKey={'profile:verificationCode'} />\n          <TextField.Input\n            required\n            autoComplete={'off'}\n            name={'verificationCode'}\n          />\n        </TextField.Label>\n\n        <TextField.Label>\n          <Trans i18nKey={'profile:authFactorName'} />\n          <TextField.Input name={'authFactorName'} />\n          <TextField.Hint>\n            <Trans i18nKey={'profile:authFactorNameHint'} />\n          </TextField.Hint>\n        </TextField.Label>\n\n        <Button block type={'submit'} loading={requestState.state.loading}>\n          <Trans i18nKey={'profile:verifyActivationCodeSubmitLabel'} />\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default MultiFactorAuthVerificationCodeForm;\n", "import OAuthProviders from '~/components/auth/OAuthProviders';\nimport EmailPasswordSignInContainer from '~/components/auth/EmailPasswordSignInContainer';\n\nconst ReauthenticationForm: React.FC<{\n  onSuccess: EmptyCallback;\n}> = ({ onSuccess }) => {\n  return (\n    <div className={'flex flex-col space-y-4'}>\n      <OAuthProviders onSignIn={onSuccess} />\n      <EmailPasswordSignInContainer onSignIn={onSuccess} />\n    </div>\n  );\n};\n\nexport default ReauthenticationForm;\n", "import type { User } from 'firebase/auth';\nimport { sendEmailVerification } from 'firebase/auth';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useCallback } from 'react';\nimport toaster from 'react-hot-toast';\n\nimport useRequestState from '~/core/hooks/use-request-state';\nimport Alert from '~/core/ui/Alert';\nimport If from '~/core/ui/If';\nimport Button from '~/core/ui/Button';\n\nimport getFirebaseErrorCode from '~/core/firebase/utils/get-firebase-error-code';\nimport AuthErrorMessage from '~/components/auth/AuthErrorMessage';\n\nfunction EmailVerificationAlert(\n  props: React.PropsWithChildren<{\n    user: User;\n  }>\n) {\n  const requestState = useRequestState<void>();\n  const { t } = useTranslation();\n\n  const onLinkRequested = useCallback(async () => {\n    requestState.setLoading(true);\n\n    const promise = sendEmailVerification(props.user)\n      .then(() => {\n        requestState.setData();\n      })\n      .catch((error) => {\n        requestState.setError(error);\n\n        throw getFirebaseErrorCode(error);\n      });\n\n    await toaster.promise(promise, {\n      loading: t<string>(`profile:sendingEmailVerificationLink`),\n      success: t<string>(`profile:sendEmailVerificationLinkSuccess`),\n      error: t<string>(`profile:sendEmailVerificationLinkError`),\n    });\n  }, [props, requestState, t]);\n\n  return (\n    <div className={'flex flex-col space-y-3'}>\n      <div>\n        <Alert type={'warn'}>\n          <Alert.Heading>\n            <Trans i18nKey={'profile:verifyEmailAlertHeading'} />\n          </Alert.Heading>\n\n          <div>\n            <p>\n              <Trans i18nKey={'profile:verificationLinkAlertDescription'} />\n            </p>\n          </div>\n        </Alert>\n      </div>\n\n      <If condition={requestState.state.error}>\n        <div>\n          <AuthErrorMessage\n            error={getFirebaseErrorCode(requestState.state.error)}\n          />\n        </div>\n      </If>\n\n      <div>\n        <If\n          condition={requestState.state.success}\n          fallback={\n            <Button\n              loading={requestState.state.loading}\n              onClick={onLinkRequested}\n            >\n              <Trans i18nKey={'profile:sendVerificationLinkSubmitLabel'} />\n            </Button>\n          }\n        >\n          <EmailSentSuccessAlert />\n        </If>\n      </div>\n    </div>\n  );\n}\n\nfunction EmailSentSuccessAlert() {\n  return (\n    <Alert type={'success'}>\n      <span>\n        <Trans i18nKey={'profile:sendVerificationLinkSuccessLabel'} />\n      </span>\n    </Alert>\n  );\n}\n\nexport default EmailVerificationAlert;\n", "import { useCallback, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport toaster from 'react-hot-toast';\n\nimport Button from '~/core/ui/Button';\nimport Modal from '~/core/ui/Modal';\n\nimport useDisableMultiFactorAuthentication from '~/lib/profile/hooks/use-disable-multi-factor-auth';\n\nconst DisableMultiFactorButton: React.FC<{\n  onDisable: EmptyCallback;\n}> = ({ onDisable }) => {\n  const [disableMultiFactorAuthentication, { loading }] =\n    useDisableMultiFactorAuthentication();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { t } = useTranslation();\n\n  const onDisableSubmit = useCallback(async () => {\n    const promise = disableMultiFactorAuthentication().then(onDisable);\n\n    return toaster.promise(promise, {\n      loading: t<string>(`profile:disablingMfa`),\n      error: t<string>(`profile:disableMfaError`),\n      success: t<string>(`profile:disableMfaSuccess`),\n    });\n  }, [disableMultiFactorAuthentication, onDisable, t]);\n\n  return (\n    <>\n      <div>\n        <Button\n          color={'danger'}\n          variant={'flat'}\n          onClick={() => setIsModalOpen(true)}\n        >\n          <span className={'font-medium'}>\n            <Trans i18nKey={'profile:disableMfaButtonLabel'} />\n          </span>\n        </Button>\n      </div>\n\n      <Modal\n        heading={<Trans i18nKey={'profile:disableMfa'} />}\n        isOpen={isModalOpen}\n        setIsOpen={setIsModalOpen}\n      >\n        <div className={'flex flex-col space-y-4'}>\n          <div>\n            <p>\n              <Trans i18nKey={'common:modalConfirmationQuestion'} />\n            </p>\n          </div>\n\n          <Button\n            color={'danger'}\n            block\n            loading={loading}\n            onClick={onDisableSubmit}\n          >\n            <Trans i18nKey={'profile:confirmDisableMfaButtonLabel'} />\n          </Button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default DisableMultiFactorButton;\n", "import useApiRequest from '~/core/hooks/use-api';\n\nfunction useDisableMultiFactorAuthentication() {\n  return useApiRequest(`/api/user/mfa/disable`, `POST`);\n}\n\nexport default useDisableMultiFactorAuthentication;\n", "import { useCallback } from 'react';\nimport { Trans } from 'react-i18next';\n\nimport Modal from '~/core/ui/Modal';\nimport ReauthenticationForm from '~/components/auth/ReauthenticationForm';\n\nconst ReauthenticationModal: React.FC<{\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n}> = ({ isOpen, setIsOpen }) => {\n  const onSuccess = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  return (\n    <Modal\n      heading={<Trans i18nKey={'auth:reauthenticate'} />}\n      isOpen={isOpen}\n      setIsOpen={setIsOpen}\n      closeButton={false}\n    >\n      <div className={'my-4'}>\n        <p>\n          <Trans i18nKey={'auth:reauthenticateDescription'} />\n        </p>\n      </div>\n\n      <ReauthenticationForm onSuccess={onSuccess} />\n    </Modal>\n  );\n};\n\nexport default ReauthenticationModal;\n", "import type { MetaFunction } from '@remix-run/node';\nimport { useUser } from 'reactfire';\n\nimport { Trans } from 'react-i18next';\nimport { EmailAuthProvider } from 'firebase/auth';\n\nimport Alert from '~/core/ui/Alert';\nimport If from '~/core/ui/If';\n\nimport UpdatePasswordForm from '~/components/profile/UpdatePasswordForm';\nimport SettingsTile from '~/components/settings/SettingsTile';\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Update Password',\n  };\n};\n\nconst ProfilePasswordSettings = () => {\n  const { data: user } = useUser();\n\n  if (!user) {\n    return null;\n  }\n\n  const canUpdatePassword = user.providerData.find(\n    (item) => item.providerId === EmailAuthProvider.PROVIDER_ID\n  );\n\n  return (\n    <SettingsTile\n      heading={<Trans i18nKey={'profile:passwordTab'} />}\n      subHeading={<Trans i18nKey={'profile:passwordTabSubheading'} />}\n    >\n      <If\n        condition={canUpdatePassword}\n        fallback={<WarnCannotUpdatePasswordAlert />}\n      >\n        <UpdatePasswordForm user={user} />\n      </If>\n    </SettingsTile>\n  );\n};\n\nfunction WarnCannotUpdatePasswordAlert() {\n  return (\n    <Alert type={'warn'}>\n      <Trans i18nKey={'profile:cannotUpdatePassword'} />\n    </Alert>\n  );\n}\n\nexport default ProfilePasswordSettings;\n", "import { useCallback, useEffect, useState } from 'react';\nimport type { MultiFactorError, User, UserCredential } from 'firebase/auth';\n\nimport {\n  EmailAuthProvider,\n  reauthenticateWithCredential,\n  updatePassword,\n} from 'firebase/auth';\n\nimport toast from 'react-hot-toast';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useForm } from 'react-hook-form';\n\nimport Button from '~/core/ui/Button';\nimport TextField from '~/core/ui/TextField';\nimport Alert from '~/core/ui/Alert';\nimport If from '~/core/ui/If';\n\nimport MultiFactorAuthChallengeModal from '~/components/auth/MultiFactorAuthChallengeModal';\nimport isMultiFactorError from '~/core/firebase/utils/is-multi-factor-error';\nimport useCreateServerSideSession from '~/core/hooks/use-create-server-side-session';\nimport useRequestState from '~/core/hooks/use-request-state';\nimport getFirebaseErrorCode from '~/core/firebase/utils/get-firebase-error-code';\n\nconst UpdatePasswordForm: React.FCC<{ user: User }> = ({ user }) => {\n  const { t } = useTranslation();\n  const [createServerSideSession] = useCreateServerSideSession();\n  const requestState = useRequestState<void>();\n\n  const [multiFactorAuthError, setMultiFactorAuthError] =\n    useState<Maybe<MultiFactorError>>();\n\n  const { register, handleSubmit, reset, getValues, formState } = useForm({\n    defaultValues: {\n      currentPassword: '',\n      newPassword: '',\n      repeatPassword: '',\n    },\n  });\n\n  const errors = formState.errors;\n\n  const currentPasswordControl = register('currentPassword', {\n    value: '',\n    required: true,\n    minLength: {\n      value: 6,\n      message: t<string>(`auth:passwordLengthError`),\n    },\n  });\n\n  const newPasswordControl = register('newPassword', {\n    value: '',\n    required: true,\n    minLength: {\n      value: 6,\n      message: t<string>(`auth:passwordLengthError`),\n    },\n    validate: (value) => {\n      // current password cannot be the same as the current one\n      if (value === getValues('currentPassword')) {\n        return t<string>(`profile:passwordNotChanged`);\n      }\n    },\n  });\n\n  const repeatPasswordControl = register('repeatPassword', {\n    value: '',\n    required: true,\n    minLength: {\n      value: 6,\n      message: t<string>(`profile:passwordLengthError`),\n    },\n    validate: (value) => {\n      // new password and repeat new password must match\n      if (value !== getValues('newPassword')) {\n        return t<string>(`profile:passwordNotMatching`);\n      }\n    },\n  });\n\n  const reauthenticateUser = useCallback(\n    (email: string, currentPassword: string) => {\n      const emailAuthCredential = EmailAuthProvider.credential(\n        email,\n        currentPassword\n      );\n\n      // first, we check if the password is correct\n      return reauthenticateWithCredential(user, emailAuthCredential).catch(\n        (error) => {\n          // if we hit a MFA error, it means we need to display an MFA modal\n          // and request the verification code sent by SMS\n          if (isMultiFactorError(error)) {\n            setMultiFactorAuthError(error);\n          } else {\n            // otherwise, it's a simple error, meaning the user wasn't able\n            // to authenticate\n            requestState.setError(getFirebaseErrorCode(error));\n            return Promise.reject(error);\n          }\n        }\n      );\n    },\n    [user, setMultiFactorAuthError, requestState]\n  );\n\n  const updatePasswordFromCredential = useCallback(\n    async (credential: UserCredential, newPassword: string) => {\n      const promise = new Promise<void>(async (resolve, reject) => {\n        try {\n          // then, we update the user password\n          await updatePassword(user, newPassword);\n\n          // finally, we re-create the server token\n          await createServerSideSession(credential.user);\n\n          // set request as successful, so we can reset the form\n          requestState.setData();\n\n          resolve();\n        } catch (e) {\n          reject(e);\n        }\n      });\n\n      return await toast.promise(promise, {\n        success: t<string>(`profile:updatePasswordSuccess`),\n        error: t<string>(`profile:updatePasswordError`),\n        loading: t<string>(`profile:updatePasswordLoading`),\n      });\n    },\n    [requestState, createServerSideSession, t, user]\n  );\n\n  const updatePasswordCallback = useCallback(\n    async (user: User, currentPassword: string, newPassword: string) => {\n      const email = user.email;\n\n      // if the user does not have an email assigned, it's possible they\n      // don't have an email/password factor linked, and the UI is out of sync\n      if (!email) {\n        return Promise.reject(t(`profile:cannotUpdatePassword`));\n      }\n\n      try {\n        // first, we check if the password is correct\n        const credential = await reauthenticateUser(email, currentPassword);\n\n        // when credential does not exist, it's possible we're in the MFA\n        // flow or an error was raised\n        // either way, we cannot continue without\n        if (!credential) {\n          return;\n        }\n\n        return await updatePasswordFromCredential(credential, newPassword);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    },\n    [reauthenticateUser, updatePasswordFromCredential, t]\n  );\n\n  const onSubmit = useCallback(\n    async (params: { currentPassword: string; newPassword: string }) => {\n      const { newPassword, currentPassword } = params;\n\n      requestState.setLoading(true);\n\n      return updatePasswordCallback(user, currentPassword, newPassword).catch(\n        (e) => {\n          requestState.setError(t(`profile:updatePasswordError`));\n\n          return e;\n        }\n      );\n    },\n    [t, user, requestState, updatePasswordCallback]\n  );\n\n  // reset form on success\n  useEffect(() => {\n    if (requestState.state.success) {\n      reset();\n      requestState.resetState();\n    }\n  }, [reset, requestState]);\n\n  return (\n    <>\n      <form data-cy={'update-password-form'} onSubmit={handleSubmit(onSubmit)}>\n        <div className={'flex flex-col space-y-4'}>\n          <If condition={requestState.state.error}>\n            <div data-cy={'update-password-error-alert'}>\n              <Alert type={'error'}>{requestState.state.error as string}</Alert>\n            </div>\n          </If>\n\n          <TextField>\n            <TextField.Label>\n              <Trans i18nKey={'profile:currentPassword'} />\n\n              <TextField.Input\n                data-cy={'current-password'}\n                required\n                type={'password'}\n                name={currentPasswordControl.name}\n                innerRef={currentPasswordControl.ref}\n                onChange={currentPasswordControl.onChange}\n                onBlur={currentPasswordControl.onBlur}\n              />\n            </TextField.Label>\n          </TextField>\n\n          <TextField>\n            <TextField.Label>\n              <Trans i18nKey={'profile:newPassword'} />\n\n              <TextField.Input\n                data-cy={'new-password'}\n                required\n                type={'password'}\n                name={newPasswordControl.name}\n                innerRef={newPasswordControl.ref}\n                onChange={newPasswordControl.onChange}\n                onBlur={newPasswordControl.onBlur}\n              />\n\n              <TextField.Error\n                data-cy={'new-password-error'}\n                error={errors.newPassword?.message}\n              />\n            </TextField.Label>\n          </TextField>\n\n          <TextField>\n            <TextField.Label>\n              <Trans i18nKey={'profile:repeatPassword'} />\n\n              <TextField.Input\n                data-cy={'repeat-new-password'}\n                required\n                type={'password'}\n                name={repeatPasswordControl.name}\n                innerRef={repeatPasswordControl.ref}\n                onChange={repeatPasswordControl.onChange}\n                onBlur={repeatPasswordControl.onBlur}\n              />\n\n              <TextField.Error\n                data-cy={'repeat-password-error'}\n                error={errors.repeatPassword?.message}\n              />\n            </TextField.Label>\n          </TextField>\n\n          <div>\n            <Button\n              className={'w-full md:w-auto'}\n              loading={requestState.state.loading}\n            >\n              <Trans i18nKey={'profile:updatePasswordSubmitLabel'} />\n            </Button>\n          </div>\n        </div>\n      </form>\n\n      <If condition={multiFactorAuthError}>\n        {(error) => (\n          <MultiFactorAuthChallengeModal\n            error={error}\n            isOpen={true}\n            setIsOpen={() => setMultiFactorAuthError(undefined)}\n            onSuccess={async (credential) => {\n              await updatePasswordFromCredential(\n                credential,\n                getValues('newPassword')\n              );\n\n              setMultiFactorAuthError(undefined);\n            }}\n          />\n        )}\n      </If>\n    </>\n  );\n};\n\nexport default UpdatePasswordForm;\n", "import { EmailAuthProvider } from 'firebase/auth';\nimport { Trans } from 'react-i18next';\nimport type { MetaFunction } from '@remix-run/node';\nimport { useUser } from 'reactfire';\n\nimport If from '~/core/ui/If';\nimport Alert from '~/core/ui/Alert';\n\nimport UpdateEmailForm from '~/components/profile/UpdateEmailForm';\nimport SettingsTile from '~/components/settings/SettingsTile';\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Update Email',\n  };\n};\n\nconst ProfileEmailSettings = () => {\n  const { data: user } = useUser();\n\n  if (!user) {\n    return null;\n  }\n\n  const canUpdateEmail = user.providerData.find(\n    (item) => item.providerId === EmailAuthProvider.PROVIDER_ID\n  );\n\n  return (\n    <>\n      <SettingsTile\n        heading={<Trans i18nKey={'profile:emailTab'} />}\n        subHeading={<Trans i18nKey={'profile:emailTabTabSubheading'} />}\n      >\n        <If\n          condition={canUpdateEmail}\n          fallback={<WarnCannotUpdateEmailAlert />}\n        >\n          <UpdateEmailForm user={user} />\n        </If>\n      </SettingsTile>\n    </>\n  );\n};\n\nfunction WarnCannotUpdateEmailAlert() {\n  return (\n    <Alert type={'warn'}>\n      <Trans i18nKey={'profile:cannotUpdateEmail'} />\n    </Alert>\n  );\n}\n\nexport default ProfileEmailSettings;\n", "import type { MultiFactorError, User, UserCredential } from 'firebase/auth';\n\nimport {\n  EmailAuthProvider,\n  reauthenticateWithCredential,\n  updateEmail,\n} from 'firebase/auth';\n\nimport { useCallback, useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useForm } from 'react-hook-form';\n\nimport Button from '~/core/ui/Button';\nimport TextField from '~/core/ui/TextField';\nimport Alert from '~/core/ui/Alert';\nimport If from '~/core/ui/If';\n\nimport MultiFactorAuthChallengeModal from '~/components/auth/MultiFactorAuthChallengeModal';\nimport isMultiFactorError from '~/core/firebase/utils/is-multi-factor-error';\nimport useRequestState from '~/core/hooks/use-request-state';\nimport useCreateServerSideSession from '~/core/hooks/use-create-server-side-session';\n\nconst UpdateEmailForm: React.FC<{ user: User }> = ({ user }) => {\n  const [errorMessage, setErrorMessage] = useState<Maybe<string>>();\n  const { t } = useTranslation();\n  const [createServerSideSession] = useCreateServerSideSession();\n  const requestState = useRequestState<void>();\n\n  const [multiFactorAuthError, setMultiFactorAuthError] =\n    useState<Maybe<MultiFactorError>>();\n\n  const updateEmailWithCredential = useCallback(\n    (credential: UserCredential, email: string) => {\n      // then, we update the user's email address\n      const promise = updateEmail(credential.user, email)\n        .then(() => {\n          return createServerSideSession(credential.user);\n        })\n        .then(() => {\n          setErrorMessage(undefined);\n        })\n        .catch((e) => {\n          setErrorMessage(t<string>(`profile:updateEmailError`));\n\n          return e;\n        });\n\n      return toast.promise(promise, {\n        success: t<string>(`profile:updateEmailSuccess`),\n        loading: t<string>(`profile:updateEmailLoading`),\n        error: t<string>(`profile:updateEmailError`),\n      });\n    },\n    [createServerSideSession, setErrorMessage, t]\n  );\n\n  const currentEmail = user?.email as string;\n\n  const { register, handleSubmit, getValues, reset } = useForm({\n    defaultValues: {\n      email: '',\n      repeatEmail: '',\n      password: '',\n    },\n  });\n\n  const onSubmit = useCallback(\n    async (params: {\n      email: string;\n      repeatEmail: string;\n      password: string;\n    }) => {\n      const { email, repeatEmail, password } = params;\n\n      if (email !== repeatEmail) {\n        const message = t(`profile:emailsNotMatching`);\n        setErrorMessage(message);\n\n        return;\n      }\n\n      if (email === currentEmail) {\n        const message = t(`profile:updatingSameEmail`);\n        setErrorMessage(message);\n\n        return;\n      }\n\n      requestState.setLoading(true);\n\n      // first, we need to verify that the password is correct\n      // by reauthenticating the user\n      const emailAuthCredential = EmailAuthProvider.credential(\n        currentEmail,\n        password\n      );\n\n      const promise = reauthenticateWithCredential(user, emailAuthCredential);\n\n      const credential = await promise.catch((error) => {\n        // if we hit a MFA error, it means we need to display an MFA modal\n        // and request the verification code sent by SMS\n        if (isMultiFactorError(error)) {\n          setMultiFactorAuthError(error);\n        } else {\n          // otherwise, it's a simple error, meaning the user wasn't able\n          // to authenticate\n          const message = t<string>(`profile:updateEmailError`);\n          setErrorMessage(message);\n        }\n\n        requestState.setError(error);\n      });\n\n      // if no valid credential was returned, it's that likely we hit an error\n      // and therefore we cannot proceed\n      if (!credential) {\n        return;\n      }\n\n      // otherwise, go ahead and update the email\n      return await updateEmailWithCredential(credential, email).finally(() => {\n        requestState.setData();\n      });\n    },\n    [currentEmail, t, requestState, updateEmailWithCredential, user]\n  );\n\n  const emailControl = register('email', {\n    value: '',\n    required: true,\n  });\n\n  const repeatEmailControl = register('repeatEmail', {\n    value: '',\n    required: true,\n  });\n\n  const passwordControl = register('password', {\n    value: '',\n    required: true,\n  });\n\n  // reset the form on success\n  useEffect(() => {\n    if (requestState.state.success) {\n      reset();\n      requestState.resetState();\n    }\n  }, [reset, requestState]);\n\n  return (\n    <>\n      <form data-cy={'update-email-form'} onSubmit={handleSubmit(onSubmit)}>\n        <div className={'flex flex-col space-y-4'}>\n          <If condition={errorMessage}>\n            <div data-cy={'update-email-error-alert'}>\n              <Alert type={'error'}>{errorMessage}</Alert>\n            </div>\n          </If>\n\n          <TextField>\n            <TextField.Label>\n              <Trans i18nKey={'profile:newEmail'} />\n\n              <TextField.Input\n                data-cy={'profile-new-email-input'}\n                name={emailControl.name}\n                onChange={emailControl.onChange}\n                onBlur={emailControl.onBlur}\n                innerRef={emailControl.ref}\n                required\n                type={'email'}\n                placeholder={''}\n              />\n            </TextField.Label>\n          </TextField>\n\n          <TextField>\n            <TextField.Label>\n              <Trans i18nKey={'profile:repeatEmail'} />\n\n              <TextField.Input\n                data-cy={'profile-repeat-email-input'}\n                name={repeatEmailControl.name}\n                onChange={repeatEmailControl.onChange}\n                onBlur={repeatEmailControl.onBlur}\n                innerRef={repeatEmailControl.ref}\n                required\n                type={'email'}\n              />\n            </TextField.Label>\n          </TextField>\n\n          <TextField>\n            <TextField.Label>\n              <Trans i18nKey={'profile:yourPassword'} />\n\n              <TextField.Input\n                data-cy={'profile-password-input'}\n                required\n                type={'password'}\n                name={passwordControl.name}\n                onChange={passwordControl.onChange}\n                onBlur={passwordControl.onBlur}\n                innerRef={passwordControl.ref}\n                placeholder={''}\n              />\n            </TextField.Label>\n          </TextField>\n\n          <div>\n            <Button\n              className={'w-full md:w-auto'}\n              loading={requestState.state.loading}\n            >\n              <Trans i18nKey={'profile:updateEmailSubmitLabel'} />\n            </Button>\n          </div>\n        </div>\n      </form>\n\n      <If condition={multiFactorAuthError}>\n        {(error) => (\n          <MultiFactorAuthChallengeModal\n            error={error}\n            isOpen={true}\n            setIsOpen={() => setMultiFactorAuthError(undefined)}\n            onSuccess={async (credential) => {\n              await updateEmailWithCredential(credential, getValues('email'));\n\n              setMultiFactorAuthError(undefined);\n              requestState.setData();\n            }}\n          />\n        )}\n      </If>\n    </>\n  );\n};\n\nexport default UpdateEmailForm;\n", "import type { MetaFunction } from '@remix-run/node';\nimport { useCallback, useContext } from 'react';\nimport { Trans } from 'react-i18next';\nimport type { UserInfo } from 'firebase/auth';\nimport { useUser } from 'reactfire';\n\nimport FirebaseStorageProvider from '~/core/firebase/components/FirebaseStorageProvider';\nimport UserSessionContext from '~/core/session/contexts/user-session';\n\nimport UpdateProfileForm from '~/components/profile/UpdateProfileForm';\nimport SettingsTile from '~/components/settings/SettingsTile';\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Profile Settings',\n  };\n};\n\ntype ProfileData = Partial<UserInfo>;\n\nconst ProfileDetailsPage = () => {\n  const { userSession, setUserSession } = useContext(UserSessionContext);\n  const { data: user } = useUser();\n\n  const onUpdate = useCallback(\n    (data: ProfileData) => {\n      const authData = userSession?.auth;\n\n      if (authData) {\n        setUserSession({\n          auth: {\n            ...authData,\n            ...data,\n          },\n          data: userSession.data,\n        });\n      }\n    },\n    [setUserSession, userSession]\n  );\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <SettingsTile\n      heading={<Trans i18nKey={'profile:generalTab'} />}\n      subHeading={<Trans i18nKey={'profile:generalTabSubheading'} />}\n    >\n      <FirebaseStorageProvider>\n        <UpdateProfileForm user={user} onUpdate={onUpdate} />\n      </FirebaseStorageProvider>\n    </SettingsTile>\n  );\n};\n\nexport default ProfileDetailsPage;\n", "import { useCallback, useEffect, useState } from 'react';\nimport { useStorage } from 'reactfire';\nimport type { User } from 'firebase/auth';\nimport { Trans, useTranslation } from 'react-i18next';\nimport toaster from 'react-hot-toast';\nimport { useForm } from 'react-hook-form';\n\nimport type { FirebaseStorage } from 'firebase/storage';\n\nimport {\n  deleteObject,\n  getDownloadURL,\n  ref,\n  uploadBytes,\n} from 'firebase/storage';\n\nimport { PhoneAuthProvider, unlink } from 'firebase/auth';\n\nimport configuration from '~/configuration';\nimport getFirebaseErrorCode from '~/core/firebase/utils/get-firebase-error-code';\nimport useRequestState from '~/core/hooks/use-request-state';\n\nimport useUpdateProfile from '~/lib/profile/hooks/use-update-profile';\nimport LinkPhoneNumberModal from '~/components/profile/accounts/LinkPhoneNumberModal';\nimport AuthErrorMessage from '~/components/auth/AuthErrorMessage';\n\nimport Button from '~/core/ui/Button';\nimport TextField from '~/core/ui/TextField';\nimport ImageUploadInput from '~/core/ui/ImageUploadInput';\nimport If from '~/core/ui/If';\nimport Modal from '~/core/ui/Modal';\n\ninterface ProfileData {\n  photoURL?: string | null;\n  displayName?: string | null;\n  phoneNumber?: string | null;\n}\n\nfunction UpdateProfileForm({\n  user,\n  onUpdate,\n}: {\n  user: User;\n  onUpdate: (user: ProfileData) => void;\n}) {\n  const [updateProfile, { loading }] = useUpdateProfile();\n\n  const [displayUpdatePhoneNumber, setDisplayUpdatePhoneNumber] =\n    useState(false);\n\n  const storage = useStorage();\n  const { t } = useTranslation();\n\n  const currentPhotoURL = user?.photoURL ?? '';\n  const currentDisplayName = user?.displayName ?? '';\n  const currentPhoneNumber = user?.phoneNumber ?? '';\n\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: {\n      displayName: currentDisplayName,\n      photoURL: '',\n    },\n  });\n\n  const [avatarIsDirty, setAvatarIsDirty] = useState(false);\n\n  const onAvatarCleared = useCallback(() => {\n    setAvatarIsDirty(true);\n  }, []);\n\n  const onSubmit = async (displayName: string, photoFile: Maybe<File>) => {\n    const photoName = photoFile?.name;\n\n    const photoUrl = photoName\n      ? await uploadUserProfilePhoto(storage, photoFile, user.uid)\n      : currentPhotoURL;\n\n    const isAvatarRemoved = avatarIsDirty && !photoName;\n\n    const info = {\n      displayName,\n      photoURL: isAvatarRemoved ? '' : photoUrl,\n    };\n\n    // delete existing photo if different\n    if (isAvatarRemoved && currentPhotoURL) {\n      try {\n        await deleteObject(ref(storage, currentPhotoURL));\n      } catch (e) {\n        // old photo not found\n      }\n    }\n\n    const promise = updateProfile(info).then(() => {\n      onUpdate(info);\n    });\n\n    return toaster.promise(promise, {\n      success: t<string>(`profile:updateProfileSuccess`),\n      error: t<string>(`profile:updateProfileError`),\n      loading: t<string>(`profile:updateProfileLoading`),\n    });\n  };\n\n  const displayNameControl = register('displayName', {\n    value: currentDisplayName,\n  });\n\n  const photoURLControl = register('photoURL');\n\n  useEffect(() => {\n    reset({\n      displayName: currentDisplayName ?? '',\n      photoURL: currentPhotoURL ?? '',\n    });\n  }, [currentDisplayName, currentPhotoURL, reset]);\n\n  return (\n    <>\n      <form\n        data-cy={'update-profile-form'}\n        onSubmit={handleSubmit((value) => {\n          return onSubmit(value.displayName, getPhotoFile(value.photoURL));\n        })}\n      >\n        <div className={'flex flex-col space-y-4'}>\n          <TextField>\n            <TextField.Label>\n              <Trans i18nKey={'profile:displayNameLabel'} />\n\n              <TextField.Input\n                innerRef={displayNameControl.ref}\n                onChange={displayNameControl.onChange}\n                onBlur={displayNameControl.onBlur}\n                name={displayNameControl.name}\n                data-cy={'profile-display-name'}\n                minLength={2}\n                placeholder={''}\n              />\n            </TextField.Label>\n          </TextField>\n\n          <TextField>\n            <TextField.Label>\n              <Trans i18nKey={'profile:profilePictureLabel'} />\n\n              <ImageUploadInput\n                multiple={false}\n                onClear={onAvatarCleared}\n                name={photoURLControl.name}\n                image={currentPhotoURL}\n                onChange={photoURLControl.onChange}\n                onBlur={photoURLControl.onBlur}\n                innerRef={photoURLControl.ref}\n              >\n                <Trans i18nKey={'common:imageInputLabel'} />\n              </ImageUploadInput>\n            </TextField.Label>\n          </TextField>\n\n          <TextField>\n            <TextField.Label>\n              <Trans i18nKey={'profile:emailLabel'} />\n\n              <TextField.Input disabled value={user.email ?? ''} />\n            </TextField.Label>\n\n            <If condition={user.email}>\n              <div>\n                <Button\n                  type={'button'}\n                  color={'transparent'}\n                  size={'small'}\n                  href={configuration.paths.settings.email}\n                >\n                  <span className={'text-xs font-normal'}>\n                    <Trans i18nKey={'profile:updateEmailSubmitLabel'} />\n                  </span>\n                </Button>\n              </div>\n            </If>\n\n            <If condition={!user.email}>\n              <div>\n                <Button\n                  type={'button'}\n                  color={'transparent'}\n                  size={'small'}\n                  href={configuration.paths.settings.authentication}\n                >\n                  <span className={'text-xs font-normal'}>\n                    <Trans i18nKey={'profile:addEmailAddress'} />\n                  </span>\n                </Button>\n              </div>\n            </If>\n          </TextField>\n\n          <TextField>\n            <TextField.Label>\n              <Trans i18nKey={'profile:phoneNumberLabel'} />\n\n              <TextField.Input disabled value={currentPhoneNumber} />\n            </TextField.Label>\n\n            {/* Only show this if phone number is enabled */}\n            <If condition={configuration.auth.providers.phoneNumber}>\n              <div>\n                <If\n                  condition={!currentPhoneNumber}\n                  fallback={\n                    <RemovePhoneNumberButton\n                      user={user}\n                      onSuccess={() => {\n                        onUpdate({\n                          phoneNumber: null,\n                        });\n                      }}\n                    />\n                  }\n                >\n                  <AddPhoneNumberButton\n                    onClick={() => setDisplayUpdatePhoneNumber(true)}\n                  />\n                </If>\n              </div>\n            </If>\n          </TextField>\n\n          <div>\n            <Button className={'w-full md:w-auto'} loading={loading}>\n              <Trans i18nKey={'profile:updateProfileSubmitLabel'} />\n            </Button>\n          </div>\n        </div>\n      </form>\n\n      <If condition={displayUpdatePhoneNumber}>\n        <LinkPhoneNumberModal\n          isOpen={true}\n          setIsOpen={setDisplayUpdatePhoneNumber}\n          onSuccess={(phoneNumber) => {\n            onUpdate({\n              phoneNumber,\n            });\n          }}\n        />\n      </If>\n    </>\n  );\n}\n\n/**\n * @name getPhotoFile\n * @param value\n * @description Returns the file of the photo when submitted\n * It returns undefined when the user hasn't selected a file\n */\nfunction getPhotoFile(value: string | null | FileList) {\n  if (!value || typeof value === 'string') {\n    return;\n  }\n\n  return value.item(0) ?? undefined;\n}\n\nasync function uploadUserProfilePhoto(\n  storage: FirebaseStorage,\n  photoFile: File,\n  userId: string\n) {\n  const url = `/profiles/${userId}/${photoFile.name}`;\n  const bytes = await photoFile.arrayBuffer();\n  const fileRef = ref(storage, url);\n\n  await uploadBytes(fileRef, bytes);\n\n  return await getDownloadURL(fileRef);\n}\n\nfunction RemovePhoneNumberButton({\n  user,\n  onSuccess,\n}: React.PropsWithChildren<{\n  user: User;\n  onSuccess: () => void;\n}>) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const requestState = useRequestState();\n  const { t } = useTranslation();\n\n  const onUnlinkPhoneNumber = useCallback(() => {\n    const promise = unlink(user, PhoneAuthProvider.PROVIDER_ID)\n      .then(() => {\n        setIsModalOpen(false);\n        onSuccess();\n      })\n      .catch((error) => {\n        requestState.setError(error);\n\n        throw getFirebaseErrorCode(error);\n      });\n\n    requestState.setLoading(true);\n\n    return toaster.promise(promise, {\n      loading: t<string>(`profile:unlinkActionLoading`),\n      success: t<string>(`profile:unlinkActionSuccess`),\n      error: t<string>(`profile:unlinkActionError`),\n    });\n  }, [user, requestState, t, onSuccess]);\n\n  return (\n    <>\n      <Button\n        type={'button'}\n        color={'transparent'}\n        size={'small'}\n        onClick={() => setIsModalOpen(true)}\n      >\n        <span className={'text-xs font-normal'}>\n          <Trans i18nKey={'profile:removePhoneNumber'} />\n        </span>\n      </Button>\n\n      <Modal\n        heading={<Trans i18nKey={'profile:removePhoneNumber'} />}\n        isOpen={isModalOpen}\n        setIsOpen={setIsModalOpen}\n      >\n        <div className={'flex flex-col space-y-3'}>\n          <div>\n            <Trans i18nKey={'profile:confirmRemovePhoneNumberDescription'} />\n          </div>\n\n          <div>\n            <Trans i18nKey={'common:modalConfirmationQuestion'} />\n          </div>\n\n          <If condition={requestState.state.error}>\n            {(error) => <AuthErrorMessage error={error as string} />}\n          </If>\n\n          <Button\n            block\n            loading={requestState.state.loading}\n            color={'danger'}\n            onClick={onUnlinkPhoneNumber}\n          >\n            <Trans i18nKey={'profile:confirmRemovePhoneNumber'} />\n          </Button>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nfunction AddPhoneNumberButton(\n  props: React.PropsWithChildren<{\n    onClick: EmptyCallback;\n  }>\n) {\n  return (\n    <Button\n      type={'button'}\n      color={'transparent'}\n      size={'small'}\n      onClick={props.onClick}\n    >\n      <span className={'text-xs font-normal'}>\n        <Trans i18nKey={'profile:addPhoneNumber'} />\n      </span>\n    </Button>\n  );\n}\n\nexport default UpdateProfileForm;\n", "import { useCallback } from 'react';\nimport { useUser } from 'reactfire';\nimport { updateProfile } from 'firebase/auth';\nimport useRequestState from '~/core/hooks/use-request-state';\n\ntype ProfileInfo = {\n  displayName: string | null;\n  photoURL: string | null;\n};\n\nexport default function useUpdateProfile() {\n  const { data: user } = useUser();\n  const { state, setLoading, setData, setError } = useRequestState<void>();\n\n  const updateProfileCallback = useCallback(\n    async (info: Maybe<ProfileInfo>) => {\n      if (info && user) {\n        setLoading(true);\n\n        try {\n          await updateProfile(user, info);\n\n          setData();\n        } catch (e) {\n          setError(`Could not update Profile`);\n\n          return Promise.reject(e);\n        }\n      }\n    },\n    [setData, setError, setLoading, user]\n  );\n\n  return [updateProfileCallback, state] as [\n    typeof updateProfileCallback,\n    typeof state\n  ];\n}\n", "import { redirect } from '@remix-run/node';\nimport configuration from '~/configuration';\n\nexport function loader() {\n  return redirect(configuration.paths.settings.profile);\n}\n", "import { Outlet } from '@remix-run/react';\nimport type { MetaFunction } from '@remix-run/node';\nimport loadAuthPageData from '~/lib/server/loaders/load-auth-page-data';\nimport AuthPageShell from '~/components/auth/AuthPageShell';\n\nexport const loader = loadAuthPageData;\n\nexport const meta: MetaFunction = ({ data }) => {\n  return {\n    'csrf-token': data?.csrfToken,\n  };\n};\n\nfunction AuthLayout() {\n  return (\n    <AuthPageShell>\n      <Outlet />\n    </AuthPageShell>\n  );\n}\n\nexport default AuthLayout;\n", "import type { LoaderArgs } from '@remix-run/server-runtime';\nimport { json, redirect } from '@remix-run/node';\n\nimport getLoggedInUser from '~/core/firebase/admin/auth/get-logged-in-user';\nimport createCsrfToken from '~/core/generic/create-csrf-token';\nimport { serializeCsrfSecretCookie } from '~/lib/server/cookies/csrf-secret.cookie';\nimport { parseSessionIdCookie } from '~/lib/server/cookies/session.cookie';\n\nimport configuration from '~/configuration';\n\nconst loadAuthPageData = async ({ request }: LoaderArgs) => {\n  const session = await parseSessionIdCookie(request);\n  const { headers, token } = await getCsrfTokenHeaders();\n\n  const ok = () => {\n    return json(\n      {\n        csrfToken: token,\n      },\n      {\n        headers,\n      }\n    );\n  };\n\n  try {\n    const user = await getLoggedInUser(session);\n\n    if (user) {\n      return redirect(configuration.paths.appHome);\n    }\n\n    return ok();\n  } catch (e) {\n    return ok();\n  }\n};\n\nasync function getCsrfTokenHeaders() {\n  const headers = new Headers();\n  const { secret, token } = await createCsrfToken();\n\n  headers.append('Set-Cookie', await serializeCsrfSecretCookie(secret));\n\n  return {\n    headers,\n    token,\n  };\n}\n\nexport default loadAuthPageData;\n", "import type { FormEvent } from 'react';\nimport { useCallback } from 'react';\nimport { Link } from '@remix-run/react';\nimport type { MetaFunction } from '@remix-run/node';\nimport { sendPasswordResetEmail } from '@firebase/auth';\nimport { Trans } from 'react-i18next';\nimport { useAuth } from 'reactfire';\n\nimport configuration from '~/configuration';\n\nimport Heading from '~/core/ui/Heading';\nimport Button from '~/core/ui/Button';\nimport Alert from '~/core/ui/Alert';\nimport If from '~/core/ui/If';\nimport TextField from '~/core/ui/TextField';\n\nimport getFirebaseErrorCode from '~/core/firebase/utils/get-firebase-error-code';\nimport useRequestState from '~/core/hooks/use-request-state';\nimport AuthErrorMessage from '~/components/auth/AuthErrorMessage';\nimport loadAuthPageData from '~/lib/server/loaders/load-auth-page-data';\n\nexport const loader = loadAuthPageData;\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Password Reset',\n  };\n};\n\nfunction PasswordResetPage() {\n  const auth = useAuth();\n  const { state, setError, setData, setLoading } = useRequestState();\n\n  const onSubmit = useCallback(\n    async (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n\n      const data = new FormData(event.currentTarget);\n      const email = data.get('email') as string;\n\n      setLoading(true);\n\n      try {\n        const returnUrl = getReturnUrl();\n\n        await sendPasswordResetEmail(auth, email, {\n          url: returnUrl,\n        });\n\n        setData(true);\n      } catch (e) {\n        setError(getFirebaseErrorCode(e));\n      }\n    },\n    [auth, setData, setError, setLoading]\n  );\n\n  return (\n    <>\n      <div>\n        <Heading type={4}>\n          <Trans i18nKey={'auth:passwordResetLabel'} />\n        </Heading>\n      </div>\n\n      <div className={'flex flex-col space-y-4'}>\n        <If condition={state.success}>\n          <Alert type={'success'}>\n            <Trans i18nKey={'auth:passwordResetSuccessMessage'} />\n          </Alert>\n        </If>\n\n        <If condition={!state.data}>\n          <>\n            <form\n              onSubmit={(e) => void onSubmit(e)}\n              className={'container mx-auto flex justify-center'}\n            >\n              <div className={'flex-col space-y-4'}>\n                <div>\n                  <p className={'text-sm text-gray-700 dark:text-gray-400'}>\n                    <Trans i18nKey={'auth:passwordResetSubheading'} />\n                  </p>\n                </div>\n\n                <div>\n                  <TextField.Label>\n                    <Trans i18nKey={'common:emailAddress'} />\n\n                    <TextField.Input\n                      name=\"email\"\n                      required\n                      type=\"email\"\n                      placeholder={'your@email.com'}\n                    />\n                  </TextField.Label>\n                </div>\n\n                <If condition={state.error}>\n                  <AuthErrorMessage error={state.error as string} />\n                </If>\n\n                <Button\n                  loading={state.loading}\n                  type=\"submit\"\n                  size=\"large\"\n                  block\n                >\n                  <Trans i18nKey={'auth:passwordResetLabel'} />\n                </Button>\n              </div>\n            </form>\n          </>\n        </If>\n\n        <div className={'flex justify-center text-xs'}>\n          <p className={'flex space-x-1'}>\n            <span>\n              <Trans i18nKey={'auth:passwordRecoveredQuestion'} />\n            </span>\n\n            <Link\n              className={\n                'text-primary-800 hover:underline dark:text-primary-500'\n              }\n              to={configuration.paths.signIn}\n            >\n              <Trans i18nKey={'auth:signIn'} />\n            </Link>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default PasswordResetPage;\n\n/**\n * @description\n * Return the URL where the user will be redirected to after resetting\n * their password. By default, we will redirect to the sign-in page\n */\nfunction getReturnUrl() {\n  return `${window.location.origin}${configuration.paths.signIn}`;\n}\n", "import type { ActionFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\n\nimport {\n  parseSessionIdCookie,\n  deleteSessionIdCookie,\n} from '~/lib/server/cookies/session.cookie';\n\nimport { deleteCsrfSecretCookie } from '~/lib/server/cookies/csrf-secret.cookie';\nimport withFirebaseAdmin from '~/core/middleware/with-firebase-admin';\nimport getLogger from '~/core/logger';\n\nexport const action: ActionFunction = async ({ request }) => {\n  await withFirebaseAdmin();\n\n  // if the session cookie does not exist\n  // we cannot delete nor sign the user out\n  // so, we end the request\n  const session = await parseSessionIdCookie(request);\n\n  if (!session) {\n    return signOutAndRedirect();\n  }\n\n  try {\n    // revoke cookie with Firebase Auth\n    await revokeFirebaseSessionToken(session);\n  } catch (e) {\n    getLogger().warn(e, `Could not destroy the user's session`);\n  }\n\n  return signOutAndRedirect();\n};\n\nasync function revokeFirebaseSessionToken(sessionCookie: string) {\n  const { getAuth } = await import('firebase-admin/auth');\n  const auth = getAuth();\n  const { sub } = await auth.verifySessionCookie(sessionCookie);\n\n  return auth.revokeRefreshTokens(sub);\n}\n\nasync function getNewHeaders() {\n  const headers = new Headers();\n\n  headers.append('Set-Cookie', await deleteSessionIdCookie());\n  headers.append('Set-Cookie', await deleteCsrfSecretCookie());\n\n  return headers;\n}\n\nasync function signOutAndRedirect() {\n  const headers = await getNewHeaders();\n\n  return redirect('/', {\n    headers,\n  });\n}\n", "import { json } from '@remix-run/node';\nimport type { ActionFunction } from '@remix-run/node';\nimport { z } from 'zod';\n\nimport withCsrf from '~/core/middleware/with-csrf';\nimport createServerSideSession from '~/core/firebase/admin/auth/create-server-side-session';\nimport { throwBadRequestException } from '~/core/http-exceptions';\nimport withFirebaseAdmin from '~/core/middleware/with-firebase-admin';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const payload = await request.json();\n  const body = await getBodySchema().safeParseAsync(payload);\n\n  if (!body.success) {\n    return throwBadRequestException();\n  }\n\n  await withCsrf(request);\n  await withFirebaseAdmin();\n\n  const session = await createServerSideSession(body.data.idToken);\n  const headers = new Headers();\n\n  headers.append('Set-Cookie', session);\n\n  return json({ success: true }, { headers });\n};\n\nfunction getBodySchema() {\n  return z.object({\n    idToken: z.string().min(1),\n  });\n}\n", "import { useCallback, useEffect, useMemo } from 'react';\nimport type { MetaFunction } from '@remix-run/node';\nimport { Link, useSubmit, useTransition } from '@remix-run/react';\n\nimport { Trans } from 'react-i18next';\nimport { useAuth } from 'reactfire';\n\nimport createServerSessionAction from '~/lib/server/auth/actions/create-server-session.action';\n\nimport Heading from '~/core/ui/Heading';\nimport If from '~/core/ui/If';\nimport isBrowser from '~/core/generic/is-browser';\n\nimport getClientQueryParams from '~/core/generic/get-client-query-params';\nimport useGetCsrfToken from '~/core/firebase/hooks/use-get-csrf-token';\n\nimport OAuthProviders from '~/components/auth/OAuthProviders';\nimport EmailLinkAuth from '~/components/auth/EmailLinkAuth';\nimport PhoneNumberSignInContainer from '~/components/auth/PhoneNumberSignInContainer';\nimport EmailPasswordSignInContainer from '~/components/auth/EmailPasswordSignInContainer';\n\nimport configuration from '~/configuration';\nimport PageLoadingIndicator from '~/core/ui/PageLoadingIndicator';\nimport AuthCatchBoundary from '~/components/auth/AuthCatchBoundary';\n\nexport const action = createServerSessionAction;\nexport const CatchBoundary = AuthCatchBoundary;\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Sign In',\n  };\n};\n\nconst SIGN_UP_PATH = configuration.paths.signUp;\nconst FORCE_SIGN_OUT_QUERY_PARAM = 'signOut';\n\nfunction SignInPage() {\n  const auth = useAuth();\n  const submit = useSubmit();\n  const getCsrfToken = useGetCsrfToken();\n  const transition = useTransition();\n\n  const onSignIn = useCallback(\n    (idToken: string) => {\n      const csrfToken = getCsrfToken() ?? '';\n      const payload = { idToken, csrfToken };\n\n      submit(payload, { method: 'post' });\n    },\n    [submit, getCsrfToken]\n  );\n\n  const shouldForceSignOut = useMemo(() => {\n    if (!isBrowser()) {\n      return false;\n    }\n\n    const params = getClientQueryParams();\n\n    return params.has(FORCE_SIGN_OUT_QUERY_PARAM);\n  }, []);\n\n  // force user signOut if the query parameter has been passed\n  useEffect(() => {\n    if (shouldForceSignOut) {\n      void auth.signOut();\n    }\n  }, [auth, shouldForceSignOut]);\n\n  if (transition.state !== 'idle') {\n    return <PageLoadingIndicator />;\n  }\n\n  return (\n    <>\n      <div>\n        <Heading type={4}>\n          <Trans i18nKey={'auth:signInHeading'} />\n        </Heading>\n      </div>\n\n      <OAuthProviders onSignIn={onSignIn} />\n\n      <If condition={configuration.auth.providers.emailPassword}>\n        <div>\n          <span className={'text-xs text-gray-400'}>\n            <Trans i18nKey={'auth:orContinueWithEmail'} />\n          </span>\n        </div>\n\n        <EmailPasswordSignInContainer onSignIn={onSignIn} />\n      </If>\n\n      <If condition={configuration.auth.providers.phoneNumber}>\n        <PhoneNumberSignInContainer onSignIn={onSignIn} />\n      </If>\n\n      <If condition={configuration.auth.providers.emailLink}>\n        <EmailLinkAuth />\n      </If>\n\n      <div className={'flex justify-center text-xs'}>\n        <p className={'flex space-x-1'}>\n          <span>\n            <Trans i18nKey={'auth:doNotHaveAccountYet'} />\n          </span>\n\n          <Link\n            className={'text-primary-800 hover:underline dark:text-primary-500'}\n            to={SIGN_UP_PATH}\n          >\n            <Trans i18nKey={'auth:signUp'} />\n          </Link>\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default SignInPage;\n", "import type { ActionFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport { z } from 'zod';\n\nimport withCsrf from '~/core/middleware/with-csrf';\nimport createServerSideSession from '~/core/firebase/admin/auth/create-server-side-session';\nimport { throwBadRequestException } from '~/core/http-exceptions';\n\nimport configuration from '~/configuration';\nimport withFirebaseAdmin from '~/core/middleware/with-firebase-admin';\n\nconst RETURN_URL_QUERY_PARAM = 'returnUrl';\n\nconst createServerSessionAction: ActionFunction = async ({\n  request,\n  params,\n}) => {\n  const formData = await request.formData();\n  const fields = Object.fromEntries(formData.entries());\n  const result = await getFormDataSchema().safeParseAsync(fields);\n\n  if (!result.success) {\n    return throwBadRequestException();\n  }\n\n  await withCsrf(request, () => result.data.csrfToken);\n  await withFirebaseAdmin();\n\n  const session = await createServerSideSession(result.data.idToken);\n  const headers = new Headers({\n    'Set-Cookie': session,\n  });\n\n  const path = getReturnPath(request.url);\n  const redirectUrl = path || configuration.paths.appHome;\n\n  return redirect(redirectUrl, {\n    headers,\n  });\n};\n\nexport default createServerSessionAction;\n\nfunction getFormDataSchema() {\n  return z.object({\n    idToken: z.string().min(1),\n    csrfToken: z.string().min(1),\n  });\n}\n\nfunction getReturnPath(url: string) {\n  return new URL(url).searchParams.get(RETURN_URL_QUERY_PARAM);\n}\n", "function getClientQueryParams() {\n  return new URLSearchParams(window.location.search);\n}\n\nexport default getClientQueryParams;\n", "import type { MetaFunction } from '@remix-run/node';\nimport { Link, useSubmit, useTransition } from '@remix-run/react';\nimport { useCallback } from 'react';\nimport { Trans } from 'react-i18next';\n\nimport Heading from '~/core/ui/Heading';\nimport If from '~/core/ui/If';\n\nimport OAuthProviders from '~/components/auth/OAuthProviders';\nimport EmailLinkAuth from '~/components/auth/EmailLinkAuth';\nimport PhoneNumberSignInContainer from '~/components/auth/PhoneNumberSignInContainer';\nimport EmailPasswordSignUpContainer from '~/components/auth/EmailPasswordSignUpContainer';\nimport createServerSessionAction from '~/lib/server/auth/actions/create-server-session.action';\nimport useGetCsrfToken from '~/core/firebase/hooks/use-get-csrf-token';\n\nimport configuration from '~/configuration';\nimport PageLoadingIndicator from '~/core/ui/PageLoadingIndicator';\nimport AuthCatchBoundary from '~/components/auth/AuthCatchBoundary';\n\nexport const action = createServerSessionAction;\nexport const CatchBoundary = AuthCatchBoundary;\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Sign Up',\n  };\n};\n\nconst SIGN_IN_PATH = configuration.paths.signIn;\n\nexport default function SignUpPage() {\n  const submit = useSubmit();\n  const getCsrfToken = useGetCsrfToken();\n  const transition = useTransition();\n\n  const onSignUp = useCallback(\n    (idToken: string) => {\n      const csrfToken = getCsrfToken() ?? '';\n      const payload = { idToken, csrfToken };\n\n      submit(payload, {\n        method: 'post',\n      });\n    },\n    [getCsrfToken, submit]\n  );\n\n  if (transition.state !== 'idle') {\n    return <PageLoadingIndicator />;\n  }\n\n  return (\n    <>\n      <div>\n        <Heading type={4}>\n          <Trans i18nKey={'auth:signUpHeading'} />\n        </Heading>\n      </div>\n\n      <OAuthProviders onSignIn={onSignUp} />\n\n      <If condition={configuration.auth.providers.emailPassword}>\n        <div>\n          <span className={'text-xs text-gray-400'}>\n            <Trans i18nKey={'auth:orContinueWithEmail'} />\n          </span>\n        </div>\n\n        <EmailPasswordSignUpContainer onSignUp={onSignUp} />\n      </If>\n\n      <If condition={configuration.auth.providers.phoneNumber}>\n        <PhoneNumberSignInContainer onSignIn={onSignUp} />\n      </If>\n\n      <If condition={configuration.auth.providers.emailLink}>\n        <EmailLinkAuth />\n      </If>\n\n      <div className={'flex justify-center text-xs'}>\n        <p className={'flex space-x-1'}>\n          <span>\n            <Trans i18nKey={'auth:alreadyHaveAnAccount'} />\n          </span>\n\n          <Link\n            className={'text-primary-800 hover:underline dark:text-primary-500'}\n            to={SIGN_IN_PATH}\n          >\n            <Trans i18nKey={'auth:signIn'} />\n          </Link>\n        </p>\n      </div>\n    </>\n  );\n}\n", "export default {'version':'e24727bc','entry':{'module':'/build/entry.client-W6NURKSL.js','imports':['/build/_shared/chunk-LGUD5Z4W.js','/build/_shared/chunk-CZ7RPIMM.js','/build/_shared/chunk-R32XIEQ6.js','/build/_shared/chunk-CRZAZ7IR.js','/build/_shared/chunk-G4KZDRB7.js','/build/_shared/chunk-WULCHIKQ.js','/build/_shared/chunk-WIOFJORR.js','/build/_shared/chunk-A4KF3ELC.js','/build/_shared/chunk-BCUDKLQK.js','/build/_shared/chunk-EGSMFI33.js','/build/_shared/chunk-TUM7Q574.js','/build/_shared/chunk-4FTOC32G.js','/build/_shared/chunk-HG654LJF.js','/build/_shared/chunk-CUPSZOF3.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-TQTKWP2C.js','imports':['/build/_shared/chunk-4C3HDJAL.js','/build/_shared/chunk-EYLCNKMF.js','/build/_shared/chunk-U3LVU62Z.js','/build/_shared/chunk-SXE3VI7N.js','/build/_shared/chunk-KIPB2TCK.js','/build/_shared/chunk-WGYKNE6A.js','/build/_shared/chunk-I7U6GVVU.js','/build/_shared/chunk-3RHYN7AX.js','/build/_shared/chunk-EPY2ZBMR.js','/build/_shared/chunk-2RQ7OU4V.js','/build/_shared/chunk-5CBDJCHW.js','/build/_shared/chunk-FT7OPBPM.js','/build/_shared/chunk-I5LWYJ5L.js','/build/_shared/chunk-6ZZPVUWI.js','/build/_shared/chunk-UJJUUA64.js','/build/_shared/chunk-PGVJYH6E.js','/build/_shared/chunk-MZJK6QBW.js','/build/_shared/chunk-GZQSVEA4.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-KHW4CDLX.js','/build/_shared/chunk-52KVLBBL.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-QTKR7OWQ.js','/build/_shared/chunk-L5VGBSV3.js','/build/_shared/chunk-BNRSGPT3.js','/build/_shared/chunk-6UP67C3W.js','/build/_shared/chunk-M572OUI5.js','/build/_shared/chunk-7W5X7L6G.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/__app':{'id':'routes/__app','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app-EROZQRJX.js','imports':['/build/_shared/chunk-ZPKYCPW6.js','/build/_shared/chunk-EHUQ3EN7.js','/build/_shared/chunk-CCK66CUU.js','/build/_shared/chunk-45D3VFMN.js','/build/_shared/chunk-J6NN4ZNV.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/dashboard/index':{'id':'routes/__app/dashboard/index','parentId':'routes/__app','path':'dashboard','index':true,'caseSensitive':undefined,'module':'/build/routes/__app/dashboard/index-Q67FLLOC.js','imports':['/build/_shared/chunk-X4STHRTE.js','/build/_shared/chunk-W4DXIIZX.js','/build/_shared/chunk-MLX6CK2L.js','/build/_shared/chunk-NKQZC65O.js','/build/_shared/chunk-T2CF575W.js','/build/_shared/chunk-AJBLUEBX.js','/build/_shared/chunk-NMWHWOJM.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-I7U6GVVU.js','/build/_shared/chunk-3RHYN7AX.js','/build/_shared/chunk-EPY2ZBMR.js','/build/_shared/chunk-2RQ7OU4V.js','/build/_shared/chunk-5CBDJCHW.js','/build/_shared/chunk-FT7OPBPM.js','/build/_shared/chunk-I5LWYJ5L.js','/build/_shared/chunk-6ZZPVUWI.js','/build/_shared/chunk-UJJUUA64.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-KHW4CDLX.js','/build/_shared/chunk-52KVLBBL.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-QTKR7OWQ.js','/build/_shared/chunk-L5VGBSV3.js','/build/_shared/chunk-BNRSGPT3.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/photos/index':{'id':'routes/__app/photos/index','parentId':'routes/__app','path':'photos','index':true,'caseSensitive':undefined,'module':'/build/routes/__app/photos/index-LGLJO2O7.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/settings':{'id':'routes/__app/settings','parentId':'routes/__app','path':'settings','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/settings-4YBNFUQF.js','imports':['/build/_shared/chunk-X4STHRTE.js','/build/_shared/chunk-W4DXIIZX.js','/build/_shared/chunk-MLX6CK2L.js','/build/_shared/chunk-NKQZC65O.js','/build/_shared/chunk-T2CF575W.js','/build/_shared/chunk-AJBLUEBX.js','/build/_shared/chunk-NMWHWOJM.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-KIPB2TCK.js','/build/_shared/chunk-I7U6GVVU.js','/build/_shared/chunk-3RHYN7AX.js','/build/_shared/chunk-EPY2ZBMR.js','/build/_shared/chunk-2RQ7OU4V.js','/build/_shared/chunk-5CBDJCHW.js','/build/_shared/chunk-FT7OPBPM.js','/build/_shared/chunk-I5LWYJ5L.js','/build/_shared/chunk-6ZZPVUWI.js','/build/_shared/chunk-UJJUUA64.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-KHW4CDLX.js','/build/_shared/chunk-52KVLBBL.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-QTKR7OWQ.js','/build/_shared/chunk-L5VGBSV3.js','/build/_shared/chunk-BNRSGPT3.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/settings/index':{'id':'routes/__app/settings/index','parentId':'routes/__app/settings','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/__app/settings/index-MSSGPDTY.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/settings/organization':{'id':'routes/__app/settings/organization','parentId':'routes/__app/settings','path':'organization','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/settings/organization-SS3ODWV6.js','imports':['/build/_shared/chunk-APO3SRLV.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/settings/organization/index':{'id':'routes/__app/settings/organization/index','parentId':'routes/__app/settings/organization','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/__app/settings/organization/index-ACODV662.js','imports':['/build/_shared/chunk-QMBBQ6UD.js','/build/_shared/chunk-33GWQEOE.js','/build/_shared/chunk-6EEWVN7Z.js','/build/_shared/chunk-MLX6CK2L.js','/build/_shared/chunk-NMWHWOJM.js','/build/_shared/chunk-CCK66CUU.js','/build/_shared/chunk-45D3VFMN.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-MZJK6QBW.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-QTKR7OWQ.js','/build/_shared/chunk-L5VGBSV3.js','/build/_shared/chunk-BNRSGPT3.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/settings/organization/members/$member':{'id':'routes/__app/settings/organization/members/$member','parentId':'routes/__app/settings/organization','path':'members/:member','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/settings/organization/members/$member-2YQUUTPT.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/settings/organization/members/index':{'id':'routes/__app/settings/organization/members/index','parentId':'routes/__app/settings/organization','path':'members','index':true,'caseSensitive':undefined,'module':'/build/routes/__app/settings/organization/members/index-OGRSPUPS.js','imports':['/build/_shared/chunk-OJUH3UKO.js','/build/_shared/chunk-33GWQEOE.js','/build/_shared/chunk-X2TJ6V6V.js','/build/_shared/chunk-W4DXIIZX.js','/build/_shared/chunk-CCK66CUU.js','/build/_shared/chunk-4C3HDJAL.js','/build/_shared/chunk-EYLCNKMF.js','/build/_shared/chunk-U3LVU62Z.js','/build/_shared/chunk-FT7OPBPM.js','/build/_shared/chunk-KHW4CDLX.js','/build/_shared/chunk-52KVLBBL.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/settings/organization/members/invite':{'id':'routes/__app/settings/organization/members/invite','parentId':'routes/__app/settings/organization','path':'members/invite','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/settings/organization/members/invite-C4E32BLY.js','imports':['/build/_shared/chunk-SYTY7UFF.js','/build/_shared/chunk-MGQONI2O.js','/build/_shared/chunk-ZQKII5EY.js','/build/_shared/chunk-B76DMKWT.js','/build/_shared/chunk-4I42Q7Y2.js','/build/_shared/chunk-OJUH3UKO.js','/build/_shared/chunk-33GWQEOE.js','/build/_shared/chunk-JDRCLJ2Q.js','/build/_shared/chunk-6EEWVN7Z.js','/build/_shared/chunk-W4DXIIZX.js','/build/_shared/chunk-AJBLUEBX.js','/build/_shared/chunk-NMWHWOJM.js','/build/_shared/chunk-CCK66CUU.js','/build/_shared/chunk-45D3VFMN.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-4C3HDJAL.js','/build/_shared/chunk-EYLCNKMF.js','/build/_shared/chunk-U3LVU62Z.js','/build/_shared/chunk-WGYKNE6A.js','/build/_shared/chunk-5CBDJCHW.js','/build/_shared/chunk-6ZZPVUWI.js','/build/_shared/chunk-UJJUUA64.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-KHW4CDLX.js','/build/_shared/chunk-52KVLBBL.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-QTKR7OWQ.js','/build/_shared/chunk-L5VGBSV3.js','/build/_shared/chunk-BNRSGPT3.js','/build/_shared/chunk-ODW25BWE.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/settings/organization/members/owner':{'id':'routes/__app/settings/organization/members/owner','parentId':'routes/__app/settings/organization','path':'members/owner','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/settings/organization/members/owner-W6ZBITSG.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/settings/profile':{'id':'routes/__app/settings/profile','parentId':'routes/__app/settings','path':'profile','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/settings/profile-PHTMGO4L.js','imports':['/build/_shared/chunk-APO3SRLV.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/settings/profile/authentication':{'id':'routes/__app/settings/profile/authentication','parentId':'routes/__app/settings/profile','path':'authentication','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/settings/profile/authentication-FA7VLBB5.js','imports':['/build/_shared/chunk-RH6ANKBC.js','/build/_shared/chunk-3THJO2UF.js','/build/_shared/chunk-ZQKII5EY.js','/build/_shared/chunk-33GWQEOE.js','/build/_shared/chunk-REROTZRV.js','/build/_shared/chunk-URFO34QJ.js','/build/_shared/chunk-ZSN7SJIX.js','/build/_shared/chunk-KH25R2OU.js','/build/_shared/chunk-GN2EZ3CR.js','/build/_shared/chunk-2LLES6IO.js','/build/_shared/chunk-VECX4GTW.js','/build/_shared/chunk-JDRCLJ2Q.js','/build/_shared/chunk-6EEWVN7Z.js','/build/_shared/chunk-NKQZC65O.js','/build/_shared/chunk-T2CF575W.js','/build/_shared/chunk-AJBLUEBX.js','/build/_shared/chunk-NMWHWOJM.js','/build/_shared/chunk-45D3VFMN.js','/build/_shared/chunk-75ATWWIY.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-I5LWYJ5L.js','/build/_shared/chunk-6ZZPVUWI.js','/build/_shared/chunk-UJJUUA64.js','/build/_shared/chunk-GZQSVEA4.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-KHW4CDLX.js','/build/_shared/chunk-52KVLBBL.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-QTKR7OWQ.js','/build/_shared/chunk-L5VGBSV3.js','/build/_shared/chunk-BNRSGPT3.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/settings/profile/email':{'id':'routes/__app/settings/profile/email','parentId':'routes/__app/settings/profile','path':'email','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/settings/profile/email-TI5IDE2D.js','imports':['/build/_shared/chunk-RH6ANKBC.js','/build/_shared/chunk-ZQKII5EY.js','/build/_shared/chunk-33GWQEOE.js','/build/_shared/chunk-ZSN7SJIX.js','/build/_shared/chunk-GN2EZ3CR.js','/build/_shared/chunk-VECX4GTW.js','/build/_shared/chunk-JDRCLJ2Q.js','/build/_shared/chunk-6EEWVN7Z.js','/build/_shared/chunk-NKQZC65O.js','/build/_shared/chunk-T2CF575W.js','/build/_shared/chunk-AJBLUEBX.js','/build/_shared/chunk-NMWHWOJM.js','/build/_shared/chunk-45D3VFMN.js','/build/_shared/chunk-75ATWWIY.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-I5LWYJ5L.js','/build/_shared/chunk-6ZZPVUWI.js','/build/_shared/chunk-UJJUUA64.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-QTKR7OWQ.js','/build/_shared/chunk-L5VGBSV3.js','/build/_shared/chunk-BNRSGPT3.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/settings/profile/index':{'id':'routes/__app/settings/profile/index','parentId':'routes/__app/settings/profile','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/__app/settings/profile/index-QRBSOZAF.js','imports':['/build/_shared/chunk-3THJO2UF.js','/build/_shared/chunk-QMBBQ6UD.js','/build/_shared/chunk-33GWQEOE.js','/build/_shared/chunk-KH25R2OU.js','/build/_shared/chunk-GN2EZ3CR.js','/build/_shared/chunk-2LLES6IO.js','/build/_shared/chunk-VECX4GTW.js','/build/_shared/chunk-6EEWVN7Z.js','/build/_shared/chunk-NKQZC65O.js','/build/_shared/chunk-T2CF575W.js','/build/_shared/chunk-AJBLUEBX.js','/build/_shared/chunk-NMWHWOJM.js','/build/_shared/chunk-45D3VFMN.js','/build/_shared/chunk-75ATWWIY.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-I5LWYJ5L.js','/build/_shared/chunk-6ZZPVUWI.js','/build/_shared/chunk-UJJUUA64.js','/build/_shared/chunk-MZJK6QBW.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-52KVLBBL.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-QTKR7OWQ.js','/build/_shared/chunk-L5VGBSV3.js','/build/_shared/chunk-BNRSGPT3.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/settings/profile/password':{'id':'routes/__app/settings/profile/password','parentId':'routes/__app/settings/profile','path':'password','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/settings/profile/password-P5QLAE3Y.js','imports':['/build/_shared/chunk-RH6ANKBC.js','/build/_shared/chunk-ZQKII5EY.js','/build/_shared/chunk-33GWQEOE.js','/build/_shared/chunk-ZSN7SJIX.js','/build/_shared/chunk-GN2EZ3CR.js','/build/_shared/chunk-2LLES6IO.js','/build/_shared/chunk-VECX4GTW.js','/build/_shared/chunk-JDRCLJ2Q.js','/build/_shared/chunk-6EEWVN7Z.js','/build/_shared/chunk-NKQZC65O.js','/build/_shared/chunk-T2CF575W.js','/build/_shared/chunk-AJBLUEBX.js','/build/_shared/chunk-NMWHWOJM.js','/build/_shared/chunk-45D3VFMN.js','/build/_shared/chunk-75ATWWIY.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-I5LWYJ5L.js','/build/_shared/chunk-6ZZPVUWI.js','/build/_shared/chunk-UJJUUA64.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-QTKR7OWQ.js','/build/_shared/chunk-L5VGBSV3.js','/build/_shared/chunk-BNRSGPT3.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/settings/subscription/index':{'id':'routes/__app/settings/subscription/index','parentId':'routes/__app/settings','path':'subscription','index':true,'caseSensitive':undefined,'module':'/build/routes/__app/settings/subscription/index-PMTEYGVS.js','imports':['/build/_shared/chunk-DAAZXNN4.js','/build/_shared/chunk-B76DMKWT.js','/build/_shared/chunk-4I42Q7Y2.js','/build/_shared/chunk-OJUH3UKO.js','/build/_shared/chunk-33GWQEOE.js','/build/_shared/chunk-JDRCLJ2Q.js','/build/_shared/chunk-CCK66CUU.js','/build/_shared/chunk-75ATWWIY.js','/build/_shared/chunk-OKZ23HHI.js','/build/_shared/chunk-ODW25BWE.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/tasks/index':{'id':'routes/__app/tasks/index','parentId':'routes/__app','path':'tasks','index':true,'caseSensitive':undefined,'module':'/build/routes/__app/tasks/index-TXVHPTBE.js','imports':['/build/_shared/chunk-6EEWVN7Z.js','/build/_shared/chunk-X4STHRTE.js','/build/_shared/chunk-W4DXIIZX.js','/build/_shared/chunk-MLX6CK2L.js','/build/_shared/chunk-NKQZC65O.js','/build/_shared/chunk-T2CF575W.js','/build/_shared/chunk-AJBLUEBX.js','/build/_shared/chunk-NMWHWOJM.js','/build/_shared/chunk-75ATWWIY.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-I7U6GVVU.js','/build/_shared/chunk-3RHYN7AX.js','/build/_shared/chunk-EPY2ZBMR.js','/build/_shared/chunk-2RQ7OU4V.js','/build/_shared/chunk-5CBDJCHW.js','/build/_shared/chunk-FT7OPBPM.js','/build/_shared/chunk-I5LWYJ5L.js','/build/_shared/chunk-6ZZPVUWI.js','/build/_shared/chunk-UJJUUA64.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-KHW4CDLX.js','/build/_shared/chunk-52KVLBBL.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-QTKR7OWQ.js','/build/_shared/chunk-L5VGBSV3.js','/build/_shared/chunk-BNRSGPT3.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-M572OUI5.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__site':{'id':'routes/__site','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/__site-7HI523C5.js','imports':['/build/_shared/chunk-J6NN4ZNV.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__site/faq':{'id':'routes/__site/faq','parentId':'routes/__site','path':'faq','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__site/faq-KRTMU63F.js','imports':['/build/_shared/chunk-M6BS7J37.js','/build/_shared/chunk-GZQSVEA4.js','/build/_shared/chunk-6UP67C3W.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-M572OUI5.js','/build/_shared/chunk-7W5X7L6G.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__site/index':{'id':'routes/__site/index','parentId':'routes/__site','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/__site/index-A5HYENI6.js','imports':['/build/_shared/chunk-M6BS7J37.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-GZQSVEA4.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-6UP67C3W.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-M572OUI5.js','/build/_shared/chunk-7W5X7L6G.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__site/pricing':{'id':'routes/__site/pricing','parentId':'routes/__site','path':'pricing','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__site/pricing-ANBXQTY2.js','imports':['/build/_shared/chunk-OKZ23HHI.js','/build/_shared/chunk-ODW25BWE.js','/build/_shared/chunk-6UP67C3W.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-M572OUI5.js','/build/_shared/chunk-7W5X7L6G.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth':{'id':'routes/auth','parentId':'root','path':'auth','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth-4WYU73FZ.js','imports':['/build/_shared/chunk-3PN4DVM6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/password-reset':{'id':'routes/auth/password-reset','parentId':'routes/auth','path':'password-reset','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/password-reset-22IV5IBK.js','imports':['/build/_shared/chunk-2LLES6IO.js','/build/_shared/chunk-VECX4GTW.js','/build/_shared/chunk-NMWHWOJM.js','/build/_shared/chunk-75ATWWIY.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-QTKR7OWQ.js','/build/_shared/chunk-L5VGBSV3.js','/build/_shared/chunk-BNRSGPT3.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/session':{'id':'routes/auth/session','parentId':'routes/auth','path':'session','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/session-XR7JDT3D.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/sign-in':{'id':'routes/auth/sign-in','parentId':'routes/auth','path':'sign-in','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/sign-in-67D64TAC.js','imports':['/build/_shared/chunk-GYDMDH2N.js','/build/_shared/chunk-REROTZRV.js','/build/_shared/chunk-URFO34QJ.js','/build/_shared/chunk-ZSN7SJIX.js','/build/_shared/chunk-KH25R2OU.js','/build/_shared/chunk-GN2EZ3CR.js','/build/_shared/chunk-2LLES6IO.js','/build/_shared/chunk-VECX4GTW.js','/build/_shared/chunk-JDRCLJ2Q.js','/build/_shared/chunk-6EEWVN7Z.js','/build/_shared/chunk-NKQZC65O.js','/build/_shared/chunk-T2CF575W.js','/build/_shared/chunk-AJBLUEBX.js','/build/_shared/chunk-NMWHWOJM.js','/build/_shared/chunk-45D3VFMN.js','/build/_shared/chunk-75ATWWIY.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-I5LWYJ5L.js','/build/_shared/chunk-6ZZPVUWI.js','/build/_shared/chunk-UJJUUA64.js','/build/_shared/chunk-GZQSVEA4.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-QTKR7OWQ.js','/build/_shared/chunk-L5VGBSV3.js','/build/_shared/chunk-BNRSGPT3.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/auth/sign-out':{'id':'routes/auth/sign-out','parentId':'routes/auth','path':'sign-out','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/sign-out-LFXZFEAH.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/sign-up':{'id':'routes/auth/sign-up','parentId':'routes/auth','path':'sign-up','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/sign-up-TBHZPAGQ.js','imports':['/build/_shared/chunk-EHJUS7EI.js','/build/_shared/chunk-GYDMDH2N.js','/build/_shared/chunk-URFO34QJ.js','/build/_shared/chunk-ZSN7SJIX.js','/build/_shared/chunk-KH25R2OU.js','/build/_shared/chunk-GN2EZ3CR.js','/build/_shared/chunk-2LLES6IO.js','/build/_shared/chunk-VECX4GTW.js','/build/_shared/chunk-JDRCLJ2Q.js','/build/_shared/chunk-6EEWVN7Z.js','/build/_shared/chunk-NKQZC65O.js','/build/_shared/chunk-T2CF575W.js','/build/_shared/chunk-AJBLUEBX.js','/build/_shared/chunk-NMWHWOJM.js','/build/_shared/chunk-45D3VFMN.js','/build/_shared/chunk-75ATWWIY.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-I5LWYJ5L.js','/build/_shared/chunk-6ZZPVUWI.js','/build/_shared/chunk-UJJUUA64.js','/build/_shared/chunk-GZQSVEA4.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-QTKR7OWQ.js','/build/_shared/chunk-L5VGBSV3.js','/build/_shared/chunk-BNRSGPT3.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/invite':{'id':'routes/invite','parentId':'root','path':'invite','index':undefined,'caseSensitive':undefined,'module':'/build/routes/invite-ZNE4SUPT.js','imports':['/build/_shared/chunk-3PN4DVM6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/invite/$code':{'id':'routes/invite/$code','parentId':'routes/invite','path':':code','index':undefined,'caseSensitive':undefined,'module':'/build/routes/invite/$code-KYWNSMWG.js','imports':['/build/_shared/chunk-EHJUS7EI.js','/build/_shared/chunk-GYDMDH2N.js','/build/_shared/chunk-REROTZRV.js','/build/_shared/chunk-URFO34QJ.js','/build/_shared/chunk-ZSN7SJIX.js','/build/_shared/chunk-KH25R2OU.js','/build/_shared/chunk-GN2EZ3CR.js','/build/_shared/chunk-2LLES6IO.js','/build/_shared/chunk-VECX4GTW.js','/build/_shared/chunk-JDRCLJ2Q.js','/build/_shared/chunk-X2TJ6V6V.js','/build/_shared/chunk-ZPKYCPW6.js','/build/_shared/chunk-6EEWVN7Z.js','/build/_shared/chunk-NKQZC65O.js','/build/_shared/chunk-T2CF575W.js','/build/_shared/chunk-AJBLUEBX.js','/build/_shared/chunk-NMWHWOJM.js','/build/_shared/chunk-45D3VFMN.js','/build/_shared/chunk-75ATWWIY.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-4C3HDJAL.js','/build/_shared/chunk-EYLCNKMF.js','/build/_shared/chunk-U3LVU62Z.js','/build/_shared/chunk-I5LWYJ5L.js','/build/_shared/chunk-6ZZPVUWI.js','/build/_shared/chunk-UJJUUA64.js','/build/_shared/chunk-GZQSVEA4.js','/build/_shared/chunk-TXT3OLG5.js','/build/_shared/chunk-6E6B4MC5.js','/build/_shared/chunk-MEFOEGYP.js','/build/_shared/chunk-7KHFEMFW.js','/build/_shared/chunk-QTKR7OWQ.js','/build/_shared/chunk-L5VGBSV3.js','/build/_shared/chunk-BNRSGPT3.js','/build/_shared/chunk-54TVJDMF.js','/build/_shared/chunk-ZOBGVMBL.js','/build/_shared/chunk-DN742LHR.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/onboarding/index':{'id':'routes/onboarding/index','parentId':'root','path':'onboarding','index':true,'caseSensitive':undefined,'module':'/build/routes/onboarding/index-2LURVXPY.js','imports':['/build/_shared/chunk-75ATWWIY.js','/build/_shared/chunk-T4OLHNMO.js','/build/_shared/chunk-CSNF7QXE.js','/build/_shared/chunk-XQJIPBYI.js','/build/_shared/chunk-54TVJDMF.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/stripe/checkout':{'id':'routes/stripe/checkout','parentId':'root','path':'stripe/checkout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/stripe/checkout-CRG6VE7U.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/stripe/portal':{'id':'routes/stripe/portal','parentId':'root','path':'stripe/portal','index':undefined,'caseSensitive':undefined,'module':'/build/routes/stripe/portal-DHEVFXM6.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/stripe/webhook':{'id':'routes/stripe/webhook','parentId':'root','path':'stripe/webhook','index':undefined,'caseSensitive':undefined,'module':'/build/routes/stripe/webhook-WV5CGMZF.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-E24727BC.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/onboarding/index.tsx\";\nimport * as route2 from \"./routes/stripe/checkout.ts\";\nimport * as route3 from \"./routes/stripe/webhook.ts\";\nimport * as route4 from \"./routes/stripe/portal.ts\";\nimport * as route5 from \"./routes/__site.tsx\";\nimport * as route6 from \"./routes/__site/pricing.tsx\";\nimport * as route7 from \"./routes/__site/index.tsx\";\nimport * as route8 from \"./routes/__site/faq.tsx\";\nimport * as route9 from \"./routes/invite.tsx\";\nimport * as route10 from \"./routes/invite/$code.tsx\";\nimport * as route11 from \"./routes/__app.tsx\";\nimport * as route12 from \"./routes/__app/dashboard/index.tsx\";\nimport * as route13 from \"./routes/__app/photos/index.tsx\";\nimport * as route14 from \"./routes/__app/tasks/index.tsx\";\nimport * as route15 from \"./routes/__app/settings.tsx\";\nimport * as route16 from \"./routes/__app/settings/subscription/index.tsx\";\nimport * as route17 from \"./routes/__app/settings/organization.tsx\";\nimport * as route18 from \"./routes/__app/settings/organization/members/$member.ts\";\nimport * as route19 from \"./routes/__app/settings/organization/members/invite.tsx\";\nimport * as route20 from \"./routes/__app/settings/organization/members/index.tsx\";\nimport * as route21 from \"./routes/__app/settings/organization/members/owner.ts\";\nimport * as route22 from \"./routes/__app/settings/organization/index.tsx\";\nimport * as route23 from \"./routes/__app/settings/profile.tsx\";\nimport * as route24 from \"./routes/__app/settings/profile/authentication.tsx\";\nimport * as route25 from \"./routes/__app/settings/profile/password.tsx\";\nimport * as route26 from \"./routes/__app/settings/profile/email.tsx\";\nimport * as route27 from \"./routes/__app/settings/profile/index.tsx\";\nimport * as route28 from \"./routes/__app/settings/index.tsx\";\nimport * as route29 from \"./routes/auth.tsx\";\nimport * as route30 from \"./routes/auth/password-reset.tsx\";\nimport * as route31 from \"./routes/auth/sign-out.ts\";\nimport * as route32 from \"./routes/auth/session.ts\";\nimport * as route33 from \"./routes/auth/sign-in.tsx\";\nimport * as route34 from \"./routes/auth/sign-up.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/onboarding/index\": {\n      id: \"routes/onboarding/index\",\n      parentId: \"root\",\n      path: \"onboarding\",\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/stripe/checkout\": {\n      id: \"routes/stripe/checkout\",\n      parentId: \"root\",\n      path: \"stripe/checkout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/stripe/webhook\": {\n      id: \"routes/stripe/webhook\",\n      parentId: \"root\",\n      path: \"stripe/webhook\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/stripe/portal\": {\n      id: \"routes/stripe/portal\",\n      parentId: \"root\",\n      path: \"stripe/portal\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/__site\": {\n      id: \"routes/__site\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/__site/pricing\": {\n      id: \"routes/__site/pricing\",\n      parentId: \"routes/__site\",\n      path: \"pricing\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/__site/index\": {\n      id: \"routes/__site/index\",\n      parentId: \"routes/__site\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/__site/faq\": {\n      id: \"routes/__site/faq\",\n      parentId: \"routes/__site\",\n      path: \"faq\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/invite\": {\n      id: \"routes/invite\",\n      parentId: \"root\",\n      path: \"invite\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/invite/$code\": {\n      id: \"routes/invite/$code\",\n      parentId: \"routes/invite\",\n      path: \":code\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/__app\": {\n      id: \"routes/__app\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/__app/dashboard/index\": {\n      id: \"routes/__app/dashboard/index\",\n      parentId: \"routes/__app\",\n      path: \"dashboard\",\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/__app/photos/index\": {\n      id: \"routes/__app/photos/index\",\n      parentId: \"routes/__app\",\n      path: \"photos\",\n      index: true,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/__app/tasks/index\": {\n      id: \"routes/__app/tasks/index\",\n      parentId: \"routes/__app\",\n      path: \"tasks\",\n      index: true,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/__app/settings\": {\n      id: \"routes/__app/settings\",\n      parentId: \"routes/__app\",\n      path: \"settings\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/__app/settings/subscription/index\": {\n      id: \"routes/__app/settings/subscription/index\",\n      parentId: \"routes/__app/settings\",\n      path: \"subscription\",\n      index: true,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/__app/settings/organization\": {\n      id: \"routes/__app/settings/organization\",\n      parentId: \"routes/__app/settings\",\n      path: \"organization\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/__app/settings/organization/members/$member\": {\n      id: \"routes/__app/settings/organization/members/$member\",\n      parentId: \"routes/__app/settings/organization\",\n      path: \"members/:member\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/__app/settings/organization/members/invite\": {\n      id: \"routes/__app/settings/organization/members/invite\",\n      parentId: \"routes/__app/settings/organization\",\n      path: \"members/invite\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/__app/settings/organization/members/index\": {\n      id: \"routes/__app/settings/organization/members/index\",\n      parentId: \"routes/__app/settings/organization\",\n      path: \"members\",\n      index: true,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/__app/settings/organization/members/owner\": {\n      id: \"routes/__app/settings/organization/members/owner\",\n      parentId: \"routes/__app/settings/organization\",\n      path: \"members/owner\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/__app/settings/organization/index\": {\n      id: \"routes/__app/settings/organization/index\",\n      parentId: \"routes/__app/settings/organization\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/__app/settings/profile\": {\n      id: \"routes/__app/settings/profile\",\n      parentId: \"routes/__app/settings\",\n      path: \"profile\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/__app/settings/profile/authentication\": {\n      id: \"routes/__app/settings/profile/authentication\",\n      parentId: \"routes/__app/settings/profile\",\n      path: \"authentication\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route24\n    },\n  \"routes/__app/settings/profile/password\": {\n      id: \"routes/__app/settings/profile/password\",\n      parentId: \"routes/__app/settings/profile\",\n      path: \"password\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route25\n    },\n  \"routes/__app/settings/profile/email\": {\n      id: \"routes/__app/settings/profile/email\",\n      parentId: \"routes/__app/settings/profile\",\n      path: \"email\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route26\n    },\n  \"routes/__app/settings/profile/index\": {\n      id: \"routes/__app/settings/profile/index\",\n      parentId: \"routes/__app/settings/profile\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route27\n    },\n  \"routes/__app/settings/index\": {\n      id: \"routes/__app/settings/index\",\n      parentId: \"routes/__app/settings\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route28\n    },\n  \"routes/auth\": {\n      id: \"routes/auth\",\n      parentId: \"root\",\n      path: \"auth\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route29\n    },\n  \"routes/auth/password-reset\": {\n      id: \"routes/auth/password-reset\",\n      parentId: \"routes/auth\",\n      path: \"password-reset\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route30\n    },\n  \"routes/auth/sign-out\": {\n      id: \"routes/auth/sign-out\",\n      parentId: \"routes/auth\",\n      path: \"sign-out\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route31\n    },\n  \"routes/auth/session\": {\n      id: \"routes/auth/session\",\n      parentId: \"routes/auth\",\n      path: \"session\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route32\n    },\n  \"routes/auth/sign-in\": {\n      id: \"routes/auth/sign-in\",\n      parentId: \"routes/auth\",\n      path: \"sign-in\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route33\n    },\n  \"routes/auth/sign-up\": {\n      id: \"routes/auth/sign-up\",\n      parentId: \"routes/auth\",\n      path: \"sign-up\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route34\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAIA,SAAS,GAAoB;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AACF,GAII;AACF,aAAO,uBAAQ,MACT,YACE,OAAO,YAAa,aACf;AAAA,IAAG,mBAAS,SAAS;AAAA,KAArB;AAAA;AAAA;AAAA;AAAA,SAAuB,IAGzB;AAAA,IAAG;AAAA,KAAH;AAAA;AAAA;AAAA;AAAA,SAAY,IAGjB,WACK;AAAA,IAAG;AAAA,KAAH;AAAA;AAAA;AAAA;AAAA,SAAY,IAGd,MACN,CAAC,WAAW,UAAU,QAAQ,CAAC;AACpC;AA5BA,IAAAA,eAAA,wBA8BO,YA9BP;AAAA;AAAA;AAAA,IAAAA,gBAAwB,kBAAxB;AA8BA,IAAO,aAAQ;AAAA;AAAA;;;AC2Ff,SAAS,YAAY;AACnB,SACE,mDAAC;AAAA,IAAK,WAAW;AAAA,IACf,6DAAC;AAAA,MACC,WAAW;AAAA,MACX,OAAO;AAAA,MACP,MAAM;AAAA,MACN,mBAAmB;AAAA,OAJrB;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,KANF;AAAA;AAAA;AAAA;AAAA,SAOA;AAEJ;AAEA,SAAS,4BAA4B;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AACF,GAAwE;AACtE,SAAI,OAEA,mDAAC;AAAA,IAAK,WAAW,GAAG;AAAA,IAAsC,IAAI;AAAA,IAC3D;AAAA,KADH;AAAA;AAAA;AAAA;AAAA,SAEA,IAKF,mDAAC;AAAA,IAAK,WAAW,GAAG;AAAA,IAAuC;AAAA,KAA3D;AAAA;AAAA;AAAA;AAAA,SAAoE;AAExE;AAtJA,IAAAC,eACA,4BACA,mBAFA,wBAmBM,iBAYA,gBAYA,mBA6BA,QAgFC,gBAxJP;AAAA;AAAA;AAAA,IAAAA,gBAAqB,6BACrB,6BAA8B,gCAC9B,oBAAuB;AAEvB;AAJA,+DAmBM,kBAAkB,CAAC,WACe;AAAA,MACpC,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAEc,QAGV,iBAAiB,CAAC,SASf,GAP6B;AAAA,MAClC,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ;AAAA,IACV,EAEgB,gBAGZ,oBAAoB,CAAC,SAAkB,QAAe,eAED;AAAA,MACvD,QAAQ;AAAA,QACN,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,aAAa;AAAA,QACb,QAAQ;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACP,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,aAAa;AAAA,QACb,QAAQ;AAAA,MACV;AAAA,MACA,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,aAAa;AAAA,QACb,QAAQ;AAAA,MACV;AAAA,IACF,GAEgB,SAAS,QAGrB,SAA2B,CAAC;AAAA,MAChC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,SACG;AAAA,IACL,MAAM;AACJ,UAAM,eAAsB,WACtB,cAAoB,UACpB,iBAAiB,UAEjB,WAAW,SAAS,cACpB,UAAU,QAAQ,aAClB,aAAa,WAAW,gBAExB,gBAAY,kBAAAC;AAAA,QAChB;AAAA,QACA,gBAAgB,QAAQ;AAAA,QACxB,kBAAkB,YAAY,QAAQ;AAAA,QACtC,QAAQ,WAAW;AAAA,QACnB,UAAU,eAAe;AAAA,QACzB,MAAM,aAAa;AAAA,MACrB;AAEA,aACE,mDAAC;AAAA,QACE,GAAG;AAAA,QACJ;AAAA,QACA,UAAU,WAAW,MAAM;AAAA,QAE3B,6DAAC;AAAA,UACC;AAAA,UACA,WAAW,eAAe,OAAO;AAAA,UAEjC,6DAAC;AAAA,YAAK,WAAW;AAAA,YACf;AAAA,iEAAC;AAAA,gBAAG,WAAW;AAAA,gBACb,6DAAC,eAAD;AAAA;AAAA;AAAA;AAAA,uBAAW;AAAA,iBADb;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cAEC;AAAA;AAAA,aALH;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,WAVF;AAAA;AAAA;AAAA;AAAA,eAWA;AAAA,SAhBF;AAAA;AAAA;AAAA;AAAA,aAiBA;AAAA,IAEJ;AAiCA,IAAO,iBAAQ;AAAA;AAAA;;;AC7Gf,SAAS,UAAU;AACjB,SAAO,mDAAC;AAAA,IAAG,WAAU;AAAA,KAAd;AAAA;AAAA;AAAA;AAAA,SAAgC;AACzC;AAEA,SAAS,KAAK,EAAE,UAAU,cAAc,MAAM,GAAc;AAC1D,MAAM,eAAe,CAAC,MAAM,WAAW,CAAC,MAAM;AAE9C,SACE,mDAAC,oBAAK,MAAL;AAAA,IAAU,IAAI;AAAA,IACZ,WAAC,EAAE,OAAO,MACT,mDAAC;AAAA,MACC,WAAW,GACT,SAAS,uBAAuB;AAAA,MAGlC,6DAAC;AAAA,QACC,OAAK;AAAA,QACL,MAAM,MAAM;AAAA,QACZ,SAAS,MAAM;AAAA,QACf,OAAO;AAAA,QACP,MAAM;AAAA,QACN,eAAW,mBAAAC,SAAW,iBAAiB,WAAW;AAAA,UAC/C,QAAW;AAAA,QACd,CAAC;AAAA,QACA,GAAG;AAAA,QAEJ,6DAAC;AAAA,UAAK,WAAW;AAAA,UACd;AAAA,WADH;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAbF;AAAA;AAAA;AAAA;AAAA,aAcA;AAAA,OAnBF;AAAA;AAAA;AAAA;AAAA,WAoBA;AAAA,KAtBJ;AAAA;AAAA;AAAA;AAAA,SAwBA;AAEJ;AA7EA,IACAC,eACAA,gBACAC,oBAHA,wBAaM,UAqEC,kBAlFP;AAAA;AAAA;AACA,IAAAD,gBAAyB,kBACzBA,iBAAiC,8BACjCC,qBAAuB;AAEvB;AALA,+DAaM,WAMF,CAAC,EAAE,OAAO,OAAO,MAEjB,mDAAC;AAAA,MAAK,IAAG;AAAA,MAAM,WAAU;AAAA,MACvB;AAAA,2DAAC;AAAA,UAAI,WAAU;AAAA,UAA+B;AAAA,WAA9C;AAAA;AAAA;AAAA;AAAA,eAAqD;AAAA,QAErD,mDAAC;AAAA,UACC,IAAI;AAAA,UACJ,OAAM;AAAA,UACN,WAAU;AAAA,UACV,SAAQ;AAAA,UACR,OAAM;AAAA,UACN,WAAU;AAAA,UACV,SAAQ;AAAA,UAER,6DAAC,oBAAK,OAAL;AAAA,YAAW,WAAU;AAAA,YACnB,gBAAM,IAAI,CAAC,MAAM,UACT,mDAAC;AAAA,cAAsB;AAAA,eAAR,OAAf;AAAA;AAAA;AAAA;AAAA,mBAA4B,CACpC;AAAA,aAHH;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,WAbF;AAAA;AAAA;AAAA;AAAA,eAcA;AAAA;AAAA,OAjBF;AAAA;AAAA;AAAA;AAAA,WAkBA;AAwCJ,aAAS,UAAU;AACnB,aAAS,OAAO;AAEhB,IAAO,mBAAQ;AAAA;AAAA;;;AClFf,4CAEM,oBAYC,4BAdP;AAAA;AAAA;AAAA,qBAAyB,wCAAzB,2DAEM,qBAAyD,CAAC,EAAE,KAAK,MAChE,OAQE,mDAAC;AAAA,MAAK,WAAW;AAAA,MAAuB,eAAK;AAAA,OAA7C;AAAA;AAAA;AAAA;AAAA,WAAgD,IANnD,mDAAC;AAAA,MAAK,WAAW;AAAA,MACf,6DAAC;AAAA,QAAS,WAAW;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA,aAA4B;AAAA,OAD9B;AAAA;AAAA;AAAA;AAAA,WAEA,GAOC,6BAAQ;AAAA;AAAA;;;ACmBf,SAAS,gBAAgB,MAA8B;AAGrD,SAFoB,eAAe,IAAI,EAEpB,MAAM;AAC3B;AAEA,SAAS,eAAe,MAA8B;AACpD,SAAI,KAAK,cACA,KAAK,cAGP,KAAK,SAAS;AACvB;AA7CA,4BAGM,eA4CC,uBA/CP;AAAA;AAAA;AAAA;AAAA,+DAGM,gBAAoE,CAAC;AAAA,MACzE;AAAA,IACF,MAAM;AACJ,UAAI,CAAC;AACH,eAAO;AAGT,UAAM,WAAW,6BAAM,UACjB,OAAO;AAEb,aAAI,WAEA,mDAAC;AAAA,QACC,6DAAC;AAAA,UACC,SAAS;AAAA,UACT,UAAU;AAAA,UACV,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,WAAW;AAAA,UACX,KAAK;AAAA,UACL,KAAK;AAAA,UACL,OAAO,EAAE,QAAQ,KAAK;AAAA,WARxB;AAAA;AAAA;AAAA;AAAA,eASA;AAAA,SAVF;AAAA;AAAA;AAAA;AAAA,aAWA,IAIG,mDAAC;AAAA,QAAmB,MAAM,gBAAgB,IAAI;AAAA,SAA9C;AAAA;AAAA;AAAA;AAAA,aAAiD;AAAA,IAC1D;AAgBA,IAAO,wBAAQ;AAAA;AAAA;;;AC/Bf,SAAS,WAAW;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,KACG;AACL,GAAqD;AACnD,MAAM,WAAW;AAAA,IACf,GAAG;AAAA,IACH,WAAW,cAAc,aAAa;AAAA,IACtC,UAAU,WAAW;AAAA,IACrB,cAAc;AAAA,IACd,OAAO;AAAA,EACT;AAQA,SAAO,mDANS,CAAC,EAAE,UAAAC,UAAS,MAAyB;AACnD,QAAM,MAAM,QAAQ,QAAQ,MAAM,KAAK;AAEvC,eAAO,8BAAc,KAAK,UAAUA,SAAQ;AAAA,EAC9C,GAEQ;AAAA,IAAS,GAAG;AAAA,IAAQ;AAAA,KAArB;AAAA;AAAA;AAAA;AAAA,SAA8B;AACvC;AAvCA,IACAC,gBADA,wBAyCO,oBAzCP;AAAA;AAAA;AACA,IAAAA,iBAAqC,kBADrC;AAyCA,IAAO,qBAAQ;AAAA;AAAA;;;ACzCf,IAAAC,gBAGM,oBAQC,sBAXP;AAAA;AAAA;AAAA,IAAAA,iBAA8B,kBAGxB,yBAAqB,8BAGxB;AAAA,MACD,aAAa;AAAA,MACb,gBAAgB,CAAC,MAAM;AAAA,IACzB,CAAC,GAEM,uBAAQ;AAAA;AAAA;;;ACRA,SAAR,iBAAkC;AACvC,MAAM,EAAE,YAAY,QAAI,2BAAW,oBAAkB;AAErD,SAAO;AACT;AAPA,IAAAC,gBAAA;AAAA;AAAA;AAAA,IAAAA,iBAA2B;AAC3B;AAAA;AAAA;;;ACDA,4BAEM,SAoBC,iBAtBP;AAAA;AAAA;AAAA,+DAEM,UAA6C,CAAC,EAAE,MAAM,SAAS,MAAM;AACzE,cAAQ;AAAA,aACD;AACH,iBAAO,mDAAC;AAAA,YAAG,WAAW;AAAA,YAA4B;AAAA,aAA3C;AAAA;AAAA;AAAA;AAAA,iBAAoD;AAAA,aACxD;AACH,iBAAO,mDAAC;AAAA,YAAG,WAAW;AAAA,YAAuB;AAAA,aAAtC;AAAA;AAAA;AAAA;AAAA,iBAA+C;AAAA,aACnD;AACH,iBAAO,mDAAC;AAAA,YAAG,WAAW;AAAA,YAAuB;AAAA,aAAtC;AAAA;AAAA;AAAA;AAAA,iBAA+C;AAAA,aACnD;AACH,iBAAO,mDAAC;AAAA,YAAG,WAAW;AAAA,YAA0B;AAAA,aAAzC;AAAA;AAAA;AAAA;AAAA,iBAAkD;AAAA,aACtD;AACH,iBAAO,mDAAC;AAAA,YAAG,WAAW;AAAA,YAA0B;AAAA,aAAzC;AAAA;AAAA;AAAA;AAAA,iBAAkD;AAAA,aACtD;AACH,iBAAO,mDAAC;AAAA,YAAG,WAAW;AAAA,YAA0B;AAAA,aAAzC;AAAA;AAAA;AAAA;AAAA,iBAAkD;AAAA;AAGzD,iBAAO,mDAAC;AAAA,YAAQ,MAAM;AAAA,YAAI;AAAA,aAAnB;AAAA;AAAA;AAAA;AAAA,iBAA4B;AAAA;AAAA,IAEzC,GAEO,kBAAQ;AAAA;AAAA;;;ACuCf,SAAS,aAAa,EAAE,SAAS,GAA4B;AAC3D,SACE,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd,6DAAC;AAAA,MAAQ,MAAM;AAAA,MACb,6DAAC;AAAA,QAAK,WAAW;AAAA,QAAc;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,OAD1C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,KAHF;AAAA;AAAA;AAAA;AAAA,SAIA;AAEJ;AArEA,IAAAC,gBAEAC,iBAFA,wBAcM,iBAOA,OAOA,OA6CC,eAzEP;AAAA;AAAA;AAAA,IAAAD,iBAAkC,kBAElCC,kBAMO;AAEP;AACA;AACA;AAZA,+DAcM,kBAAkB;AAAA,MACtB,SAAS;AAAA,MACT,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,IACR,GAEM,QAAQ;AAAA,MACZ,SAAS,MAAM,mDAAC;AAAA,QAAgB,WAAW;AAAA,SAA5B;AAAA;AAAA;AAAA;AAAA,aAA6C;AAAA,MAC5D,OAAO,MAAM,mDAAC;AAAA,QAAsB,WAAW;AAAA,SAAlC;AAAA;AAAA;AAAA;AAAA,aAAmD;AAAA,MAChE,MAAM,MAAM,mDAAC;AAAA,QAAsB,WAAW;AAAA,SAAlC;AAAA;AAAA;AAAA;AAAA,aAAmD;AAAA,MAC/D,MAAM,MAAM,mDAAC;AAAA,QAAsB,WAAW;AAAA,SAAlC;AAAA;AAAA;AAAA;AAAA,aAAmD;AAAA,IACjE,GAEM,QAMF,CAAC,EAAE,UAAU,MAAM,gBAAgB,UAAU,MAAM;AACrD,UAAM,CAAC,SAAS,UAAU,QAAI,yBAAS,EAAI,GACrC,WAAO,wBAAQ,MAAM,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC;AAEhD,aAAK,UAKH,mDAAC;AAAA,QAAI,WAAW,SAAS,gBAAgB,SAAS,aAAa;AAAA,QAC7D;AAAA,6DAAC;AAAA,YAAK,WAAW;AAAA,YACf;AAAA,iEAAC;AAAA,gBAAM;AAAA,iBAAP;AAAA;AAAA;AAAA;AAAA,qBAAY;AAAA,cACZ,mDAAC;AAAA,gBAAM;AAAA,iBAAP;AAAA;AAAA;AAAA;AAAA,qBAAgB;AAAA;AAAA,aAFlB;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UAEA,mDAAC;AAAA,YAAG,WAAW,kBAAkB;AAAA,YAC/B,6DAAC;AAAA,cACC,WAAW;AAAA,cACX,SAAS,MAAM,WAAW,EAAK;AAAA,cAE/B,6DAAC;AAAA,gBAAU,WAAW;AAAA,iBAAtB;AAAA;AAAA;AAAA;AAAA,qBAA6B;AAAA,eAJ/B;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA;AAAA,SAbF;AAAA;AAAA;AAAA;AAAA,aAcA,IAlBO;AAAA,IAoBX;AAYA,UAAM,UAAU;AAEhB,IAAO,gBAAQ;AAAA;AAAA;;;ACzEf,IAAAC,gBAMM,OAaC,eAnBP;AAAA;AAAA;AAAA,IAAAA,iBAA8B,kBAMxB,QAA0B,CAAC,EAAE,UAAU,WAAW,OAAO,MAAM,UAG5D;AAAA,MAFK,MAAM;AAAA,MAIhB;AAAA,QACE,WAAW,SAAS,aAAa;AAAA,QACjC,GAAG;AAAA,MACL;AAAA,MACA;AAAA,IACF,GAGK,gBAAQ;AAAA;AAAA;;;ACnBf,IAQa,kBACA,0BACA,oBACA,kBAXb;AAAA;AAAA;AAQO,IAAM,mBAAmB,SACnB,2BAA2B,iBAC3B,qBAAqB,WACrB,mBAAmB;AAAA;AAAA;;;ACMzB,SAAS,qBAAqB;AACnC,SAAO,oBAAoB,gBAAgB;AAC7C;AAEO,SAAS,6BAA6B;AAC3C,SAAO;AAAA,IACL;AAAA,EACF;AACF;AAEO,SAAS,uBAAuB;AACrC,SAAO;AAAA,IACL;AAAA,EACF;AACF;AAEA,SAAS,oBAAoBC,aAAoB;AAC/C,aAAO,+BAAa,EAAE,WAAWA,WAAU;AAC7C;AAEA,SAAS,yBAAyBA,aAAoB;AACpD,aAAO,+BAAa,EAAE,gBAAgBA,WAAU;AAClD;AAvCA,IAKA,kBALA;AAAA;AAAA;AAKA,uBAA6B;AAM7B;AAAA;AAAA;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,eAAsB,oBAAoB,gBAAwB;AAGhE,SAFsB,2BAA2B,EAE5B,IAAI,cAAc,EAAE,IAAI;AAC/C;AAOA,eAAsB,eAAe,QAAgB;AAGnD,SAFc,mBAAmB,EAEpB,IAAI,MAAM,EAAE,IAAI;AAC/B;AAMA,eAAsB,YAAY,QAAgB;AAChD,MAAM,OAAO,MAAM,eAAe,MAAM,GAClC,OAAO,KAAK,KAAK;AAEvB,MAAI;AACF,WAAO;AAAA,MACL,GAAG;AAAA,MACH,IAAI,KAAK;AAAA,IACX;AAEJ;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAK,gBAME,yBANP;AAAA;AAAA;AAAA,IAAK,iBAAL,kBAAKC,qBACHA,gCAAA,wBACAA,gCAAA,sBACAA,gCAAA,sBAHGA,kBAAA,uBAME,0BAAQ;AAAA;AAAA;;;ACNf;AAAA;AAAA;AAAA;AAQA,eAAsB,yBAAyB,SAAiB;AAG9D,aAFa,sBAAQ,EAET,oBAAoB,SAAS,EAAI;AAC/C;AAZA,IAAAC,cAAA;AAAA;AAAA;AAAA,IAAAA,eAAwB;AAAA;AAAA;;;ACyBjB,SAAS,cACd,iBACA,YACA;AACA,SAAO,kBAAkB;AAC3B;AAQO,SAAS,iBAAiB,iBAAiC;AAChE,SAAO,oBAAoB,wBAAe;AAC5C;AAQO,SAAS,eAAe,iBAAiC;AAC9D,SAAO,mBAAmB,wBAAe;AAC3C;AAYO,SAAS,cACd,aACA,aACA;AACA,MAAM,YAAY,eAAe,WAAW,GACtC,iBAAiB,eAAe,aAChC,aAAa,gBAAgB,wBAAe;AAElD,SAAO,aAAa,kBAAkB;AACxC;AAOO,SAAS,iBAAiB,aAA6B;AAC5D,SAAO,eAAe,WAAW;AACnC;AAhFA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACyBe,SAAR,kBAAwE;AAC7E,MAAM,CAAC,OAAO,QAAQ,QAAI,yBAAiC;AAAA,IACzD,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,MAAM;AAAA,EACR,CAAC,GAEK,iBAAa,4BAAY,CAAC,YAAqB;AACnD,aAAS;AAAA,MACP;AAAA,MACA,SAAS;AAAA,MACT,MAAM;AAAA,MACN,OAAO;AAAA,IACT,CAAC;AAAA,EACH,GAAG,CAAC,CAAC,GAEC,cAAU,4BAAY,CAAC,SAAe;AAC1C,aAAS;AAAA,MACP;AAAA,MACA,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,IACT,CAAC;AAAA,EACH,GAAG,CAAC,CAAC,GAEC,eAAW,4BAAY,CAAC,UAAqB;AACjD,aAAS;AAAA,MACP,MAAM;AAAA,MACN,SAAS;AAAA,MACT,SAAS;AAAA,MACT;AAAA,IACF,CAAC;AAAA,EACH,GAAG,CAAC,CAAC,GAEC,iBAAa,4BAAY,MAAM;AACnC,aAAS;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,EACH,GAAG,CAAC,CAAC;AAEL,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AA7EA,IAAAC,gBAAA;AAAA;AAAA;AAAA,IAAAA,iBAAsC;AAAA;AAAA;;;ACAtC,IAAAC,gBACAA,gBAEAC,mBACAC,wBAJA,wBAWM,OA8FC,eAzGP;AAAA;AAAA;AAAA,IAAAF,iBAAyB,kBACzBA,iBAAmC,8BAEnCC,oBAAsB,2DACtBC,yBAAsB;AAEtB;AACA;AAEA;AATA,+DAWM,QAOF,CAAC,EAAE,QAAQ,WAAW,aAAa,SAAS,SAAS,MAAM;AAC7D,UAAM,iBAAiB,eAAe;AAEtC,aACE,mDAAC;AAAA,QAAW,QAAM;AAAA,QAAC,MAAM;AAAA,QAAQ,IAAI;AAAA,QACnC,6DAAC;AAAA,UACC,MAAM;AAAA,UACN,IAAG;AAAA,UACH,WAAU;AAAA,UACV,SAAS,MAAM;AACb,YAAI,kBACF,UAAU,EAAK;AAAA,UAEnB;AAAA,UAEA,6DAAC;AAAA,YAAI,WAAU;AAAA,YACb;AAAA,iEAAC,0BAAW,OAAX;AAAA,gBACC,IAAI;AAAA,gBACJ,OAAM;AAAA,gBACN,WAAU;AAAA,gBACV,SAAQ;AAAA,gBACR,OAAM;AAAA,gBACN,WAAU;AAAA,gBACV,SAAQ;AAAA,gBAER,6DAAC,sBAAO,SAAP;AAAA,kBAAe,WAAU;AAAA,mBAA1B;AAAA;AAAA;AAAA;AAAA,uBAA0C;AAAA,iBAT5C;AAAA;AAAA;AAAA;AAAA,qBAUA;AAAA,cAEA,mDAAC;AAAA,gBACC,WAAU;AAAA,gBACV,eAAY;AAAA,gBACb;AAAA,iBAHD;AAAA;AAAA;AAAA;AAAA,qBAKA;AAAA,cAEA,mDAAC,0BAAW,OAAX;AAAA,gBACC,IAAI;AAAA,gBACJ,OAAM;AAAA,gBACN,WAAU;AAAA,gBACV,SAAQ;AAAA,gBACR,OAAM;AAAA,gBACN,WAAU;AAAA,gBACV,SAAQ;AAAA,gBAER,6DAAC;AAAA,kBAAI,WAAU;AAAA,kBACb;AAAA,uEAAC;AAAA,sBAAI,WAAU;AAAA,sBACb;AAAA,2EAAC,sBAAO,OAAP;AAAA,0BACC,IAAG;AAAA,0BACH,WAAU;AAAA,0BAET;AAAA,2BAJH;AAAA;AAAA;AAAA;AAAA,+BAKA;AAAA,wBAEA,mDAAC;AAAA,0BAAG,WAAW;AAAA,0BACb,6DAAC;AAAA,4BAAI,WAAW;AAAA,4BACd,6DAAC;AAAA,8BACC,OAAO;AAAA,8BACP,SAAS,MAAM,UAAU,EAAK;AAAA,8BAE9B,6DAAC,kBAAAC,SAAA;AAAA,gCAAU,WAAW;AAAA,iCAAtB;AAAA;AAAA;AAAA;AAAA,qCAA6B;AAAA,+BAJ/B;AAAA;AAAA;AAAA;AAAA,mCAKA;AAAA,6BANF;AAAA;AAAA;AAAA;AAAA,iCAOA;AAAA,2BARF;AAAA;AAAA;AAAA;AAAA,+BASA;AAAA;AAAA,uBAjBF;AAAA;AAAA;AAAA;AAAA,2BAkBA;AAAA,oBAEA,mDAAC;AAAA,sBAAI,WAAU;AAAA,sBAAiB;AAAA,uBAAhC;AAAA;AAAA;AAAA;AAAA,2BAAyC;AAAA,oBAEzC,mDAAC;AAAA,sBAAG,WAAW;AAAA,sBACb,6DAAC;AAAA,wBAAI,WAAU;AAAA,wBACb,6DAAC;AAAA,0BACC,WAAS;AAAA,0BACT,OAAK;AAAA,0BACL,OAAO;AAAA,0BACP,SAAS,MAAM,UAAU,EAAK;AAAA,0BAE9B,6DAAC;AAAA,4BAAM,SAAS;AAAA,6BAAhB;AAAA;AAAA;AAAA;AAAA,iCAAiC;AAAA,2BANnC;AAAA;AAAA;AAAA;AAAA,+BAOA;AAAA,yBARF;AAAA;AAAA;AAAA;AAAA,6BASA;AAAA,uBAVF;AAAA;AAAA;AAAA;AAAA,2BAWA;AAAA;AAAA,mBAlCF;AAAA;AAAA;AAAA;AAAA,uBAmCA;AAAA,iBA5CF;AAAA;AAAA;AAAA;AAAA,qBA6CA;AAAA;AAAA,aAjEF;AAAA;AAAA;AAAA;AAAA,iBAkEA;AAAA,WA5EF;AAAA;AAAA;AAAA;AAAA,eA6EA;AAAA,SA9EF;AAAA;AAAA;AAAA;AAAA,aA+EA;AAAA,IAEJ,GAEO,gBAAQ;AAAA;AAAA;;;ACpGA,SAAR,kBAAmC;AACxC,aAAO,4BAAY,MAAM;AACvB,QAAM,UAAU,SAAS,cAAc,yBAAyB;AAEhE,WAAO,mCAAS,aAAa;AAAA,EAC/B,GAAG,CAAC,CAAC;AACP;AAXA,IAAAC,gBAAA;AAAA;AAAA;AAAA,IAAAA,iBAA4B;AAAA;AAAA;;;ACA5B;AAAA;AAAA;AAAA;AAMA,eAAsB,uBAAuB,SAAkB;AAE7D,MAAM,UAAsB,EAAE,WADZ,QAAQ,IAAI,eACU,GAElC,EAAE,SAAS,QAAQ,cAAc,IAAI,MAAM,OAAO;AAExD,SAAI,QAAQ,EAAE,SACL,OAAO,OAAO,IAGhB,cAAc,SAAS,OAAO;AACvC;AAjBA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAMA,eAAsB,uBAAuB,QAAgC;AAC3E,MAAM,EAAE,SAAS,QAAQ,MAAM,cAAc,IAAI,MAAM,OACrD;AAGF,MAAI,QAAQ,EAAE,SAAS;AACrB,WAAO,OAAO;AAGhB,MAAM,aAAa,yBAAyB,OAAO,UAAU,GAEvD,aAAa,KAAK;AAAA,IACtB,WAAW,OAAO;AAAA,IAClB,aAAa,OAAO;AAAA,IACpB;AAAA,EACF,CAAC;AAED,SAAO,cAAc;AAAA,IACnB;AAAA,IACA,WAAW,OAAO;AAAA,IAClB,eAAe,OAAO;AAAA,EACxB,CAAC;AACH;AAEA,SAAS,yBAAyB,KAAa;AAC7C,SAAO,IAAI,QAAQ,QAAQ;AAAA,CAAI;AACjC;AAhCA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAC,gBAGM,qBAQC,sBAXP;AAAA;AAAA;AAAA,IAAAA,iBAA8B,kBAGxB,0BAAsB,8BAGzB;AAAA,MACD,cAAc;AAAA,MACd,iBAAiB,CAAC,MAAM;AAAA,IAC1B,CAAC,GAEM,uBAAQ;AAAA;AAAA;;;ACRA,SAAR,yBAA0C;AAC/C,MAAM,EAAE,aAAa,QAAI,2BAAW,oBAAmB;AAEvD,SAAO;AACT;AAPA,IAAAC,gBAAA;AAAA;AAAA;AAAA,IAAAA,iBAA2B;AAC3B;AAAA;AAAA;;;ACMe,SAAR,qBAAsC;AAP7C;AAQE,MAAM,eAAe,uBAAuB,GACtC,OAAO,eAAe,GACtB,UAAS,kCAAM,SAAN,mBAAY;AAE3B,MAAI,EAAC;AAIL,YAAO,kDAAc,QAAQ,YAAtB,mBAA+B;AACxC;AAjBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACsBA,SAAS,iBAAiB;AAAA,EACxB;AAAA,EACA;AACF,GAA8E;AAC5E,MAAM,kBAAkB,mBAAmB;AAE3C,SAAI,oBAAoB,UAAa,CAAC,UAAU,eAAe,IACtD,OAGF;AAAA,IAAG;AAAA,KAAH;AAAA;AAAA;AAAA;AAAA,SAAY;AACrB;AAlCA,4BAoCO,0BApCP;AAAA;AAAA;AACA;AADA;AAoCA,IAAO,2BAAQ;AAAA;AAAA;;;ACtBf,SAASC,iBAAgB,OAAe;AACtC,SAAO,aAAa,SAAS;AAC/B;AAEA,SAASC,gBAAe,MAAa;AACnC,SAAO,YAAY,QAAQ;AAC7B;AApBA,4BAGM,cAMA,aAaA,OAeC,eArCP;AAAA;AAAA;AAAA,+DAGM,eAAe;AAAA,MACnB,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,QAAQ;AAAA,IACV,GAEM,cAAc;AAAA,MAClB,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAUA,IAAM,QAID,CAAC,EAAE,UAAU,OAAO,MAAM,UAAU,MAAM;AAC7C,UAAMC,gBAAeF,iBAAgB,KAAK,GACpCG,eAAcF,gBAAe,IAAI;AAEvC,aACE,mDAAC;AAAA,QAAI,WAAW,SAASC,iBAAgBC,gBAAe,aAAa;AAAA,QAClE;AAAA,SADH;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,IAEJ,GAEO,gBAAQ;AAAA;AAAA;;;ACtBA,SAAR,cACL,MACA,SAAqB,QACrB,QAIA;AACA,MAAM,EAAE,UAAU,YAAY,SAAS,MAAM,IAAI,gBAG/C,GAEI,iBAAa,uBAAO,iCAAQ,OAAO,GACnC,mBAAmB,oBAAoB,GACvC,eAAe,gBAAgB;AAuDrC,SAAO,KArDI;AAAA,IACT,OAAO,SAAe;AACpB,iBAAW,EAAI;AAEf,UAAI;AACF,YAAM,UAAU,KAAK,UAAU,IAAI,GAC7B,gBAAgB,MAAM,iBAAiB,GACvC,YAAY,aAAa;AAE/B,QAAK,WAAW,YACd,WAAW,UAAU,CAAC,IAKpB,kBACF,WAAW,QAAQ,6BAA6B,gBAG9C,cACF,WAAW,QAAQ,qBAAqB;AAG1C,YAAM,OAAO,MAAM,oBAA0B;AAAA,UAC3C,KAAK;AAAA,UACL;AAAA,UACA;AAAA,UACA,SAAS,WAAW;AAAA,QACtB,CAAC;AAED,uBAAQ,IAAI,GAEL,QAAQ,QAAQ,IAAI;AAAA,MAC7B,SAAS,OAAP;AACA,YAAM,UACJ,iBAAiB,QAAQ,MAAM,UAAU;AAE3C,wBAAS,OAAO,GAET,QAAQ,OAAO,KAAK;AAAA,MAC7B;AAAA,IACF;AAAA,IACA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF,GAEY,KAAK;AACnB;AAEA,eAAe,oBAAoC,QAMhD;AACD,MAAM,EAAE,KAAK,QAAQ,SAAS,UAAAC,YAAU,QAAQ,IAAI,QAE9C,UAAuB;AAAA,IAC3B;AAAA,IACA,UAAAA;AAAA,IACA,SAAS;AAAA,MACP,QAAQ;AAAA,MACR,gBAAgB;AAAA,MAChB,GAAI,WAAW,CAAC;AAAA,IAClB;AAAA,EACF,GAGM,eADsC,CAAC,QAAQ,OAAO,QAAQ,EACzB,SAAS,MAAoB;AAExE,EAAI,WAAW,iBACb,QAAQ,OAAO;AAGjB,MAAI;AACF,QAAM,WAAW,MAAM,MAAM,KAAK,OAAO;AAEzC,WAAI,SAAS,cACX,OAAO,SAAS,OAAO,SAAS,KAEzB,QAAQ,QAAQ,KAGrB,SAAS,KACH,MAAM,SAAS,KAAK,IAGvB,QAAQ,OAAO,SAAS,UAAU;AAAA,EAC3C,SAAS,GAAP;AACA,WAAO,QAAQ,OAAO,CAAC;AAAA,EACzB;AACF;AAEA,SAAS,sBAAsB;AAI7B,MAAM,UAAM,2BAAW,qCAAkB;AAEzC,aAAO,4BAAY,YAAY;AAC7B,QAAI;AAEF,UAAI,CAAC;AACH;AAGF,UAAM,eAAe,IACf,EAAE,SAAS,IAAI,MAAM,OAAO,uBAC5B,EAAE,MAAM,IAAI,MAAM,SAAS,KAAK,YAAY;AAElD,aAAO;AAAA,IACT,QAAE;AACA;AAAA,IACF;AAAA,EACF,GAAG,CAAC,GAAG,CAAC;AACV;AA3JA,IAAAC,gBACAC,oBAKM,2BACA,mBAPN;AAAA;AAAA;AAAA,IAAAD,iBAAgD,kBAChDC,qBAAmC;AAEnC;AACA;AAEA,IAAM,4BAA4B,uBAC5B,oBAAoB;AAAA;AAAA;;;ACL1B,SAAS,aACP,OAGA;AACA,SACE,mDAAC;AAAA,IAAI,WAAW,iBAAiB,MAAM,aAAa;AAAA,IAClD;AAAA,yDAAC;AAAA,QAAc,WAAW;AAAA,SAA1B;AAAA;AAAA;AAAA;AAAA,aAAuD;AAAA,MACvD,mDAAC;AAAA,QAAgB,WAAW;AAAA,SAA5B;AAAA;AAAA;AAAA;AAAA,aAA4D;AAAA;AAAA,KAF9D;AAAA;AAAA;AAAA;AAAA,SAGA;AAEJ;AAbA,IAAAC,kBAAA,wBAeO,sBAfP;AAAA;AAAA;AAAA,IAAAA,mBAA+C,wCAA/C;AAeA,IAAO,uBAAQ;AAAA;AAAA;;;ACAf,SAAS,QAAe;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAII;AACF,SACE,mDAAC;AAAA,IAAQ;AAAA,IAAc,UAAU;AAAA,IAC/B,6DAAC;AAAA,MAAI,WAAU;AAAA,MACb;AAAA,2DAAC,uBAAQ,QAAR;AAAA,UACC,WAAS;AAAA,UACT,WAAW,CAAC,EAAE,KAAK,MACV,iBAAiB,OAAO,sBAAsB;AAAA,UAGvD;AAAA,+DAAC;AAAA,cAAG,WAAW;AAAA,cACZ,WAAC,EAAE,MAAM,MAEN,mDAAC;AAAA,gBAAK,WAAU;AAAA,gBACd,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAuB;AAAA,iBADzB;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,eALN;AAAA;AAAA;AAAA;AAAA,mBAQA;AAAA,YAEA,mDAAC;AAAA,cAAK,WAAU;AAAA,cACd,6DAAC;AAAA,gBAAa,eAAY;AAAA,iBAA1B;AAAA;AAAA;AAAA;AAAA,qBAAiC;AAAA,eADnC;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA;AAAA,WAlBF;AAAA;AAAA;AAAA;AAAA,eAmBA;AAAA,QAEA,mDAAC;AAAA,UACC,IAAI;AAAA,UACJ,OAAM;AAAA,UACN,WAAU;AAAA,UACV,SAAQ;AAAA,UAER,6DAAC,uBAAQ,SAAR;AAAA,YAAgB,WAAU;AAAA,YACxB;AAAA,aADH;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,WARF;AAAA;AAAA;AAAA;AAAA,eASA;AAAA;AAAA,OA/BF;AAAA;AAAA;AAAA;AAAA,WAgCA;AAAA,KAjCF;AAAA;AAAA;AAAA;AAAA,SAkCA;AAEJ;AA9DA,IACAC,gBACAC,wBAEAD,gBAJA,wBAgEO,iBAhEP;AAAA;AAAA;AACA,IAAAA,iBAAyB,kBACzBC,yBAAsB,0BAEtBD,iBAAoC;AACpC;AACA;AANA;AAgEA,IAAO,kBAAQ;AAAA;AAAA;;;AChEf,IAAAE,gBACAC,wBACAC,yBAFA,wBAYM,eAqCC,uBAjDP;AAAA;AAAA;AAAA,IAAAF,iBAAwB,8BACxBC,yBAAsB,0BACtBC,0BAA4B;AAE5B;AAJA,+DAYM,gBAED,CAAC,EAAE,OAAO,MAEX,mDAAC,uBAAQ,QAAR;AAAA,MACC,WAAW,CAAC,EAAE,QAAQ,SAAS,MAC7B,GAAG,WAAW,0BAA0B,8BACtC,SAAS,wBAAwB;AAAA,MAGrC,OAAO;AAAA,MAEN,WAAC,EAAE,SAAS,MACX,mDAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC;AAAA,YAAI,WAAS,kBAAkB,OAAO;AAAA,YACrC;AAAA,iEAAC;AAAA,gBAAK,WAAW;AAAA,gBACf,6DAAC;AAAA,kBAAM,SAAS,OAAO;AAAA,mBAAvB;AAAA;AAAA;AAAA;AAAA,uBAA8B;AAAA,iBADhC;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cAEA,mDAAC;AAAA,gBAAG,WAAW;AAAA,gBACb,6DAAC;AAAA,kBAAK,WAAW;AAAA,kBACf,6DAAC,wBAAAC,SAAA;AAAA,oBAAgB,WAAU;AAAA,oBAAU,eAAY;AAAA,qBAAjD;AAAA;AAAA;AAAA;AAAA,yBAAwD;AAAA,mBAD1D;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,iBAUA;AAAA,UAEA,mDAAC;AAAA,YAAG,WAAW,OAAO;AAAA,YACpB,6DAAC;AAAA,cAAI,WAAW;AAAA,cACd,6DAAC;AAAA,gBAAM,SAAS,OAAO;AAAA,iBAAvB;AAAA;AAAA;AAAA;AAAA,qBAAoC;AAAA,eADtC;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA;AAAA,SAjBF;AAAA;AAAA;AAAA;AAAA,aAkBA;AAAA,OA3BJ;AAAA;AAAA;AAAA;AAAA,WA6BA,GAIG,wBAAQ;AAAA;AAAA;;;ACjDf,IAkBM,OAMA,OAMA,QAMA,OAEC,eAtCP;AAAA;AAAA;AACA;AAiBA,IAAM,QAAQ;AAAA,MACZ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,OAAO,wBAAe;AAAA,IACxB,GAEM,QAAQ;AAAA,MACZ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,OAAO,wBAAe;AAAA,IACxB,GAEM,SAAS;AAAA,MACb,OAAO;AAAA,MACP,aAAa;AAAA,MACb,OAAO,wBAAe;AAAA,IACxB,GAEM,QAA8C,CAAC,OAAO,OAAO,MAAM,GAElE,gBAAQ;AAAA;AAAA;;;ACAf,SAAS,qBAAqB,aAAyC;AACrE,MAAM,aAAa,cAAM;AAEzB,SACE,cAAM,KAAK,CAAC,SACH,KAAK,UAAU,WACvB,KAAK;AAEV;AA9CA,4BAQM,wBAwCC,gCAhDP;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AANA,+DAQM,yBAGD,CAAC,EAAE,OAAO,aAAa,SAAS,MAAM;AACzC,UAAM,eAAe,qBAAqB,WAAW;AAErD,aACE,mDAAC;AAAA,QACC,OAAO;AAAA,QACP,UAAU,CAAC,SAAS;AAClB,sBAAY,SAAS,KAAK,KAAK;AAAA,QACjC;AAAA,QACA,IAAI;AAAA,QAEH,wBAAM,IAAI,CAAC,SAER,mDAAC;AAAA,UAEC,WAAW,CAAC,oBACV,cAAc,iBAAiB,KAAK,KAAK;AAAA,UAG3C,6DAAC;AAAA,YAAc,QAAQ;AAAA,aAAvB;AAAA;AAAA;AAAA;AAAA,iBAA6B;AAAA,WALxB,KAAK,OADZ;AAAA;AAAA;AAAA;AAAA,eAOA,CAEH;AAAA,SAlBH;AAAA;AAAA;AAAA;AAAA,aAmBA;AAAA,IAEJ;AAYA,IAAO,iCAAQ;AAAA;AAAA;;;AC9CA,SAAR,YAA6B;AAFpC;AAGE,MAAM,UAAU,eAAe;AAE/B,UAAO,wCAAS,SAAT,mBAAe;AACxB;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAC,wBAAA,wBAMMC,cAOA,WAcC,mBA3BP;AAAA;AAAA;AAAA,IAAAD,yBAAsB;AAEtB;AACA;AACA;AAJA,+DAMMC,eAAa;AAAA,MACjB,CAAC,wBAAe,QACd;AAAA,MACF,CAAC,wBAAe,QAAQ;AAAA,MACxB,CAAC,wBAAe,SAAS;AAAA,IAC3B,GAEM,YAED,CAAC,EAAE,KAAK,MAAM;AACjB,UAAM,OAAO,cAAM,KAAK,CAAC,SAAS,KAAK,UAAU,IAAI;AAErD,aACE,mDAAC;AAAA,QAAM,OAAO;AAAA,QAAU,MAAM;AAAA,QAAS,WAAWA,aAAW;AAAA,QAC3D,6DAAC;AAAA,UAAK,WAAS;AAAA,UACb,6DAAC;AAAA,YAAM,SAAS,6BAAM;AAAA,aAAtB;AAAA;AAAA;AAAA;AAAA,iBAA6B;AAAA,WAD/B;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,IAEJ,GAEO,oBAAQ;AAAA;AAAA;;;ACdA,SAAR,qBAAsC,gBAAwB;AACnE,MAAM,gBAAY,iCAAa,GAEzBC,WAAM;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,aAAO,wCAAoBA,MAAK,EAAE,SAAS,KAAK,CAAC;AACnD;AAvBA,IAAAC,oBAEAC,oBAFA;AAAA;AAAA;AAAA,IAAAD,qBAAkD,sBAElDC,qBAAoB;AAEpB;AAAA;AAAA;;;ACJA,IAAAC,6BAAA,wBAEM,uBAUC,+BAZP;AAAA;AAAA;AAAA,IAAAA,8BAA8B,gCAA9B,2DAEM,wBAAmC,CAAC,EAAE,SAAS,MAEjD,mDAAC;AAAA,MAAI,WAAW;AAAA,MACd;AAAA,2DAAC;AAAA,UAAc,OAAO;AAAA,UAAgB,MAAM;AAAA,WAA5C;AAAA;AAAA;AAAA;AAAA,eAAgD;AAAA,QAEhD,mDAAC;AAAA,UAAK,WAAW;AAAA,UAAY;AAAA,WAA7B;AAAA;AAAA;AAAA;AAAA,eAAsC;AAAA;AAAA,OAHxC;AAAA;AAAA;AAAA;AAAA,WAIA,GAIG,gCAAQ;AAAA;AAAA;;;ACRf,SAAS,mCAAmC;AAC1C,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AATA,IAWO,6CAXP;AAAA;AAAA;AAAA;AAWA,IAAO,8CAAQ;AAAA;AAAA;;;ACXf,IAAAC,gBACAC,wBACAC,yBAFA,wBAWM,oCAiEC,4CA5EP;AAAA;AAAA;AAAA,IAAAF,iBAA4B,kBAC5BC,yBAAsC,0BACtCC,0BAAoB;AAEpB;AAGA;AACA;AACA;AATA,+DAWM,qCAID,CAAC,EAAE,QAAQ,WAAW,OAAO,MAAM;AACtC,UAAM,0BAA0B,OAAO,eAAe,OAAO,OACvD,iBAAiB,OAAO,KACxB,EAAE,GAAAC,GAAE,QAAI,uCAAe,GACvB,UAAU,mDAAC;AAAA,QAAM,SAAQ;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA,aAAgD,GAE1D,CAAC,+BAA+B,kCAAkC,IACtE,4CAAiC,GAE7B,UAAU,mCAAmC,SAE7C,iCAA6B,4BAAY,YAAY;AACzD,YAAM,UAAU,8BAA8B;AAAA,UAC5C,QAAQ;AAAA,QACV,CAAC;AAED,cAAM,wBAAAC,QAAQ,QAAQ,SAAS;AAAA,UAC7B,SAASD,GAAU,oCAAoC;AAAA,UACvD,SAASA,GAAU,uCAAuC;AAAA,UAC1D,OAAOA,GAAU,qCAAqC;AAAA,QACxD,CAAC,GAED,UAAU,EAAK;AAAA,MACjB,GAAG,CAAC,WAAWA,IAAG,gBAAgB,6BAA6B,CAAC;AAEhE,aACE,mDAAC;AAAA,QAAM;AAAA,QAAkB;AAAA,QAAgB;AAAA,QACvC,6DAAC;AAAA,UAAI,WAAW;AAAA,UACd;AAAA,+DAAC;AAAA,cACC,6DAAC;AAAA,gBACC,SAAS;AAAA,gBACT,QAAQ;AAAA,kBACN,QAAQ;AAAA,gBACV;AAAA,gBACA,YAAY,EAAE,GAAG,mDAAC,SAAD;AAAA;AAAA;AAAA;AAAA,uBAAG,EAAG;AAAA,iBALzB;AAAA;AAAA;AAAA;AAAA,qBAMA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA,mBAQA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAoD;AAAA,eADtD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEA,mDAAC;AAAA,cACC,OAAK;AAAA,cACL,WAAS;AAAA,cACT,OAAO;AAAA,cACP,SAAS;AAAA,cACT;AAAA,cAEA,6DAAC;AAAA,gBACC,WAAW;AAAA,gBACX,UAAU,mDAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAkD;AAAA,gBAE5D,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAsD;AAAA,iBAJxD;AAAA;AAAA;AAAA;AAAA,qBAKA;AAAA,eAZF;AAAA;AAAA;AAAA;AAAA,mBAaA;AAAA;AAAA,WA5BF;AAAA;AAAA;AAAA;AAAA,eA6BA;AAAA,SA9BF;AAAA;AAAA;AAAA;AAAA,aA+BA;AAAA,IAEJ,GAEO,6CAAQ;AAAA;AAAA;;;ACDf,SAAS,eAAe;AAAA,EACtB;AACF,GAA6C;AAC3C,SACE,mDAAC,oBAAK,QAAL;AAAA,IACC,WAAS;AAAA,IACT,IAAI;AAAA,IACJ;AAAA,IAEA,6DAAC;AAAA,MAAW,OAAO;AAAA,MAA6B,IAAI;AAAA,MAClD,6DAAC;AAAA,QAAqB,WAAW;AAAA,SAAjC;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,OAD1C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;AAzFA,IACAE,gBACAC,wBAEAC,kBAJA,wBAeM,mCA4EC,2CA3FP;AAAA;AAAA;AACA,IAAAF,iBAAqB,8BACrBC,yBAAsB,0BAEtBC,mBAKO;AAEP;AACA;AACA;AAbA,+DAeM,oCAMD,CAAC,UAAU;AACd,UAAMC,UAAS,mDAAC;AAAA,QAAe,UAAU,MAAM;AAAA,SAAhC;AAAA;AAAA;AAAA;AAAA,aAA0C;AAEzD,aACE,mDAAC;AAAA,QACC,QAAQA;AAAA,QACR,OAAO;AAAA,UACL,mDAAC,iBAAS,MAAT;AAAA,YAEC,WAAS;AAAA,YACT,SAAS,MAAM;AAAA,YAEf,6DAAC;AAAA,cAAK,WAAW;AAAA,cACf;AAAA,mEAAC;AAAA,kBAA0B,WAAW;AAAA,mBAAtC;AAAA;AAAA;AAAA;AAAA,uBAA6C;AAAA,gBAC7C,mDAAC;AAAA,kBACC,6DAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAA2C;AAAA,mBAD7C;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,aATK,GADP;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,UACA,mDAAC;AAAA,YAAW,WAAW,MAAM;AAAA,YAC3B,6DAAC,iBAAS,MAAT;AAAA,cACC,WAAS;AAAA,cACT,SAAS,MAAM;AAAA,cAEf,6DAAC;AAAA,gBAAK,WAAW;AAAA,gBACf;AAAA,qEAAC;AAAA,oBAAe,WAAW;AAAA,qBAA3B;AAAA;AAAA;AAAA;AAAA,yBAAkC;AAAA,kBAClC,mDAAC;AAAA,oBACC,6DAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAAkD;AAAA,qBADpD;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA,qBAKA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA,mBAUA;AAAA,aAXO,GAAT;AAAA;AAAA;AAAA;AAAA,iBAYA;AAAA,UACA,mDAAC,iBAAS,SAAT,IAAsB,WAAvB;AAAA;AAAA;AAAA;AAAA,iBAAkC;AAAA,UAClC,mDAAC,iBAAS,MAAT;AAAA,YAEC,WAAS;AAAA,YACT,SAAS,MAAM;AAAA,YAEf,6DAAC;AAAA,cACC,WACE;AAAA,cAGF;AAAA,mEAAC;AAAA,kBAAU,WAAW;AAAA,mBAAtB;AAAA;AAAA;AAAA;AAAA,uBAA6B;AAAA,gBAC7B,mDAAC;AAAA,kBACC,6DAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAA6C;AAAA,mBAD/C;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA;AAAA,eARF;AAAA;AAAA;AAAA;AAAA,mBASA;AAAA,aAbK,GADP;AAAA;AAAA;AAAA;AAAA,iBAeA;AAAA,QACF;AAAA,SA7CF;AAAA;AAAA;AAAA;AAAA,aA8CA;AAAA,IAEJ;AAkBA,IAAO,4CAAQ;AAAA;AAAA;;;ACzFf,SAAS,uBAAuB,UAAkB;AAChD,MAAM,OAAO,kCAAkC;AAE/C,SAAO,cAAoB,MAAM,QAAQ;AAC3C;AANA,IAQO,2BARP;AAAA;AAAA;AAAA;AAQA,IAAO,4BAAQ;AAAA;AAAA;;;ACRf,IAAAC,gBACAC,wBACAC,iBACAC,0BAHA,wBAWM,+BAwCC,uCAnDP;AAAA;AAAA;AAAA,IAAAH,iBAA4B,kBAC5BC,yBAAsB,0BACtBC,kBAAkB,oBAClBC,2BAAoB;AACpB;AAEA;AACA;AAPA,+DAWM,gCAID,CAAC,EAAE,QAAQ,WAAW,OAAO,MAAM;AACtC,UAAM,CAAC,qBAAqB,EAAE,QAAQ,CAAC,IAAI,0BAAuB,OAAO,GAAG,GAEtE,oBAAgB,4BAAY,YAAY;AAC5C,cAAM,yBAAAC,QAAQ,QAAQ,oBAAoB,GAAG;AAAA,UAC3C,aAAS,mBAAU,4BAA4B;AAAA,UAC/C,WAAO,mBAAU,0BAA0B;AAAA,UAC3C,aAAS,mBAAU,4BAA4B;AAAA,QACjD,CAAC,GAED,UAAU,EAAK;AAAA,MACjB,GAAG,CAAC,qBAAqB,SAAS,CAAC;AAInC,aACE,mDAAC;AAAA,QAAM,SAHO,mDAAC;AAAA,UAAM,SAAQ;AAAA,WAAf;AAAA;AAAA;AAAA;AAAA,eAAuD;AAAA,QAG5C;AAAA,QAAgB;AAAA,QACvC,6DAAC;AAAA,UAAI,WAAW;AAAA,UACd;AAAA,+DAAC;AAAA,cACC,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAoD;AAAA,eADtD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEA,mDAAC;AAAA,cACC,OAAK;AAAA,cACL,WAAS;AAAA,cACT,OAAO;AAAA,cACP,SAAS;AAAA,cACT;AAAA,cAEA,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAwD;AAAA,eAP1D;AAAA;AAAA;AAAA;AAAA,mBAQA;AAAA;AAAA,WAbF;AAAA;AAAA;AAAA;AAAA,eAcA;AAAA,SAfF;AAAA;AAAA;AAAA;AAAA,aAgBA;AAAA,IAEJ,GAEO,wCAAQ;AAAA;AAAA;;;AChDf,SAAS,uBAAuB,UAAkB;AAChD,SAAO;AAAA,IACL,kCAAkC;AAAA,IAClC;AAAA,EACF;AACF;AARA,IAUO,gCAVP;AAAA;AAAA;AAAA;AAUA,IAAO,iCAAQ;AAAA;AAAA;;;ACVf,IAAAC,gBACAC,0BACAC,wBAFA,wBAaM,uBA4DC,+BAzEP;AAAA;AAAA;AAAA,IAAAF,iBAAsC,kBACtCC,2BAAoB,qCACpBC,yBAAsC;AAEtC;AACA;AACA;AAGA;AACA;AAVA,+DAaM,wBAKD,CAAC,EAAE,QAAQ,WAAW,YAAY,OAAO,MAAM;AAClD,UAAM,EAAE,GAAAC,GAAE,QAAI,uCAAe,cAAc,GACrC,CAAC,MAAM,OAAO,QAAI,yBAAyB,UAAU,GACrD,CAAC,cAAc,KAAK,IAAI,+BAAuB,OAAO,GAAG,GAEzD,oBAAgB,4BAAY,YAAY;AAC5C,YAAI,SAAS,YAAY;AACvB,cAAM,UAAUA,GAAU,0BAA0B;AAEpD,mCAAAC,QAAQ,MAAM,SAAS;AAAA,YACrB,WAAW;AAAA,UACb,CAAC;AAED;AAAA,QACF;AAEA,YAAM,UAAU,aAAa,EAAE,KAAK,CAAC;AAErC,cAAM,yBAAAA,QAAQ,QAAQ,SAAS;AAAA,UAC7B,SAASD,GAAU,0BAA0B;AAAA,UAC7C,SAASA,GAAU,0BAA0B;AAAA,UAC7C,OAAOA,GAAU,0BAA0B;AAAA,QAC7C,CAAC,GAED,UAAU,EAAK;AAAA,MACjB,GAAG,CAAC,MAAM,YAAY,cAAcA,IAAG,SAAS,CAAC;AAMjD,aACE,mDAAC;AAAA,QAAM,SAJP,mDAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAA6D;AAAA,QAIpC;AAAA,QAAgB;AAAA,QACvC,6DAAC;AAAA,UAAI,WAAW;AAAA,UACd;AAAA,+DAAC;AAAA,cAAI,WAAW;AAAA,cACd;AAAA,mEAAC;AAAA,kBACC,6DAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAAqD;AAAA,mBADvD;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBAEA,mDAAC;AAAA,kBAAuB,OAAO;AAAA,kBAAY,UAAU;AAAA,mBAArD;AAAA;AAAA;AAAA;AAAA,uBAA8D;AAAA;AAAA,eALhE;AAAA;AAAA;AAAA;AAAA,mBAMA;AAAA,YAEA,mDAAC;AAAA,cACC,WAAS;AAAA,cACT,OAAK;AAAA,cACL,SAAS,MAAM;AAAA,cACf,SAAS;AAAA,cAET,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAsD;AAAA,eANxD;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA;AAAA,WAhBF;AAAA;AAAA;AAAA;AAAA,eAiBA;AAAA,SAlBF;AAAA;AAAA;AAAA;AAAA,aAmBA;AAAA,IAEJ,GAEO,gCAAQ;AAAA;AAAA;;;ACzEf,IAAAE,iBAAA,wBAWM,qCA8CC,6CAzDP;AAAA;AAAA;AAAA,IAAAA,kBAAyB;AAGzB;AACA;AAEA;AACA;AACA;AACA;AATA,+DAWM,sCAKD,CAAC,UAAU;AACd,UAAM,CAAC,gBAAgB,iBAAiB,QAAI,0BAAS,EAAK,GACpD,CAAC,gBAAgB,iBAAiB,QAAI,0BAAS,EAAK,GACpD,CAAC,yBAAyB,0BAA0B,QAAI,0BAAS,EAAK,GAEtE,UAAU,MAAM,oBAAoB,wBAAe;AAEzD,aACE;AAAA,QACE;AAAA,6DAAC;AAAA,YACC,UAAU,MAAM;AAAA,YAChB;AAAA,YACA,kBAAkB,MAAM,kBAAkB,EAAI;AAAA,YAC9C,sBAAsB,MAAM,kBAAkB,EAAI;AAAA,YAClD,6BAA6B,MAAM,2BAA2B,EAAI;AAAA,aALpE;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,UAEA,mDAAC;AAAA,YACC,WAAW;AAAA,YACX,QAAQ;AAAA,YACR,QAAQ,MAAM;AAAA,aAHhB;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UAEA,mDAAC;AAAA,YACC,WAAW;AAAA,YACX,QAAQ;AAAA,YACR,QAAQ,MAAM;AAAA,YACd,YAAY,MAAM;AAAA,aAJpB;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,UAEA,mDAAC;AAAA,YAAG,WAAW;AAAA,YACb,6DAAC;AAAA,cACC,WAAW;AAAA,cACX,QAAQ;AAAA,cACR,QAAQ,MAAM;AAAA,eAHhB;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA;AAAA,SA5BF;AAAA;AAAA;AAAA;AAAA,aA6BA;AAAA,IAEJ,GAEO,8CAAQ;AAAA;AAAA;;;ACzDf;AAAA;AAAA;AAAA;AAiBA,SAAS,wBAAwB;AAAA,EAC/B;AAAA,EACA;AACF,GAGI;AACF,MAAM,SAAS,UAAU,GAInB;AAAA,IACJ,MAAM;AAAA,IACN;AAAA,IACA;AAAA,EACF,IAAI,qBAAqB,cAAc;AAIvC,MAFkB,WAAW;AAG3B,WACE,mDAAC;AAAA,MACC,6DAAC;AAAA,QAAM,SAAS;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA,aAA+C;AAAA,OADjD;AAAA;AAAA;AAAA;AAAA,WAEA;AAIJ,MAAI;AACF,WACE,mDAAC;AAAA,MAAM,MAAM;AAAA,MACX,6DAAC;AAAA,QAAM,SAAS;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA,aAAiD;AAAA,OADnD;AAAA;AAAA;AAAA;AAAA,WAEA;AAIJ,MAAM,UAAU,iBAAiB,YAAY,GACvC,cAAc,QAAQ,KAAK,CAAC,WAAW,OAAO,OAAO,MAAM;AAEjE,MAAI,CAAC;AACH,WAAO;AAGT,MAAM,WAAW,YAAY;AAE7B,SACE,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd,6DAAC;AAAA,MAAI,WAAU;AAAA,MACZ,kBAAQ,IAAI,CAAC,EAAE,MAAM,IAAI,SAAS,MAAM;AACvC,YAAM,WAAW,mDAAiB,KAAK,CAACC,cAC/BA,UAAS,QAAQ;AAG1B,YAAI,CAAC;AACH,iBAAO;AAGT,YAAM,cAAc,SAAS,cACzB,SAAS,cACT,SAAS,OAEP,gBAAgB,WAAW,SAAS,KAKpC,sBAAsB,cAAc,UAAU,IAAI,GAClD,MAAM,GAAG,SAAS,OAAO;AAE/B,eACE,mDAAC;AAAA,UAEC,WAAS;AAAA,UACT,WACE;AAAA,UAIF;AAAA,+DAAC;AAAA,cAAI,WAAW;AAAA,cACd;AAAA,mEAAC;AAAA,kBAAc,MAAM;AAAA,mBAArB;AAAA;AAAA;AAAA;AAAA,uBAA+B;AAAA,gBAE/B,mDAAC;AAAA,kBAAI,WAAW;AAAA,kBAA2B;AAAA,mBAA3C;AAAA;AAAA;AAAA;AAAA,uBAAuD;AAAA,gBAEvD,mDAAC;AAAA,kBAAG,WAAW;AAAA,kBACb,6DAAC;AAAA,oBACC,6DAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAA8C;AAAA,qBADhD;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA,mBAHF;AAAA;AAAA;AAAA;AAAA,uBAIA;AAAA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA,mBAUA;AAAA,YAEA,mDAAC;AAAA,cAAI,WAAW;AAAA,cACd;AAAA,mEAAC;AAAA,kBACC,6DAAC;AAAA,oBAAU;AAAA,qBAAX;AAAA;AAAA;AAAA;AAAA,yBAAuB;AAAA,mBADzB;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBAEA,mDAAC;AAAA,kBACC,UAAU,CAAC;AAAA,kBACX,cAAc;AAAA,kBACd,kBAAkB;AAAA,kBAClB,iBAAiB;AAAA,mBAJnB;AAAA;AAAA;AAAA;AAAA,uBAKA;AAAA;AAAA,eAVF;AAAA;AAAA;AAAA;AAAA,mBAWA;AAAA;AAAA,WA9BK,KADP;AAAA;AAAA;AAAA;AAAA,eAgCA;AAAA,MAEJ,CAAC;AAAA,OAzDH;AAAA;AAAA;AAAA;AAAA,WA0DA;AAAA,KA3DF;AAAA;AAAA;AAAA;AAAA,SA4DA;AAEJ;AAQA,SAAS,iBAAiB,cAAoC;AAG5D,SAFmB,OAAO,KAAK,aAAa,OAAO,EAGhD,IAAI,CAAC,cAGG;AAAA,IACL,GAHa,aAAa,QAAQ;AAAA,IAIlC,IAAI;AAAA,EACN,EACD,EACA,KAAK,CAAC,MAAM,SACJ,KAAK,OAAO,KAAK,OAAO,IAAI,EACpC;AACL;AAnJA,IAAAC,wBAAA,wBA8HO,iCA9HP;AAAA;AAAA;AAAA,IAAAA,yBAAsB;AAEtB;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAdA;AA8HA,IAAO,kCAAQ;AAAA;AAAA;;;AC/Gf,SAAS,uBAAuB,gBAAwB;AACtD,MAAM,gBAAY,iCAAa,GAEzB,oBAAgB;AAAA,IACpB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,aAAO,+CAA2B,eAAe;AAAA,IAC/C,SAAS;AAAA,EACX,CAAC;AACH;AA5BA,IACAC,oBACAC,oBA4BO,mCA9BP;AAAA;AAAA;AACA,IAAAD,qBAA2B,+BAC3BC,qBAAyD;AAIzD;AAwBA,IAAO,oCAAQ;AAAA;AAAA;;;ACrBf,SAAS,kBAAkB;AACzB,MAAM,gBAAY,iCAAa;AAE/B,aAAO;AAAA,IACL,CAAC,gBAAwB,aAAqB;AAC5C,UAAM,OAAO,oBAAoB,gBAAgB,QAAQ,GACnD,aAAS,wBAAI,WAAW,IAAI;AAElC,iBAAO,8BAAU,MAAM;AAAA,IACzB;AAAA,IACA,CAAC,SAAS;AAAA,EACZ;AACF;AAQA,SAAS,oBAAoB,gBAAwB,UAAkB;AACrE,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,EAAE,KAAK,GAAG;AACZ;AApCA,IAAAC,oBACAC,oBACAC,iBAoCO,2BAtCP;AAAA;AAAA;AAAA,IAAAF,qBAA6B,sBAC7BC,qBAA+B,+BAC/BC,kBAA4B;AAE5B;AAkCA,IAAO,4BAAQ;AAAA;AAAA;;;ACtCf,IAAAC,iBACAC,0BACAC,wBACAC,mBAHA,wBAYM,oBA8DC,4BA1EP;AAAA;AAAA;AAAA,IAAAH,kBAAsC,kBACtCC,2BAAoB,qCACpBC,yBAAsC,0BACtCC,oBAAsB;AAEtB;AAEA;AACA;AACA;AACA;AAVA,+DAYM,qBAID,CAAC,EAAE,UAAU,gBAAgB,YAAY,MAAM;AAClD,UAAM,CAAC,YAAY,aAAa,QAAI,0BAAS,EAAK,GAC5C,gBAAgB,0BAAgB,GAChC,EAAE,GAAAC,GAAE,QAAI,uCAAe,cAAc,GAErC,8BAA0B,6BAAY,YAAY;AACtD,YAAM,UAAU,cAAc,gBAAgB,QAAQ;AAEtD,cAAM,yBAAAC,QAAQ,QAAQ,SAAS;AAAA,UAC7B,SAASD,GAAU,4BAA4B;AAAA,UAC/C,OAAOA,GAAU,0BAA0B;AAAA,UAC3C,SAASA,GAAU,4BAA4B;AAAA,QACjD,CAAC,GAED,cAAc,EAAK;AAAA,MACrB,GAAG,CAAC,eAAe,UAAU,gBAAgBA,EAAC,CAAC;AAI/C,aACE;AAAA,QACE;AAAA,6DAAC;AAAA,YACC,WAAS;AAAA,YACT,OAAO;AAAA,YACP,SAAS,MAAM,cAAc,EAAI;AAAA,YAEjC,6DAAC,kBAAAE,SAAA;AAAA,cAAU,WAAW;AAAA,eAAtB;AAAA;AAAA;AAAA;AAAA,mBAA6B;AAAA,aAL/B;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,UAEA,mDAAC;AAAA,YAAG,WAAW;AAAA,YACb,6DAAC;AAAA,cAAM,SAbG,mDAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAyD;AAAA,cAa1C,QAAQ;AAAA,cAAY,WAAW;AAAA,cACtD,6DAAC;AAAA,gBAAI,WAAW;AAAA,gBACd;AAAA,qEAAC;AAAA,oBACC,6DAAC;AAAA,sBACC,SAAS;AAAA,sBACT,QAAQ,EAAE,OAAO,YAAY;AAAA,sBAC7B,YAAY,EAAE,GAAG,mDAAC,SAAD;AAAA;AAAA;AAAA;AAAA,6BAAG,EAAG;AAAA,uBAHzB;AAAA;AAAA;AAAA;AAAA,2BAIA;AAAA,qBALF;AAAA;AAAA;AAAA;AAAA,yBAMA;AAAA,kBAEA,mDAAC;AAAA,oBACC,6DAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAAoD;AAAA,qBADtD;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA,kBAEA,mDAAC;AAAA,oBACC,WAAS;AAAA,oBACT,OAAO;AAAA,oBACP,SAAS;AAAA,oBAET,6DAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAAwD;AAAA,qBAL1D;AAAA;AAAA;AAAA;AAAA,yBAMA;AAAA;AAAA,iBAnBF;AAAA;AAAA;AAAA;AAAA,qBAoBA;AAAA,eArBF;AAAA;AAAA;AAAA;AAAA,mBAsBA;AAAA,aAvBF;AAAA;AAAA;AAAA;AAAA,iBAwBA;AAAA;AAAA,SAjCF;AAAA;AAAA;AAAA;AAAA,aAkCA;AAAA,IAEJ,GAEO,6BAAQ;AAAA;AAAA;;;AC1Ef;AAAA;AAAA;AAAA;AAAA,IAAAC,wBAAA,wBAaM,gCAiEC,wCA9EP;AAAA;AAAA;AAAA,IAAAA,yBAAsB;AAEtB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAXA,+DAaM,iCAED,CAAC,EAAE,eAAe,MAAM;AAC3B,UAAM,EAAE,MAAM,SAAS,OAAO,IAAI,kCAAuB,cAAc;AAEvE,aAAI,WAAW,YAEX,mDAAC;AAAA,QACC,6DAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAAsD;AAAA,SADxD;AAAA;AAAA;AAAA;AAAA,aAEA,IAIA,WAAW,UAEX,mDAAC;AAAA,QAAM,MAAM;AAAA,QACX,6DAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAAwD;AAAA,SAD1D;AAAA;AAAA;AAAA;AAAA,aAEA,IAIC,QAAQ,SASX,mDAAC;AAAA,QAAI,WAAU;AAAA,QACZ,kBAAQ,IAAI,CAAC,EAAE,OAAO,MAAM,MAAM,GAAG,MAElC,mDAAC;AAAA,UAEC,WAAS;AAAA,UACT,aAAW;AAAA,UACX,WACE;AAAA,UAGF;AAAA,+DAAC;AAAA,cAAI,WAAW;AAAA,cACd;AAAA,mEAAC;AAAA,kBAAmB,MAAM;AAAA,mBAA1B;AAAA;AAAA;AAAA;AAAA,uBAAiC;AAAA,gBAEjC,mDAAC;AAAA,kBAAI,WAAW;AAAA,kBAA2B;AAAA,mBAA3C;AAAA;AAAA;AAAA;AAAA,uBAAiD;AAAA;AAAA,eAHnD;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,YAEA,mDAAC;AAAA,cAAI,WAAW;AAAA,cACd;AAAA,mEAAC;AAAA,kBAAU;AAAA,mBAAX;AAAA;AAAA;AAAA;AAAA,uBAAuB;AAAA,gBAEvB,mDAAC;AAAA,kBAAiB,WAAW;AAAA,kBAC3B,6DAAC;AAAA,oBACC,UAAU;AAAA,oBACV;AAAA,oBACA,aAAa;AAAA,qBAHf;AAAA;AAAA;AAAA;AAAA,yBAIA;AAAA,mBALF;AAAA;AAAA;AAAA;AAAA,uBAMA;AAAA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA,mBAUA;AAAA;AAAA,WAvBK,IADP;AAAA;AAAA;AAAA;AAAA,eAyBA,CAEH;AAAA,SA9BH;AAAA;AAAA;AAAA;AAAA,aA+BA,IAtCE,mDAAC;AAAA,QAAE,WAAW;AAAA,QACZ,6DAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAAiD;AAAA,SADnD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,IAsCN,GAEO,yCAAQ;AAAA;AAAA;;;AC9Ef;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA,oBAA4B,mBAE5B,cAAyB,4BACzB,eAA4B,6BAC5B,eAAkB,2BAClB,gBAAuC,6BACvCC,wBAAgC;;;ACLhC,IAAAC,oBAAwB,iBAExBC,kBAA+B,oBAC/BC,6BAAoB,wCACpB,uBAAiC;;;ACLjC,uBAAwB,iBACxB,4BAAoB,wCACpB,uBAA6B;;;ACF7B,SAAS,YAAY;AACnB,SAAO,OAAO,SAAW;AAC3B;AAEA,IAAO,qBAAQ;;;ACFf,IAAM,MAAM,mBAAU,IAAI,OAAO,MAAM,QAAQ,KACzC,iBAAiB,IAAI,kBAAkB,MAEvC,YAAY;AAAA,EAChB,kBAAkB;AAAA,EAClB,oBAAoB,CAAC,cAAc;AAAA,EACnC,WAAW;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,OAAO,EAAE,aAAa,GAAM;AAC9B,GAEO,yBAAQ;;;AFdf,IAAM,WAAW,IAAI,kCAAa;AAAA,EAChC,WAAW;AAAA,IACT,oBAAoB,uBAAe;AAAA,IACnC,kBAAkB,uBAAe;AAAA,EACnC;AAAA,EACA,SAAS;AAAA,IACP,GAAG;AAAA,IACH,SAAS;AAAA,MACP,cAAU,0BAAQ,sCAAsC;AAAA,IAC1D;AAAA,EACF;AAAA,EAEA,SAAS,0BAAAC;AACX,CAAC,GAEM,sBAAQ;;;ADZf,eAAe,qBAAqB,SAAkB,SAAuB;AAC3E,MAAM,eAAW,gCAAe,GAC1B,MAAM,MAAM,oBAAQ,UAAU,OAAO,GACrC,KAAK,CAAC,GAAG,uBAAK,WAAW,GAAG,oBAAQ,mBAAmB,OAAO,CAAC;AAErE,eAAM,SACH,IAAI,qCAAgB,EACpB,IAAI,2BAAAC,OAAO,EACX,KAAK;AAAA,IACJ,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA,SAAS;AAAA,MACP,cAAU,2BAAQ,sCAAsC;AAAA,IAC1D;AAAA,EACF,CAAC,GAEI;AACT;AAEA,IAAO,iCAAQ;;;AD7Bf,+DASM,cAAc;AAEpB,eAAO,cACL,SACA,oBACA,iBACA,cACA;AACA,MAAM,mBAAe,aAAAC,SAAM,QAAQ,QAAQ,IAAI,YAAY,CAAC,IACxD,eACA,gBAEE,OAAO,MAAM,+BAAqB,SAAS,YAAY;AAE7D,SAAO,IAAI,QAAQ,CAACC,UAAS,WAAW;AACtC,QAAI,WAAW,IAET,EAAE,MAAM,MAAM,QAAI;AAAA,MACtB,mDAAC;AAAA,QAAgB;AAAA,QACf,6DAAC;AAAA,UAAY,SAAS;AAAA,UAAc,KAAK,QAAQ;AAAA,WAAjD;AAAA;AAAA;AAAA;AAAA,eAAsD;AAAA,SADxD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA;AAAA,QACE,CAAC,eAAe,MAAM;AACpB,cAAM,OAAO,IAAI,0BAAY;AAE7B,0BAAgB,IAAI,gBAAgB,WAAW,GAE/CA;AAAA,YACE,IAAI,qBAAS,MAAM;AAAA,cACjB,SAAS;AAAA,cACT,QAAQ,WAAW,MAAM;AAAA,YAC3B,CAAC;AAAA,UACH,GAEA,KAAK,IAAI;AAAA,QACX;AAAA,QACA,cAAc,CAAC,QAAiB;AAC9B,iBAAO,GAAG;AAAA,QACZ;AAAA,QACA,SAAS,CAAC,UAAmB;AAC3B,qBAAW,IAEX,QAAQ,MAAM,KAAK;AAAA,QACrB;AAAA,MACF;AAAA,IACF;AAEA,eAAW,OAAO,WAAW;AAAA,EAC/B,CAAC;AACH;;;AK1DA;AAAA;AAAA;AAAA;AAAA,eAAAC;AAAA,EAAA;AAAA;;;;;;AAIA,IAAAC,eAAqB,4BAErBC,iBAQO,6BAEPC,qBAAuB;;;AChBvB,kBAAmC;;;ACEnC,SAAS,SAAS;AAChB,SAAO,mBAAU,IAAI,OAAO,MAAM,QAAQ;AAC5C;AAEA,IAAO,kBAAQ;;;ADHf,IAAMC,OAAM,gBAAO,KAAK,CAAC,GAEnB,gBAAgB;AAAA,EACpB,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,SAASA,KAAI;AAAA,IACb,UAAU;AAAA,IACV,eAAe;AAAA,IACf,cAAc;AAAA,IACd,UAAU;AAAA,IACV,kBAAkB;AAAA,IAClB,QAAQA,KAAI;AAAA,EACd;AAAA,EACA,MAAM;AAAA,IAGJ,uBAAuB;AAAA,IAGvB,WAAW;AAAA,MACT,eAAe;AAAA,MACf,aAAa;AAAA,MACb,WAAW;AAAA,MACX,OAAO,CAAC,8BAAkB;AAAA,IAC5B;AAAA,EACF;AAAA,EACA,cAAcA,KAAI;AAAA,EAClB,UAAUA,KAAI,aAAa;AAAA,EAC3B,YAAYA,KAAI,aAAa;AAAA,EAC7B,aAAaA,KAAI;AAAA,EACjB,OAAO;AAAA,IACL,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,iBAAiB;AAAA,IACjB,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,UAAU;AAAA,MACR,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,OAAO;AAAA,MACP,UAAU;AAAA,IACZ;AAAA,IACA,KAAK;AAAA,MACH,UAAU;AAAA,MACV,eAAe;AAAA,IACjB;AAAA,IACA,aAAa;AAAA,EACf;AAAA,EACA,iBAAiBA,KAAI;AAAA,EACrB,OAAO;AAAA,IACL,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,eAAe;AAAA,EACjB;AAAA,EACA,QAAQ;AAAA,IACN,KAAKA,KAAI;AAAA,EACX;AAAA,EACA,QAAQ;AAAA,IACN,OAAO;AAAA,MACL;AAAA,QACE,MAAM;AAAA,QACN,aAAa;AAAA,QACb,OAAO;AAAA,QACP,eAAe;AAAA,QACf,iBAAiB;AAAA,QACjB,UAAU;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,aAAa;AAAA,QACb,OAAO;AAAA,QACP,eAAe;AAAA,QACf,UAAU;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,aAAa;AAAA,QACb,OAAO;AAAA,QACP,eAAe;AAAA,QACf,UAAU;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,GAEO,wBAAQ;;;AE5Gf,+DAEM,OAAO,MAAM;AACjB,MAAM,UAAU,sBAAc,KAAK;AAEnC,MAAI,CAAC;AACH,UAAM,IAAI,MAAM,sDAAsD;AAGxE,MAAM,iBAAiB;AAAA,IACrB,MAAM,sBAAc,KAAK;AAAA,IACzB,KAAK;AAAA,IACL,MAAM,GAAG;AAAA,IACT,YAAY;AAAA,IACZ,SAAS;AAAA,EACX;AAEA,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QAAqB,gCAAc,KAAK;AAAA,SAA7B,SAAZ;AAAA;AAAA;AAAA;AAAA,aAA8C;AAAA,MAE9C,mDAAC;AAAA,QAAK,KAAI;AAAA,QAAgB,MAAK;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA,aAAoE;AAAA,MAEpE,mDAAC;AAAA,QACC,KAAI;AAAA,QACJ,OAAM;AAAA,QACN,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QACC,KAAI;AAAA,QACJ,MAAK;AAAA,QACL,OAAM;AAAA,QACN,MAAK;AAAA,SAJP;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MAEA,mDAAC;AAAA,QACC,KAAI;AAAA,QACJ,MAAK;AAAA,QACL,OAAM;AAAA,QACN,MAAK;AAAA,SAJP;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MAEA,mDAAC;AAAA,QAAK,KAAI;AAAA,QAAW,MAAK;AAAA,SAA1B;AAAA;AAAA;AAAA;AAAA,aAAoE;AAAA,MAEpE,mDAAC;AAAA,QACC,KAAI;AAAA,QACJ,MAAK;AAAA,QACL,OAAM;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QAAK,KAAI;AAAA,QAAe,MAAK;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA,aAAuD;AAAA,MAEvD,mDAAC;AAAA,QACC,KAAI;AAAA,QACJ,MAAK;AAAA,QACL,aAAa;AAAA,SAHf;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QAAK,MAAK;AAAA,QAA0B,SAAQ;AAAA,SAA7C;AAAA;AAAA;AAAA;AAAA,aAAuD;AAAA,MACvD,mDAAC;AAAA,QAAK,MAAK;AAAA,QAAuB,SAAQ;AAAA,SAA1C;AAAA;AAAA;AAAA;AAAA,aAAuE;AAAA,MAEvE,mDAAC;AAAA,QAAK,MAAK;AAAA,QAAc,SAAS,sBAAc,KAAK;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA,aAAiE;AAAA,MAEjE,mDAAC;AAAA,QACC,MAAK;AAAA,QACL,SAAS,sBAAc,KAAK;AAAA,SACxB,oBAHN;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QACC,UAAS;AAAA,QAET,SAAS,sBAAc,KAAK;AAAA,SADxB,YAFN;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QACC,UAAS;AAAA,QAET,SAAS,sBAAc,KAAK;AAAA,SADxB,kBAFN;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QAAK,UAAS;AAAA,QAAe,SAAS,sBAAc,KAAK;AAAA,SAA1D;AAAA;AAAA;AAAA;AAAA,aAAoE;AAAA,MACpE,mDAAC;AAAA,QAAK,UAAS;AAAA,QAAgB,SAAS,sBAAc,KAAK;AAAA,SAA3D;AAAA;AAAA;AAAA;AAAA,aAAqE;AAAA,MACrE,mDAAC;AAAA,QAAK,UAAS;AAAA,QAAe,SAAQ;AAAA,SAAtC;AAAA;AAAA;AAAA;AAAA,aAA4D;AAAA,MAE5D,mDAAC;AAAA,QACC,UAAS;AAAA,QACT,SAAS,sBAAc,KAAK;AAAA,SAF9B;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MAEA,mDAAC;AAAA,QACC,OAAK;AAAA,QAEL,MAAK;AAAA,QACL,yBAAyB,EAAE,QAAQ,KAAK,UAAU,cAAc,EAAE;AAAA,SAF9D,WAFN;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA;AAAA,KA9EF;AAAA;AAAA;AAAA;AAAA,SA+EA;AAEJ,GAEO,eAAQ;;;ACrGf,SAAS,gBAAgB,SAAkB;AACzC,SAAO,QAAQ,QAAQ,IAAI,QAAQ;AACrC;AAEA,IAAO,4BAAQ;;;ACFf,IAAM,oBAAoB;AAE1B,eAAsB,iBAAiB,SAAkB;AAEvD,UADe,MAAM,eAAe,GACtB,MAAM,0BAAgB,OAAO,CAAC;AAC9C;AAEA,eAAe,iBAAiB;AAC9B,MAAM,EAAE,aAAa,IAAI,MAAM,OAAO;AAEtC,SAAO,aAAa,mBAAmB;AAAA,IACrC,MAAM;AAAA,IACN,UAAU;AAAA,IACV,QAAQ,QAAQ,IAAI,aAAa;AAAA,IACjC,UAAU;AAAA,EACZ,CAAC;AACH;;;AClBA,IAAAC,gBAA8B,6BAC9BA,gBAAgE;;;ACAhE,IAAAC,gBAA8C,kBAD9C;AAGA,SAAS,WAAW,EAAE,SAAS,GAA4B;AACzD,MAAI,CAAC,SAAS,UAAU,QAAI,wBAAS,EAAK;AAE1C,sCAAU,MAAM;AACd,eAAW,EAAI;AAAA,EACjB,GAAG,CAAC,CAAC,GAEE,UAAU,mDAAC;AAAA,IAAS,UAAU;AAAA,IAAK;AAAA,KAAzB;AAAA;AAAA;AAAA;AAAA,SAAkC,IAAc;AACnE;AAEA,IAAO,qBAAQ;;;ADbf,+DAKM,iBAAa,oBAAK,MAAM,OAAO,wBAAwB,GAIvD,sBAAsB;AAE5B,SAAS,2BAA2B;AAClC,MAAMC,WAAM,yBAAyB,GAC/B,iBAAa,sBAAO,EAAK,GACzB,iBAAa,sBAAe,GAC5B,iBAAa,6BAAc,GAE3B,wBAAoB,2BAAY,MAC7B,OAAO,WAAW,MAAM;AAlBnC;AAmBM,eAAW,UAAU,KACrB,KAAAA,KAAI,YAAJ,WAAa;AAAA,EACf,GAAG,mBAAmB,GACrB,CAACA,IAAG,CAAC;AAER,sCAAU,MAAM;AAxBlB;AAyBI,QAAM,SAAS,WAAW,UAAU;AAIpC,IAFE,WAAW,SAAS,gBAAgB,WAAW,UAAU,cAGzD,WAAW,UAAU,kBAAkB,IAGrC,WACE,WAAW,WACb,OAAO,aAAa,WAAW,OAAO,GAGpC,WAAW,aACb,KAAAA,KAAI,YAAJ,WAAa,YACb,WAAW,UAAU;AAAA,EAG3B,GAAG,CAACA,MAAK,WAAW,MAAM,WAAW,OAAO,iBAAiB,CAAC,GAG5D,mDAAC;AAAA,IACC,6DAAC;AAAA,MACC,aAAa;AAAA,MACb,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,OAAO;AAAA,MACP,KAAKA;AAAA,OALP;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;AAEA,IAAO,mCAAQ;;;AE1Df,IAAAC,iBAA+C,6BAC/CC,wBAAsB;;;ACDtB,+DAAM,YAAuB,CAAC,EAAE,SAAS,MAChC,mDAAC;AAAA,EAAI,WAAU;AAAA,EAAa;AAAA,GAA5B;AAAA;AAAA;AAAA;AAAA,OAAqC,GAGvC,oBAAQ;;;ADAf;;;AEJA,+DAAM,OAAkB,CAAC,EAAE,SAAS,MAC3B,mDAAC;AAAA,EAAG,WAAU;AAAA,EAAQ;AAAA,GAAtB;AAAA;AAAA;AAAA;AAAA,OAA+B,GAGjC,eAAQ;;;AFEf;;;AGNA,+DAAM,aAAwB,CAAC,EAAE,SAAS,MACjC,mDAAC;AAAA,EAAG,WAAU;AAAA,EAAc;AAAA,GAA5B;AAAA;AAAA;AAAA;AAAA,OAAqC,GAGvC,qBAAQ;;;ACJf,IAAAC,iBAA4B,kBAC5B,mBAAwB,sBACxBC,kBAA+B;;;ACF/B,IAAAC,gBAAqB;;;ACArB,IAAAC,qBAAuB,gCAAvB,2DAEM,YAED,CAAC,EAAE,UAAU,MAEd,mDAAC;AAAA,EACC,OAAO;AAAA,EACP,eAAW,mBAAAC,SAAW,yBAAyB,SAAS;AAAA,EACxD,SAAQ;AAAA,EACR,MAAK;AAAA,EACL,OAAM;AAAA,EAEN;AAAA,uDAAC;AAAA,MACC,GAAE;AAAA,MACF,MAAK;AAAA,OAFP;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC;AAAA,MACC,6DAAC;AAAA,QACC,IAAG;AAAA,QACH,IAAG;AAAA,QACH,IAAG;AAAA,QACH,IAAG;AAAA,QACH,IAAG;AAAA,QACH,eAAc;AAAA,QAEd;AAAA,6DAAC;AAAA,YAAK,WAAU;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAA0B;AAAA,UAC1B,mDAAC;AAAA,YAAK,QAAO;AAAA,YAAW,WAAU;AAAA,aAAlC;AAAA;AAAA;AAAA;AAAA,iBAA4C;AAAA,UAC5C,mDAAC;AAAA,YAAK,QAAO;AAAA,YAAW,WAAU;AAAA,aAAlC;AAAA;AAAA;AAAA;AAAA,iBAA4C;AAAA,UAC5C,mDAAC;AAAA,YAAK,QAAO;AAAA,YAAW,WAAU;AAAA,aAAlC;AAAA;AAAA;AAAA;AAAA,iBAA4C;AAAA,UAC5C,mDAAC;AAAA,YAAK,QAAO;AAAA,YAAI,WAAU;AAAA,aAA3B;AAAA;AAAA;AAAA;AAAA,iBAAqC;AAAA;AAAA,SAZvC;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,OAdF;AAAA;AAAA;AAAA;AAAA,WAeA;AAAA;AAAA,GA1BF;AAAA;AAAA;AAAA;AAAA,OA2BA,GAIG,oBAAQ;;;ADrCf,+DAGM,OAAyD,CAAC;AAAA,EAC9D;AAAA,EACA;AACF,MAEI,mDAAC;AAAA,EAAK,IAAI,QAAQ;AAAA,EAChB,6DAAC;AAAA,IAAU;AAAA,KAAX;AAAA;AAAA;AAAA;AAAA,SAAiC;AAAA,GADnC;AAAA;AAAA;AAAA;AAAA,OAEA,GAIG,eAAQ;;;ADRf;AACA;;;AGPA,IAAAC,iBAAqB,8BACrB,mBAAsB;;;ACDtB,IAAAC,gBAAwB,6BACxBC,wBAAsB,0BACtBC,qBAAuB,gCAFvB,2DASM,qBAKD,CAAC,EAAE,MAAM,WAAW,KAAK,SAAS,MAAM;AAC3C,MAAM,QAAQ,KAAK;AAEnB,SACE,mDAAC;AAAA,IACC;AAAA,IACA,WAAW,CAAC,cACH,mBAAAC,SAAW,kBAAkB,WAAW;AAAA,MAC5C,sBAAyB,MAAM;AAAA,MAC/B,yBAA4B,CAAC,MAAM;AAAA,IACtC,CAAC;AAAA,IAEH,iBAAe;AAAA,IACf,IAAI,WAAW,KAAK,KAAK;AAAA,IAEzB,6DAAC;AAAA,MAAM,SAAS;AAAA,MAAO,UAAU;AAAA,OAAjC;AAAA;AAAA;AAAA;AAAA,WAAwC;AAAA,KAX1C;AAAA;AAAA;AAAA;AAAA,SAYA;AAEJ,GAEO,yBAAQ;;;ACjCf,IAAAC,qBAAuB,gCADvB;AAaA,SAAS,eAAe,OAAiC;AACvD,SACE,mDAAC;AAAA,IACC,eAAW,mBAAAC,SAAW,kBAAkB;AAAA,MACtC,wBAAwB,cAAc,SAAS,MAAM;AAAA,MACrD,yBAAyB,eAAe,SAAS,MAAM;AAAA,MACvD,wBAAwB,MAAM;AAAA,IAChC,CAAC;AAAA,IAEA,gBAAM;AAAA,KAPT;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;AAEA,IAAO,yBAAQ;;;AFtBf;AALA,+DAYM,QAA8B;AAAA,EAClC,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA,SAAS;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA,KAAK;AAAA,IACH,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AACF,GAEM,iBAAiB,MAEnB;AAAA,EACE;AAAA,uDAAC;AAAA,MAAI,WAAW;AAAA,MACd,6DAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YACC,WAAW;AAAA,YACX,MAAM,MAAM;AAAA,aAFd;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UAEA,mDAAC;AAAA,YAAmB,MAAM,MAAM;AAAA,aAAhC;AAAA;AAAA;AAAA;AAAA,iBAAyC;AAAA,UACzC,mDAAC;AAAA,YAAmB,MAAM,MAAM;AAAA,aAAhC;AAAA;AAAA;AAAA;AAAA,iBAAqC;AAAA;AAAA,SAPvC;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,OATF;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,IAEA,mDAAC;AAAA,MAAI,WAAW;AAAA,MACd,6DAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,aAAgB;AAAA,OADlB;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA;AAAA,GAfF;AAAA;AAAA;AAAA;AAAA,OAgBA;AAIJ,SAAS,iBAAiB;AACxB,MAAMC,UACJ,mDAAC,oBAAK,QAAL;AAAA,IACC,6DAAC,iBAAAC,SAAA;AAAA,MAAU,WAAW;AAAA,OAAtB;AAAA;AAAA;AAAA;AAAA,WAA6B;AAAA,KAD/B;AAAA;AAAA;AAAA;AAAA,SAEA,GAGIC,SAAQ,OAAO,OAAO,KAAK,EAAE,IAAI,CAAC,SAEpC,mDAAC,iBAAS,MAAT;AAAA,IAA8B,MAAM,KAAK;AAAA,IACvC,eAAK;AAAA,KADY,KAAK,MAAzB;AAAA;AAAA;AAAA;AAAA,SAEA,CAEH;AAED,SAAO,mDAAC;AAAA,IAAS,QAAQF;AAAA,IAAQ,OAAOE;AAAA,KAAjC;AAAA;AAAA;AAAA;AAAA,SAAwC;AACjD;AAEA,IAAO,yBAAQ;;;AGnEf,IAAAC,iBAAwB,kBAExBC,wBAAsB,0BACtBD,iBAAqB,8BAErBE,kBAKO;AAIP;AACA;AAfA,+DAiBM,kBAGD,CAAC,EAAE,MAAM,iBAAiB,MAAM;AACnC,MAAM,wBACJ,mDAAC,oBAAK,QAAL;AAAA,IACC,IAAI;AAAA,IACJ,WAAW;AAAA,IAEX;AAAA,yDAAC;AAAA,QAAc;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA,aAA2B;AAAA,MAC3B,mDAAC;AAAA,QAAgB,WAAW;AAAA,SAA5B;AAAA;AAAA;AAAA;AAAA,aAAmD;AAAA;AAAA,KALrD;AAAA;AAAA;AAAA;AAAA,SAMA,GAGI,sBAAkB,wBAAQ,OAE5B,6BAAM,WACN,6BAAM,gBAAe,mDAAC;AAAA,IAAM,SAAS;AAAA,KAAhB;AAAA;AAAA;AAAA;AAAA,SAAwC,GAE9D,CAAC,IAAI,CAAC,GAEH,QAAQ;AAAA,IACZ,mDAAC,iBAAS,MAAT;AAAA,MAAc,WAAW;AAAA,MACxB,6DAAC;AAAA,QACC,WAAW;AAAA,QAEX;AAAA,6DAAC;AAAA,YAAI,WAAW;AAAA,YAAiB;AAAA,aAAjC;AAAA;AAAA;AAAA;AAAA,iBAA6C;AAAA,UAE7C,mDAAC;AAAA,YACC,6DAAC;AAAA,cAAK,WAAW;AAAA,cAAoB;AAAA,eAArC;AAAA;AAAA;AAAA;AAAA,mBAAqD;AAAA,aADvD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA;AAAA,SAPF;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,OATkD,cAApD;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,IACA,mDAAC,iBAAS,SAAT,IAAsB,YAAvB;AAAA;AAAA;AAAA;AAAA,WAAmC;AAAA,IACnC,mDAAC;AAAA,MAAwC,MAAM;AAAA,MAC7C;AAAA,2DAAC;AAAA,UAAe,WAAW;AAAA,WAA3B;AAAA;AAAA;AAAA;AAAA,eAAkC;AAAA,QAClC,mDAAC;AAAA,UACC,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAA4C;AAAA,WAD9C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA;AAAA,OAJ4B,WAA9B;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,mDAAC;AAAA,MAAwC,MAAM;AAAA,MAC7C;AAAA,2DAAC;AAAA,UAAc,WAAW;AAAA,WAA1B;AAAA;AAAA;AAAA;AAAA,eAAiC;AAAA,QACjC,mDAAC;AAAA,UACC,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAA2C;AAAA,WAD7C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA;AAAA,OAJ4B,WAA9B;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,mDAAC,iBAAS,SAAT,IAAsB,YAAvB;AAAA;AAAA;AAAA;AAAA,WAAmC;AAAA,IACnC,mDAAC;AAAA,MAAyC,SAAS;AAAA,MACjD;AAAA,2DAAC;AAAA,UAAyB,WAAW;AAAA,WAArC;AAAA;AAAA;AAAA;AAAA,eAA4C;AAAA,QAC5C,mDAAC;AAAA,UACC,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAAgC;AAAA,WADlC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA;AAAA,OAJ4B,YAA9B;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,EACF;AAEA,SAAO,mDAAC;AAAA,IAAS,QAAQ;AAAA,IAAuB;AAAA,KAAzC;AAAA;AAAA;AAAA;AAAA,SAAuD;AAChE;AAEA,SAAS,wBACP,OAQA;AACA,MAAM,UAAU,aAAa,QAAQ,MAAM,UAAU,QAC/C,OAAO,UAAU,QAAQ,MAAM,OAAO;AAE5C,SACE,mDAAC,iBAAS,MAAT;AAAA,IAAc;AAAA,IAAY;AAAA,IACzB,6DAAC;AAAA,MAAK,WAAW;AAAA,MACd,gBAAM;AAAA,OADT;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,KAHF;AAAA;AAAA;AAAA;AAAA,SAIA;AAEJ;AAEA,IAAO,0BAAQ;;;ACjGf,IAAAC,iBAA0D,kBAC1DC,wBAAsB,0BACtBD,iBAA2B,8BAE3B,kBAAqB,0DACrB,iBAAoB;;;ACLpB,oBAAkC;AAE3B,SAAS,UAAU,MAAc;AACtC,MAAM,aAAa,SAAS,OACzB,MAAM,GAAG,EACT,IAAI,CAAC,MAAM,EAAE,MAAM,GAAG,CAAC,EACvB,OAAO,CAAC,OAAO,aACd,MAAM,QAAQ,MAAM,QAAQ,IACrB,QACN,OAAO,CAAC;AAEb,SAAO,KAAK,MAAM,mBAAmB,KAAK,WAAW,KAAK,CAAC,CAAC;AAC9D;AAEO,SAAS,UAAU,MAAc,OAAe;AACrD,WAAS,SAAS,GAAG,QAAQ,aAAa,KAAK;AACjD;AAEO,SAAS,aAAa,OAAe;AAC1C,SAAO,SAAK,iCAAkB,mBAAmB,KAAK,UAAU,KAAK,CAAC,CAAC,CAAC;AAC1E;;;AChBA,IAAM,YAAY,SACZ,yBAAyB,sBAAc,KAAK,YAC5C,wBAAwB,sBAAc,KAAK,gBAEpC,uBAAuB,QACvB,wBAAwB;AAE9B,SAAS,kBAAkB;AAChC,SAAO,iBAAiB;AAC1B;AAEO,SAAS,iBAAiB;AAC/B,SAAO,UAAU,OAAO;AAC1B;AAEO,SAAS,SAAS,OAAsB;AAC7C,MAAM,OAAO,QAAQ;AAErB,EAAI,gBAAgB,MAAM,UAItB,UAAU,wBACZ,KAAK,UAAU,IAAI,oBAAoB,GACvC,WAAW,qBAAqB,GAChC,UAAU,WAAW,oBAAoB,MAEzC,KAAK,UAAU,OAAO,oBAAoB,GAC1C,WAAW,sBAAsB,GACjC,UAAU,WAAW,qBAAqB;AAE9C;AAIA,SAAS,mBAAmB;AAC1B,MAAI,mBAAU;AAGZ,WAFa,QAAQ,EAET,UAAU,SAAS,oBAAoB,IAC/C,uBACA;AAER;AAEA,SAAS,UAAU;AACjB,SAAO,SAAS;AAClB;AAEA,SAAS,kBAAkB;AACzB,SAAO,SAAS,cAAc,0BAA0B;AAC1D;AAEA,SAAS,WAAW,OAAe;AACjC,MAAM,WAAW,MAAM;AACrB,QAAI,MAAM,gBAAgB;AAE1B,IAAI,MACF,IAAI,aAAa,WAAW,KAAK,KAEjC,MAAM,SAAS,cAAc,MAAM,GACnC,IAAI,aAAa,QAAQ,aAAa,GACtC,IAAI,aAAa,WAAW,KAAK,GACjC,SAAS,KAAK,YAAY,GAAG;AAAA,EAEjC;AAEA,EAAI,SAAS,eAAe,aAC1B,SAAS,IAET,SAAS,iBAAiB,oBAAoB,QAAQ;AAE1D;;;AC3EA,IAAAE,iBAAkB,oCADlB,2DAGM,UAAiC,CAAC,EAAE,UAAU,cAAc,MAAM,MAEpE,mDAAC,eAAAC,SAAA;AAAA,EAAO,GAAG;AAAA,EAAO,UAAU,CAAC,MAAM;AAAA,EAAS,OAAO;AAAA,EACjD,6DAAC;AAAA,IAAI;AAAA,IAAuB;AAAA,KAA5B;AAAA;AAAA;AAAA;AAAA,SAAqC;AAAA,GADvC;AAAA;AAAA;AAAA;AAAA,OAEA,GAIG,kBAAQ;;;AHKf;AAhBA,+DAkBM,iBAAiB,MAAM;AAC3B,MAAM,mBAAe,wBAAQ,MACpB,gBAAgB,KAAK,eAAe,GAC1C,CAAC,CAAC,GAEC,CAAC,cAAc,eAAe,QAAI,yBAAwB,YAAY,GAEtE,iBAAa,4BAAY,MAAM;AACnC,oBAAgB,CAACC,kBACXA,kBAAiB,wBACZ,uBAGF,qBACR;AAAA,EACH,GAAG,CAAC,CAAC,GAEC,cAAc,iBAAiB,sBAE/B,cAAc,cAClB,mDAAC;AAAA,IAAM,SAAS;AAAA,KAAhB;AAAA;AAAA;AAAA;AAAA,SAA6C,IAE7C,mDAAC;AAAA,IAAM,SAAS;AAAA,KAAhB;AAAA;AAAA;AAAA;AAAA,SAA4C,GAGxC,OAAO,cACX,mDAAC,eAAAC,SAAA;AAAA,IAAQ,WAAW;AAAA,KAApB;AAAA;AAAA;AAAA;AAAA,SAA2B,IAE3B,mDAAC,gBAAAC,SAAA;AAAA,IAAS,WAAW;AAAA,KAArB;AAAA;AAAA;AAAA;AAAA,SAA4B;AAG9B,uCAAU,MAAM;AACd,aAAS,YAAY;AAAA,EACvB,GAAG,CAAC,YAAY,CAAC,GAGf,mDAAC;AAAA,IAAQ,SAAS;AAAA,IAChB,6DAAC;AAAA,MACC,WAAW;AAAA,MACX,SAAS;AAAA,MAET,6DAAC;AAAA,QACC,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,OAAM;AAAA,QACN,WAAU;AAAA,QACV,SAAQ;AAAA,QAEP;AAAA,SAPH;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,OAZF;AAAA;AAAA;AAAA;AAAA,WAaA;AAAA,KAdF;AAAA;AAAA;AAAA;AAAA,SAeA;AAEJ,GAEO,yBAAQ;;;AP3Df;AAdA,+DAgBM,iBAAiB,eAEjB,aAED,CAAC,EAAE,MAAM,MAAM;AAClB,MAAM,WAAO,0BAAQ,GACf,cAAc,eAAe,GAE7B,uBAAmB,4BAAY,MAC5B,KAAK,QAAQ,GACnB,CAAC,IAAI,CAAC;AAET,SACE,mDAAC;AAAA,IAAI,WAAW,iBAAiB,QAAQ,iBAAiB;AAAA,IACxD,6DAAC;AAAA,MACC,6DAAC;AAAA,QAAI,WAAU;AAAA,QACb;AAAA,6DAAC;AAAA,YAAI,WAAW;AAAA,YACd;AAAA,iEAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,qBAAM;AAAA,cAEN,mDAAC;AAAA,gBACC,6DAAC,4BAAD;AAAA;AAAA;AAAA;AAAA,uBAAgB;AAAA,iBADlB;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,UAEA,mDAAC;AAAA,YAAI,WAAW;AAAA,YACd;AAAA,iEAAC;AAAA,gBACC,WACE;AAAA,gBAIF,6DAAC,4BAAD;AAAA;AAAA;AAAA;AAAA,uBAAgB;AAAA,iBANlB;AAAA;AAAA;AAAA;AAAA,qBAOA;AAAA,cAEA,mDAAC;AAAA,gBAAG,WAAW,2CAAa;AAAA,gBAAM,UAAU,mDAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,uBAAa;AAAA,gBACtD,WAAC,SACA,mDAAC;AAAA,kBACC;AAAA,kBACA;AAAA,mBAFF;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA,iBALJ;AAAA;AAAA;AAAA;AAAA,qBAOA;AAAA;AAAA,aAjBF;AAAA;AAAA;AAAA;AAAA,iBAkBA;AAAA;AAAA,SA3BF;AAAA;AAAA;AAAA;AAAA,aA4BA;AAAA,OA7BF;AAAA;AAAA;AAAA;AAAA,WA8BA;AAAA,KA/BF;AAAA;AAAA;AAAA;AAAA,SAgCA;AAEJ;AAEA,SAAS,cAAc;AACrB,SACE,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd;AAAA,yDAAC;AAAA,QAAO,OAAO;AAAA,QAAe,MAAM,sBAAc,MAAM;AAAA,QACtD,6DAAC;AAAA,UAAK;AAAA,WAAN;AAAA;AAAA;AAAA;AAAA,eAAa;AAAA,SADf;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAO,MAAM,sBAAc,MAAM;AAAA,QAChC,6DAAC;AAAA,UAAK,WAAW;AAAA,UACf;AAAA,+DAAC;AAAA,cAAK;AAAA,eAAN;AAAA;AAAA;AAAA;AAAA,mBAAa;AAAA,YACb,mDAAC;AAAA,cAAe,WAAW;AAAA,eAA3B;AAAA;AAAA;AAAA;AAAA,mBAAkC;AAAA;AAAA,WAFpC;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA;AAAA,KAVF;AAAA;AAAA;AAAA;AAAA,SAWA;AAEJ;AAEA,IAAO,qBAAQ;;;AWjFf,IAAAC,oBAAoC,sBADpC;AAGA,SAAS,iBAAiB;AAAA,EACxB;AAAA,EACA;AACF,GAEI;AACF,SACE,mDAAC;AAAA,IAAoB,gBAAgB;AAAA,IAClC;AAAA,KADH;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEA,IAAO,2BAAQ;;;ACff,IAAAC,iBAA+D,kBAC/DC,oBAAsD,sBAItDC,eAKO;;;ACXP,IAAAC,iBAA2B,6BAC3BA,iBAA4B;AAE5B,SAAS,oBAAoB;AAC3B,MAAM,cAAU,2BAAW;AAE3B,aAAO,4BAAY,OACjB,QAAQ;AAAA,IACN,CAAC;AAAA,IACD;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAAA,EACF,GAEO,UACN,CAAC,OAAO,CAAC;AACd;AAEA,IAAO,8BAAQ;;;ADnBf,+DAiBa,4BAER,CAAC,EAAE,UAAU,kBAAkB,MAAM;AACxC,MAAM,WAAO,2BAAQ;AAMrB,uCAAU,MAAM;AACd,QAAM,eAAe,KAAK,iBAAiB,iBAAiB;AAE5D,WAAO,MAAM,aAAa;AAAA,EAC5B,GAAG,CAAC,MAAM,iBAAiB,CAAC,GAErB;AAAA,IAAG;AAAA,KAAH;AAAA;AAAA;AAAA;AAAA,SAAY;AACrB;AAEe,SAAR,qBAAsC;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAII;AA5CJ;AA6CE,MAAM,UAAM,kCAAe,GACrB,UAAU,4BAAkB,GAC5B,cAAU,uBAAoB,GAI9B,kBAAc,wBAAQ,MACnB,mBAAU,IAAI,yCAA4B,kCAChD,CAAC,CAAC,GAEC,UAAM;AAAA,IACV,UAAM,6BAAe,KAAK,EAAE,YAAY,CAAC;AAAA,IACzC,CAAC,KAAK,WAAW;AAAA,EACnB,GACM,wBAAwB,eAAe,EAAE,cAAc,IAAI,SAE3D,yBAAqB;AAAA,IACzB,OAAO,SAAsB;AA9DjC,UAAAC,KAAAC;AA+DM,UAAI,MAAM;AACR,YAAM,UAAuB;AAAA,UAC3B,MAAM;AAAA,YACJ,GAAG;AAAA,YACH,cAAc,CAAC;AAAA,YACf,YAAUD,MAAA,2CAAa,SAAb,gBAAAA,IAAmB,aAAY;AAAA,YACzC,eAAaC,MAAA,2CAAa,SAAb,gBAAAA,IAAmB,gBAAe,CAAC;AAAA,UAClD;AAAA,UACA,MAAM,2CAAa;AAAA,QACrB;AAEA,uBAAQ,UAAU,MAEX,eAAe,OAAO;AAAA,MAC/B;AAKA,UAAI,QAAQ;AACV,YAAI;AAEF,kBAAQ;AAAA,QACV,UAAE;AACA,yBAAe,MAAS,GACxB,QAAQ,UAAU;AAAA,QACpB;AAAA,IAEJ;AAAA,IACA;AAAA,MACE;AAAA,MACA;AAAA,OACA,gDAAa,SAAb,mBAAmB;AAAA,OACnB,gDAAa,SAAb,mBAAmB;AAAA,MACnB,2CAAa;AAAA,IACf;AAAA,EACF;AAEA,uCAAU,MAAM;AACd,QAAI,uBAAuB;AACzB,UAAM,OAAO,oBAAoB;AAEjC,4CAAoB,KAAK,IAAI;AAAA,IAC/B;AAAA,EACF,GAAG,CAAC,KAAK,qBAAqB,CAAC,GAG7B,mDAAC;AAAA,IAAa;AAAA,IACZ,6DAAC;AAAA,MAA0B,mBAAmB;AAAA,MAC3C;AAAA,OADH;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,KAHF;AAAA;AAAA;AAAA;AAAA,SAIA;AAEJ;AAEA,SAAS,sBAAsB;AAI7B,SAAO,CAAC,WAHK,aAGY,KAAK,IAAI,EAAE,KAAK,EAAE;AAC7C;;;AEzHA,IAAMC,OAAM,gBAAO,GAEb,iBAAiB;AAAA,EACrB,QAAQA,KAAI;AAAA,EACZ,YAAYA,KAAI;AAAA,EAChB,WAAWA,KAAI;AAAA,EACf,eAAeA,KAAI;AAAA,EACnB,mBAAmBA,KAAI;AAAA,EACvB,OAAOA,KAAI;AAAA,EACX,eAAeA,KAAI;AAAA,EACnB,UAAUA,KAAI,aAAa;AAC7B,GAEO,0BAAQ;;;ACff,IAAK,iBAAL,kBAAKC,qBACHA,gCAAA,KAAK,OAAL,MACAA,gCAAA,mBAAmB,OAAnB,oBACAA,gCAAA,mBAAmB,OAAnB,oBACAA,gCAAA,WAAW,OAAX,YACAA,gCAAA,aAAa,OAAb,cACAA,gCAAA,eAAe,OAAf,gBACAA,gCAAA,YAAY,OAAZ,aACAA,gCAAA,WAAW,OAAX,YACAA,gCAAA,mBAAmB,OAAnB,oBACAA,gCAAA,sBAAsB,OAAtB,uBAVGA,kBAAA,uBAaE,gCAAQ;;;AnBbf;AAgBA,SAAS,oBAAoB;AAC3B,MAAM,YAAQ,yBAAS;AAEvB,SACE,mDAAC;AAAA,IACC;AAAA,yDAAC;AAAA,QACC;AAAA,6DAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,iBAAM;AAAA,UACN,mDAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,iBAAO;AAAA,UACP,mDAAC,4BAAD;AAAA;AAAA;AAAA;AAAA,iBAAS;AAAA;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,6DAAC;AAAA,UAAiB,QAAQ;AAAA,UACxB,6DAAC;AAAA,YACC,aAAa,wBAAe;AAAA,YAC5B,aAAa;AAAA,YACb,gBAAgB,OAAO,CAAC;AAAA,YAExB;AAAA,iEAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,qBAAY;AAAA,cAEZ,mDAAC;AAAA,gBACC;AAAA,qEAAC;AAAA,oBACC;AAAA,yEAAC;AAAA,wBACC,6DAAC;AAAA,0BACC,WAAW,MAAM,WAAW,8BAAe;AAAA,0BAC3C,UAAU,mDAAC;AAAA,4BAAM,SAAS;AAAA,6BAAhB;AAAA;AAAA;AAAA;AAAA,iCAA6C;AAAA,0BAEvD,6DAAC;AAAA,4BAAM,SAAS;AAAA,6BAAhB;AAAA;AAAA;AAAA;AAAA,iCAAuC;AAAA,2BAJzC;AAAA;AAAA;AAAA;AAAA,+BAKA;AAAA,yBANF;AAAA;AAAA;AAAA;AAAA,6BAOA;AAAA,sBAEA,mDAAC;AAAA,wBACC,6DAAC;AAAA,0BACC,WAAW,MAAM,WAAW,8BAAe;AAAA,0BAC3C,UACE,mDAAC;AAAA,4BAAM,SAAS;AAAA,6BAAhB;AAAA;AAAA;AAAA;AAAA,iCAAoD;AAAA,0BAGtD,6DAAC;AAAA,4BAAM,SAAS;AAAA,6BAAhB;AAAA;AAAA;AAAA;AAAA,iCAAiD;AAAA,2BANnD;AAAA;AAAA;AAAA;AAAA,+BAOA;AAAA,yBARF;AAAA;AAAA;AAAA;AAAA,6BASA;AAAA;AAAA,qBAnBF;AAAA;AAAA;AAAA;AAAA,yBAoBA;AAAA,kBAEA,mDAAC;AAAA,oBAAI,WAAW;AAAA,oBACd,6DAAC;AAAA,sBAAO,MAAM;AAAA,sBACZ,6DAAC;AAAA,wBAAM,SAAS;AAAA,yBAAhB;AAAA;AAAA;AAAA;AAAA,6BAAyC;AAAA,uBAD3C;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA,qBAHF;AAAA;AAAA;AAAA;AAAA,yBAIA;AAAA;AAAA,iBA3BF;AAAA;AAAA;AAAA;AAAA,qBA4BA;AAAA;AAAA,aAnCF;AAAA;AAAA;AAAA;AAAA,iBAoCA;AAAA,WArCF;AAAA;AAAA;AAAA;AAAA,eAsCA;AAAA,SAvCF;AAAA;AAAA;AAAA;AAAA,aAwCA;AAAA;AAAA,KA9CF;AAAA;AAAA;AAAA;AAAA,SA+CA;AAEJ;AAEA,IAAO,4BAAQ;;;ARvEf,+DAuBaC,SAAuB,MAC3B,CAAC,EAAE,KAAK,cAAc,MAAM,aAAc,CAAC,GAGvC,SAAS,OAAO,EAAE,QAAQ,MAAkB;AACvD,MAAM,QAAQ,MAAM,iBAAiB,OAAO;AAE5C,aAAO,mBAAK;AAAA,IACV;AAAA,IACA,KAAK,sBAAsB;AAAA,EAC7B,CAAC;AACH;AAEe,SAAR,MAAuB;AAC5B,MAAM,WAAO,8BAA6B,GAEpC,gBAAY,mBAAAC,SAAW;AAAA,IAC3B,MAAM,KAAK,UAAU;AAAA,EACvB,CAAC;AAED,SACE,mDAAC;AAAA,IAAK,MAAK;AAAA,IAAK;AAAA,IACd;AAAA,yDAAC;AAAA,QACC;AAAA,6DAAC,eAAAC,MAAA,IAAD;AAAA;AAAA;AAAA;AAAA,iBAAW;AAAA,UACX,mDAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,iBAAO;AAAA,UACP,mDAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,iBAAM;AAAA,UAEN,mDAAC;AAAA,YACC,yBAAyB;AAAA,cACvB,QAAQ,gBAAgB,KAAK,UAAU,KAAK,GAAG;AAAA,YACjD;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA;AAAA,SATF;AAAA;AAAA;AAAA;AAAA,aAUA;AAAA,MACA,mDAAC;AAAA,QAAK,WAAU;AAAA,QACd;AAAA,6DAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,iBAAQ;AAAA,UACR,mDAAC,sCAAD;AAAA;AAAA;AAAA;AAAA,iBAA0B;AAAA,UAC1B,mDAAC,sCAAD;AAAA;AAAA;AAAA;AAAA,iBAAmB;AAAA,UACnB,mDAAC,4BAAD;AAAA;AAAA;AAAA;AAAA,iBAAS;AAAA,UACT,mDAAC,+BAAD;AAAA;AAAA;AAAA;AAAA,iBAAY;AAAA;AAAA,SALd;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA;AAAA,KAlBF;AAAA;AAAA;AAAA;AAAA,SAmBA;AAEJ;AAEO,IAAM,gBAAgB;AAE7B,SAAS,wBAAwB;AAC/B,MAAMC,OAAM,QAAQ;AAEpB,SAAO;AAAA,IACL,kBAAkBA,KAAI;AAAA,IACtB,qBAAqBA,KAAI;AAAA,IACzB,yBAAyBA,KAAI;AAAA,IAC7B,sBAAsBA,KAAI;AAAA,IAC1B,8BAA8BA,KAAI;AAAA,IAClC,iBAAiBA,KAAI;AAAA,IACrB,yBAAyBA,KAAI;AAAA,IAC7B,UAAUA,KAAI;AAAA,IACd,eAAeA,KAAI;AAAA,IACnB,yBAAyBA,KAAI;AAAA,IAC7B,UAAUA,KAAI;AAAA,IACd,gBAAgBA,KAAI;AAAA,IACpB,UAAUA,KAAI;AAAA,IACd,YAAYA,KAAI;AAAA,IAChB,cAAcA,KAAI;AAAA,EACpB;AACF;;;A4BzFA;AAAA;AAAA,uBAAAC;AAAA,EAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA;AAAA,IAAAC,iBAAsC,kBAEtCC,eAA+B,4BAC/BD,iBAA2C,6BAC3C,aAAkB,gBAClBE,wBAAsB;AAGtB;AACA;AACA;;;ACRO,IAAM,oCAAoC;AAAA,EAC/C,8BAAe;AACjB,GAEa,2BAA2B;AAAA,EACtC,8BAAe;AACjB,GAEa,yBAAyB,eAAe,8BAAe,QAAQ,GAE/D,iCAAiC,SAC5C,oBACA,kBACA;AACA,MAAM,eAAe,UACnB,oBAAoB,wEACuC,mBAAmB;AAAA,IAC9E;AAAA,EACF;AAEA,QAAM,IAAI,SAAS,cAAc;AAAA,IAC/B,QAAQ,8BAAe;AAAA,EACzB,CAAC;AACH,GAEa,6BAA6B;AAAA,EACxC,8BAAe;AACjB,GAEa,0BAA0B,eAAe,8BAAe,SAAS;AAE9E,SAAS,eAAe,YAA4B;AAClD,SAAO,CAAC,YAAqB;AAC3B,UAAM,IAAI,SAAS,WAAW,iBAAiB;AAAA,MAC7C,QAAQ;AAAA,IACV,CAAC;AAAA,EACH;AACF;;;ACtCA,IAAAC,iBAA4B,kBAC5BC,kBAA+B;AAE/B;AACA;;;ACHA,IAAAC,iBAMO,kBAEPC,qBAAuB,gCACvBD,iBAA2B,8BAC3B,mBAAsB;AAEtB;AACA;AACA;AAhBA,+DAyBM,OAA0C,CAAC,EAAE,SAAS,MACnD,mDAAC;AAAA,EAAK,WAAW;AAAA,EAAkB;AAAA,GAAnC;AAAA;AAAA;AAAA;AAAA,OAA4C,GAG/C,QAAyB,CAAC;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,KACG;AACL,MAAM;AACJ,MAAME,OAAM,gBAAY,0BAA4B,GAC9C,eAAe,MAAM,SAAS,IAC9B,CAAC,OAAO,QAAQ,QAAI,yBAAS,YAAY,GAEzC,cAAU,4BAAY,MAAM;AAChC,IAAIA,SACF,SAAS,EAAE,GAEP,WACF,QAAQ;AAAA,EAGd,GAAG,CAAC,SAASA,IAAG,CAAC,GAEX,4BAAwB,wBAAQ,MAC7B,QAAQ,kBAAkB,KAAK,GACrC,CAAC,OAAO,cAAc,CAAC,GAEpB,eAAqD;AAAA,IACzD,CAAC,UAAU;AACT,MAAI,MAAM,YACR,MAAM,SAAS,KAAK;AAGtB,UAAM,YAAY,MAAM,cAAc,SAAS;AAE/C,MAAI,iBACF,cAAc,SAAS,GAGzB,SAAS,SAAS;AAAA,IACpB;AAAA,IACA,CAAC,eAAe,KAAK;AAAA,EACvB;AAEA,uCAAU,MAAM;AACd,aAAS,YAAY;AAAA,EACvB,GAAG,CAAC,cAAc,aAAa,CAAC,GAG9B,mDAAC;AAAA,IACC,eAAW,mBAAAC,SAAW,2BAA2B,WAAW;AAAA,MACzD,iCAAoC,MAAM;AAAA,IAC7C,CAAC;AAAA,IAED;AAAA,yDAAC;AAAA,QAAG,WAAW;AAAA,QACb,6DAAC;AAAA,UAAK,WAAW;AAAA,UAAgB;AAAA,WAAjC;AAAA;AAAA;AAAA;AAAA,eAA0C;AAAA,SAD5C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QACC,OAAO,WAAW,SAAY;AAAA,QAC9B;AAAA,QACA,WAAW,yBAAyB,aAAa;AAAA,QAChD,GAAG;AAAA,QACJ,KAAKD;AAAA,QACL;AAAA,SANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW;AAAA,QACb,6DAAC;AAAA,UAAI,WAAW;AAAA,UACd,6DAAC;AAAA,YAAW,MAAM;AAAA,YAAU,SAAS;AAAA,YACnC,6DAAC,iBAAAE,SAAA;AAAA,cAAU,WAAW;AAAA,eAAtB;AAAA;AAAA;AAAA;AAAA,mBAA6B;AAAA,aAD/B;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,WAHF;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,SALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA;AAAA,KAxBF;AAAA;AAAA;AAAA;AAAA,SAyBA;AAEJ,GAaM,YAAgC,CAAC,EAAE,UAAU,UAAU,MACpD,mDAAC;AAAA,EAAI,WAAW,aAAa,aAAa;AAAA,EAAO;AAAA,GAAjD;AAAA;AAAA;AAAA;AAAA,OAA0D,GAG7D,eAEF,CAAC,EAAE,UAAU,MAAM,MAAM;AAC3B,MAAM,gBAAgB,CAAC,CAAC;AAExB,SACE,mDAAC;AAAA,IACC,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,OAAM;AAAA,IACN,WAAU;AAAA,IACV,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,WAAU;AAAA,IACV,SAAQ;AAAA,IAER,6DAAC;AAAA,MACC,6DAAC;AAAA,QAAM,GAAG;AAAA,QAAO,WAAW;AAAA,QACzB;AAAA,SADH;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,OAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,KAdF;AAAA;AAAA;AAAA;AAAA,SAeA;AAEJ;AAEA,UAAU,OAAO;AACjB,UAAU,QAAQ;AAClB,UAAU,QAAQ;AAClB,UAAU,QAAQ;AAElB,IAAO,oBAAQ;;;ADjJf;AARA,+DAcM,uBAED,CAAC,EAAE,SAAS,MAAM;AAhBvB;AAiBE,MAAM,OAAO,eAAe,GACtB,gBAAc,kCAAM,SAAN,mBAAY,kBAAe,kCAAM,SAAN,mBAAY,UAAS,IAE9D,uBAAmB;AAAA,IACvB,CAAC,UAAsC;AACrC,YAAM,eAAe;AAGrB,UAAM,eADO,IAAI,SAAS,MAAM,aAAa,EACnB,IAAI,cAAc;AAE5C,eAAS;AAAA,QACP;AAAA,MACF,CAAC;AAAA,IACH;AAAA,IACA,CAAC,QAAQ;AAAA,EACX;AAEA,SACE,mDAAC;AAAA,IACC,UAAU;AAAA,IACV,WAAW;AAAA,IAEX;AAAA,yDAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC;AAAA,YAAQ,MAAM;AAAA,YAAG;AAAA;AAAA,cAAK;AAAA,cAAY;AAAA;AAAA,aAAnC;AAAA;AAAA;AAAA;AAAA,iBAAoC;AAAA,UACpC,mDAAC;AAAA,YAAW;AAAA,aAAZ;AAAA;AAAA;AAAA;AAAA,iBAAgD;AAAA;AAAA,SAFlD;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MAEA,mDAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC;AAAA,YACC,6DAAC,kBAAU,OAAV;AAAA,cAAgB;AAAA;AAAA,gBAEf,mDAAC,kBAAU,OAAV;AAAA,kBACC,UAAQ;AAAA,kBACR,MAAM;AAAA,kBACN,aAAa;AAAA,mBAHf;AAAA;AAAA;AAAA;AAAA,uBAIA;AAAA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA,iBASA;AAAA,UAEA,mDAAC;AAAA,YACC,6DAAC;AAAA,cAAO,MAAM;AAAA,cACZ,6DAAC;AAAA,gBAAK,WAAW;AAAA,gBACf;AAAA,qEAAC;AAAA,oBAAK;AAAA,qBAAN;AAAA;AAAA;AAAA;AAAA,yBAAc;AAAA,kBACd,mDAAC;AAAA,oBAAe,WAAW;AAAA,qBAA3B;AAAA;AAAA;AAAA;AAAA,yBAAkC;AAAA;AAAA,iBAFpC;AAAA;AAAA;AAAA;AAAA,qBAGA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA;AAAA,SAnBF;AAAA;AAAA;AAAA;AAAA,aAoBA;AAAA;AAAA,KA7BF;AAAA;AAAA;AAAA;AAAA,SA8BA;AAEJ,GAEO,+BAAQ;;;AErEf;AAAA,SAAS,yBAAyB;AAChC,SACE,mDAAC;AAAA,IACC,aAAU;AAAA,IACV,OAAM;AAAA,IACN,QAAO;AAAA,IACP,SAAQ;AAAA,IAER;AAAA,yDAAC;AAAA,QAAK,WAAU;AAAA,QAA4B,MAAK;AAAA,SAAjD;AAAA;AAAA;AAAA;AAAA,aAA2D;AAAA,MAE3D,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,WAAW;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,WAAW;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,WAAW;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,QAAO;AAAA,QACP,WAAW;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,QAAO;AAAA,QACP,WAAW;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,WAAW;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,WAAW;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,WAAW;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,WAAW;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,WAAW;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,WAAW;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,WAAW;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,WAAW;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,WAAW;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,IAAG;AAAA,QACH,IAAG;AAAA,QACH,GAAE;AAAA,QACF,WAAW;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,WAAU;AAAA,QACV,MAAK;AAAA,SAHP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA;AAAA,KAjKF;AAAA;AAAA;AAAA;AAAA,SAkKA;AAEJ;AAEA,IAAO,iCAAQ;;;ACxKf,IAAAC,iBAA+C,kBAC/CA,iBAA0B,6BAC1BC,8BAA8B,gCAF9B,2DAOM,yBAED,CAAC,EAAE,KAAK,MAAM;AACjB,MAAM,aAAS,0BAAU,GACnB,kCAA8B,uBAAO,EAAK,GAE1C,0BAAsB,4BAAY,MAC/B;AAAA,IACL,EAAE,MAAM,KAAK,UAAU,IAAI,EAAE;AAAA,IAC7B;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAAA,EACF,GACC,CAAC,QAAQ,IAAI,CAAC;AAEjB,uCAAU,MAAM;AAGd,IAAK,4BAA4B,YAC/B,4BAA4B,UAAU,IACjC,oBAAoB;AAAA,EAE7B,GAAG,CAAC,mBAAmB,CAAC,GAGtB,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd;AAAA,yDAAC;AAAA,QACC,6DAAC;AAAA,UAAc,MAAM;AAAA,UAAI,OAAO;AAAA,WAAhC;AAAA;AAAA;AAAA;AAAA,eAAgD;AAAA,SADlD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAK;AAAA,SAAN;AAAA;AAAA;AAAA;AAAA,aAAqC;AAAA;AAAA,KALvC;AAAA;AAAA;AAAA;AAAA,SAMA;AAEJ,GAEO,iCAAQ;;;AC3Cf;AAEA;AAMA,eAAO,uBACL,QACA,gBACA;AACA,SAAO,2BAA2B,QAAQ,cAAc;AAC1D;AAcA,eAAe,2BACb,QACA,gBACA;AAEA,MAAI,gBAAgB;AAClB,QAAM,eAAe,MAAM,oBAAoB,cAAc;AAO7D,QAJkC,YAAW,6CAAc,YAAW,CAAC;AAKrE,aAAO;AAAA,EAEX;AAKA,SAAO,qBAAqB,MAAM;AACpC;AAMA,eAAe,qBAAqB,QAAgB;AAClD,MAAI;AAEF,QAAMC,QADgB,MAAM,yBAAyB,MAAM,EAAE,MAAM,CAAC,EAAE,IAAI,GAChD,KAAK;AAE/B,WAAO,0BAA0BA,KAAI,KAAK,GAAGA,KAAI,EAAE;AAAA,EACrD,QAAE;AACA,WAAO;AAAA,EACT;AACF;AAMA,eAAe,oBAAoB,gBAAwB;AAEzD,MAAM,QADe,MAAM,oBAAoB,cAAc,GACnC,KAAK;AAE/B,SAAO,OAAO,0BAA0B,MAAM,cAAc,IAAI;AAClE;AAEA,SAAS,0BAA0B,cAA4B,IAAY;AACzE,MAAM,UAAU,OAAO,KAAK,aAAa,OAAO,EAAE,OAAO,CAAC,KAAK,WAAW;AACxE,QAAM,SAAS,aAAa,QAAQ,SAE9B,OAAO;AAAA,MACX,MAAM,OAAO;AAAA,MACb,MAAM,OAAO,KAAK;AAAA,IACpB;AAEA,WAAO;AAAA,MACL,GAAG;AAAA,MACH,CAAC,SAAS;AAAA,IACZ;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,SAAO;AAAA,IACL,GAAG;AAAA,IACH;AAAA,IACA;AAAA,EACF;AACF;AAOA,SAAS,yBAAyB,QAAgB;AAChD,MAAM,gBAAgB,2BAA2B,GAC3C,OAAO,WAAW;AAExB,SAAO,cAAc,MAAM,MAAM,MAAM,IAAI;AAC7C;;;AC7GA,IAAAC,oBAA6B,qCAC7BC,eAAwB;AAExB;;;ACEA,IAAK,aAAL,kBAAKC,iBACHA,wBAAA,oBACAA,wBAAA,gCAFGA,cAAA,mBAKE,sBAAQ;;;ADJf;AAeA,eAAe,mBAAmB,EAAE,QAAQ,iBAAiB,GAAW;AACtE,MAAM,gBAAY,gCAAa,GACzB,WAAO,sBAAQ,GAEf,QAAQ,UAAU,MAAM,GAExB,kBAAkB,2BAA2B,EAAE,IAAI,GACnD,UAAU,mBAAmB,EAAE,IAAI,MAAM,GAEzC,sBAAsB;AAAA,IAC1B,CAAC,SAAS;AAAA,MACR,MAAM;AAAA,MACN,MAAM,wBAAe;AAAA,IACvB;AAAA,EACF;AAGA,eAAM,OAAO,iBAAiB;AAAA,IAC5B,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC,GAGD,MAAM,IAAI,SAAS;AAAA,IACjB,MAAM,oBAAW;AAAA,EACnB,CAAC,GAED,MAAM,MAAM,OAAO,GAInB,MAAM,KAAK,oBAAoB,QAAQ;AAAA,IACrC,WAAW;AAAA,EACb,CAAC,GAEM,gBAAgB;AACzB;AAEA,IAAO,8BAAQ;;;AEzDf,IAAM,8BAA8B;AAEpC,eAAsB,wBAAwB;AAC5C,MAAM,EAAE,aAAa,IAAI,MAAM,OAAO,oBAChC,SAAS,QAAQ,IAAI,aAAa;AAExC,SAAO,aAAa,6BAA6B;AAAA,IAC/C,UAAU;AAAA,IACV;AAAA,IACA,MAAM;AAAA,IACN,UAAU;AAAA,EACZ,CAAC;AACH;AAEA,eAAsB,0BAA0B,SAAkB;AAGhE,UAFe,MAAM,sBAAsB,GAE7B,MAAM,0BAAgB,OAAO,CAAC;AAC9C;AAEA,eAAsB,8BAA8B,gBAAwB;AAG1E,UAFe,MAAM,sBAAsB,GAE7B,UAAU,cAAc;AACxC;;;AClBA,eAAsB,4BACpB,SACA,WACA;AACA,MAAM,EAAE,SAAAC,SAAQ,IAAI,MAAM,OAAO;AAKjC,SAJaA,SAAQ,EAIT,oBAAoB,SAAS;AAAA,IACvC;AAAA,EACF,CAAC;AACH;AAOO,SAAS,oBAAoB,OAAO,IAAI;AAG7C,SAAO,QAAa;AACtB;;;AC9BA,kBAAiB,0BAEb;AAEJ,SAAS,YAAY;AACnB,MAAI;AACF,WAAO;AAKT,MAFc,IAEH;AAET,QAAM,SAAS,QAAQ;AAEvB,iBAAS,YAAAC;AAAA,MACP,CAAC;AAAA,MACD,OAAO;AAAA,QACL,UAAU;AAAA,MACZ,CAAC;AAAA,IACH;AAAA,EACF;AACE,iBAAS,YAAAA,SAAK;AAAA,MACZ,SAAS,CAAC;AAAA,MACV,OAAO;AAAA,MACP,MAAM;AAAA,QACJ,KAAK;AAAA,MACP;AAAA,IACF,CAAC;AAGH,SAAO;AACT;AAEA,IAAO,iBAAQ;;;AC/Bf,IAAM,sBAAsB;AAErB,SAAS,qBAAqB;AACnC,SAAO,oBAAoB,mBAAmB;AAChD;AAEA,eAAsB,wBAAwB;AAE5C,UADe,MAAM,mBAAmB,GAC1B,UAAU,IAAI,EAAE,QAAQ,GAAG,CAAC;AAC5C;AAEA,eAAsB,yBAAyB,WAAmB;AAEhE,UADe,MAAM,mBAAmB,GAC1B,UAAU,SAAS;AACnC;AAEA,eAAsB,qBAAqB,SAAkB;AAE3D,UADe,MAAM,mBAAmB,GAC1B,MAAM,0BAAgB,OAAO,CAAC;AAC9C;AAEA,eAAe,oBAAoB,YAAoB;AACrD,MAAM,EAAE,aAAa,IAAI,MAAM,OAAO,oBAGhC,SAAS,uBAAuB,GAChC,SAAS,QAAQ,IAAI,YACrB,UAAU,SAAS,CAAC,MAAM,IAAI,CAAC;AAErC,EAAK,QAAQ,UACX,eAAU,EAAE;AAAA,IACV;AAAA,EACF;AAGF,MAAM,UAAU;AAAA,IACd,QAAQ,oBAAoB;AAAA,IAC5B,UAAU;AAAA,IACV;AAAA,IACA,MAAM;AAAA,IACN,UAAU;AAAA,IACV;AAAA,EACF;AAIA,SAAO,aAAa,YAAY,OAAO;AACzC;AAMA,SAAS,yBAAyB;AAChC,SAAO,QAAQ,IAAI,aAAa;AAClC;;;ACvDA,eAAO,gBAAuC,SAAwB;AACpE,MAAI,CAAC;AACH,WAAO,QAAQ,OAAO,sBAAsB;AAG9C,MAAM,EAAE,0BAAAC,0BAAyB,IAAI,MAAM;AAI3C,SAAOA,0BAAyB,OAAO;AACzC;;;ACdA,IAAAC,eAAwB;;;ACExB,SAAS,kBAAkB,MAAkB;AAC3C,SAAO;AAAA,IACL,KAAK,KAAK;AAAA,IACV,OAAO,SAAS,KAAK,KAAK;AAAA,IAC1B,eAAe,KAAK;AAAA,IACpB,aAAa,SAAS,KAAK,WAAW;AAAA,IACtC,UAAU,SAAS,KAAK,QAAQ;AAAA,IAChC,aAAa,SAAS,KAAK,WAAW;AAAA,IACtC,UAAU,KAAK;AAAA,IACf,cAAc,KAAK,gBAAgB,CAAC;AAAA,IACpC,UAAU,SAAS,KAAK,QAAQ;AAAA,IAChC,cAAc,KAAK,aAAa,IAAI,CAAC,SAC5B,KAAK,MAAM,KAAK,UAAU,KAAK,OAAO,CAAC,CAAC,CAChD;AAAA,IACD,aAAa,KAAK,cACd,KAAK,YAAY,gBAAgB,IAAI,CAAC,UAC7B;AAAA,MACL,aAAa,SAAS,KAAK,WAAW;AAAA,MACtC,KAAK,KAAK;AAAA,MACV,UAAU,KAAK;AAAA,MACf,gBAAgB,SAAS,KAAK,cAAc;AAAA,IAC9C,EACD,IACD;AAAA,EACN;AACF;AAEA,IAAO,8BAAQ;AAMf,SAAS,SAAY,OAAiB;AACpC,SAAO,SAAS;AAClB;;;AD7BA,eAAO,gBAAuC,QAAgB;AAC5D,MAAM,WAAO,sBAAQ,GACfC,UAAS,eAAU;AAEzB,MAAI;AACF,QAAM,OAAO,MAAM,KAAK,QAAQ,MAAM;AAEtC,WAAK,OAIE,4BAAkB,IAAI,IAHpB;AAAA,EAIX,QAAE;AACA,IAAAA,QAAO;AAAA,MACL;AAAA,QACE;AAAA,MACF;AAAA,MACA;AAAA,IACF;AAEA;AAAA,EACF;AACF;;;AEpBA,SAAS,iBAAiB,SAAkB,SAAuB;AACjE,MAAM,SAAS,QAAQ;AAEvB,EAAK,QAAQ,SAAS,MAAM,KAC1B,+BAA+B,SAAS,MAAM;AAElD;AAEA,IAAO,6BAAQ;;;AhBWf;AA7BA,+DAuCa,OAAqB,OACzB;AAAA,EACL,OAAO,gBAAgB,sBAAc,KAAK;AAC5C,IAGI,aAAa,MAAM;AACvB,MAAM,WAAO,8BAAc,GAErB,CAAC,aAAa,cAAc,QAAI,yBAAS,CAAC,GAC1C,CAAC,aAAa,cAAc,QAAI,yBAA6B,IAAI,GACjE,CAAC,UAAU,WAAW,QAAI,yBAAe,GAEzC,2BAAuB;AAAA,IAC3B,CAAC,qBAA+C;AAC9C,kBAAY;AAAA,QACV,cAAc,iBAAiB;AAAA,MACjC,CAAC,GAED,eAAe,CAAC;AAAA,IAClB;AAAA,IACA,CAAC;AAAA,EACH;AAEA,SACE,mDAAC;AAAA,IAAiB,QAAQ;AAAA,IACxB,6DAAC;AAAA,MACC,aAAa,wBAAe;AAAA,MAC5B;AAAA,MACA;AAAA,MAEA,6DAAC,qBAAmB,UAAnB;AAAA,QAA4B,OAAO,EAAE,aAAa,eAAe;AAAA,QAChE,6DAAC;AAAA,UAAI,WAAW;AAAA,UACd,6DAAC;AAAA,YACC,WAAW;AAAA,YAEX;AAAA,iEAAC;AAAA,gBACC,WACE;AAAA,gBAIF;AAAA,qEAAC;AAAA,oBAAI,WAAW;AAAA,oBACd,6DAAC;AAAA,sBAAK,MAAM;AAAA,uBAAZ;AAAA;AAAA;AAAA;AAAA,2BAA2B;AAAA,qBAD7B;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA,kBAEA,mDAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC;AAAA,wBAAG,WAAW,gBAAgB;AAAA,wBAC7B,6DAAC;AAAA,0BAAqB,UAAU;AAAA,2BAAhC;AAAA;AAAA;AAAA;AAAA,+BAAsD;AAAA,yBADxD;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA,sBAEA,mDAAC;AAAA,wBAAG,WAAW,gBAAgB,KAAK;AAAA,wBACjC,WAACC,cAAa,mDAAC;AAAA,0BAAuB,MAAMA;AAAA,2BAA9B;AAAA;AAAA;AAAA;AAAA,+BAAwC;AAAA,yBADzD;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA;AAAA,qBAPF;AAAA;AAAA;AAAA;AAAA,yBAQA;AAAA;AAAA,iBAlBF;AAAA;AAAA;AAAA;AAAA,qBAmBA;AAAA,cAEA,mDAAC;AAAA,gBACC,WACE;AAAA,gBAIF,6DAAC;AAAA,kBACC,6DAAC,oCAAD;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA,mBAD1B;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,iBARF;AAAA;AAAA;AAAA;AAAA,qBASA;AAAA;AAAA,aAjCF;AAAA;AAAA;AAAA;AAAA,iBAkCA;AAAA,WAnCF;AAAA;AAAA;AAAA;AAAA,eAoCA;AAAA,SArCF;AAAA;AAAA;AAAA;AAAA,aAsCA;AAAA,OA3CF;AAAA;AAAA;AAAA;AAAA,WA4CA;AAAA,KA7CF;AAAA;AAAA;AAAA;AAAA,SA8CA;AAEJ,GAEO,qBAAQ;AAER,SAASC,iBAAgB;AAC9B,MAAM,eAAW,4BAAY;AAE7B,SACE,mDAAC;AAAA,IACC,WACE;AAAA,IAGF,6DAAC;AAAA,MAAI,WAAW;AAAA,MACd;AAAA,2DAAC;AAAA,UACC,6DAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,iBAAM;AAAA,WADR;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAEA,mDAAC;AAAA,UAAM,MAAM;AAAA,UACX;AAAA,+DAAC,cAAM,SAAN;AAAA,cACC,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA6C;AAAA,eAD/C;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEA,mDAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAAoD;AAAA;AAAA,WALtD;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,QAEA,mDAAC;AAAA,UAAO,SAAS,MAAM,SAAS,GAAG;AAAA,UACjC,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAAgC;AAAA,WADlC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA;AAAA,OAfF;AAAA;AAAA;AAAA;AAAA,WAgBA;AAAA,KArBF;AAAA;AAAA;AAAA;AAAA,SAsBA;AAEJ;AAEA,eAAsB,OAAO,MAAkB;AAC7C,MAAM,MAAM,KAAK,SACX,WAAW,MAAM,IAAI,SAAS,GAC9B,OAAO,KAAK,MAAM,SAAS,IAAI,MAAM,CAAW,GAChD,aAAa,MAAM,cAAc,EAAE,eAAe,IAAI;AAE5D,MAAI,CAAC,WAAW;AACd,WAAO,yBAAyB;AAGlC,QAAM,2BAAiB,KAAK,CAAC,MAAM,CAAC;AAEpC,MAAM,YAAY,MAAM,qBAAqB,GAAG,GAE1C,UADO,MAAM,gBAAgB,SAAS,GACxB,KACd,mBAAmB,WAAW,KAAK,cAOnC,iBAAiB,MAAM,4BALhB;AAAA,IACX;AAAA,IACA;AAAA,EACF,CAEoD,GAE9C,UAAU,IAAI,QAAQ;AAAA,IAC1B,cAAc,MAAM,8BAA8B,cAAc;AAAA,EAClE,CAAC;AAED,aAAO,uBAAS,sBAAc,MAAM,SAAS;AAAA,IAC3C;AAAA,EACF,CAAC;AACH;AAEA,eAAsBC,QAAO,MAAkB;AAnL/C;AAoLE,MAAM,YAAY,MAAM,qBAAqB,KAAK,OAAO,GACnD,OAAO,MAAM,gBAAgB,SAAS,EAAE,MAAM,MAAG;AAAA,GAAY;AAEnE,MAAI,CAAC;AACH,UAAM,iBAAiB;AAGzB,MAAM,SAAS,KAAK,KAEd,CAAC,UAAU,QAAQ,IAAI,MAAM,QAAQ,IAAI;AAAA,IAC7C,gBAAgB,MAAM;AAAA,IACtBC,aAAY,MAAM;AAAA,EACpB,CAAC;AAKD,MAAI,CAAC;AAMH,eAAO,mBALuB;AAAA,MAC5B,MAAM,YAAY;AAAA,MAClB,MAAM;AAAA,IACR,CAEoB;AAGtB,MAAM,eAAe,MAAM,uBAAuB,KAAK,GAAG;AAS1D,QARkB,0CAAU,iBAAV,mBAAwB,cAQzB;AACf,UAAM,kBAAkB;AAQ1B,aAAO,mBALuB;AAAA,IAC5B,MAAM,YAAY;AAAA,IAClB,MAAM;AAAA,EACR,CAEoB;AACtB;AAEA,SAAS,mBAAmB;AAC1B,aAAO,uBAAS,sBAAc,MAAM,MAAM;AAC5C;AAEA,SAAS,oBAAoB;AAC3B,aAAO,uBAAS,sBAAc,MAAM,OAAO;AAC7C;AAOA,eAAeA,aAAY,QAAgB;AACzC,MAAM,EAAE,gBAAAC,gBAAe,IAAI,MAAM,iEAE3BC,OAAM,MAAMD,gBAAe,MAAM,GACjC,OAAOC,KAAI,KAAK;AAEtB,MAAI;AACF,WAAO;AAAA,MACL,GAAG;AAAA,MACH,IAAIA,KAAI;AAAA,IACV;AAEJ;AAEA,SAAS,gBAAgB;AACvB,SAAO,aAAE,OAAO;AAAA,IACd,cAAc,aAAE,OAAO;AAAA,EACzB,CAAC;AACH;;;AiBlQA;AAAA;AAAA,gBAAAC;AAAA;AACA,IAAAC,eAAyB,4BACzBC,cAAkB,gBAClB,cAAqB;;;ACHrB,iBAAoB;AAYL,SAAR,kBAAmC,SAAkB,cAAc,KAAK;AAC7E,MAAM,WAAW,QAAQ,IAAI,SAAS,KAAK,QAAQ,IAAI,QAAQ;AAE/D,SAAK,WAIO,IAAI,eAAI,QAAQ,EAEjB,WALF;AAMX;;;ACtBA,kBAAiB;;;ACGjB,IAAM,0BAA0B;AAEhC,eAAe,sBAAsB;AACnC,MAAM,EAAE,aAAa,IAAI,MAAM,OAAO,oBAEhC,SAAS,QAAQ,IAAI,YACrB,UAAU,SAAS,CAAC,MAAM,IAAI,CAAC;AAErC,SAAK,QAAQ,UACX,eAAU,EAAE;AAAA,IACV;AAAA,EACF,GAGK,aAAa,yBAAyB;AAAA,IAC3C,MAAM;AAAA,IACN,UAAU;AAAA,IACV,QAAQ,QAAQ,IAAI,aAAa;AAAA,IACjC,UAAU;AAAA,IACV;AAAA,EACF,CAAC;AACH;AAEA,eAAsB,sBAAsB,SAAkB;AAE5D,UADe,MAAM,oBAAoB,GAC3B,MAAM,0BAAgB,OAAO,CAAC;AAC9C;AAEA,eAAsB,0BAA0B,YAAoB;AAElE,UADe,MAAM,oBAAoB,GAC3B,UAAU,UAAU;AACpC;AAEA,eAAsB,yBAAyB;AAE7C,UADe,MAAM,oBAAoB,GAC3B,UAAU,IAAI,EAAE,QAAQ,GAAG,CAAC;AAC5C;;;AD1BA,eAAe,SACb,SACA,gBAA+B,sBAC/B;AACA,MAAM,OAAO,IAAI,YAAAC,QAAK,GAChB,SAAS,MAAM,sBAAsB,OAAO,GAC5C,QAAQ,MAAM,sBAAsB,aAAa,EAAE,OAAO;AAIhE,MAAI,aAAY,KAAK,GAIrB;AAAA,QAAI,CAAC;AACH,aAAO,2BAA2B,uBAAuB;AAG3D,QAAI,CAAC;AACH,aAAO,2BAA2B,uBAAuB;AAG3D,QAAI,CAAC,KAAK,OAAO,QAAQ,KAAK;AAC5B,aAAO,2BAA2B,mBAAmB;AAAA;AAEzD;AAEA,SAAS,qBAAqB,KAAc;AAC1C,SAAO,IAAI,QAAQ,IAAI,cAAc;AACvC;AAEA,SAAS,YAAY;AACnB,SAAO;AACT;AAEA,SAAS,YAAY,OAAuB;AAC1C,SAAO,UAAU,KAAK,UAAU;AAClC;AAEA,SAAS,sBAAsB,eAA8B;AAC3D,SAAO,CAAC,YAAqB;AAC3B,QAAI,OAAO,iBAAkB;AAC3B,aAAO;AACF,QAAI,OAAO,iBAAkB;AAClC,aAAO,cAAc,OAAO;AAAA,EAEhC;AACF;AAEA,IAAO,oBAAQ;;;AE7Df,IAAAC,cAAoB;;;ACDpB,IAAM,qBAAqB;AAO3B,eAAO,oBAA2C;AAChD,SAAI,aAAa,KACf,QAAQ,KAAK,mCAAmC,GAEzC,0BAA0B,KAG5B,4BAA4B;AACrC;AAEA,eAAe,8BAA8B;AAC3C,MAAM,SAAS,MAAM,WAAW,GAC1B,MAAM,aAAa;AAEzB,SAAO,IAAI,OAAO,KAAK;AAAA,IACrB,YAAY;AAAA,EACd,CAAC;AACH;AAEA,SAAS,eAAe;AACtB,SAAO,QAAQ,IAAI,UAAU;AAC/B;AAEA,eAAe,4BAA4B;AACzC,MAAM,SAAS,MAAM,WAAW;AAEhC,SAAO,IAAI,OAAO,iBAAiB;AAAA,IACjC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,UAAU;AAAA,EACZ,CAAC;AACH;AAEA,SAAS,eAAe;AACtB,MAAM,oBAAoB,QAAQ,IAAI;AAEtC,MAAI,CAAC;AACH,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAGF,SAAO;AACT;AAEA,eAAe,aAAa;AAC1B,MAAM,EAAE,SAAS,OAAO,IAAI,MAAM,OAAO;AAEzC,SAAO;AACT;;;ADvCA,eAAO,qBACL,QACA;AACA,MAAM,aAAa,iBAAiB,OAAO,WAAW;AAAA,IACpD,SAAS;AAAA,EACX,CAAC,GAEK,YAAY,iBAAiB,OAAO,WAAW;AAAA,IACnD,QAAQ;AAAA,EACV,CAAC,GAKK,oBAAoB,OAAO,gBAI3B,WAAW,OAAO,cAAc,QAKhC,OAAiD,gBAGjD,SAAS,MAAM,kBAAkB,GAEjC,WAAyD;AAAA,IAC7D,UAAU;AAAA,IACV,OAAO,OAAO;AAAA,EAChB;AAEA,SAAO,OAAO,SAAS,SAAS,OAAO;AAAA,IACrC;AAAA,IACA;AAAA,IACA,YAAY,CAAC,QAAQ;AAAA,IACrB,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,qBAAqB;AAAA,EACvB,CAAC;AACH;AAEA,SAAS,iBAAiB,QAAgB,QAAsB;AAC9D,MAAM,MAAM,IAAI,gBAAI,MAAM,GACpB,YAAY,YAAY,GAAG;AAEjC,WAAW,SAAS;AAClB,cAAU,aAAa,IAAI,OAAO,OAAO,MAAM;AAGjD,SAAO,UAAU,SAAS;AAC5B;AAEA,SAAS,YAAY,WAAgB;AACnC,mBAAU,aAAa,OAAO,QAAQ,GACtC,UAAU,aAAa,OAAO,SAAS,GACvC,UAAU,aAAa,OAAO,OAAO,GAE9B;AACT;;;AJlEA;;;AMZA,IAAAC,oBAAyC;AAIzC;AAQA;AASA,eAAsB,uBAAuB,QAG1C;AACD,MAAM,OAAO,MAAM,SAAS,GAEtB,gBADM,MAAM,oBAAoB,OAAO,cAAc,GAClC,KAAK,GAGxB,eAAe,OAAO,YAAW,6CAAc,YAAW,CAAC;AAEjE,MAAI,CAAC,gBAAgB,CAAC;AACpB,WAAO,wBAAwB,sCAAsC;AAKvE,MAAM,OAFU,OAAO,OAAO,aAAa,OAAO,EAE7B,IAAI,CAAC,EAAE,KAAK,MACxB,KAAK,QAAQ,KAAK,EAAE,EAAE,KAAK,2BAAiB,CACpD;AAED,SAAO,MAAM,QAAQ,IAAI,IAAI;AAC/B;AAOA,eAAsB,6BAA6B,QAIhD;AACD,MAAM,EAAE,cAAc,eAAe,eAAe,IAAI,QAClDC,OAAM,MAAM,oBAAoB,cAAc,GAC9C,eAAeA,KAAI,KAAK;AAE9B,MAAI,CAAC;AACH,UAAM,uBAAuB;AAG/B,4BAA0B;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,MAAM,aAAa,cAAc,YAAY;AAE7C,SAAOA,KAAI,IAAI,OAAO;AAAA,IACpB,CAAC,aAAa,6BAAW,OAAO;AAAA,EAClC,CAAC;AACH;AAOA,eAAsB,iBAAiB,QAKpC;AACD,MAAM,EAAE,MAAM,eAAe,cAAc,eAAe,IAAI,QACxDA,OAAM,MAAM,oBAAoB,cAAc,GAC9C,eAAeA,KAAI,KAAK;AAE9B,MAAI,CAAC;AACH,UAAM,uBAAuB;AAG/B,4BAA0B;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,MAAM,OAAO,MAAM,eAAe,YAAY,GACxC,aAAa,cAAc,YAAY;AAE7C,QAAMA,KAAI,IAAI,OAAO;AAAA,IACnB,CAAC,aAAa;AAAA,MACZ;AAAA,MACA,MAAM,KAAK;AAAA,IACb;AAAA,EACF,CAAC;AACH;AAMA,eAAsB,2BAA2B;AAAA,EAC/C;AAAA,EACA;AACF,GAGG;AACD,MAAM,gBAAY,gCAAa,GACzB,OAAO,MAAM,SAAS,GACtB,QAAQ,UAAU,MAAM,GACxB,YAAY,MAAM,gBAAgB,IAAI;AAE5C,MAAI,EAAC,+BAAW;AACd,WAAO,uBAAuB;AAGhC,MAAM,SAAS,UAAU,KAAK;AAI9B,MAHoB,IAAI,KAAK,EAAE,QAAQ,IACD,OAAO;AAG3C,gBAAM,UAAU,IAAI,OAAO,GAErB,IAAI,MAAM,mBAAmB;AAGrC,MAAM,iBAAiB,OAAO,aAAa,IACrC,OAAO,OAAO,MACd,WAAW,UAAU,UAErB,kBAAkB,UAAU,IAAI,kBAAkB,gBAAgB,GAClE,UAAU,UAAU,IAAI,QAAQ,GAGhC,aAAa,cAAc,MAAM;AAEvC,eAAM,OAAO,iBAAiB;AAAA,IAC5B,CAAC,aAAa;AAAA,MACZ,MAAM;AAAA,MACN;AAAA,IACF;AAAA,EACF,CAAC,GAGD,MAAM,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC,GAGzB,MAAM,OAAO,UAAU,GAAG,GAG1B,MAAM,KAAK,oBAAoB,QAAQ;AAAA,IACrC,WAAW;AAAA,EACb,CAAC,GAED,MAAM,MAAM,OAAO,GAEZ;AACT;AAEA,SAAS,cAAc,QAAgB;AAGrC,SAAO,WAAyB;AAClC;AAQA,SAAS,0BAA0B,QAIhC;AACD,MAAM,UAAU,OAAO,aAAa,SAC9B,cAAc,QAAQ,OAAO,gBAC7B,aAAa,QAAQ,OAAO;AAElC,MAAI,CAAC;AACH,WAAO,uBAAuB,6BAA6B;AAG7D,MAAI,CAAC;AACH,WAAO,uBAAuB,8BAA8B;AAG9D,MAAI,YAAY,QAAQ,WAAW;AACjC,WAAO;AAAA,MACL;AAAA,IACF;AAEJ;AAQA,eAAsB,gBAAgB,MAAc;AAClD,MAAMC,cAAa,qBAAqB,GAClC,OAA+B,QAC/B,KAAK,MAGLC,OAAM,MADED,YAAW,MAAM,MAAM,IAAI,IAAI,EACrB,IAAI;AAE5B,MAAIC,KAAI;AACN,WAAOA,KAAI,KAAK;AAEpB;AAMA,eAAsB,0BAA0B,QAG7C;AA7OH;AA+OE,MAAM,QADM,MAAM,oBAAoB,OAAO,cAAc,GAC1C,KAAK;AAEtB,UAAO,kCAAM,QAAQ,OAAO,YAArB,mBAA8B;AACvC;AAyBA,eAAsB,WAAW;AAC/B,MAAM,EAAE,SAAAC,SAAQ,IAAI,MAAM,OAAO;AAEjC,SAAOA,SAAQ;AACjB;;;AN9PA,eAAsBC,QAAO,OAAmB;AAC9C,MAAM,MAAM,MAAM,SACZ,OAAO,MAAM,IAAI,SAAS,GAC1B,OAAO,OAAO,YAAY,KAAK,QAAQ,CAAC,GACxC,aAAa,MAAMC,eAAc,EAAE,eAAe,IAAI,GAEtDC,uBAAsB,MAAM;AAChC,QAAM,UAAU,kBAAkB,IAAI,OAAO,GACvC,UAAM,kBAAK,SAAS,aAAa;AAEvC,eAAO,uBAAS,GAAG;AAAA,EACrB;AAEA,MAAI,CAAC,WAAW;AACd,WAAOA,qBAAoB;AAG7B,QAAM,kBAAS,KAAK,WAAW,KAAK,SAAS;AAE7C,MAAM,YAAY,MAAM,qBAAqB,GAAG,GAE1C,UADO,MAAM,gBAAgB,SAAS,GACxB,KACd,wBAAwB,MAAM,0BAA0B,GAAG;AAEjE,MAAI,CAAC,WAAW;AACd,WAAOA,qBAAoB;AAG7B,MAAM,EAAE,gBAAgB,SAAS,YAAY,UAAU,IAAI,WAAW;AAGtE,MAAI,EAFiC,0BAA0B;AAG7D,WAAOA,qBAAoB;AAY7B,MAAI,CARqB,MAAM,yBAAyB;AAAA,IACtD;AAAA,IACA;AAAA,EACF,CAAC;AAMC,0BAAU,EAAE;AAAA,MACV;AAAA,QACE;AAAA,QACA;AAAA,MACF;AAAA,MACA;AAAA,IACF,GAEOA,qBAAoB;AAG7B,MAAI;AACF,QAAM,EAAE,IAAI,IAAI,MAAM,qBAAqB;AAAA,MACzC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC,GAEK,YAAY,qBAAqB,KAAK,SAAS;AAGrD,eAAO,uBAAS,WAAW;AAAA,MACzB,QAAQ,8BAAe;AAAA,IACzB,CAAC;AAAA,EACH,SAAS,GAAP;AACA,0BAAU,EAAE,MAAM,GAAG,uBAAuB,GAErCA,qBAAoB;AAAA,EAC7B;AACF;AAEA,eAAe,yBAAyB,QAGrC;AACD,MAAI;AACF,QAAM,WAAW,MAAM,0BAA0B,MAAM;AAEvD,WAAI,aAAa,SACR,KAGF,iBAAiB,QAAQ;AAAA,EAClC,SAAS,GAAP;AACA,0BAAU,EAAE,MAAM,GAAG,8BAA8B,GAE5C;AAAA,EACT;AACF;AAEA,SAASD,iBAAgB;AACvB,SAAO,cAAE,OAAO;AAAA,IACd,WAAW,cAAE,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,gBAAgB,cAAE,OAAO,EAAE,IAAI,CAAC;AAAA,IAChC,SAAS,cAAE,OAAO,EAAE,IAAI,CAAC;AAAA,IACzB,YAAY,cAAE,OAAO,EAAE,SAAS;AAAA,IAChC,WAAW,cAAE,OAAO,EAAE,IAAI,CAAC;AAAA,EAC7B,CAAC;AACH;AAWA,SAAS,qBAAqB,WAA0B,WAAmB;AACzE,SAAI,cAAc,KAAK,CAAC,YACf,CAAC,WAAW,cAAc,EAAE,KAAK,GAAG,IAGtC;AACT;AAKA,SAAS,gBAAgB;AAGvB,SAF4B,QAAQ,IAAI,0BAET;AACjC;;;AOnJA;AAAA;AAAA,gBAAAE;AAAA;AAEA,IAAAC,eAAqB;;;ACFrB,IAAK,iBAAL,kBAAKC,qBACHA,gBAAA,sBAAsB,4CACtBA,gBAAA,YAAY,8BACZA,gBAAA,qBAAqB,yCACrBA,gBAAA,sBAAsB,iCACtBA,gBAAA,sBAAsB,iCALnBA,kBAAA,uBAQE,+BAAQ;;;ACPf,IAAAC,oBAA2B;AAE3B;AAeO,SAAS,4BAA4B,OAA6B;AACvE,MAAM,EAAE,YAAY,cAAc,eAAe,IAAI;AAGrD,SAFqB,2BAA2B,EAAE,IAAI,cAAc,EAEhD,OAAO;AAAA,IACzB;AAAA,IACA;AAAA,EACF,CAAC;AACH;AAQA,eAAsB,+BAA+B,gBAAwB;AAG3E,UAFqB,MAAM,gCAAgC,cAAc,GAErD,OAAO;AAAA,IACzB,cAAc,6BAAW,OAAO;AAAA,EAClC,CAAC;AACH;AAOA,eAAsB,4BAA4B,gBAAwB;AAGxE,SAFqB,2BAA2B,EAAE,IAAI,cAAc,EAEhD,OAAO;AAAA,IACzB;AAAA,EACF,CAA6B;AAC/B;AASA,eAAsB,uBACpB,gBACA,cACA;AAGA,UAFqB,MAAM,gCAAgC,cAAc,GAErD,OAAO;AAAA,IACzB;AAAA,EACF,CAAC;AACH;AAQA,eAAe,gCAAgC,gBAAwB;AACrE,MAAM,OAAO,mBACP,KAAK,MAEL,EAAE,MAAM,KAAK,IAAI,MAAM,2BAA2B,EACrD,MAAM,MAAM,IAAI,cAAc,EAC9B,MAAM,CAAC,EACP,IAAI;AAEP,MAAI,CAAC;AACH,UAAM,IAAI;AAAA,MACR,2CAA2C;AAAA,IAC7C;AAGF,SAAO,KAAK,GAAG;AACjB;AAOA,eAAsB,4BAA4B,YAAoB;AACpE,MAAM,gBAAgB,2BAA2B,GAC3C,OAAO,cACP,KAAK;AAIX,UAFe,MAAM,cAAc,MAAM,MAAM,IAAI,UAAU,EAAE,IAAI,GAErD,KAAK;AACrB;;;ACzGO,SAAS,8BACd,cACA,4BAC0B;AAR5B;AASE,MAAM,WAAW,aAAa,MAAM,KAAK,IACnC,QAAQ,SAAS;AAEvB,SAAO;AAAA,IACL,IAAI,aAAa;AAAA,IACjB,SAAS,+BAAO;AAAA,IAChB;AAAA,IACA,UAAU,SAAS,MAAM,YAAY;AAAA,IACrC,YAAU,oCAAO,cAAP,mBAAkB,aAAY;AAAA,IACxC,iBAAe,oCAAO,cAAP,mBAAkB,mBAAkB;AAAA,IACnD,WAAW,aAAa;AAAA,IACxB,gBAAgB,aAAa;AAAA,IAC7B,cAAc,aAAa;AAAA,IAC3B,eAAe,aAAa,eAAe;AAAA,IAC3C,aAAa,aAAa,aAAa;AAAA,EACzC;AACF;;;AHFA,IAAM,0BAA0B,oBAE1B,mBAAmB,QAAQ,IAAI;AAKrC,eAAsBC,QAAO,OAAmB;AAC9C,MAAM,MAAM,MAAM,SACZ,YAAY,IAAI,QAAQ,IAAI,uBAAuB;AAEzD,MAAI,CAAC;AACH,WAAO;AAAA,MACL;AAAA,IACF;AAIF,MAAI,CAAC;AACH,WAAO,yBAAyB;AAGlC,MAAMC,UAAS,eAAU,GACnB,UAAU,MAAM,IAAI,KAAK,GACzB,SAAS,MAAM,kBAAkB,GAEjC,QAAQ,OAAO,SAAS;AAAA,IAC5B;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,EAAAA,QAAO;AAAA,IACL;AAAA,MACE,MAAM,MAAM;AAAA,IACd;AAAA,IACA;AAAA,EACF;AAEA,MAAI;AACF,YAAQ,MAAM;AAAA,WACP,6BAAe,WAAW;AAC7B,YAAM,UAAU,MAAM,KAAK,QACrB,iBAAiB,QAAQ,cAEzB,eAAe,MAAM,OAAO,cAAc;AAAA,UAC9C;AAAA,QACF;AAEA,cAAM,oBAAoB,SAAS,YAAY;AAE/C;AAAA,MACF;AAAA,WAEK,6BAAe,qBAAqB;AAEvC,YAAM,iBADU,MAAM,KAAK,OACI;AAE/B,cAAM,4BAA4B,cAAc;AAEhD;AAAA,MACF;AAAA,WAEK,6BAAe,qBAAqB;AACvC,YAAM,eAAe,MAAM,KAAK;AAEhC,cAAM,+BAA+B,aAAa,EAAE;AAEpD;AAAA,MACF;AAAA,WAEK,6BAAe,qBAAqB;AACvC,YAAM,eAAe,MAAM,KAAK;AAEhC,cAAM,sBAAsB,YAAY;AAExC;AAAA,MACF;AAAA;AAGF,eAAO,mBAAK,EAAE,SAAS,GAAK,CAAC;AAAA,EAC/B,SAAS,GAAP;AACA,WAAAA,QAAO;AAAA,MACL;AAAA,QACE,MAAM,MAAM;AAAA,MACd;AAAA,MACA;AAAA,IACF,GAEAA,QAAO,MAAM,CAAC,GAEP,kCAAkC;AAAA,EAC3C;AACF;AAOA,eAAe,oBACb,SACA,cACA;AACA,MAAM,iBAAiB,QAAQ,qBACzB,aAAa,QAAQ,UACrB,SAAS,eAAe,QAAQ,cAAc,GAO9C,mBAAmB,8BAA8B,cAAc,MAAM;AAE3E,SAAO,4BAA4B;AAAA,IACjC;AAAA,IACA;AAAA,IACA,cAAc;AAAA,EAChB,CAAC;AACH;AAEA,eAAe,sBAAsB,cAAmC;AACtE,MAAM,mBAAmB,8BAA8B,YAAY;AAEnE,QAAM,uBAAuB,aAAa,IAAI,gBAAgB;AAChE;AAEA,SAAS,eAAe,eAAuB;AAG7C,SAFe,kBAAkB;AAKnC;;;AI7JA;AAAA;AAAA,gBAAAC;AAAA;AAAA,IAAAC,cAAkB,gBAClBC,eAAqB,iBAErBC,eAAyB;AAOzB;;;ACJA,eAAO,2BAAkD,QAGtD;AAGD,UAFe,MAAM,kBAAkB,GAEzB,cAAc,SAAS,OAAO;AAAA,IAC1C,UAAU,OAAO;AAAA,IACjB,YAAY,OAAO;AAAA,EACrB,CAAC;AACH;;;ADIA,eAAsBC,QAAO,OAAmB;AAC9C,MAAM,MAAM,MAAM,SACZ,OAAO,MAAM,IAAI,SAAS,GAC1B,OAAO,OAAO,YAAY,KAAK,QAAQ,CAAC,GACxC,aAAa,MAAMC,eAAc,EAAE,eAAe,IAAI,GACtD,eAAe,kBAAkB,IAAI,OAAO;AAElD,MAAI,CAAC,WAAW;AACd,WAAO,oBAAoB,YAAY;AAGzC,MAAM,EAAE,YAAY,UAAU,IAAI,WAAW;AAE7C,QAAM,kBAAS,KAAK,SAAS;AAE7B,MAAMC,UAAS,eAAU,GACnB,UAAU,MAAM,qBAAqB,GAAG,GAExC,UADO,MAAM,gBAAgB,OAAO,GACtB;AAQpB,MAAI,CALc,MAAM,+BAA+B;AAAA,IACrD;AAAA,IACA;AAAA,EACF,CAAC;AAGC,WAAO,oBAAoB,YAAY;AAGzC,MAAI;AACF,QAAM,UAAU,IAAI,QAAQ,IAAI,SAAS,GACnC,SAAS,IAAI,QAAQ,IAAI,QAAQ,GACjC,YAAY,WAAW,UAAU,sBAAc,MAAM,SAErD,EAAE,IAAI,IAAI,MAAM,2BAA2B;AAAA,MAC/C;AAAA,MACA;AAAA,IACF,CAAC;AAED,eAAO,uBAAS,KAAK;AAAA,MACnB,QAAQ,8BAAe;AAAA,IACzB,CAAC;AAAA,EACH,SAAS,OAAP;AACA,WAAAA,QAAO,MAAM,OAAO,sCAAsC,GAEnD,oBAAoB,YAAY;AAAA,EACzC;AACF;AAOA,eAAe,+BAA+B,QAG3C;AACD,MAAI;AACF,QAAM,eAAe,MAAM,4BAA4B,OAAO,UAAU,GAElE,WAAW,MAAM,0BAA0B;AAAA,MAC/C,gBAAgB,aAAa;AAAA,MAC7B,QAAQ,OAAO;AAAA,IACjB,CAAC;AAED,WAAI,aAAa,SACR,KAGF,iBAAiB,QAAQ;AAAA,EAClC,SAAS,GAAP;AACA,0BAAU,EAAE,MAAM,GAAG,8BAA8B,GAE5C;AAAA,EACT;AACF;AAEA,SAASD,iBAAgB;AACvB,SAAO,cAAE,OAAO;AAAA,IACd,YAAY,cAAE,OAAO;AAAA,IACrB,WAAW,cAAE,OAAO;AAAA,EACtB,CAAC;AACH;AAEA,SAAS,oBAAoB,cAAsB;AACjD,MAAM,UAAM,mBAAK,cAAc,aAAa;AAE5C,aAAO,uBAAS,GAAG;AACrB;;;AE9GA;AAAA;AAAA;AAAA;AAAA,IAAAE,iBAAuB,6BACvBA,iBAAyB;AAKzB;;;ACNA,IAAAC,oBAAoD;;;ACApD,IAAAC,iBAA0B;AAG1B;AAMO,SAAS,uBAAuB;AATvC;AAUE,MAAM,OAAO,eAAe,GACtB,UAAS,kCAAM,SAAN,mBAAY;AAE3B,gCAAU,MAAM;AACd,IAAI,CAAC,mBAAU,MAIT,YAAY;AAChB,UAAM,EAAE,cAAc,UAAU,IAAI,MAAM,OAAO;AAEjD,MAAI,UACF,UAAU,aAAa,GAAG,MAAM;AAAA,IAEpC,GAAG;AAAA,EACL,GAAG,CAAC,MAAM,CAAC;AACb;;;ACpBO,SAAS,uBAAuB;AACrC,uBAAqB;AACvB;;;AFRA,+DAMM,4BAAuC,CAAC,EAAE,SAAS,MACpC,sBAAc,YAEf,CAAC,mBAAU,IACpB;AAAA,EAAG;AAAA,GAAH;AAAA;AAAA;AAAA;AAAA,OAAY,IAInB,mDAAC;AAAA,EACE;AAAA,GADH;AAAA;AAAA;AAAA;AAAA,OAEA;AAIJ,SAAS,iCAAiC,OAAgC;AACxE,MAAM,EAAE,MAAM,KAAK,OAAO,QAAI,oCAAiB,OAAO,QAAQ;AAC5D,QAAM,EAAE,aAAa,IAAI,MAAM,OAAO;AAEtC,WAAO,aAAa,GAAG;AAAA,EACzB,CAAC;AAED,SAAI,WAAW,YACN;AAAA,IAAG,gBAAM;AAAA,KAAT;AAAA;AAAA;AAAA;AAAA,SAAkB,IAIzB,mDAAC;AAAA,IAAkB;AAAA,IACjB,6DAAC;AAAA,MACE,gBAAM;AAAA,OADT;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,KAHF;AAAA;AAAA;AAAA;AAAA,SAIA;AAEJ;AAEA,SAAS,gCAAgC;AAAA,EACvC;AACF,GAA4B;AAC1B,8BAAqB,GAEd;AAAA,IAAG;AAAA,KAAH;AAAA;AAAA;AAAA;AAAA,SAAY;AACrB;AAEA,IAAO,oCAAQ;;;ADhDf;AAWA,SAAS,aAAa;AACpB,MAAM,CAAC,aAAa,cAAc,QAAI,yBAAsB;AAE5D,SACE,mDAAC;AAAA,IAAiB,QAAQ;AAAA,IACxB,6DAAC;AAAA,MACC,aAAa,wBAAe;AAAA,MAC5B;AAAA,MACA;AAAA,MAEA,6DAAC;AAAA,QACC,6DAAC,qBAAmB,UAAnB;AAAA,UAA4B,OAAO,EAAE,aAAa,eAAe;AAAA,UAChE;AAAA,+DAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,mBAAY;AAAA,YACZ,mDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,mBAAQ;AAAA;AAAA,WAFV;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,OAVF;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA,KAZF;AAAA;AAAA;AAAA;AAAA,SAaA;AAEJ;AAEA,IAAO,eAAQ;;;AIhCf;AAAA;AAAA;AAAA,cAAAC;AAAA;;;ACAA,6BAA4B,iEAC5BC,qBAAuB,gCACvBC,wBAAsB;AAEtB;AACA;AACA;AANA,+DAUM,QAAQ,sBAAc,OAAO,OAE7B,eAIF,MAEA,mDAAC;AAAA,EACC,WACE;AAAA,EAID,gBAAM,IAAI,CAAC,SACH,mDAAC;AAAA,IAAY,YAAU;AAAA,IAA0B;AAAA,KAApB,KAAK,eAAlC;AAAA;AAAA;AAAA;AAAA,SAA6D,CACrE;AAAA,GARH;AAAA;AAAA;AAAA;AAAA,OASA,GAIG,uBAAQ;AAEf,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,eAAe;AAE5B,SAAS,YACP,OAUA;AACA,MAAM,WAAW,GAAG,sBAAc,MAAM,qBAAqB,MAAM,KAAK;AAExE,SACE,mDAAC;AAAA,IACC,eAAW,mBAAAC;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA,QACE,CAAC,8GAEC,MAAM;AAAA,MACV;AAAA,IACF;AAAA,IAEA;AAAA,yDAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC;AAAA,YAAQ,MAAM;AAAA,YACb,6DAAC;AAAA,cAAK,WAAW;AAAA,cACd,gBAAM,KAAK;AAAA,eADd;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UAEA,mDAAC;AAAA,YAAO,gBAAM,KAAK;AAAA,aAAnB;AAAA;AAAA;AAAA;AAAA,iBAAyB;AAAA,UAEzB,mDAAC;AAAA,YAAK,WAAW;AAAA,YACd,gBAAM,KAAK;AAAA,aADd;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA;AAAA,SAXF;AAAA;AAAA;AAAA;AAAA,aAYA;AAAA,MAEA,mDAAC;AAAA,QAAI,WAAW;AAAA,QACd,6DAAC;AAAA,UAAa,UAAU,MAAM,KAAK;AAAA,WAAnC;AAAA;AAAA;AAAA;AAAA,eAA6C;AAAA,SAD/C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW,MAAM;AAAA,QACnB,6DAAC;AAAA,UAAI,WAAW;AAAA,UACd,6DAAC;AAAA,YAAO,MAAM;AAAA,YAAS,OAAK;AAAA,YAAC,MAAM;AAAA,YACjC,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAAqC;AAAA,aADvC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,WAHF;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,SALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA;AAAA,KAtCF;AAAA;AAAA;AAAA;AAAA,SAuCA;AAEJ;AAEA,SAAS,aACP,OAGA;AACA,SACE,mDAAC;AAAA,IAAG,WAAW;AAAA,IACZ,gBAAM,SAAS,IAAI,CAAC,YAEjB,mDAAC;AAAA,MACC,6DAAC;AAAA,QACC,SAAS,yBAAyB;AAAA,QAClC,UAAU;AAAA,SAFZ;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,OAJa,SAAf;AAAA;AAAA;AAAA;AAAA,WAKA,CAEH;AAAA,KAVH;AAAA;AAAA;AAAA;AAAA,SAWA;AAEJ;AAEA,SAAS,MAAM,EAAE,SAAS,GAA4B;AACpD,SACE,mDAAC;AAAA,IACC,6DAAC;AAAA,MAAK,WAAW;AAAA,MAAwC;AAAA,OAAzD;AAAA;AAAA;AAAA;AAAA,WAAkE;AAAA,KADpE;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEA,SAAS,SAAS,EAAE,SAAS,GAA4B;AACvD,SACE,mDAAC;AAAA,IAAG,WAAW;AAAA,IACb;AAAA,yDAAC;AAAA,QACC,6DAAC,uBAAAC,SAAA;AAAA,UAAgB,WAAW;AAAA,WAA5B;AAAA;AAAA;AAAA;AAAA,eAAkD;AAAA,SADpD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAM;AAAA,SAAP;AAAA;AAAA;AAAA;AAAA,aAAgB;AAAA;AAAA,KALlB;AAAA;AAAA;AAAA;AAAA,SAMA;AAEJ;;;ADtIA,+DASaC,QAAqB,OACzB;AAAA,EACL,OAAO,aAAa,sBAAc,KAAK;AACzC;AAGF,SAAS,UAAU;AACjB,SACE,mDAAC;AAAA,IACC;AAAA,yDAAC;AAAA,QAAK;AAAA,SAAN;AAAA;AAAA;AAAA;AAAA,aAAa;AAAA,MACb,mDAAC;AAAA,QAAW;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA,aAA2C;AAAA,MAE3C,mDAAC;AAAA,QAAI,WAAW;AAAA,QACd,6DAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,eAAc;AAAA,SADhB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,KANF;AAAA;AAAA;AAAA;AAAA,SAOA;AAEJ;AAEA,IAAO,kBAAQ;;;AE5Bf,IAAAC,gBAAA;AAAA,SAAAA,eAAA;AAAA;AAAA;AAAA,IAAAC,kBAIO;;;ACJP;AAAA,+DAGM,uBAED,CAAC,EAAE,QAAQ,SAAS,MAAM;AAC7B,MAAMC,WAAS,oCAAoC;AAEnD,SACE,mDAAC;AAAA,IACC,QAAQA;AAAA,IACR,QAAQ;AAAA,IACR,QAAO;AAAA,IACP,WAAW;AAAA,IAEX;AAAA,yDAAC;AAAA,QACC,6DAAC,kBAAU,OAAV;AAAA,UACC,MAAK;AAAA,UACL,WAAU;AAAA,UACV,MAAK;AAAA,UACL,cAAW;AAAA,UACX,aAAY;AAAA,UACZ,UAAQ;AAAA,WANV;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,SARF;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,MAEA,mDAAC;AAAA,QAAO,WAAU;AAAA,QACf;AAAA,SADH;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,KAnBF;AAAA;AAAA;AAAA;AAAA,SAoBA;AAEJ,GAEO,+BAAQ;;;ADzBf;AACA;;;AETA,IAAAC,iBAAqB;AAIrB;AAJA,+DAOM,OAAO,IAAI,KAAK,EAAE,YAAY;AAEpC,SAAS,SAAS;AAChB,SACE,mDAAC;AAAA,IAAO,WAAW;AAAA,IACjB,6DAAC;AAAA,MACC,6DAAC;AAAA,QACC,WACE;AAAA,QAIF;AAAA,6DAAC;AAAA,YAAI,WAAW;AAAA,YACd,6DAAC;AAAA,cAAI,WAAW;AAAA,cACd;AAAA,mEAAC;AAAA,kBACC,6DAAC;AAAA,oBAAU,WAAW;AAAA,qBAAtB;AAAA;AAAA;AAAA;AAAA,yBAA+C;AAAA,mBADjD;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBAEA,mDAAC;AAAA,kBACC,6DAAC;AAAA,oBAAE,WAAW;AAAA,oBAA4C;AAAA,qBAA1D;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA,mBAHF;AAAA;AAAA;AAAA;AAAA,uBAIA;AAAA,gBAEA,mDAAC;AAAA,kBAAI,WAAW;AAAA,kBACd,6DAAC;AAAA,oBAAE;AAAA;AAAA,sBACY;AAAA,sBAAK;AAAA,sBAAE,sBAAc,KAAK;AAAA,sBAAS;AAAA;AAAA,qBADlD;AAAA;AAAA;AAAA;AAAA,yBAGA;AAAA,mBAJF;AAAA;AAAA;AAAA;AAAA,uBAKA;AAAA;AAAA,eAhBF;AAAA;AAAA;AAAA;AAAA,mBAiBA;AAAA,aAlBF;AAAA;AAAA;AAAA;AAAA,iBAmBA;AAAA,UAEA,mDAAC;AAAA,YACC,WACE;AAAA,YAIF;AAAA,iEAAC;AAAA,gBACC,6DAAC;AAAA,kBAAI,WAAW;AAAA,kBACd;AAAA,uEAAC;AAAA,sBAAQ,MAAM;AAAA,sBAAG;AAAA,uBAAlB;AAAA;AAAA;AAAA;AAAA,2BAA6B;AAAA,oBAE7B,mDAAC;AAAA,sBACC,WACE;AAAA,sBAGF;AAAA,2EAAC;AAAA,0BACC,6DAAC;AAAA,4BAAK,IAAI;AAAA,4BAAK;AAAA,6BAAf;AAAA;AAAA;AAAA;AAAA,iCAAyB;AAAA,2BAD3B;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAA,wBACA,mDAAC;AAAA,0BACC,6DAAC;AAAA,4BAAK,IAAI;AAAA,4BAAS;AAAA,6BAAnB;AAAA;AAAA;AAAA;AAAA,iCAAuB;AAAA,2BADzB;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAA,wBACA,mDAAC;AAAA,0BACC,6DAAC;AAAA,4BAAK,IAAI;AAAA,4BAAY;AAAA,6BAAtB;AAAA;AAAA;AAAA;AAAA,iCAA6B;AAAA,2BAD/B;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAA;AAAA,uBAbF;AAAA;AAAA;AAAA;AAAA,2BAcA;AAAA;AAAA,mBAjBF;AAAA;AAAA;AAAA;AAAA,uBAkBA;AAAA,iBAnBF;AAAA;AAAA;AAAA;AAAA,qBAoBA;AAAA,cAEA,mDAAC;AAAA,gBACC,6DAAC;AAAA,kBAAI,WAAW;AAAA,kBACd;AAAA,uEAAC;AAAA,sBAAQ,MAAM;AAAA,sBAAG;AAAA,uBAAlB;AAAA;AAAA;AAAA;AAAA,2BAAyB;AAAA,oBAEzB,mDAAC;AAAA,sBACC,WACE;AAAA,sBAGF;AAAA,2EAAC;AAAA,0BACC,6DAAC;AAAA,4BAAK,IAAI;AAAA,4BAAS;AAAA,6BAAnB;AAAA;AAAA;AAAA;AAAA,iCAAgC;AAAA,2BADlC;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAA,wBACA,mDAAC;AAAA,0BACC,6DAAC;AAAA,4BAAK,IAAI;AAAA,4BAAK;AAAA,6BAAf;AAAA;AAAA;AAAA;AAAA,iCAA0B;AAAA,2BAD5B;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAA,wBACA,mDAAC;AAAA,0BACC,6DAAC;AAAA,4BAAK,IAAI;AAAA,4BAAK;AAAA,6BAAf;AAAA;AAAA;AAAA;AAAA,iCAAwB;AAAA,2BAD1B;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAA;AAAA,uBAbF;AAAA;AAAA;AAAA;AAAA,2BAcA;AAAA;AAAA,mBAjBF;AAAA;AAAA;AAAA;AAAA,uBAkBA;AAAA,iBAnBF;AAAA;AAAA;AAAA;AAAA,qBAoBA;AAAA,cAEA,mDAAC;AAAA,gBACC,6DAAC;AAAA,kBAAI,WAAW;AAAA,kBACd;AAAA,uEAAC;AAAA,sBAAQ,MAAM;AAAA,sBAAG;AAAA,uBAAlB;AAAA;AAAA;AAAA;AAAA,2BAAuB;AAAA,oBAEvB,mDAAC;AAAA,sBACC,WACE;AAAA,sBAGF;AAAA,2EAAC;AAAA,0BACC,6DAAC;AAAA,4BAAK,IAAI;AAAA,4BAAK;AAAA,6BAAf;AAAA;AAAA;AAAA;AAAA,iCAA+B;AAAA,2BADjC;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAA,wBACA,mDAAC;AAAA,0BACC,6DAAC;AAAA,4BAAK,IAAI;AAAA,4BAAK;AAAA,6BAAf;AAAA;AAAA;AAAA;AAAA,iCAA6B;AAAA,2BAD/B;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAA,wBACA,mDAAC;AAAA,0BACC,6DAAC;AAAA,4BAAK,IAAI;AAAA,4BAAK;AAAA,6BAAf;AAAA;AAAA;AAAA;AAAA,iCAA4B;AAAA,2BAD9B;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAA;AAAA,uBAbF;AAAA;AAAA;AAAA;AAAA,2BAcA;AAAA;AAAA,mBAjBF;AAAA;AAAA;AAAA;AAAA,uBAkBA;AAAA,iBAnBF;AAAA;AAAA;AAAA;AAAA,qBAoBA;AAAA;AAAA,aAtEF;AAAA;AAAA;AAAA;AAAA,iBAuEA;AAAA;AAAA,SAlGF;AAAA;AAAA;AAAA;AAAA,aAmGA;AAAA,OApGF;AAAA;AAAA;AAAA;AAAA,WAqGA;AAAA,KAtGF;AAAA;AAAA;AAAA;AAAA,SAuGA;AAEJ;AAEA,IAAO,iBAAQ;;;AFtHf;AAgBe,SAAR,QAAyB;AAC9B,SACE,mDAAC;AAAA,IACC;AAAA,yDAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YACC,WACE;AAAA,YAIF,6DAAC;AAAA,cACC,WAAW;AAAA,cAEX;AAAA,mEAAC;AAAA,kBACC;AAAA,uEAAC;AAAA,sBAAK;AAAA,uBAAN;AAAA;AAAA;AAAA;AAAA,2BAA4B;AAAA,oBAC5B,mDAAC;AAAA,sBAAK,WAAW;AAAA,sBAAoB;AAAA,uBAArC;AAAA;AAAA;AAAA;AAAA,2BAAyD;AAAA;AAAA,mBAF3D;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA,gBAEA,mDAAC;AAAA,kBAAI,WAAW;AAAA,kBACd;AAAA,uEAAC;AAAA,sBAAW;AAAA,uBAAZ;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA,oBAEA,mDAAC;AAAA,sBAAW;AAAA,uBAAZ;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA,oBAEA,mDAAC;AAAA,sBAAW;AAAA,uBAAZ;AAAA;AAAA;AAAA;AAAA,2BAA2B;AAAA;AAAA,mBAT7B;AAAA;AAAA;AAAA;AAAA,uBAUA;AAAA,gBAEA,mDAAC;AAAA,kBAAI,WAAW;AAAA,kBACd;AAAA,uEAAC;AAAA,sBACC,WAAW;AAAA,sBACX,MAAM;AAAA,sBACN,MAAM;AAAA,sBAEN,6DAAC;AAAA,wBAAK,WAAW;AAAA,wBACf;AAAA,6EAAC;AAAA,4BAAK;AAAA,6BAAN;AAAA;AAAA;AAAA;AAAA,iCAA0B;AAAA,0BAC1B,mDAAC;AAAA,4BAAe,WAAW;AAAA,6BAA3B;AAAA;AAAA;AAAA;AAAA,iCAAkC;AAAA;AAAA,yBAFpC;AAAA;AAAA;AAAA;AAAA,6BAGA;AAAA,uBARF;AAAA;AAAA;AAAA;AAAA,2BASA;AAAA,oBAEA,mDAAC;AAAA,sBAAK,WAAW;AAAA,sBAAW;AAAA,uBAA5B;AAAA;AAAA;AAAA;AAAA,2BAAmD;AAAA;AAAA,mBAZrD;AAAA;AAAA;AAAA;AAAA,uBAaA;AAAA;AAAA,eAjCF;AAAA;AAAA;AAAA;AAAA,mBAkCA;AAAA,aAxCF;AAAA;AAAA;AAAA;AAAA,iBAyCA;AAAA,UAEA,mDAAC;AAAA,YAAI,WAAW;AAAA,YACd,6DAAC;AAAA,cACC,UAAU;AAAA,cACV,WAAW;AAAA,cACX,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,KAAK;AAAA,cACL,KAAK;AAAA,eANP;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA,iBASA;AAAA;AAAA,SArDF;AAAA;AAAA;AAAA;AAAA,aAsDA;AAAA,MAEA,mDAACC,UAAA,IAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MAET,mDAAC;AAAA,QACC,6DAAC;AAAA,UACC,WACE;AAAA,UAGF;AAAA,+DAAC;AAAA,cACC,WACE;AAAA,cAGF;AAAA,mEAAC;AAAA,kBAAI,WAAW;AAAA,kBACd;AAAA,uEAAC;AAAA,sBACC,6DAAC;AAAA,wBAAS,WAAW;AAAA,yBAArB;AAAA;AAAA;AAAA;AAAA,6BAA6C;AAAA,uBAD/C;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA,oBAEA,mDAAC;AAAA,sBAAE,WAAW;AAAA,sBAAoB;AAAA,uBAAlC;AAAA;AAAA;AAAA;AAAA,2BAA0C;AAAA;AAAA,mBAL5C;AAAA;AAAA;AAAA;AAAA,uBAMA;AAAA,gBAEA,mDAAC;AAAA,kBAAK;AAAA,mBAAN;AAAA;AAAA;AAAA;AAAA,uBAAgC;AAAA,gBAEhC,mDAAC;AAAA,kBAAW;AAAA,mBAAZ;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA;AAAA,eAlBF;AAAA;AAAA;AAAA;AAAA,mBAmBA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC;AAAA,gBAAI,WAAW;AAAA,gBACd;AAAA,qEAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC;AAAA,wBAAQ,MAAM;AAAA,wBAAG;AAAA,yBAAlB;AAAA;AAAA;AAAA;AAAA,6BAAsB;AAAA,sBAEtB,mDAAC;AAAA,wBAAI,WAAW;AAAA,wBAAoC;AAAA,yBAApD;AAAA;AAAA;AAAA;AAAA,6BAGA;AAAA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA,kBAEA,mDAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC;AAAA,wBAAQ,MAAM;AAAA,wBAAG;AAAA,yBAAlB;AAAA;AAAA;AAAA;AAAA,6BAAsB;AAAA,sBAEtB,mDAAC;AAAA,wBAAI,WAAW;AAAA,wBAAoC;AAAA,yBAApD;AAAA;AAAA;AAAA;AAAA,6BAGA;AAAA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA,kBAEA,mDAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC;AAAA,wBAAQ,MAAM;AAAA,wBAAG;AAAA,yBAAlB;AAAA;AAAA;AAAA;AAAA,6BAAsB;AAAA,sBAEtB,mDAAC;AAAA,wBAAI,WAAW;AAAA,wBAAoC;AAAA,yBAApD;AAAA;AAAA;AAAA;AAAA,6BAGA;AAAA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA,kBAEA,mDAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC;AAAA,wBAAQ,MAAM;AAAA,wBAAG;AAAA,yBAAlB;AAAA;AAAA;AAAA;AAAA,6BAAsB;AAAA,sBAEtB,mDAAC;AAAA,wBAAI,WAAW;AAAA,wBAAoC;AAAA,yBAApD;AAAA;AAAA;AAAA;AAAA,6BAGA;AAAA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA,kBAEA,mDAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC;AAAA,wBAAQ,MAAM;AAAA,wBAAG;AAAA,yBAAlB;AAAA;AAAA;AAAA;AAAA,6BAAsB;AAAA,sBAEtB,mDAAC;AAAA,wBAAI,WAAW;AAAA,wBAAoC;AAAA,yBAApD;AAAA;AAAA;AAAA;AAAA,6BAGA;AAAA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA,kBAEA,mDAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC;AAAA,wBAAQ,MAAM;AAAA,wBAAG;AAAA,yBAAlB;AAAA;AAAA;AAAA;AAAA,6BAAsB;AAAA,sBAEtB,mDAAC;AAAA,wBAAI,WAAW;AAAA,wBAAoC;AAAA,yBAApD;AAAA;AAAA;AAAA;AAAA,6BAGA;AAAA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA;AAAA,iBArDF;AAAA;AAAA;AAAA;AAAA,qBAsDA;AAAA,eAvDF;AAAA;AAAA;AAAA;AAAA,mBAwDA;AAAA;AAAA,WAlFF;AAAA;AAAA;AAAA;AAAA,eAmFA;AAAA,SApFF;AAAA;AAAA;AAAA;AAAA,aAqFA;AAAA,MAEA,mDAACA,UAAA,IAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MAET,mDAAC;AAAA,QACC,6DAAC;AAAA,UACC,WACE;AAAA,UAGF;AAAA,+DAAC;AAAA,cACC,WACE;AAAA,cAGF;AAAA,mEAAC;AAAA,kBAAI,WAAW;AAAA,kBACd;AAAA,uEAAC;AAAA,sBACC,6DAAC;AAAA,wBAAc,WAAW;AAAA,yBAA1B;AAAA;AAAA;AAAA;AAAA,6BAAkD;AAAA,uBADpD;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA,oBAEA,mDAAC;AAAA,sBAAE,WAAW;AAAA,sBAAoB;AAAA,uBAAlC;AAAA;AAAA;AAAA;AAAA,2BAA8C;AAAA;AAAA,mBALhD;AAAA;AAAA;AAAA;AAAA,uBAMA;AAAA,gBAEA,mDAAC;AAAA,kBAAK;AAAA,mBAAN;AAAA;AAAA;AAAA;AAAA,uBAAiD;AAAA,gBAEjD,mDAAC;AAAA,kBAAW;AAAA,mBAAZ;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA;AAAA,eAlBF;AAAA;AAAA;AAAA;AAAA,mBAmBA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC;AAAA,gBAAI,WAAW;AAAA,gBACd;AAAA,qEAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC;AAAA,wBAAQ,MAAM;AAAA,wBAAG;AAAA,yBAAlB;AAAA;AAAA;AAAA;AAAA,6BAAsB;AAAA,sBAEtB,mDAAC;AAAA,wBAAI,WAAW;AAAA,wBAAoC;AAAA,yBAApD;AAAA;AAAA;AAAA;AAAA,6BAGA;AAAA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA,kBAEA,mDAAC;AAAA,oBAAI,WAAU;AAAA,oBACb;AAAA,yEAAC;AAAA,wBAAQ,MAAM;AAAA,wBAAG;AAAA,yBAAlB;AAAA;AAAA;AAAA;AAAA,6BAAsB;AAAA,sBAEtB,mDAAC;AAAA,wBAAI,WAAW;AAAA,wBAAoC;AAAA,yBAApD;AAAA;AAAA;AAAA;AAAA,6BAGA;AAAA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA,kBAEA,mDAAC;AAAA,oBAAI,WAAU;AAAA,oBACb;AAAA,yEAAC;AAAA,wBAAQ,MAAM;AAAA,wBAAG;AAAA,yBAAlB;AAAA;AAAA;AAAA;AAAA,6BAAsB;AAAA,sBAEtB,mDAAC;AAAA,wBAAI,WAAW;AAAA,wBAAoC;AAAA,yBAApD;AAAA;AAAA;AAAA;AAAA,6BAGA;AAAA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA,kBAEA,mDAAC;AAAA,oBAAI,WAAU;AAAA,oBACb;AAAA,yEAAC;AAAA,wBAAQ,MAAM;AAAA,wBAAG;AAAA,yBAAlB;AAAA;AAAA;AAAA;AAAA,6BAAsB;AAAA,sBAEtB,mDAAC;AAAA,wBAAI,WAAW;AAAA,wBAAoC;AAAA,yBAApD;AAAA;AAAA;AAAA;AAAA,6BAGA;AAAA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA,kBAEA,mDAAC;AAAA,oBAAI,WAAU;AAAA,oBACb;AAAA,yEAAC;AAAA,wBAAQ,MAAM;AAAA,wBAAG;AAAA,yBAAlB;AAAA;AAAA;AAAA;AAAA,6BAAsB;AAAA,sBAEtB,mDAAC;AAAA,wBAAI,WAAW;AAAA,wBAAoC;AAAA,yBAApD;AAAA;AAAA;AAAA;AAAA,6BAGA;AAAA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA,kBAEA,mDAAC;AAAA,oBAAI,WAAU;AAAA,oBACb;AAAA,yEAAC;AAAA,wBAAQ,MAAM;AAAA,wBAAG;AAAA,yBAAlB;AAAA;AAAA;AAAA;AAAA,6BAAsB;AAAA,sBAEtB,mDAAC;AAAA,wBAAI,WAAW;AAAA,wBAAoC;AAAA,yBAApD;AAAA;AAAA;AAAA;AAAA,6BAGA;AAAA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA;AAAA,iBArDF;AAAA;AAAA;AAAA;AAAA,qBAsDA;AAAA,eAvDF;AAAA;AAAA;AAAA;AAAA,mBAwDA;AAAA;AAAA,WAlFF;AAAA;AAAA;AAAA;AAAA,eAmFA;AAAA,SApFF;AAAA;AAAA;AAAA;AAAA,aAqFA;AAAA,MAEA,mDAAC;AAAA,QACC,6DAAC;AAAA,UAAI,WAAW;AAAA,UACd,6DAAC;AAAA,YACC,WACE;AAAA,YAKF;AAAA,iEAAC;AAAA,gBAAI,WAAW;AAAA,gBACd;AAAA,qEAAC;AAAA,oBAAQ,MAAM;AAAA,oBACb,6DAAC;AAAA,sBAAE,WAAW;AAAA,sBAAiC;AAAA,uBAA/C;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA,qBAHF;AAAA;AAAA;AAAA;AAAA,yBAIA;AAAA,kBAEA,mDAAC;AAAA,oBAAQ,MAAM;AAAA,oBACb,6DAAC;AAAA,sBAAE,WAAW;AAAA,sBAAoB;AAAA,uBAAlC;AAAA;AAAA;AAAA;AAAA,2BAA0D;AAAA,qBAD5D;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA;AAAA,iBATF;AAAA;AAAA;AAAA;AAAA,qBAUA;AAAA,cAEA,mDAAC;AAAA,gBAAI,WAAW;AAAA,gBACd;AAAA,qEAAC;AAAA,oBACC,6DAAC;AAAA,sBACC,WAAW;AAAA,sBACX,MAAM;AAAA,sBACN,MAAM;AAAA,sBACP;AAAA,uBAJD;AAAA;AAAA;AAAA;AAAA,2BAMA;AAAA,qBAPF;AAAA;AAAA;AAAA;AAAA,yBAQA;AAAA,kBAEA,mDAAC;AAAA,oBAAI,WAAU;AAAA,oBACb,6DAAC;AAAA,sBAAK,WAAW;AAAA,sBAAW;AAAA,uBAA5B;AAAA;AAAA;AAAA;AAAA,2BAAmD;AAAA,qBADrD;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA;AAAA,iBAbF;AAAA;AAAA;AAAA;AAAA,qBAcA;AAAA;AAAA,aAjCF;AAAA;AAAA;AAAA;AAAA,iBAkCA;AAAA,WAnCF;AAAA;AAAA;AAAA;AAAA,eAoCA;AAAA,SArCF;AAAA;AAAA;AAAA;AAAA,aAsCA;AAAA,MAEA,mDAAC;AAAA,QACC,6DAAC,sBAAD;AAAA;AAAA;AAAA;AAAA,eAAkB;AAAA,SADpB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAACA,UAAA,IAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MAET,mDAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA;AAAA,KAzRV;AAAA;AAAA;AAAA;AAAA,SA0RA;AAEJ;AAEA,SAAS,mBAAmB;AAC1B,MAAM,SAAS,sBAAc,KAAK;AAElC,SACE,mDAAC;AAAA,IACC,WACE;AAAA,IAGF;AAAA,yDAAC;AAAA,QAAE;AAAA,SAAH;AAAA;AAAA;AAAA;AAAA,aAA4B;AAAA,MAE5B,mDAAC;AAAA,QAAE;AAAA,SAAH;AAAA;AAAA;AAAA;AAAA,aAA8D;AAAA,MAE9D,mDAAC;AAAA,QAAqB;AAAA,QAAgB;AAAA,SAAtC;AAAA;AAAA;AAAA;AAAA,aAA+C;AAAA,MAE/C,mDAAC;AAAA,QAAE,WAAW;AAAA,QAAuB;AAAA,SAArC;AAAA;AAAA;AAAA;AAAA,aAAmD;AAAA;AAAA,KAXrD;AAAA;AAAA;AAAA;AAAA,SAYA;AAEJ;AAEA,SAASA,WAAU;AACjB,SAAO,mDAAC;AAAA,IAAG,WAAW;AAAA,KAAf;AAAA;AAAA;AAAA;AAAA,SAA8D;AACvE;AAEA,SAAS,UAAU,EAAE,SAAS,GAA4B;AACxD,SACE,mDAAC;AAAA,IACC,WACE;AAAA,IAKD;AAAA,KAPH;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;;;AGpVA;AAAA;AAAA;AAAA,cAAAC;AAAA;AAIA;AAJA,+DAQM,OAAO;AAAA,EACX;AAAA,IACE,UAAU;AAAA,IACV,QAAQ;AAAA,EACV;AACF,GAEaC,QAAqB,OACzB;AAAA,EACL,OAAO,SAAS,sBAAc,KAAK;AACrC,IAGI,MAAM,MAAM;AAChB,MAAM,iBAAiB;AAAA,IACrB,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,YAAY,KAAK,IAAI,CAAC,UACb;AAAA,MACL,SAAS;AAAA,MACT,MAAM,KAAK;AAAA,MACX,gBAAgB;AAAA,QACd,SAAS;AAAA,QACT,MAAM,KAAK;AAAA,MACb;AAAA,IACF,EACD;AAAA,EACH;AAEA,SACE,mDAAC;AAAA,IACC;AAAA,yDAAC;AAAA,QAEC,MAAK;AAAA,QACL,yBAAyB,EAAE,QAAQ,KAAK,UAAU,cAAc,EAAE;AAAA,SAF7D,WADP;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YAAK;AAAA,aAAN;AAAA;AAAA;AAAA;AAAA,iBAAS;AAAA,UAET,mDAAC;AAAA,YAAW;AAAA,aAAZ;AAAA;AAAA;AAAA;AAAA,iBAAsC;AAAA,UAEtC,mDAAC;AAAA,YAAI,WAAW;AAAA,YACd,6DAAC;AAAA,cAAI,WAAU;AAAA,cACZ,eAAK,IAAI,CAAC,MAAM,UAEb,mDAAC;AAAA,gBAAI,WAAW;AAAA,gBACd;AAAA,qEAAC;AAAA,oBAAQ,MAAM;AAAA,oBACb,6DAAC;AAAA,sBAAK,WAAW;AAAA,sBACd,eAAK;AAAA,uBADR;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA,qBAHF;AAAA;AAAA;AAAA;AAAA,yBAIA;AAAA,kBAEA,mDAAC;AAAA,oBACC,WACE;AAAA,oBAGF,yBAAyB,EAAE,QAAQ,KAAK,OAAO;AAAA,qBALjD;AAAA;AAAA;AAAA;AAAA,yBAMA;AAAA;AAAA,iBAb8B,OAAhC;AAAA;AAAA;AAAA;AAAA,qBAcA,CAEH;AAAA,eAnBH;AAAA;AAAA;AAAA;AAAA,mBAoBA;AAAA,aArBF;AAAA;AAAA;AAAA;AAAA,iBAsBA;AAAA;AAAA,SA3BF;AAAA;AAAA;AAAA;AAAA,aA4BA;AAAA,MAEA,mDAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA;AAAA,KArCV;AAAA;AAAA;AAAA;AAAA,SAsCA;AAEJ,GAEO,cAAQ;;;AChFf;AAAA;AAAA;AAAA;AAAA,IAAAC,iBAAuB;;;ACAvB;AAKA,SAAS,cAAc,EAAE,SAAS,GAA4B;AAC5D,SACE,mDAAC;AAAA,IAAiB,QAAQ;AAAA,IACxB,6DAAC;AAAA,MACC,aAAa,wBAAe;AAAA,MAC5B,aAAa;AAAA,MACb,gBAAgB,OAAO,CAAC;AAAA,MAExB,6DAAC;AAAA,QACC,WACE;AAAA,QAIF;AAAA,6DAAC;AAAA,YACC,6DAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,mBAAM;AAAA,aADR;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAEA,mDAAC;AAAA,YACC,WAAW;AAAA,YAEV;AAAA,aAHH;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA;AAAA,SAdF;AAAA;AAAA;AAAA;AAAA,aAeA;AAAA,OApBF;AAAA;AAAA;AAAA;AAAA,WAqBA;AAAA,KAtBF;AAAA;AAAA;AAAA;AAAA,SAuBA;AAEJ;AAEA,IAAO,wBAAQ;;;ADlCf;AAGA,SAAS,eAAe;AACtB,SACE,mDAAC;AAAA,IACC,6DAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA,KADV;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEA,IAAO,iBAAQ;;;AEXf;AAAA;AAAA,uBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA;AAAA,gBAAAC;AAAA,EAAA,YAAAC;AAAA;AAAA,IAAAC,iBAAiD,kBACjDC,yBAAsB,0BACtBC,cAAkB,gBAGlBC,eAA+B,4BAC/BH,iBAAwD,6BACxDI,qBAAwC;AAgBxC;AACA;AACA;;;ACzBA,IAAAC,iBAAsC,kBACtCC,yBAAsB;;;ACDtB;;;ACAA,IAAAC,kBAGO,wCAHP,2DAKM,qBAAqB,IAErB,mBAID,CAAC,EAAE,oBAAoB,OAAO,OAAO,MAAM;AAC9C,MAAM,QAAQ,sBAAsB,EAAE;AAEtC,SAAI,OAAO,SAAU,WAEjB,mDAAC;AAAA,IACC,SAAS;AAAA,IACT,KAAK;AAAA,IACL,KAAK,GAAG;AAAA,IACR,OAAO,SAAS;AAAA,IAChB,QAAQ,UAAU;AAAA,KALpB;AAAA;AAAA;AAAA;AAAA,SAMA,IAIG;AAAA,IAAG;AAAA,KAAH;AAAA;AAAA;AAAA;AAAA,SAAS;AAClB;AAEA,SAAS,wBAA8D;AACrE,SAAO;AAAA,IACL,UAAU,mDAAC;AAAA,MAAa,WAAW;AAAA,OAAzB;AAAA;AAAA;AAAA;AAAA,WAAgC;AAAA,IAC1C,OAAO,mDAAC;AAAA,MAAsB,WAAW;AAAA,OAAlC;AAAA;AAAA;AAAA;AAAA,WAAyC;AAAA,IAChD,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,cAAc;AAAA,IACd,iBAAiB;AAAA,IACjB,aAAa;AAAA,EACf;AACF;AAEA,IAAO,2BAAQ;;;AD1Cf,+DAGM,qBAGD,CAAC,EAAE,UAAU,YAAY,QAAQ,MAElC,mDAAC;AAAA,EACC,WAAS;AAAA,EACT,OAAK;AAAA,EACL,OAAO;AAAA,EACP,MAAM;AAAA,EACN,WAAW;AAAA,EACX;AAAA,EACA,iBAAe;AAAA,EAEf;AAAA,uDAAC;AAAA,MAAK,WAAW;AAAA,MACf,6DAAC;AAAA,QAAiB,oBAAoB;AAAA,SAAtC;AAAA;AAAA;AAAA;AAAA,aAAkD;AAAA,OADpD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEA,mDAAC;AAAA,MAAK,WAAW;AAAA,MACf,6DAAC;AAAA,QAAK,WAAW;AAAA,QACf,6DAAC;AAAA,UAAK,WAAW;AAAA,UAAiB;AAAA,WAAlC;AAAA;AAAA;AAAA;AAAA,eAA2C;AAAA,SAD7C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,OAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA;AAAA,GAjBF;AAAA;AAAA;AAAA;AAAA,OAkBA,GAIG,6BAAQ;;;AE9Bf,IAAAC,iBAA4B,kBAE5BC,oBAAwB;AAIxB;AAEO,SAAS,gCAAgC;AAC9C,MAAM,WAAO,2BAAQ,GAEf,EAAE,OAAO,YAAY,SAAS,SAAS,IAAI,gBAG/C;AA2BF,SAAO,KAzBQ;AAAA,IACb,OAAO,OAAe,aAAqB;AACzC,iBAAW,EAAI;AAEf,UAAI;AACF,YAAM,EAAE,+BAA+B,IAAI,MAAM,OAC/C,kBAGI,aAAa,MAAM;AAAA,UACvB;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAEA,uBAAQ,UAAU,GAEX;AAAA,MACT,SAAS,OAAP;AACA,iBAAS,KAAsB;AAAA,MACjC;AAAA,IACF;AAAA,IACA,CAAC,MAAM,SAAS,UAAU,UAAU;AAAA,EACtC,GAEgB,KAAK;AACvB;;;AC1CA,IAAAC,iBAA4B,kBAE5BC,oBAAwB;AAIxB;AAEO,SAAS,wBAAwB;AACtC,MAAM,WAAO,2BAAQ,GAEf,EAAE,OAAO,YAAY,SAAS,UAAU,WAAW,IAAI,gBAG3D;AAqBF,SAAO,EAAE,wBAnBkB;AAAA,IACzB,OAAO,aAA2B;AAChC,iBAAW,EAAI;AAEf,UAAI;AACF,YAAM,aAAa,MAAM,cAAc,MAAM,QAAQ;AAErD,uBAAQ,UAAU,GAEX;AAAA,MACT,SAAS,OAAP;AACA,wBAAS,KAAsB,GAExB,QAAQ,OAAO,KAAK;AAAA,MAC7B;AAAA,IACF;AAAA,IACA,CAAC,MAAM,SAAS,UAAU,UAAU;AAAA,EACtC,GAE6B,OAAO,WAAW;AACjD;AAEA,eAAe,cAAc,MAAY,UAAwB;AAC/D,MAAM,OAAO,KAAK,aAEZ;AAAA,IACJ;AAAA,IACA,8BAAAC;AAAA,IACA;AAAA,EACF,IAAI,MAAM,OAAO;AAEjB,SAAI,OACK;AAAA,IACL;AAAA,IACA;AAAA,IACAA;AAAA,EACF,IAGK,gBAAgB,MAAM,UAAUA,6BAA4B;AACrE;;;ACxDA,iBAA8B;AAEf,SAAR,qBAAsC,OAAuB;AAClE,MAAI,EAAC;AAIL,WAAO,gBAAgB,KAAK,IAAI,MAAM,OAAO;AAC/C;AAEA,SAAS,gBAAgB,OAAwC;AAC/D,SAAO,iBAAiB;AAC1B;;;ALHA;;;AMTA,IAAAC,wBAAsB;AACtB;AADA;AAUe,SAAR,iBAAkC,EAAE,MAAM,GAA6B;AAC5E,MAAI,CAAC;AACH,WAAO;AAGT,MAAM,eAAe,mDAAC;AAAA,IAAM,SAAQ;AAAA,KAAf;AAAA;AAAA;AAAA;AAAA,SAAqC;AAE1D,SACE,mDAAC;AAAA,IAAM,WAAW;AAAA,IAAU,MAAM;AAAA,IAChC,6DAAC;AAAA,MAAE,WAAW;AAAA,MAAyB,WAAS;AAAA,MAC9C,6DAAC;AAAA,QACC,SAAS,eAAe;AAAA,QACxB,UAAU;AAAA,QACV,YAAY,EAAE,aAAa;AAAA,SAH7B;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;;;AC1BA,IAAAC,eAIO,0BAEPC,iBAAwD,kBACxDC,oBAAwB,sBACxBC,8BAA8B,gCAE9BC,yBAAsB;AAEtB;AAEA;AACA;AACA;AAEA;;;ACpBA,IAAAC,oBAAwB,sBACxBC,iBAA4B;AAE5B,SAAS,qBAAqB,IAAY;AACxC,MAAM,WAAO,2BAAQ;AAErB,aAAO,4BAAY,YAAY;AAC7B,QAAM,EAAE,kBAAkB,IAAI,MAAM,OAAO;AAE3C,WAAO,IAAI;AAAA,MACT;AAAA,MACA;AAAA,QACE,MAAM;AAAA,MACR;AAAA,MACA;AAAA,IACF;AAAA,EACF,GAAG,CAAC,MAAM,EAAE,CAAC;AACf;AAEA,IAAO,iCAAQ;;;ADnBf,+DAwBM,WAAW,sCAEX,gCAMD,CAAC,EAAE,OAAO,QAAQ,WAAW,WAAW,aAAa,MAAM;AAC9D,MAAM,WAAO,2BAAQ,GAEf,sBAAsB,gBAAwB,GAC9C,wBAAwB,gBAAsB,GAC9C,uBAAuB,+BAAqB,QAAQ,GACpD,4BAAwB,uBAAO,EAAK,GAEpC,eAAW,wBAAQ,UAChB,qCAAuB,MAAM,KAAK,GACxC,CAAC,MAAM,KAAK,CAAC,GAEV,EAAE,YAAY,SAAS,UAAU,MAAM,IAAI,qBAE3C,mBAAe;AAAA,IACnB,OAAO,qBAA6B;AAClC,UAAM,iBAAiB,MAAM;AAE7B,UAAI,CAAC;AACH;AAGF,4BAAsB,WAAW,EAAI;AAErC,UAAM,sBAAsB,+BAAkB;AAAA,QAC5C;AAAA,QACA;AAAA,MACF,GAEM,uBACJ,uCAA0B,UAAU,mBAAmB;AAEzD,UAAI;AACF,YAAM,aAAa,MAAM,SAAS,cAAc,oBAAoB;AAEpE,kBAAU,UAAU;AAAA,MACtB,SAAS,GAAP;AACA,YAAMC,SAAQ;AACd,8BAAsB,SAASA,OAAM,IAAI;AAAA,MAC3C;AAAA,IACF;AAAA,IACA,CAAC,WAAW,UAAU,MAAM,MAAM,qBAAqB;AAAA,EACzD;AAEA,uCAAU,MAAM;AACd,QAAI,MAAM,WAAW,MAAM,QAAQ,sBAAsB;AACvD;AAGF,eAAW,EAAI,GACf,sBAAsB,UAAU;AAEhC,QAAM,mBAAmB;AAAA,MACvB,iBAAiB,SAAS,MAAM;AAAA,MAChC,SAAS,SAAS;AAAA,IACpB,GAEM,oBAAoB,IAAI,+BAAkB,IAAI;AAEpD,KAAM,YAAY;AAChB,UAAI;AACF,YAAM,oBAAoB,MAAM,qBAAqB,GAE/C,iBAAiB,MAAM,kBAAkB;AAAA,UAC7C;AAAA,UACA;AAAA,QACF;AAEA,gBAAQ,cAAc;AAAA,MACxB,SAAS,GAAP;AACA,gBAAQ,MAAM,CAAC,GACf,SAAS,CAAC;AAAA,MACZ;AAAA,IACF,GAAG;AAAA,EACL,GAAG;AAAA,IACD;AAAA,IACA,SAAS;AAAA,IACT,SAAS;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,EACR,CAAC,GAGC;AAAA,IACE;AAAA,yDAAC;AAAA,QAAI,IAAI;AAAA,SAAT;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MAEnB,mDAAC;AAAA,QACC,SAAS,mDAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAAyC;AAAA,QAClD;AAAA,QACA;AAAA,QACA,aAAa;AAAA,QAEb,6DAAC;AAAA,UACC,UAAU,OAAO,MAAM;AACrB,cAAE,eAAe;AAGjB,gBAAM,OADO,IAAI,SAAS,EAAE,aAAa,EACvB,IAAI,kBAAkB;AAExC,YAAI,CAAC,QAIL,MAAM,aAAa,IAAI;AAAA,UACzB;AAAA,UAEA;AAAA,+DAAC;AAAA,cAAG,WAAW,MAAM;AAAA,cACnB,6DAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,qBAAgB;AAAA,eADlB;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEA,mDAAC;AAAA,cAAG,WAAW,MAAM;AAAA,cACnB,6DAAC;AAAA,gBAAM,MAAM;AAAA,gBACX,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAyC;AAAA,iBAD3C;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,YAEA,mDAAC;AAAA,cAAG,WAAW,MAAM;AAAA,cACnB,6DAAC;AAAA,gBAAI,WAAW;AAAA,gBACd;AAAA,qEAAC,kBAAU,OAAV;AAAA,oBACC;AAAA,yEAAC;AAAA,wBAAM,SAAS;AAAA,yBAAhB;AAAA;AAAA;AAAA;AAAA,6BAAyC;AAAA,sBAEzC,mDAAC,kBAAU,OAAV;AAAA,wBACC,cAAc;AAAA,wBACd,UAAQ;AAAA,wBACR,MAAM;AAAA,yBAHR;AAAA;AAAA;AAAA;AAAA,6BAIA;AAAA,sBAEA,mDAAC,kBAAU,MAAV;AAAA,wBACC,6DAAC;AAAA,0BAAM,SAAS;AAAA,2BAAhB;AAAA;AAAA;AAAA;AAAA,+BAA6C;AAAA,yBAD/C;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA;AAAA,qBAXF;AAAA;AAAA;AAAA;AAAA,yBAYA;AAAA,kBAEA,mDAAC;AAAA,oBAAG,WAAW,sBAAsB,MAAM;AAAA,oBACzC,6DAAC;AAAA,sBACC,OAAO,sBAAsB,MAAM;AAAA,uBADrC;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA,qBAHF;AAAA;AAAA;AAAA;AAAA,yBAIA;AAAA,kBAEA,mDAAC;AAAA,oBACC,SAAS,sBAAsB,MAAM;AAAA,oBACrC,OAAK;AAAA,oBACL,MAAM;AAAA,oBAEN,6DAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAA0D;AAAA,qBAL5D;AAAA;AAAA;AAAA;AAAA,yBAMA;AAAA;AAAA,iBA3BF;AAAA;AAAA;AAAA;AAAA,qBA4BA;AAAA,eA7BF;AAAA;AAAA;AAAA;AAAA,mBA8BA;AAAA;AAAA,WAtDF;AAAA;AAAA;AAAA;AAAA,eAuDA;AAAA,SA7DF;AAAA;AAAA;AAAA;AAAA,aA8DA;AAAA;AAAA,KAjEF;AAAA;AAAA;AAAA;AAAA,SAkEA;AAEJ;AAEA,SAAS,iBAAiB;AACxB,SACE,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd;AAAA,yDAAC;AAAA,QACC,6DAAC;AAAA,UAAc,OAAO;AAAA,UAAgB,MAAM;AAAA,WAA5C;AAAA;AAAA;AAAA;AAAA,eAAgD;AAAA,SADlD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QACC,6DAAC;AAAA,UACC,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAAuC;AAAA,WADzC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA;AAAA,KATF;AAAA;AAAA;AAAA;AAAA,SAUA;AAEJ;AAEA,IAAO,wCAAQ;;;AE7Mf,IAAAC,cAA8B;AAGf,SAAR,mBACL,OAC2B;AAC3B,SAAI,iBAAiB,4BACZ,MAAM,SAAS,oCAGjB;AACT;;;ACVA,IAAAC,8BAAgD;AAGhD;AAJA;AAMe,SAAR,qBAAsC;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AACF,GAGI;AAIF,SACE,mDAAC;AAAA,IACC,WAAW,uDALK,YAAY,KAOtB,4EAEA;AAAA,IAGN;AAAA,yDAAC;AAAA,QAAG,WAXkB,eAAe;AAAA,QAYnC,6DAAC;AAAA,UAAI,WAAW;AAAA,UACd,6DAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,iBAAW;AAAA,WADb;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QAAgC,MAAM;AAAA,QAAI,OAAO;AAAA,SAAlD;AAAA;AAAA;AAAA;AAAA,aAAkE;AAAA,MAElE,mDAAC;AAAA,QAAI,WAAW;AAAA,QAAwB;AAAA,SAAxC;AAAA;AAAA;AAAA;AAAA,aAAiD;AAAA;AAAA,KAhBnD;AAAA;AAAA;AAAA;AAAA,SAiBA;AAEJ;;;AVrCA,+DAkBM,kBAAkB,sBAAc,KAAK,UAAU,OAE/C,iBAED,CAAC,EAAE,SAAS,MAAM;AACrB,MAAM;AAAA,IACJ;AAAA,IACA,OAAO;AAAA,IACP;AAAA,EACF,IAAI,sBAAsB,GAGpB,UAAU,wBAAwB,SAElC,CAAC,sBAAsB,uBAAuB,QAClD,yBAAkC,GAE9B,oBAAgB;AAAA,IACpB,OAAO,SAAe;AACpB,UAAM,UAAU,MAAM,KAAK,WAAW;AAEtC,eAAS,OAAO;AAAA,IAClB;AAAA,IACA,CAAC,QAAQ;AAAA,EACX,GAEM,2BAAuB;AAAA,IAC3B,OAAO,kBAA6D;AAClE,UAAI;AACF,YAAM,aAAa,MAAM,cAAc;AAEvC,YAAI,CAAC;AACH,iBAAO,QAAQ,OAAO;AAGxB,cAAM,cAAc,WAAW,IAAI;AAAA,MACrC,SAAS,OAAP;AACA,YAAI,mBAAmB,KAAK;AAC1B,kCAAwB,KAAyB;AAAA;AAEjD,gBAAM,qBAAqB,KAAK;AAAA,MAEpC;AAAA,IACF;AAAA,IACA,CAAC,yBAAyB,aAAa;AAAA,EACzC;AAEA,SAAI,CAAC,mBAAmB,CAAC,gBAAgB,SAChC,OAIP;AAAA,IACE;AAAA,yDAAC;AAAA,QAAG,WAAW;AAAA,QACb,6DAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC;AAAA,YAAI,WAAW;AAAA,YACb,0BAAgB,IAAI,CAAC,uBAAuB;AAC3C,kBAAM,mBAAmB,IAAI,mBAAmB,GAC1C,aAAa,iBAAiB;AAEpC,qBACE,mDAAC;AAAA,gBAEC;AAAA,gBACA,SAAS,MACA;AAAA,kBAAqB,MAC1B,mBAAmB,gBAAgB;AAAA,gBACrC;AAAA,gBAGF,6DAAC;AAAA,kBACC,SAAS;AAAA,kBACT,QAAQ;AAAA,oBACN,UAAU,gBAAgB,UAAU;AAAA,kBACtC;AAAA,mBAJF;AAAA;AAAA;AAAA;AAAA,uBAKA;AAAA,iBAbK,YADP;AAAA;AAAA;AAAA;AAAA,qBAeA;AAAA,YAEJ,CAAC;AAAA,aAvBH;AAAA;AAAA;AAAA;AAAA,iBAwBA;AAAA,UAEA,mDAAC;AAAA,YAAG,WAAW,wBAAwB;AAAA,YACpC,WAAC,UAAU,mDAAC;AAAA,cAAiB,OAAO,qBAAqB,KAAK;AAAA,eAAnD;AAAA;AAAA;AAAA;AAAA,mBAAsD;AAAA,aADpE;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA;AAAA,SA7BF;AAAA;AAAA;AAAA;AAAA,aA8BA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW;AAAA,QACZ,WAAC,UACA,mDAAC;AAAA,UACC;AAAA,UACA,QAAQ;AAAA,UACR,WAAW,CAAC,WAAoB;AAC9B,oCAAwB,MAAS,GAI5B,UACH,WAAW;AAAA,UAEf;AAAA,UACA,WAAW,OAAO,eACT,cAAc,WAAW,IAAI;AAAA,WAbxC;AAAA;AAAA;AAAA;AAAA,eAeA;AAAA,SAjBJ;AAAA;AAAA;AAAA;AAAA,aAmBA;AAAA;AAAA,KAxDF;AAAA;AAAA;AAAA;AAAA,SAyDA;AAEJ;AAEA,SAAS,gBAAgB,YAAoB;AAC3C,MAAMC,cAAa,CAAC,UAClB,MAAM,MAAM,GAAG,CAAC,EAAE,YAAY,IAAI,MAAM,MAAM,CAAC;AAEjD,SAAI,WAAW,SAAS,MAAM,IACrBA,YAAW,WAAW,MAAM,MAAM,EAAE,EAAE,IAGxCA,YAAW,UAAU;AAC9B;AAEA,IAAO,yBAAQ;;;AW9If,IAAAC,iBAAuC,kBACvCC,oBAAwC;;;ACDxC,IAAAC,iBAA4B;AAQ5B,SAAS,yBAAyB;AAChC,aAAO,4BAAY,MAAM;AACvB,QAAM,gCACJ,WACA;AAEF,IAAI,iCACF,MAAM,KAAK,8BAA8B,KAAK,CAAC,EAC5C,OAAO,CAAC,QAAQ,IAAI,SAAS,WAAW,CAAC,EACzC,QAAQ,CAAC,QAAQ,8BAA8B,OAAO,GAAG,CAAC;AAAA,EAEjE,GAAG,CAAC,CAAC;AACP;AAEA,IAAO,oCAAQ;;;ADtBf,+DAMM,uBAED,CAAC,EAAE,UAAU,cAAc,MAAM;AACpC,MAAM,WAAO,2BAAQ,GACf,EAAE,OAAO,QAAI,kCAAe,GAC5B,mBAAmB,oBAAoB,GACvC,aAAa,kCAAuB,GACpC,oBAAoB,WAAW;AAErC,uCAAU,MAAM;AAEd,QAAI,CAAC;AACH;AAKF,QAAM,WAAW,KAAK,mBAAmB,CAAC,SAAS;AAGjD,UAAM,eAAe,CAAC,QAAQ;AAM9B,UAJK,QACH,WAAW,GAGT;AACF,eAAO,iBAAiB,aAAa;AAAA,IAEzC,CAAC;AAGD,WAAO,MAAM,SAAS;AAAA,EACxB,GAAG;AAAA,IACD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC,GAEM;AAAA,IAAG;AAAA,KAAH;AAAA;AAAA;AAAA;AAAA,SAAY;AACrB;AAEe,SAAR,YAA6B;AAAA,EAClC;AAAA,EACA;AACF,GAEI;AAKF,SAJ+B,mBAAU,IASvC,mDAAC;AAAA,IAAqB;AAAA,IACnB;AAAA,KADH;AAAA;AAAA;AAAA;AAAA,SAEA,IANO;AAAA,IAAG;AAAA,KAAH;AAAA;AAAA;AAAA;AAAA,SAAY;AAQvB;AAEA,SAAS,sBAAsB;AAC7B,aAAO,4BAAY,CAAC,SAAiB;AAMnC,IALoB,OAAO,SAAS,aACK,QAKvC,OAAO,SAAS,OAAO,IAAI;AAAA,EAE/B,GAAG,CAAC,CAAC;AACP;;;AEnFA,IAAAC,eAAiB;AAKjB,eAAe,kBAAkB;AAC/B,MAAM,OAAO,IAAI,aAAAC,QAAK,GAChB,SAAS,MAAM,KAAK,OAAO;AAGjC,SAAO;AAAA,IACL,OAHY,KAAK,OAAO,MAAM;AAAA,IAI9B;AAAA,EACF;AACF;AAEA,IAAO,4BAAQ;;;ACTf,eAAe,wBAAwB,SAAiB;AACtD,MAAM,YAAY,oBAAoB,GAEhC,gBAAgB,MAAM,4BAA4B,SAAS,SAAS;AAE1E,SAAO,yBAAyB,aAAa;AAC/C;AAEA,IAAO,qCAAQ;;;ACff,IAAAC,iBAA+C;AAI/C;;;ACJA,IAAAC,yBAAsC,0BACtC,yBAAwB;AAGxB;AACA;AALA,+DAOM,0BAOD,CAAC,EAAE,UAAU,QAAQ,MAAM;AAdhC;AAeE,MAAM,EAAE,GAAAC,GAAE,QAAI,uCAAe,GAEvB,EAAE,UAAU,cAAc,OAAO,UAAU,QAAI,gCAAQ;AAAA,IAC3D,eAAe;AAAA,MACb,OAAO;AAAA,MACP,UAAU;AAAA,MACV,gBAAgB;AAAA,IAClB;AAAA,EACF,CAAC,GAEK,eAAe,SAAS,SAAS,EAAE,UAAU,GAAK,CAAC,GACnD,SAAS,UAAU,QAEnB,kBAAkB,SAAS,YAAY;AAAA,IAC3C,UAAU;AAAA,IACV,WAAW;AAAA,MACT,OAAO;AAAA,MACP,SAASA,GAAU,0BAA0B;AAAA,IAC/C;AAAA,EACF,CAAC,GAEK,gBAAgB,MAAM,UAAU,GAEhC,wBAAwB,SAAS,kBAAkB;AAAA,IACvD,UAAU;AAAA,IACV,WAAW;AAAA,MACT,OAAO;AAAA,MACP,SAASA,GAAU,0BAA0B;AAAA,IAC/C;AAAA,IACA,UAAU,CAAC,UACL,UAAU,gBACLA,GAAU,0BAA0B,IAGtC;AAAA,EAEX,CAAC;AAED,SACE,mDAAC;AAAA,IAAK,WAAW;AAAA,IAAU,UAAU,aAAa,QAAQ;AAAA,IACxD,6DAAC;AAAA,MAAI,WAAW;AAAA,MACd;AAAA,2DAAC;AAAA,UACC;AAAA,+DAAC,kBAAU,OAAV;AAAA,cACC;AAAA,mEAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAuC;AAAA,gBAEvC,mDAAC,kBAAU,OAAV;AAAA,kBACC,WAAS;AAAA,kBACT,UAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,aAAa;AAAA,kBACb,UAAU,aAAa;AAAA,kBACvB,QAAQ,aAAa;AAAA,kBACrB,UAAU,aAAa;AAAA,kBACvB,MAAM,aAAa;AAAA,mBARrB;AAAA;AAAA;AAAA;AAAA,uBASA;AAAA;AAAA,eAZF;AAAA;AAAA;AAAA;AAAA,mBAaA;AAAA,YAEA,mDAAC,kBAAU,OAAV;AAAA,cAAgB,QAAO,YAAO,UAAP,mBAAc;AAAA,eAAtC;AAAA;AAAA;AAAA;AAAA,mBAA+C;AAAA;AAAA,WAhBjD;AAAA;AAAA;AAAA;AAAA,eAiBA;AAAA,QAEA,mDAAC;AAAA,UACC,6DAAC,kBAAU,OAAV;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAmC;AAAA,cAEnC,mDAAC,kBAAU,OAAV;AAAA,gBACC,WAAS;AAAA,gBACT,UAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,aAAa;AAAA,gBACb,UAAU,gBAAgB;AAAA,gBAC1B,QAAQ,gBAAgB;AAAA,gBACxB,UAAU,gBAAgB;AAAA,gBAC1B,MAAM,gBAAgB;AAAA,iBARxB;AAAA;AAAA;AAAA;AAAA,qBASA;AAAA,cAEA,mDAAC,kBAAU,MAAV;AAAA,gBACC,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAqC;AAAA,iBADvC;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cAEA,mDAAC,kBAAU,OAAV;AAAA,gBACC,WAAQ;AAAA,gBACR,QAAO,YAAO,aAAP,mBAAiB;AAAA,iBAF1B;AAAA;AAAA;AAAA;AAAA,qBAGA;AAAA;AAAA,aArBF;AAAA;AAAA;AAAA;AAAA,iBAsBA;AAAA,WAvBF;AAAA;AAAA;AAAA;AAAA,eAwBA;AAAA,QAEA,mDAAC;AAAA,UACC,6DAAC,kBAAU,OAAV;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAuC;AAAA,cAEvC,mDAAC,kBAAU,OAAV;AAAA,gBACC,WAAS;AAAA,gBACT,UAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,aAAa;AAAA,gBACb,UAAU,sBAAsB;AAAA,gBAChC,QAAQ,sBAAsB;AAAA,gBAC9B,UAAU,sBAAsB;AAAA,gBAChC,MAAM,sBAAsB;AAAA,iBAR9B;AAAA;AAAA;AAAA;AAAA,qBASA;AAAA,cAEA,mDAAC,kBAAU,MAAV;AAAA,gBACC,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAA2C;AAAA,iBAD7C;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cAEA,mDAAC,kBAAU,OAAV;AAAA,gBACC,WAAQ;AAAA,gBACR,QAAO,YAAO,mBAAP,mBAAuB;AAAA,iBAFhC;AAAA;AAAA;AAAA;AAAA,qBAGA;AAAA;AAAA,aArBF;AAAA;AAAA;AAAA;AAAA,iBAsBA;AAAA,WAvBF;AAAA;AAAA;AAAA;AAAA,eAwBA;AAAA,QAEA,mDAAC;AAAA,UACC,6DAAC;AAAA,YACC,MAAM;AAAA,YACN,WAAS;AAAA,YACT,WAAW;AAAA,YACX,OAAO;AAAA,YACP,MAAK;AAAA,YACL;AAAA,YAEA,6DAAC;AAAA,cACC,WAAW;AAAA,cACX,UAAU,mDAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAmC;AAAA,cAE7C,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAkC;AAAA,eAJpC;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,aAbF;AAAA;AAAA;AAAA;AAAA,iBAcA;AAAA,WAfF;AAAA;AAAA;AAAA;AAAA,eAgBA;AAAA;AAAA,OAxFF;AAAA;AAAA;AAAA;AAAA,WAyFA;AAAA,KA1FF;AAAA;AAAA;AAAA;AAAA,SA2FA;AAEJ,GAEO,kCAAQ;;;ADrJf,+DAWM,+BAGD,CAAC,EAAE,UAAU,QAAQ,MAAM;AAC9B,MAAM,CAAC,QAAQ,KAAK,IAAI,8BAA8B,GAChD,kBAAc,uBAAO,EAAK,GAE1B,UAAU,MAAM,WAAW,YAAY,SAEvC,0BAAsB,4BAAY,MAAM;AAC5C,IAAI,MAAM,SAAS,WACjB,QAAQ,MAAM,KAAK;AAAA,EAEvB,GAAG,CAAC,MAAM,OAAO,OAAO,CAAC,GAEnB,oBAAgB;AAAA,IACpB,OAAO,SAAe;AAGpB,UAAM,UAAU,MAAM,KAAK,WAAW;AAEtC,kBAAY,UAAU,IAItB,SAAS,OAAO;AAAA,IAClB;AAAA,IACA,CAAC,QAAQ;AAAA,EACX;AAEA,gCAAU,MAAM;AACd,wBAAoB;AAAA,EACtB,GAAG,CAAC,mBAAmB,CAAC;AAExB,MAAM,eAAW;AAAA,IACf,OAAO,WAAgD;AACrD,UAAI;AACF;AAGF,UAAM,aAAa,MAAM,OAAO,OAAO,OAAO,OAAO,QAAQ;AAE7D,MAAI,cACF,MAAM,cAAc,WAAW,IAAI;AAAA,IAEvC;AAAA,IACA,CAAC,SAAS,QAAQ,aAAa;AAAA,EACjC;AAEA,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QAAG,WAAW,MAAM;AAAA,QAClB,WAAC,UAAU,mDAAC;AAAA,UAAiB,OAAO,qBAAqB,KAAK;AAAA,WAAnD;AAAA;AAAA;AAAA;AAAA,eAAsD;AAAA,SADpE;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAwB;AAAA,QAAoB;AAAA,SAA7C;AAAA;AAAA;AAAA;AAAA,aAA+D;AAAA;AAAA,KALjE;AAAA;AAAA;AAAA;AAAA,SAMA;AAEJ,GAEO,uCAAQ;;;AEvEf,IAAAC,iBAAsC,kBAGtCC,eAIO,0BAEPC,qBAAwB;AAMxB;;;ACfA,IAAAC,iBAAqB,6BACrBC,yBAAsB,0BACtBC,0BAAwB;AAGxB;AACA;AANA,+DAQM,0BAGD,CAAC,EAAE,UAAU,QAAQ,MAAM;AAC9B,MAAM,EAAE,UAAU,aAAa,QAAI,iCAAQ;AAAA,IACzC,eAAe;AAAA,MACb,OAAO;AAAA,MACP,UAAU;AAAA,IACZ;AAAA,EACF,CAAC,GAEK,eAAe,SAAS,SAAS,EAAE,UAAU,GAAK,CAAC,GACnD,kBAAkB,SAAS,YAAY,EAAE,UAAU,GAAK,CAAC;AAE/D,SACE,mDAAC;AAAA,IAAK,WAAW;AAAA,IAAU,UAAU,aAAa,QAAQ;AAAA,IACxD,6DAAC;AAAA,MAAI,WAAW;AAAA,MACd;AAAA,2DAAC;AAAA,UACC,6DAAC,kBAAU,OAAV;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAuC;AAAA,cAEvC,mDAAC,kBAAU,OAAV;AAAA,gBACC,WAAS;AAAA,gBACT,UAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,aAAa;AAAA,gBACb,UAAU,aAAa;AAAA,gBACvB,QAAQ,aAAa;AAAA,gBACrB,UAAU,aAAa;AAAA,gBACvB,MAAM,aAAa;AAAA,iBARrB;AAAA;AAAA;AAAA;AAAA,qBASA;AAAA;AAAA,aAZF;AAAA;AAAA;AAAA;AAAA,iBAaA;AAAA,WAdF;AAAA;AAAA;AAAA;AAAA,eAeA;AAAA,QAEA,mDAAC;AAAA,UACC,6DAAC,kBAAU,OAAV;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAmC;AAAA,cAEnC,mDAAC,kBAAU,OAAV;AAAA,gBACC,UAAQ;AAAA,gBACR,WAAS;AAAA,gBACT,MAAK;AAAA,gBACL,aAAa;AAAA,gBACb,UAAU,gBAAgB;AAAA,gBAC1B,QAAQ,gBAAgB;AAAA,gBACxB,UAAU,gBAAgB;AAAA,gBAC1B,MAAM,gBAAgB;AAAA,iBARxB;AAAA;AAAA;AAAA;AAAA,qBASA;AAAA,cAEA,mDAAC;AAAA,gBAAI,WAAW;AAAA,gBACd,6DAAC;AAAA,kBAAK,IAAI;AAAA,kBAAwB,WAAW;AAAA,kBAC3C,6DAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAAkD;AAAA,mBADpD;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA;AAAA,aAlBF;AAAA;AAAA;AAAA;AAAA,iBAmBA;AAAA,WApBF;AAAA;AAAA;AAAA;AAAA,eAqBA;AAAA,QAEA,mDAAC;AAAA,UACC,6DAAC;AAAA,YACC,MAAM;AAAA,YACN,WAAW;AAAA,YACX,OAAO;AAAA,YACP,WAAQ;AAAA,YACR,MAAK;AAAA,YACL;AAAA,YAEA,6DAAC;AAAA,cACC,WAAW;AAAA,cACX,UAAU,mDAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA+B;AAAA,cAEzC,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAkC;AAAA,eAJpC;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,aAbF;AAAA;AAAA;AAAA;AAAA,iBAcA;AAAA,WAfF;AAAA;AAAA;AAAA;AAAA,eAgBA;AAAA;AAAA,OAzDF;AAAA;AAAA;AAAA;AAAA,WA0DA;AAAA,KA3DF;AAAA;AAAA;AAAA;AAAA,SA4DA;AAEJ,GAEO,kCAAQ;;;ADnEf;AApBA,+DAsBM,+BAED,CAAC,EAAE,SAAS,MAAM;AACrB,MAAM,WAAO,4BAAQ,GACf,eAAe,gBAAsB,GAErC,CAAC,sBAAsB,uBAAuB,QAClD,yBAAkC,GAE9B,YAAY,aAAa,MAAM,SAE/B,4BAAwB;AAAA,IAC5B,OAAO,WAAgD;AACrD,UAAI,YAIJ;AAAA,qBAAa,WAAW,EAAI;AAE5B,YAAI;AACF,cAAM,aAAa,MAAMC,eAAc,MAAM,MAAM;AAEnD,cAAI,YAAY;AAGd,gBAAM,UAAU,MAAM,WAAW,KAAK,WAAW;AAIjD,qBAAS,OAAO;AAAA,UAClB;AAAA,QACF,SAAS,OAAP;AACA,UAAI,mBAAmB,KAAK,IAC1B,wBAAwB,KAAK,IAE7B,aAAa,SAAS,KAAK;AAAA,QAE/B;AAAA;AAAA,IACF;AAAA,IACA,CAAC,WAAW,MAAM,UAAU,YAAY;AAAA,EAC1C;AAEA,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QAAG,WAAW,aAAa,MAAM;AAAA,QAChC,6DAAC;AAAA,UACC,OAAO,qBAAqB,aAAa,MAAM,KAAK;AAAA,WADtD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QACC,UAAU;AAAA,QACV,SAAS;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW;AAAA,QACZ,WAAC,UACA,mDAAC;AAAA,UACC;AAAA,UACA,QAAQ;AAAA,UACR,WAAW,CAAC,WAAW;AACrB,oCAAwB,MAAS,GAI5B,UACH,aAAa,WAAW;AAAA,UAE5B;AAAA,UACA,WAAW,OAAO,eAAe;AAC/B,gBAAM,UAAU,MAAM,WAAW,KAAK,WAAW;AAIjD,qBAAS,OAAO;AAAA,UAClB;AAAA,WAlBF;AAAA;AAAA;AAAA;AAAA,eAmBA;AAAA,SArBJ;AAAA;AAAA;AAAA;AAAA,aAuBA;AAAA;AAAA,KAnCF;AAAA;AAAA;AAAA;AAAA,SAoCA;AAEJ;AAEA,eAAeA,eACb,MACA,QACA;AACA,MAAM,EAAE,OAAO,SAAS,IAAI,QACtB,OAAO,KAAK;AAElB,MAAI,MAAM;AACR,QAAM,aAAa,+BAAkB,WAAW,OAAO,QAAQ;AAE/D,eAAO,2CAA6B,MAAM,UAAU;AAAA,EACtD;AAEA,aAAO,yCAA2B,MAAM,OAAO,QAAQ;AACzD;AAEA,IAAO,uCAAQ;;;AEzHf,IAAAC,iBAA4B;;;ACC5B,IAAAC,iBAA4B,kBAG5BC,qBAAwB,sBACxB,yBAAoB,qCACpBC,yBAAsC;AAItC;AAEA;AAEA;AAdA,+DAoBM,6BAA6B,0BAE7B,4BAGD,CAAC,EAAE,QAAAC,UAAQ,UAAU,MAAM;AAC9B,MAAM,EAAE,GAAAC,GAAE,QAAI,uCAAe,GAEvB,yBAAyB,gBAAoC,GAC7D,8BAA8B,gBAAsB,GACpD,6BAA6B,8BAA8BD,QAAM,GAEjE,8BACJ;AAAA,IACE,OAAO,UAAU;AACf,YAAM,eAAe,GAErB,uBAAuB,WAAW,EAAI;AAGtC,UAAM,cADO,IAAI,SAAS,MAAM,aAAa,EACpB,IAAI,aAAa,GAEpC,UAAU,2BAA2B,WAAW,EACnD,KAAK,CAAC,uBAAuB;AAG5B,+BAAuB,QAAQ,kBAAkB;AAAA,MACnD,CAAC,EACA,MAAM,CAAC,UAAU;AAChB,qCAAuB,SAAS,KAAK,GAE/B,qBAAqB,KAAK;AAAA,MAClC,CAAC;AAEH,YAAM,uBAAAE,QAAQ,QAAQ,SAAS;AAAA,QAC7B,SAASD,GAAU,kCAAkC;AAAA,QACrD,SAASA,GAAU,kCAAkC;AAAA,QACrD,OAAOA,GAAU,gCAAgC;AAAA,MACnD,CAAC;AAAA,IACH;AAAA,IACA,CAAC,wBAAwB,4BAA4BA,EAAC;AAAA,EACxD,GAEI,+BACJ;AAAA,IACE,OAAO,UAAU;AACf,YAAM,eAAe;AAGrB,UAAM,mBADO,IAAI,SAAS,MAAM,aAAa,EACf,IAAI,kBAAkB,GAG9C,qBAAqB,uBAAuB,MAAM;AAIxD,UAAI,CAAC;AACH;AAGF,kCAA4B,WAAW,EAAI;AAG3C,UAAM,UAAU,mBACb,QAAQ,gBAAgB,EACxB,KAAK,SAAS,EACd,MAAM,CAAC,UAAyB;AAC/B,0CAA4B,SAAS,KAAK,GAEpC,qBAAqB,KAAK;AAAA,MAClC,CAAC;AAEH,YAAM,uBAAAC,QAAQ,QAAQ,SAAS;AAAA,QAC7B,SAASD,GAAU,iCAAiC;AAAA,QACpD,SAASA,GAAU,iCAAiC;AAAA,QACpD,OAAOA,GAAU,+BAA+B;AAAA,MAClD,CAAC;AAAA,IACH;AAAA,IACA;AAAA,MACE,uBAAuB,MAAM;AAAA,MAC7B;AAAA,MACAA;AAAA,MACA;AAAA,IACF;AAAA,EACF,GAII,+BACJ,uBAAuB,MAAM,SAAS,QAGlC,oCAAoC,CAAC;AAE3C,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QAAG,WAAW;AAAA,QACb,6DAAC;AAAA,UAAK,WAAW;AAAA,UAAU,UAAU;AAAA,UACnC,6DAAC;AAAA,YAAI,WAAW;AAAA,YACd;AAAA,iEAAC,kBAAU,OAAV;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAA4C;AAAA,kBAE5C,mDAAC,kBAAU,OAAV;AAAA,oBACC,UAAQ;AAAA,oBACR,SAAS;AAAA,oBACT,MAAM;AAAA,oBACN,MAAM;AAAA,oBACN,aAAa;AAAA,oBACb,UAAU,uBAAuB,MAAM;AAAA,qBANzC;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA;AAAA,iBAVF;AAAA;AAAA;AAAA;AAAA,qBAWA;AAAA,cAEA,mDAAC;AAAA,gBAAG,WAAW,uBAAuB,MAAM;AAAA,gBACzC,WAAC,UACA,mDAAC;AAAA,kBAAiB,OAAO,qBAAqB,KAAK;AAAA,mBAAnD;AAAA;AAAA;AAAA;AAAA,uBAAsD;AAAA,iBAF1D;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA,cAEA,mDAAC;AAAA,gBACC,MAAM;AAAA,gBACN,IAAI;AAAA,gBACJ,OAAK;AAAA,gBACL,MAAM;AAAA,gBACN,SAAS,uBAAuB,MAAM;AAAA,gBAEtC;AAAA,qEAAC;AAAA,oBAAG,WAAWD,aAAW;AAAA,oBACxB,6DAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAAwD;AAAA,qBAD1D;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA,kBAEA,mDAAC;AAAA,oBAAG,WAAWA,aAAW;AAAA,oBACxB,6DAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAA8C;AAAA,qBADhD;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA;AAAA,iBAbF;AAAA;AAAA;AAAA;AAAA,qBAcA;AAAA;AAAA,aAlCF;AAAA;AAAA;AAAA;AAAA,iBAmCA;AAAA,WApCF;AAAA;AAAA;AAAA;AAAA,eAqCA;AAAA,SAtCF;AAAA;AAAA;AAAA;AAAA,aAuCA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW;AAAA,QACb,6DAAC;AAAA,UAAK,WAAW;AAAA,UAAU,UAAU;AAAA,UACnC,6DAAC;AAAA,YAAI,WAAW;AAAA,YACd;AAAA,iEAAC,kBAAU,OAAV;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAA4C;AAAA,kBAE5C,mDAAC,kBAAU,OAAV;AAAA,oBACC,UAAQ;AAAA,oBACR,cAAc;AAAA,oBACd,MAAM;AAAA,qBAHR;AAAA;AAAA;AAAA;AAAA,yBAIA;AAAA,kBAEA,mDAAC,kBAAU,MAAV;AAAA,oBACC,6DAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAA2D;AAAA,qBAD7D;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA;AAAA,iBAXF;AAAA;AAAA;AAAA;AAAA,qBAYA;AAAA,cAEA,mDAAC;AAAA,gBAAG,WAAW,4BAA4B,MAAM;AAAA,gBAC9C,WAAC,UACA,mDAAC;AAAA,kBAAiB,OAAO,qBAAqB,KAAK;AAAA,mBAAnD;AAAA;AAAA;AAAA;AAAA,uBAAsD;AAAA,iBAF1D;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA,cAEA,mDAAC;AAAA,gBACC,MAAM;AAAA,gBACN,OAAK;AAAA,gBACL,SAAS,4BAA4B,MAAM;AAAA,gBAE3C,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAA2D;AAAA,iBAL7D;AAAA;AAAA;AAAA;AAAA,qBAMA;AAAA;AAAA,aA3BF;AAAA;AAAA;AAAA;AAAA,iBA4BA;AAAA,WA7BF;AAAA;AAAA;AAAA;AAAA,eA8BA;AAAA,SA/BF;AAAA;AAAA;AAAA;AAAA,aAgCA;AAAA;AAAA,KA1EF;AAAA;AAAA;AAAA;AAAA,SA2EA;AAEJ;AAEA,SAAS,8BAA8BA,UAAoB;AACzD,MAAM,WAAO,4BAAQ,GACf,uBAAuB,+BAAqB,0BAA0B;AAE5E,aAAO;AAAA,IACL,OAAO,gBAAwB;AAC7B,UAAM,WAAW,MAAM,qBAAqB;AAE5C,UAAIA,aAAW,QAAQ;AACrB,YAAM,EAAE,oBAAoB,IAAI,MAAM,OAAO,kBACvC,OAAO,KAAK;AAElB,eAAK,OAIE,oBAAoB,MAAM,aAAa,QAAQ,IAH7C,QAAQ,OAAO,uBAAuB;AAAA,MAIjD;AAEA,UAAIA,aAAW,UAAU;AACvB,YAAM,EAAE,sBAAsB,IAAI,MAAM,OAAO;AAE/C,eAAO,sBAAsB,MAAM,aAAa,QAAQ;AAAA,MAC1D;AAEA,aAAO,QAAQ,OAAO,mBAAmBA,WAAS;AAAA,IACpD;AAAA,IACA,CAACA,UAAQ,MAAM,oBAAoB;AAAA,EACrC;AACF;AAEA,IAAO,oCAAQ;;;ADjOf,+DAIM,6BAED,CAAC,EAAE,SAAS,MAAM;AACrB,MAAM,gBAAY;AAAA,IAChB,OAAO,eAA+B;AACpC,UAAM,UAAU,MAAM,WAAW,KAAK,WAAW;AAEjD,eAAS,OAAO;AAAA,IAClB;AAAA,IACA,CAAC,QAAQ;AAAA,EACX;AAEA,SAAO,mDAAC;AAAA,IAA0B,QAAQ;AAAA,IAAU;AAAA,KAA7C;AAAA;AAAA;AAAA;AAAA,SAAmE;AAC5E,GAEO,qCAAQ;;;AEnBf,IAAAG,yBAAsC,0BAEtCC,iBAA4B,kBAC5BC,qBAAwB,sBACxBC,eAAsC,0BACtCC,0BAAkB;AAElB;AAIA;AACA;AACA;AAbA,+DAiBM,gBAA0B,MAAM;AACpC,MAAM,WAAO,4BAAQ,GACf,EAAE,GAAAC,GAAE,QAAI,uCAAe,GACvB,EAAE,OAAO,YAAY,SAAS,SAAS,IAAI,gBAAsB,GAEjE,eAA8C;AAAA,IAClD,OAAO,UAAU;AACf,YAAM,eAAe;AAErB,UAAM,SAAS,MAAM,eAEf,QADO,IAAI,SAAS,MAAM,EACb,IAAI,OAAO,GACxB,MAAM,WAAW;AAEvB,iBAAW,EAAI;AAOf,UAAM,cAAU,oCAAsB,MAAM,OAL3B;AAAA,QACf;AAAA,QACA,iBAAiB;AAAA,MACnB,CAE2D,EACxD,KAAK,MAAM;AACV,4BAAoB,KAAK,GAEzB,QAAQ;AAAA,MACV,CAAC,EACA,MAAM,CAAC,UAAU;AAChB,uBAAS,KAAK,GAER,qBAAqB,KAAK;AAAA,MAClC,CAAC;AAEH,YAAM,wBAAAC,QAAM,QAAQ,SAAS;AAAA,QAC3B,SAASD,GAAU,uBAAuB;AAAA,QAC1C,SAASA,GAAU,2BAA2B;AAAA,QAC9C,OAAOA,GAAU,kBAAkB;AAAA,MACrC,CAAC;AAAA,IACH;AAAA,IACA,CAAC,MAAMA,IAAG,SAAS,UAAU,UAAU;AAAA,EACzC;AAEA,SAAI,MAAM,UAEN,mDAAC;AAAA,IAAM,MAAM;AAAA,IACX,6DAAC;AAAA,MAAM,SAAS;AAAA,OAAhB;AAAA;AAAA;AAAA;AAAA,WAAwC;AAAA,KAD1C;AAAA;AAAA;AAAA;AAAA,SAEA,IAKF,mDAAC;AAAA,IAAK,WAAW;AAAA,IAAU;AAAA,IACzB;AAAA,yDAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC;AAAA,YACC,6DAAC,kBAAU,OAAV;AAAA,cACC;AAAA,mEAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAuC;AAAA,gBAEvC,mDAAC,kBAAU,OAAV;AAAA,kBACC,WAAS;AAAA,kBACT,UAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,aAAa;AAAA,kBACb,MAAM;AAAA,mBALR;AAAA;AAAA;AAAA;AAAA,uBAMA;AAAA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA,mBAUA;AAAA,aAXF;AAAA;AAAA;AAAA;AAAA,iBAYA;AAAA,UAEA,mDAAC;AAAA,YAAO,MAAM;AAAA,YAAS,SAAS,MAAM;AAAA,YACpC,6DAAC;AAAA,cACC,WAAW,MAAM;AAAA,cACjB,UAAU,mDAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAsC;AAAA,cAEhD,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAyC;AAAA,eAJ3C;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA;AAAA,SAtBF;AAAA;AAAA;AAAA;AAAA,aAuBA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW,MAAM;AAAA,QACnB,6DAAC;AAAA,UAAM,MAAM;AAAA,UACX,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAAoC;AAAA,WADtC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA;AAAA,KA9BF;AAAA;AAAA;AAAA;AAAA,SA+BA;AAEJ;AAEA,SAAS,aAAa;AACpB,MAAM,SAAS,OAAO,SAAS,QACzB,OAAO,sBAAc,MAAM;AAEjC,SAAO,CAAC,QAAQ,IAAI,EAAE,KAAK,EAAE;AAC/B;AAEA,SAAS,oBAAoB,OAAe;AAC1C,SAAO,aAAa,QAAQ,kBAAkB,KAAK;AACrD;AAEA,IAAO,wBAAQ;;;AtBjEf;;;AuB/CA,4BAAsB;AAMtB,eAAO,6BAAoD;AAGzD,MAFiB,sBAAc,UAEjB;AACZ,QAAM,EAAE,wBAAAE,wBAAuB,IAAI,MAAM;AAIzC,WAAOA,wBAAuB;AAAA,EAChC;AAEA,MAAM,cAAc,QAAQ,IAAI,uBAC1B,aAAa,QAAQ,IAAI,sBACzB,YAAY,wBAAe,WAC3B,gBAAgB,wBAAe;AAErC,4BAAAC,SAAU,aAAa,oCAAoC,OAC3D,sBAAAA,SAAU,YAAY,mCAAmC,OACzD,sBAAAA,SAAU,WAAW,gCAAgC,OACrD,sBAAAA,SAAU,eAAe,sCAAsC;AAE/D,MAAM,EAAE,wBAAAC,wBAAuB,IAAI,MAAM;AAEzC,SAAOA,wBAAuB;AAAA,IAC5B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACH;;;AC/BA,SAAS,oBAAoB;AAC3B,SAAO,2BAA2B;AACpC;AAEA,IAAO,8BAAQ;;;ACVf,IAAAC,iBAA4B,6BAE5BC,yBAAsB;AAEtB;AAJA;AAMA,SAAS,oBAAoB;AAC3B,MAAM,eAAW,4BAAY;AAE7B,SACE,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd;AAAA,yDAAC;AAAA,QAAiB,OAAO;AAAA,SAAzB;AAAA;AAAA;AAAA;AAAA,aAAoC;AAAA,MAEpC,mDAAC;AAAA,QAAO,SAAS,MAAM,SAAS,GAAG;AAAA,QACjC,6DAAC;AAAA,UAAM,SAAS;AAAA,UAAgB,SAAS;AAAA,WAAzC;AAAA;AAAA;AAAA;AAAA,eAAkD;AAAA,SADpD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,KALF;AAAA;AAAA;AAAA;AAAA,SAMA;AAEJ;AAEA,IAAO,4BAAQ;;;AzBpBf;AAuEO,IAAMC,iBAAgB,2BAEhBC,QAAqB,CAAC,EAAE,KAAK,OACjC;AAAA,EACL,OAAO;AAAA,EACP,cAAc,6BAAM;AACtB,IAGI,aAAa,MAAM;AACvB,MAAM,WAAO,8BAA6B,GACpC,CAAC,MAAM,OAAO,QAAI,yBAAS,KAAK,IAAI,GACpC,kBAAc,mCAAe,GAE7B,iBAAa,8BAAc,GAC3B,SAAS,KAAK,QACd,eAAe,OAAO;AAQ5B,aANA,0BAAU,MAAM;AACd,IAAI,YAAY,WAAW,aAAa,CAAC,YAAY,KAAK,YACxD,QAAQ,MAAS;AAAA,EAErB,GAAG,CAAC,WAAW,CAAC,GAEZ,WAAW,UAAU,eAErB,mDAAC;AAAA,IACC,6DAAC;AAAA,MACC,SAAS;AAAA,MACT,QAAQ,EAAE,MAAM,aAAa,KAAK;AAAA,MAClC,YAAY,EAAE,GAAG,mDAAC,SAAD;AAAA;AAAA;AAAA;AAAA,aAAG,EAAG;AAAA,OAHzB;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,KALF;AAAA;AAAA;AAAA;AAAA,SAMA,IAKF;AAAA,IACE;AAAA,yDAAC;AAAA,QAAQ,MAAM;AAAA,QACb,6DAAC;AAAA,UACC,SAAS;AAAA,UACT,QAAQ;AAAA,YACN,cAAc,OAAO,aAAa;AAAA,UACpC;AAAA,WAJF;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MAEA,mDAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YAAE,WAAW;AAAA,YACZ,6DAAC;AAAA,cACC,SAAS;AAAA,cACT,QAAQ;AAAA,gBACN,cAAc,OAAO,aAAa;AAAA,cACpC;AAAA,cACA,YAAY,EAAE,GAAG,mDAAC,SAAD;AAAA;AAAA;AAAA;AAAA,qBAAG,EAAG;AAAA,eALzB;AAAA;AAAA;AAAA;AAAA,mBAMA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA,iBAQA;AAAA,UAEA,mDAAC;AAAA,YAAE,WAAW;AAAA,YACZ,6DAAC;AAAA,cAAG,WAAW,CAAC;AAAA,cACd,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA6C;AAAA,eAD/C;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA;AAAA,SAfF;AAAA;AAAA;AAAA;AAAA,aAgBA;AAAA,MAEA,mDAAC;AAAA,QAAsB,YAAY,OAAO;AAAA,QAAM;AAAA,SAAhD;AAAA;AAAA;AAAA;AAAA,aAA4D;AAAA;AAAA,KA5B9D;AAAA;AAAA;AAAA;AAAA,SA6BA;AAEJ;AAEA,SAAS,sBAAsB;AAAA,EAC7B;AAAA,EACA;AACF,GAGI;AACF,MAAM,WAAO,4BAAQ,GACf,aAAS,0BAAU,GACnB,eAAe,gBAAgB,GAC/B,iBAAa,8BAAc,GAC3B,oBAAoB,gBAAgB,GACpC,CAAC,MAAM,OAAO,QAAI,yBAAe,cAAW,GAE5C,uBAAmB;AAAA,IACvB,CAAC,YAAoB;AACnB,UAAM,YAAY,aAAa,KAAK;AAQpC,aAAO,OANM;AAAA,QACX,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACF,GAEoB;AAAA,QAClB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA,IACA,CAAC,cAAc,YAAY,MAAM;AAAA,EACnC;AAEA,SAAI,WAAW,UAAU,SAChB,mDAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,SAAsB,IAI7B;AAAA,IAEE;AAAA,yDAAC;AAAA,QAAG,WAAW;AAAA,QACb,6DAAC;AAAA,UAAY,eAAe;AAAA,UAC1B,6DAAC;AAAA,YACC,UAAU,CAAC,OACT,EAAE,eAAe,GACV,iBAAiB,EAAE;AAAA,YAE5B,WAAW;AAAA,YAEX;AAAA,iEAAC;AAAA,gBAAE,WAAW;AAAA,gBACZ,6DAAC;AAAA,kBACC,SAAS;AAAA,kBACT,QAAQ,EAAE,OAAO,6BAAM,MAAM;AAAA,kBAC7B,YAAY,EAAE,GAAG,mDAAC,SAAD;AAAA;AAAA;AAAA;AAAA,yBAAG,EAAG;AAAA,mBAHzB;AAAA;AAAA;AAAA;AAAA,uBAIA;AAAA,iBALF;AAAA;AAAA;AAAA;AAAA,qBAMA;AAAA,cAEA,mDAAC;AAAA,gBAAO,WAAS;AAAA,gBAA+B,MAAM;AAAA,gBACpD,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAqC;AAAA,iBADvC;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cAEA,mDAAC;AAAA,gBACC,6DAAC;AAAA,kBAAI,WAAW;AAAA,kBACd;AAAA,uEAAC;AAAA,sBAAE,WAAW;AAAA,sBACZ,6DAAC;AAAA,wBACC,WACE;AAAA,wBAGF,6DAAC;AAAA,0BAAM,SAAS;AAAA,2BAAhB;AAAA;AAAA;AAAA;AAAA,+BAAyD;AAAA,yBAL3D;AAAA;AAAA;AAAA;AAAA,6BAMA;AAAA,uBAPF;AAAA;AAAA;AAAA;AAAA,2BAQA;AAAA,oBAEA,mDAAC;AAAA,sBACC,OAAK;AAAA,sBACL,OAAO;AAAA,sBACP,MAAM;AAAA,sBACN,SAAS,MAAM,KAAK,QAAQ;AAAA,sBAC5B,MAAM;AAAA,sBAEN,6DAAC;AAAA,wBAAM,SAAS;AAAA,yBAAhB;AAAA;AAAA;AAAA;AAAA,6BAAgC;AAAA,uBAPlC;AAAA;AAAA;AAAA;AAAA,2BAQA;AAAA;AAAA,mBAnBF;AAAA;AAAA;AAAA;AAAA,uBAoBA;AAAA,iBArBF;AAAA;AAAA;AAAA;AAAA,qBAsBA;AAAA;AAAA,aAzCF;AAAA;AAAA;AAAA;AAAA,iBA0CA;AAAA,WA3CF;AAAA;AAAA;AAAA;AAAA,eA4CA;AAAA,SA7CF;AAAA;AAAA;AAAA;AAAA,aA8CA;AAAA,MAGA,mDAAC;AAAA,QAAG,WAAW,CAAC;AAAA,QACd;AAAA,6DAAC;AAAA,YAAe,UAAU;AAAA,aAA1B;AAAA;AAAA;AAAA;AAAA,iBAA4C;AAAA,UAE5C,mDAAC;AAAA,YAAG,WAAW,sBAAc,KAAK,UAAU;AAAA,YAC1C;AAAA,iEAAC;AAAA,gBAAG,WAAW,SAAS;AAAA,gBACtB,6DAAC;AAAA,kBAAI,WAAW;AAAA,kBACd;AAAA,uEAAC;AAAA,sBAA6B,UAAU;AAAA,uBAAxC;AAAA;AAAA;AAAA;AAAA,2BAA0D;AAAA,oBAE1D,mDAAC;AAAA,sBACC,OAAK;AAAA,sBACL,OAAO;AAAA,sBACP,MAAM;AAAA,sBACN,SAAS,MAAM,QAAQ,cAAW;AAAA,sBAElC,6DAAC;AAAA,wBAAM,SAAS;AAAA,yBAAhB;AAAA;AAAA;AAAA;AAAA,6BAAoD;AAAA,uBANtD;AAAA;AAAA;AAAA;AAAA,2BAOA;AAAA;AAAA,mBAVF;AAAA;AAAA;AAAA;AAAA,uBAWA;AAAA,iBAZF;AAAA;AAAA;AAAA;AAAA,qBAaA;AAAA,cAEA,mDAAC;AAAA,gBAAG,WAAW,SAAS;AAAA,gBACtB,6DAAC;AAAA,kBAAI,WAAW;AAAA,kBACd;AAAA,uEAAC;AAAA,sBAA6B,UAAU;AAAA,uBAAxC;AAAA;AAAA;AAAA;AAAA,2BAA0D;AAAA,oBAE1D,mDAAC;AAAA,sBACC,OAAK;AAAA,sBACL,OAAO;AAAA,sBACP,MAAM;AAAA,sBACN,SAAS,MAAM,QAAQ,cAAW;AAAA,sBAElC,6DAAC;AAAA,wBAAM,SAAS;AAAA,yBAAhB;AAAA;AAAA;AAAA;AAAA,6BAAkD;AAAA,uBANpD;AAAA;AAAA;AAAA;AAAA,2BAOA;AAAA;AAAA,mBAVF;AAAA;AAAA;AAAA;AAAA,uBAWA;AAAA,iBAZF;AAAA;AAAA;AAAA;AAAA,qBAaA;AAAA;AAAA,aA7BF;AAAA;AAAA;AAAA;AAAA,iBA8BA;AAAA,UAEA,mDAAC;AAAA,YAAG,WAAW,sBAAc,KAAK,UAAU;AAAA,YAC1C,6DAAC;AAAA,cAA2B,UAAU;AAAA,eAAtC;AAAA;AAAA;AAAA;AAAA,mBAAwD;AAAA,aAD1D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAEA,mDAAC;AAAA,YAAG,WAAW,sBAAc,KAAK,UAAU;AAAA,YAC1C,6DAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,mBAAe;AAAA,aADjB;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA;AAAA,SAzCF;AAAA;AAAA;AAAA;AAAA,aA0CA;AAAA;AAAA,KA7FF;AAAA;AAAA;AAAA;AAAA,SA8FA;AAEJ;AAEA,IAAO,eAAQ;AAEf,eAAsBC,QAAO,MAAkB;AAC7C,QAAM,4BAAkB;AAExB,MAAM,OAAO,KAAK,OAAO,MACnBC,UAAS,eAAU;AAIzB,MAAI,CAAC;AACH,WAAO,uBAAuB;AAGhC,MAAM,YAAY,MAAM,gBAAgB,IAAI,EAAE,MAAM,MAAG;AAAA,GAAY,GAC7D,SAAS,uCAAW;AAG1B,MAAI,CAAC;AACH,WAAAA,QAAO;AAAA,MACL;AAAA,QACE;AAAA,MACF;AAAA,MACA;AAAA,IACF,GAEO,uBAAuB;AAGhC,MAAI;AACF,QAAM,YAAY,MAAM,qBAAqB,KAAK,OAAO,GACnD,OAAO,MAAM,gBAAgB,SAAS,EAAE,MAAM,MAAG;AAAA,KAAY,GAC7D,SAAS,6BAAM,KACf,WAAW,SAAS,MAAM,gBAAgB,MAAM,IAAI,QAEpD,iBAAiB,OAAO,aAAa;AAG3C,QAAI,UACe,MAAM,0BAA0B;AAAA,MAC/C;AAAA,MACA;AAAA,IACF,CAAC,MAEyC;AAIxC,aAAO,wBAAwB;AAInC,QAAM,EAAE,OAAO,WAAW,OAAO,IAAI,MAAM,0BAAgB;AAE3D,eAAO;AAAA,MACL;AAAA,QACE,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACF;AAAA,MACA;AAAA,QACE,SAAS;AAAA,UACP,cAAc,MAAM,0BAA0B,MAAM;AAAA,QACtD;AAAA,MACF;AAAA,IACF;AAAA,EACF,SAAS,GAAP;AACA,WAAAA,QAAO,MAAM,CAAC,GAEdA,QAAO;AAAA,MACL;AAAA,IACF,GAEO,mBAAmB;AAAA,EAC5B;AACF;AAMA,eAAsBC,QAAO,MAAkB;AAC7C,MAAM,MAAM,KAAK,SACX,WAAW,MAAM,IAAI,SAAS,GAC9B,SAAS,OAAO,YAAY,SAAS,QAAQ,CAAC,GAC9C,SAAS,MAAMC,eAAc,EAAE,eAAe,MAAM;AAE1D,MAAI,CAAC,OAAO;AACV,WAAO,yBAAyB;AAGlC,QAAM,kBAAS,KAAK,OAAO,KAAK,SAAS;AAEzC,MAAMF,UAAS,eAAU,GACnB,UAAU,IAAI,QAAQ,GACtB,EAAE,MAAM,QAAQ,IAAI,OAAO,MAE7B;AAEJ,MAAI,SAAS;AACX,QAAM,sBAAsB,MAAM,mCAAwB,OAAO,GAE3D,YAAY,OADH,MAAM,mBAAmB,GACT,MAAM,mBAAmB,GAClD,OAAO,MAAM,gBAAgB,SAAS;AAE5C,aAAS,6BAAM,KAEf,QAAQ,OAAO,cAAc,mBAAmB;AAAA,EAClD;AACE,aAAS,MAAM,qBAAqB,GAAG;AAGzC,EAAAA,QAAO;AAAA,IACL;AAAA,MACE;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAGA,MAAM,kBADS,MAAM,2BAA2B,EAAE,MAAM,OAAO,CAAC,GAClC,aAAa;AAE3C,SAAAA,QAAO;AAAA,IACL;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,EACF,GAEA,QAAQ;AAAA,IACN;AAAA,IACA,MAAM,8BAA8B,cAAc;AAAA,EACpD,OAEO,uBAAS,sBAAc,MAAM,SAAS;AAAA,IAC3C;AAAA,EACF,CAAC;AACH;AAEA,SAAS,qBAAqB;AAC5B,aAAO,uBAAS,GAAG;AACrB;AAEA,SAAS,kBAAkB;AACzB,SAAO,mBAAU,IAAI,OAAO,SAAS,WAAW;AAClD;AAEA,SAASE,iBAAgB;AACvB,SAAO,cAAE,OAAO;AAAA,IACd,MAAM,cAAE,OAAO,EAAE,IAAI,CAAC;AAAA,IACtB,SAAS,cAAE,OAAO;AAAA,IAClB,WAAW,cAAE,OAAO,EAAE,IAAI,CAAC;AAAA,EAC7B,CAAC;AACH;AAEA,eAAe,qBAAqB,SAAkB;AACpD,MAAM,YAAY,MAAM,qBAAqB,OAAO;AAGpD,UAFa,MAAM,gBAAgB,SAAS,GAEhC;AACd;;;A0BtbA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA,YAAAC;AAAA;AAAA,IAAAC,iBAA0D,kBAC1DA,iBAAsC;;;ACDtC,IAAAC,eAA+B;AAU/B;;;ACRA,IAAM,4BAA4B;AAElC,eAAsB,wBAAwB,SAAkB;AAE9D,UADe,MAAM,iBAAiB,GACxB,MAAM,0BAAgB,OAAO,CAAC;AAC9C;AAEA,eAAsB,mBAAmB;AACvC,MAAM,EAAE,aAAa,IAAI,MAAM,OAAO;AAEtC,SAAO,aAAa,2BAA2B;AAAA,IAC7C,MAAM;AAAA,IACN,UAAU;AAAA,IACV,QAAQ,QAAQ,IAAI,aAAa;AAAA,IACjC,UAAU;AAAA,EACZ,CAAC;AACH;;;ACfA,eAAe,kBAAkB,SAAkB;AACjD,MAAM,CAAC,OAAO,YAAY,IAAI,MAAM,QAAQ,IAAI;AAAA,IAC9C,iBAAiB,OAAO;AAAA,IACxB,wBAAwB,OAAO;AAAA,EACjC,CAAC;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAEA,IAAO,+BAAQ;;;AFQf,IAAM,cAAc,OAAO,EAAE,QAAQ,MAAkB;AAvBvD;AAwBE,MAAI;AACF,UAAM,2BAA2B;AAEjC,QAAM,UAAU,MAAM,qBAAqB,OAAO,GAC5C,WAAW,MAAM,oBAAoB,OAAO;AAIlD,QAAI,CAAC;AACH,aAAO,gBAAgB,QAAQ,GAAG;AAOpC,QAAI,CAJgB,SAAQ,0CAAU,iBAAV,mBAAwB,SAAS;AAK3D,aAAO,qBAAqB;AAK9B,QAAM,OAAO,MAAM,YAAY,SAAS,GAAG,GACrC,wBAAwB,MAAM,0BAA0B,OAAO;AAGrE,QAAI,CAAC;AACH,aAAO,qBAAqB;AAG9B,QAAM,eAAe,MAAM;AAAA,MACzB,KAAK;AAAA,MACL;AAAA,IACF,GAEM,UAAU,IAAI,QAAQ;AAI5B,QAAI,cAAc;AAChB,UAAM,uBAAuB,MAAM;AAAA,QACjC,aAAa;AAAA,MACf;AAEA,cAAQ,OAAO,cAAc,oBAAoB;AAAA,IACnD;AAEA,QAAM,EAAE,OAAO,WAAW,OAAO,IAAI,MAAM,0BAAiB;AAC5D,YAAQ,OAAO,cAAc,MAAM,0BAA0B,MAAM,CAAC;AAEpE,QAAM,KAAK,MAAM,6BAAkB,OAAO;AAE1C,eAAO;AAAA,MACL;AAAA,QACE;AAAA,QACA;AAAA,QACA,SAAS;AAAA,QACT;AAAA,QACA;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,MACF;AAAA,IACF;AAAA,EACF,QAAE;AAGA,WAAO,gBAAgB,QAAQ,GAAG;AAAA,EACpC;AACF;AAEA,eAAe,oBAAoB,SAAwB;AACzD,MAAM,OAAO,MAAM,gBAAgB,OAAO;AAE1C,SAAO,gBAAgB,KAAK,GAAG;AACjC;AAEA,SAAS,uBAAuB;AAC9B,aAAO,uBAAS,sBAAc,MAAM,UAAU;AAChD;AAEA,SAAS,gBACP,WACA,eAAe,sBAAc,MAAM,QACnC;AAKA,MAAM,cAAc,GAAG,0BAA0B;AAEjD,aAAO,uBAAS,aAAa;AAAA,IAC3B,QAAQ,8BAAe;AAAA,EACzB,CAAC;AACH;AAEA,IAAO,wBAAQ;;;AD7Gf;AACA;;;AIZA,IAAAC,iBAAiC,kBACjCC,0BAAwB;;;ACDxB,IAAAC,qBAAkD,sBAGlDC,oBAIO;AAPP;AAae,SAAR,0BAA2C;AAAA,EAChD;AAAA,EACA;AACF,GAAuD;AACrD,MAAM,UAAM,mCAAe,GACrB,gBAAY,uCAAoB,KAAK,mBAAmB,CAAC;AAK/D,MAHsB,sBAAc,YAAY,aAG7B;AACjB,QAAM,OAAO,iBAAiB,GACxB,OAAO,OAAO,iBAAiB,CAAC;AAEtC,QAAI;AACF,oBAAc,MAAM;AAClB,QAAK,uBAAuB,SAAS,SACnC,4CAAyB,WAAW,MAAM,IAAI;AAAA,MAElD,CAAC;AAAA,IACH,QAAE;AAAA,IAEF;AAAA,EACF;AAOA,SAJE,mBAAU,KAAK,CAAC,uBAAuB,SAAS,KAAK,CAACC,WAAU,KAKhE,cAAc,UAAM,8CAA2B,SAAS,CAAC,GAGpD,mDAAC;AAAA,IAAkB,KAAK;AAAA,IAAY;AAAA,KAApC;AAAA;AAAA;AAAA;AAAA,SAA6C;AACtD;AAOA,SAAS,cAAc,UAAyC;AAC9D,MAAI;AACF,IAAK,SAAS;AAAA,EAChB,QAAE;AAAA,EAEF;AACF;AAEA,SAAS,mBAAmB;AAC1B,SAAO,gBAAO,EAAE,0BAA0B;AAC5C;AAEA,SAAS,mBAAmB;AAC1B,SAAO,gBAAO,EAAE,2BAA2B;AAC7C;AAOA,SAAS,uBAAuB,WAAsB;AACpD,MAAI,qBAAqB;AACvB,WAAQ,UACN;AAGN;AAMA,SAASA,aAAY;AACnB,SAAO,mBAAU,KAAK,aAAa;AACrC;AAMA,SAAS,qBAAqB;AAC5B,SAAOA,WAAU,IACb;AAAA,IACE,KAAK;AAAA,IACL,MAAM;AAAA,IACN,8BAA8B;AAAA,EAChC,IACA,CAAC;AACP;;;ACxGA,IAAAC,iBAA8B,kBAExB,qBAAiB,8BAGpB;AAAA,EACD,WAAW;AAAA,EACX,cAAc,CAAC,MAAM;AACvB,CAAC,GAEM,kBAAQ;;;ACVf,IAAAC,iBAAsC;AAGtC,IAAM,gCAAgC;AAEtC,SAAS,eAAe,cAAwB;AAC9C,MAAM,CAAC,aAAa,cAAc,QAAI,yBAAS,YAAY,GAErD,uBAAmB,4BAAY,CAAC,cAAuB;AAC3D,mBAAe,SAAS,GACxB,sBAAsB,SAAS;AAAA,EACjC,GAAG,CAAC,CAAC;AAEL,SAAO,CAAC,aAAa,gBAAgB;AACvC;AAEA,SAAS,sBAAsB,WAAoB;AACjD;AAAA,IACE;AAAA,IACA,YAAY,cAAc;AAAA,EAC5B;AACF;AAEA,IAAO,4BAAQ;;;ACvBf,IAAAC,iBAA2B,kBAE3BC,yBAAsB,0BACtBC,sBAAuB,gCAEvBC,kBAGO;;;ACRP,IAAAC,iBAAqB;;;ACArB,+DAAM,gBAAgB,MAElB,mDAAC;AAAA,EACC,OAAM;AAAA,EACN,QAAO;AAAA,EACP,SAAQ;AAAA,EACR,MAAK;AAAA,EACL,OAAM;AAAA,EAEN;AAAA,uDAAC;AAAA,MACC,GAAE;AAAA,MACF,MAAK;AAAA,OAFP;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC;AAAA,MACC,6DAAC;AAAA,QACC,IAAG;AAAA,QACH,IAAG;AAAA,QACH,IAAG;AAAA,QACH,IAAG;AAAA,QACH,IAAG;AAAA,QACH,eAAc;AAAA,QAEd;AAAA,6DAAC;AAAA,YAAK,QAAO;AAAA,YAAY,WAAU;AAAA,aAAnC;AAAA;AAAA;AAAA;AAAA,iBAA6C;AAAA,UAC7C,mDAAC;AAAA,YAAK,QAAO;AAAA,YAAW,WAAU;AAAA,aAAlC;AAAA;AAAA;AAAA;AAAA,iBAA4C;AAAA,UAC5C,mDAAC;AAAA,YAAK,QAAO;AAAA,YAAW,WAAU;AAAA,aAAlC;AAAA;AAAA;AAAA;AAAA,iBAA4C;AAAA,UAC5C,mDAAC;AAAA,YAAK,QAAO;AAAA,YAAW,WAAU;AAAA,aAAlC;AAAA;AAAA;AAAA;AAAA,iBAA4C;AAAA,UAC5C,mDAAC;AAAA,YAAK,QAAO;AAAA,YAAI,WAAU;AAAA,aAA3B;AAAA;AAAA;AAAA;AAAA,iBAAqC;AAAA;AAAA,SAZvC;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,OAdF;AAAA;AAAA;AAAA;AAAA,WAeA;AAAA;AAAA,GA1BF;AAAA;AAAA;AAAA;AAAA,OA2BA,GAIG,wBAAQ;;;ADjCf,+DAGM,WAAyC,CAAC,EAAE,KAAK,MAEnD,mDAAC;AAAA,EAAK,IAAI,QAAQ;AAAA,EAChB,6DAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,SAAe;AAAA,GADjB;AAAA;AAAA;AAAA;AAAA,OAEA,GAIG,mBAAQ;;;ADCf;;;AGZA,IAAAC,iBAAwB,6BACxBC,yBAAsB,0BACtBC,qBAAuB;;;ACDvB,IAAAC,kBAAgF,wCADhF,2DAGM,oBAAoB;AAAA,EACxB,OAAO;AAAA,IACL;AAAA,MACE,OAAO;AAAA,MACP,MAAM,sBAAc,MAAM;AAAA,MAC1B,MAAM,CAAC,EAAE,UAAU,MACV,mDAAC;AAAA,QAAe;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA,aAAsC;AAAA,IAEjD;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,UAAU,MACV,mDAAC;AAAA,QAAc;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA,aAAqC;AAAA,IAEhD;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,UAAU,MACV,mDAAC;AAAA,QAAsB;AAAA,SAAvB;AAAA;AAAA;AAAA;AAAA,aAA6C;AAAA,IAExD;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC,EAAE,UAAU,MACV,mDAAC;AAAA,QAAU;AAAA,SAAX;AAAA;AAAA;AAAA;AAAA,aAAiC;AAAA,IAE5C;AAAA,EACF;AACF,GAEO,4BAAQ;;;ADpCf;AAOA,SAAS,qBAAqB;AAAA,EAC5B;AACF,GAEI;AACF,MAAM,oBAAgB,mBAAAC,SAAW,sBAAsB;AAAA,IACrD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,EACT,CAAC;AAED,SACE,mDAAC;AAAA,IAAI,WAAW;AAAA,IACb,oCAAkB,MAAM,IAAI,CAAC,SAAS;AACrC,UAAMC,SAAQ,mDAAC;AAAA,QAAM,SAAS,KAAK;AAAA,QAAO,UAAU,KAAK;AAAA,SAA3C;AAAA;AAAA;AAAA;AAAA,aAAkD;AAEhE,aACE,mDAAC;AAAA,QAA+B,MAAM,KAAK;AAAA,QACzC;AAAA,6DAAC;AAAA,YAAQ,WAAW;AAAA,YAAS,SAAS,YAAYA,SAAQ;AAAA,YACxD,6DAAC,KAAK,MAAL;AAAA,cAAU,WAAW;AAAA,eAAtB;AAAA;AAAA;AAAA;AAAA,mBAAqC;AAAA,aADvC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAEA,mDAAC;AAAA,YAAM,UAAAA;AAAA,aAAP;AAAA;AAAA;AAAA;AAAA,iBAAa;AAAA;AAAA,SALM,KAAK,MAA1B;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,IAEJ,CAAC;AAAA,KAbH;AAAA;AAAA;AAAA;AAAA,SAcA;AAEJ;AAEA,SAAS,eAAe;AAAA,EACtB;AAAA,EACA;AACF,GAEI;AACF,SACE,mDAAC;AAAA,IACC,IAAI;AAAA,IACJ,WAAW,CAAC,EAAE,SAAS,UACd,mBAAAD,SAAW,kBAAkB;AAAA,MAClC,sBAAsB;AAAA,MACtB,yBAAyB,CAAC;AAAA,IAC5B,CAAC;AAAA,IAGF;AAAA,KATH;AAAA;AAAA;AAAA;AAAA,SAUA;AAEJ;AAEA,IAAO,+BAAQ;;;AHzDf,+DAmBM,aAAuB,MAAM;AACjC,MAAM,EAAE,WAAW,aAAa,QAAI,2BAAW,eAAc;AAE7D,SACE,mDAAC;AAAA,IACC,eAAW,oBAAAE,SAAW,cAAc;AAAA,MAClC,gCAAgC;AAAA,MAChC,CAAC,sDAAsD,CAAC;AAAA,IAC1D,CAAC;AAAA,IAED;AAAA,yDAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC;AAAA,YAAiB;AAAA,aAAlB;AAAA;AAAA;AAAA;AAAA,iBAAwC;AAAA,UACxC,mDAAC;AAAA,YAAqB;AAAA,aAAtB;AAAA;AAAA;AAAA;AAAA,iBAA4C;AAAA;AAAA,SAF9C;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MAEA,mDAAC;AAAA,QAAqB;AAAA,QAAsB;AAAA,SAA5C;AAAA;AAAA;AAAA;AAAA,aAAwE;AAAA;AAAA,KAX1E;AAAA;AAAA;AAAA;AAAA,SAYA;AAEJ;AAEA,SAAS,iBAAiB;AAAA,EACxB;AACF,GAAoD;AAClD,MAAM,WAAW,sBAAc,MAAM;AAErC,SACE,mDAAC;AAAA,IAAI,WAAW;AAAA,IACb,sBAAY,mDAAC;AAAA,MAAS,MAAM;AAAA,OAAhB;AAAA;AAAA;AAAA;AAAA,WAA0B,IAAK,mDAAC;AAAA,MAAK,MAAM;AAAA,OAAZ;AAAA;AAAA;AAAA;AAAA,WAAsB;AAAA,KADpE;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEA,SAAS,qBACP,OAIA;AACA,SACE,mDAAC;AAAA,IACC,eAAW,oBAAAA,SAAW,4BAA4B;AAAA,MAChD,QAAQ,CAAC,MAAM;AAAA,MACf,4BAA4B,MAAM;AAAA,IACpC,CAAC;AAAA,IAED,6DAAC;AAAA,MAAI,WAAW;AAAA,MACd,6DAAC;AAAA,QACC,WAAW,MAAM;AAAA,QACjB,SAAS,MAAM;AAAA,SAFjB;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,OAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,KAXF;AAAA;AAAA;AAAA;AAAA,SAYA;AAEJ;AAEA,SAAS,kBACP,OAIA;AACA,SAAI,MAAM,YAEN,mDAAC;AAAA,IAAQ,SAAS,mDAAC;AAAA,MAAM,SAAS;AAAA,OAAhB;AAAA;AAAA;AAAA;AAAA,WAAwC;AAAA,IACxD,6DAAC;AAAA,MAAW,SAAS,MAAM,MAAM,QAAQ,CAAC,MAAM,SAAS;AAAA,MACvD,6DAAC;AAAA,QAAqB,WAAW;AAAA,SAAjC;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,OAD1C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,KAHF;AAAA;AAAA;AAAA;AAAA,SAIA,IAKF,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd,6DAAC;AAAA,MACC,WAAW;AAAA,MACX,SAAS,MAAM,MAAM,QAAQ,CAAC,MAAM,SAAS;AAAA,MAE7C;AAAA,2DAAC;AAAA,UAAoB,WAAW;AAAA,WAAhC;AAAA;AAAA;AAAA;AAAA,eAAuC;AAAA,QAEvC,mDAAC;AAAA,UACC,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAA0C;AAAA,WAD5C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA;AAAA,OARF;AAAA;AAAA;AAAA;AAAA,WASA;AAAA,KAVF;AAAA;AAAA;AAAA;AAAA,SAWA;AAEJ;AAEA,IAAO,qBAAQ;;;AJ1Gf,+DAWM,4BAA4B,KAE5B,aAED,CAAC,UAEF,mDAAC;AAAA,EACC,6DAAC;AAAA,IAAY,eAAe;AAAA,IAC1B,6DAAC;AAAA,MACC;AAAA,2DAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,eAAS;AAAA,QAET,mDAAC;AAAA,UAAsB,WAAW,MAAM;AAAA,UACrC,gBAAM;AAAA,WADT;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAAA,GATF;AAAA;AAAA;AAAA;AAAA,OAUA,GAIG,qBAAQ;AAEf,SAAS,sBACP,OAGA;AACA,MAAM,CAAC,WAAW,YAAY,IAAI,0BAAe,MAAM,SAAS;AAEhE,iCAAwB,GAGtB,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd,6DAAC,gBAAe,UAAf;AAAA,MAAwB,OAAO,EAAE,WAAW,aAAa;AAAA,MACxD;AAAA,2DAAC;AAAA,UAAI,WAAW;AAAA,UACd,6DAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,iBAAY;AAAA,WADd;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAEA,mDAAC;AAAA,UAAI,WAAW;AAAA,UACd,6DAAC;AAAA,YAAK,gBAAM;AAAA,aAAZ;AAAA;AAAA;AAAA;AAAA,iBAAqB;AAAA,WADvB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA;AAAA,OAPF;AAAA;AAAA;AAAA;AAAA,WAQA;AAAA,KATF;AAAA;AAAA;AAAA;AAAA,SAUA;AAEJ;AAEA,SAAS,0BAA0B;AACjC,gCAAU,MAAM;AACd,QAAI,EAAC,mBAAU;AAIf,sBAAS,KAAK,MAAM,YAAY,YAAY,QAAQ,GAE7C,MAAM;AACX,iBAAS,KAAK,MAAM,eAAe,UAAU;AAAA,MAC/C;AAAA,EACF,GAAG,CAAC,CAAC;AACP;;;AJrEA,+DAiBaC,UAAS,uBAETC,QAAqB,CAAC,EAAE,KAAK,OACjC;AAAA,EACL,cAAc,KAAK;AACrB;AAGF,SAAS,UAAU;AAzBnB;AA0BE,MAAM,WAAO,8BAAkC,GAEzC,yBAAkC,wBAAQ,OACvC;AAAA,IACL,MAAM,KAAK;AAAA,IACX,MAAM,KAAK;AAAA,EACb,IACC,CAAC,IAAI,CAAC,GAEH,CAAC,cAAc,eAAe,QAAI;AAAA,IACtC,KAAK,gBAAgB;AAAA,EACvB,GAEM,CAAC,aAAa,cAAc,QAChC,yBAA6B,kBAAkB,GAE3C,gCAA4B,4BAAY,MAAM;AAClD,oBAAgB,KAAK,gBAAgB,MAAS;AAAA,EAChD,GAAG,CAAC,KAAK,YAAY,CAAC,GAEhB,wBAAoB,4BAAY,MAAM;AAC1C,IAAI,mBAAmB,QACrB,eAAe,kBAAkB;AAAA,EAErC,GAAG,CAAC,kBAAkB,CAAC;AAEvB,gCAAU,2BAA2B,CAAC,yBAAyB,CAAC,OAChE,0BAAU,mBAAmB,CAAC,iBAAiB,CAAC;AAEhD,MAAM,qBAAmB,kCAAM,OAAN,mBAAU,kBAAiB;AAEpD,SACE,mDAAC;AAAA,IAAiB,QAAQ;AAAA,IACxB,6DAAC;AAAA,MACC,aAAa,wBAAe;AAAA,MAC5B;AAAA,MACA;AAAA,MAEA,6DAAC;AAAA,QACC,6DAAC,qBAAmB,UAAnB;AAAA,UAA4B,OAAO,EAAE,aAAa,eAAe;AAAA,UAChE,6DAAC,qBAAoB,UAApB;AAAA,YACC,OAAO,EAAE,cAAc,gBAAgB;AAAA,YAEvC,6DAAC;AAAA,cAAW;AAAA,cACV,6DAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,qBAAQ;AAAA,eADV;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,WAPF;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,SATF;AAAA;AAAA;AAAA;AAAA,aAUA;AAAA,OAfF;AAAA;AAAA;AAAA;AAAA,WAgBA;AAAA,KAjBF;AAAA;AAAA;AAAA;AAAA,SAkBA;AAEJ;AAEA,IAAO,cAAQ;;;AahFf;AAAA;AAAA;AAAA,cAAAC;AAAA;AAEA,IAAAC,yBAAsB;;;ACFtB,IAAAC,qBAAwB,sBACxB,kBAA4D,qBAC5DC,iBAAwB;;;ACFxB,IAAAC,iBAAwB;AAExB;AAEA,IAAAC,mBAIO,wCARP,2DAUM,OAOF,CAAC,EAAE,SAAS,MAEZ,mDAAC;AAAA,EACC,WACE;AAAA,EAID;AAAA,GANH;AAAA;AAAA;AAAA;AAAA,OAOA;AAIJ,SAAS,WAAW,OAAgC;AAClD,SAAO,mDAAC;AAAA,IAAI,WAAW;AAAA,IAAS,gBAAM;AAAA,KAA/B;AAAA;AAAA;AAAA;AAAA,SAAwC;AACjD;AAEA,SAAS,YAAY,OAAgC;AACnD,SACE,mDAAC;AAAA,IAAQ,MAAM;AAAA,IACb,6DAAC;AAAA,MACC,WAAW;AAAA,MAEV,gBAAM;AAAA,OAHT;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,KALF;AAAA;AAAA;AAAA;AAAA,SAMA;AAEJ;AAEA,SAAS,SAAS,OAAgC;AAChD,SAAO,mDAAC;AAAA,IAAI,WAAW;AAAA,IAA4B,gBAAM;AAAA,KAAlD;AAAA;AAAA;AAAA;AAAA,SAA2D;AACpE;AAEA,SAAS,WAAW,OAAgC;AAClD,SAAO,mDAAC;AAAA,IAAI,WAAW;AAAA,IAAuB,gBAAM;AAAA,KAA7C;AAAA;AAAA;AAAA;AAAA,SAAsD;AAC/D;AAEA,SAAS,UACP,OAGA;AACA,MAAM,WAAO,wBAAQ,MAAM;AACzB,YAAQ,MAAM;AAAA,WACP;AACH,eAAO,mDAAC;AAAA,UAAiB,WAAW;AAAA,WAA7B;AAAA;AAAA;AAAA;AAAA,eAAmD;AAAA,WACvD;AACH,eAAO,mDAAC;AAAA,UAAmB,WAAW;AAAA,WAA/B;AAAA;AAAA;AAAA;AAAA,eAAmD;AAAA,WACvD;AACH,eAAO,mDAAC;AAAA,UAAU,WAAW;AAAA,WAAtB;AAAA;AAAA;AAAA;AAAA,eAA6C;AAAA;AAAA,EAE1D,GAAG,CAAC,MAAM,KAAK,CAAC;AAEhB,SACE,mDAAC;AAAA,IAAU,OAAO,MAAM;AAAA,IACtB,6DAAC;AAAA,MAAK,WAAW;AAAA,MACd;AAAA;AAAA,QACD,mDAAC;AAAA,UAAM,gBAAM;AAAA,WAAb;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA;AAAA,OAFxB;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,KAJF;AAAA;AAAA;AAAA;AAAA,SAKA;AAEJ;AAEA,SAAS,UACP,OAGA;AACA,MAAM,YAAY;AAElB,SAAI,MAAM,UAAU,OAEhB,mDAAC;AAAA,IACC,WAAW,GAAG;AAAA,IAEd,6DAAC;AAAA,MAAM,gBAAM;AAAA,OAAb;AAAA;AAAA;AAAA;AAAA,WAAsB;AAAA,KAHxB;AAAA;AAAA;AAAA;AAAA,SAIA,IAIA,MAAM,UAAU,SAEhB,mDAAC;AAAA,IAAI,WAAW,GAAG;AAAA,IACjB,6DAAC;AAAA,MAAM,gBAAM;AAAA,OAAb;AAAA;AAAA;AAAA;AAAA,WAAsB;AAAA,KADxB;AAAA;AAAA;AAAA;AAAA,SAEA,IAKF,mDAAC;AAAA,IACC,WAAW,GAAG;AAAA,IAEd,6DAAC;AAAA,MAAM,gBAAM;AAAA,OAAb;AAAA;AAAA;AAAA;AAAA,WAAsB;AAAA,KAHxB;AAAA;AAAA;AAAA;AAAA,SAIA;AAEJ;AAEA,KAAK,SAAS;AACd,KAAK,UAAU;AACf,KAAK,OAAO;AACZ,KAAK,SAAS;AACd,KAAK,QAAQ;AACb,KAAK,QAAQ;AAEb,IAAO,eAAQ;;;ADpHf;AALA;AAOe,SAAR,gBAAiC;AACtC,MAAM,UAAM,wBAAQ,MAAM,iBAAiB,GAAG,CAAC,CAAC,GAC1C,eAAW,wBAAQ,MAAM,iBAAiB,GAAG,CAAC,CAAC,GAC/C,wBAAoB,wBAAQ,MAAM,iBAAiB,GAAG,CAAC,CAAC,GACxD,YAAQ,wBAAQ,MAAM,iBAAiB,GAAG,CAAC,CAAC,GAC5C,iBAAa,wBAAQ,MAAM,iBAAiB,GAAG,CAAC,CAAC,GACjD,WAAO,wBAAQ,MAAM,iBAAiB,GAAG,CAAC,CAAC,GAC3C,mBAAe,wBAAQ,MAAM,iBAAiB,GAAG,CAAC,CAAC,GACnD,cAAU,wBAAQ,MAAM,iBAAiB,GAAG,CAAC,CAAC,GAC9C,kBAAc,wBAAQ,MAAM,iBAAiB,GAAG,CAAC,CAAC;AAExD,SACE,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd;AAAA,yDAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,aAAe;AAAA,MAEf,mDAAC;AAAA,QACC,WACE;AAAA,QAIF;AAAA,6DAAC;AAAA,YACC;AAAA,iEAAC,aAAK,SAAL;AAAA,gBAAa;AAAA,iBAAd;AAAA;AAAA;AAAA;AAAA,qBAAuC;AAAA,cAEvC,mDAAC,aAAK,MAAL;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC,aAAK,QAAL;AAAA,wBAAa,cAAI,IAAI;AAAA,yBAAtB;AAAA;AAAA;AAAA;AAAA,6BAA2B;AAAA,sBAC3B,mDAAC,aAAK,OAAL;AAAA,wBAAW,OAAO;AAAA,wBAAM;AAAA,yBAAzB;AAAA;AAAA;AAAA;AAAA,6BAA4B;AAAA;AAAA,qBAF9B;AAAA;AAAA;AAAA;AAAA,yBAGA;AAAA,kBAEA,mDAAC;AAAA,oBAAM,MAAM,IAAI;AAAA,qBAAjB;AAAA;AAAA;AAAA;AAAA,yBAAqB;AAAA;AAAA,iBANvB;AAAA;AAAA;AAAA;AAAA,qBAOA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,UAEA,mDAAC;AAAA,YACC;AAAA,iEAAC,aAAK,SAAL;AAAA,gBAAa;AAAA,iBAAd;AAAA;AAAA;AAAA;AAAA,qBAAqB;AAAA,cAErB,mDAAC,aAAK,MAAL;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC,aAAK,QAAL;AAAA,wBAAa,cAAI,WAAW;AAAA,yBAA7B;AAAA;AAAA;AAAA;AAAA,6BAAkC;AAAA,sBAClC,mDAAC,aAAK,OAAL;AAAA,wBAAW,OAAO;AAAA,wBAAM;AAAA,yBAAzB;AAAA;AAAA;AAAA;AAAA,6BAA4B;AAAA;AAAA,qBAF9B;AAAA;AAAA;AAAA;AAAA,yBAGA;AAAA,kBAEA,mDAAC;AAAA,oBAAM,MAAM,WAAW;AAAA,qBAAxB;AAAA;AAAA;AAAA;AAAA,yBAA4B;AAAA;AAAA,iBAN9B;AAAA;AAAA;AAAA;AAAA,qBAOA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,UAEA,mDAAC;AAAA,YACC;AAAA,iEAAC,aAAK,SAAL;AAAA,gBAAa;AAAA,iBAAd;AAAA;AAAA;AAAA;AAAA,qBAAkB;AAAA,cAElB,mDAAC,aAAK,MAAL;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC,aAAK,QAAL;AAAA,wBAAa,cAAI,KAAK;AAAA,yBAAvB;AAAA;AAAA;AAAA;AAAA,6BAA4B;AAAA,sBAC5B,mDAAC,aAAK,OAAL;AAAA,wBAAW,OAAO;AAAA,wBAAM;AAAA,yBAAzB;AAAA;AAAA;AAAA;AAAA,6BAA2B;AAAA;AAAA,qBAF7B;AAAA;AAAA;AAAA;AAAA,yBAGA;AAAA,kBAEA,mDAAC;AAAA,oBAAM,MAAM,KAAK;AAAA,qBAAlB;AAAA;AAAA;AAAA;AAAA,yBAAsB;AAAA;AAAA,iBANxB;AAAA;AAAA;AAAA;AAAA,qBAOA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,UAEA,mDAAC;AAAA,YACC;AAAA,iEAAC,aAAK,SAAL;AAAA,gBAAa;AAAA,iBAAd;AAAA;AAAA;AAAA;AAAA,qBAA2B;AAAA,cAE3B,mDAAC,aAAK,MAAL;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC,aAAK,QAAL;AAAA,wBAAa,aAAG,aAAa;AAAA,yBAA9B;AAAA;AAAA;AAAA;AAAA,6BAAmC;AAAA,sBACnC,mDAAC,aAAK,OAAL;AAAA,wBAAW,OAAO;AAAA,wBAAQ;AAAA,yBAA3B;AAAA;AAAA;AAAA;AAAA,6BAA+B;AAAA;AAAA,qBAFjC;AAAA;AAAA;AAAA;AAAA,yBAGA;AAAA,kBAEA,mDAAC;AAAA,oBAAM,MAAM,aAAa;AAAA,qBAA1B;AAAA;AAAA;AAAA;AAAA,yBAA8B;AAAA;AAAA,iBANhC;AAAA;AAAA;AAAA;AAAA,qBAOA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,UAEA,mDAAC;AAAA,YACC;AAAA,iEAAC,aAAK,SAAL;AAAA,gBAAa;AAAA,iBAAd;AAAA;AAAA;AAAA;AAAA,qBAAsB;AAAA,cAEtB,mDAAC,aAAK,MAAL;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC,aAAK,QAAL;AAAA,wBAAa,mBAAS;AAAA,yBAAvB;AAAA;AAAA;AAAA;AAAA,6BAA0B;AAAA,sBAC1B,mDAAC,aAAK,OAAL;AAAA,wBAAW,OAAO;AAAA,wBAAQ;AAAA,yBAA3B;AAAA;AAAA;AAAA;AAAA,6BAAgC;AAAA;AAAA,qBAFlC;AAAA;AAAA;AAAA;AAAA,yBAGA;AAAA,kBAEA,mDAAC;AAAA,oBAAM,MAAM,SAAS;AAAA,qBAAtB;AAAA;AAAA;AAAA;AAAA,yBAA0B;AAAA;AAAA,iBAN5B;AAAA;AAAA;AAAA;AAAA,qBAOA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,UAEA,mDAAC;AAAA,YACC;AAAA,iEAAC,aAAK,SAAL;AAAA,gBAAa;AAAA,iBAAd;AAAA;AAAA;AAAA;AAAA,qBAAgC;AAAA,cAEhC,mDAAC,aAAK,MAAL;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC,aAAK,QAAL;AAAA,wBAAa,4BAAkB;AAAA,yBAAhC;AAAA;AAAA;AAAA;AAAA,6BAAmC;AAAA,sBACnC,mDAAC,aAAK,OAAL;AAAA,wBAAW,OAAO;AAAA,wBAAS;AAAA,yBAA5B;AAAA;AAAA;AAAA;AAAA,6BAA+B;AAAA;AAAA,qBAFjC;AAAA;AAAA;AAAA;AAAA,yBAGA;AAAA,kBAEA,mDAAC;AAAA,oBAAM,MAAM,kBAAkB;AAAA,qBAA/B;AAAA;AAAA;AAAA;AAAA,yBAAmC;AAAA;AAAA,iBANrC;AAAA;AAAA;AAAA;AAAA,qBAOA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,UAEA,mDAAC;AAAA,YACC;AAAA,iEAAC,aAAK,SAAL;AAAA,gBAAa;AAAA,iBAAd;AAAA;AAAA;AAAA;AAAA,qBAAmB;AAAA,cAEnB,mDAAC,aAAK,MAAL;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC,aAAK,QAAL;AAAA,wBAAa;AAAA,gCAAM;AAAA,0BAAG;AAAA;AAAA,yBAAvB;AAAA;AAAA;AAAA;AAAA,6BAAwB;AAAA,sBACxB,mDAAC,aAAK,OAAL;AAAA,wBAAW,OAAO;AAAA,wBAAM;AAAA,yBAAzB;AAAA;AAAA;AAAA;AAAA,6BAA6B;AAAA;AAAA,qBAF/B;AAAA;AAAA;AAAA;AAAA,yBAGA;AAAA,kBAEA,mDAAC;AAAA,oBAAM,MAAM,MAAM;AAAA,qBAAnB;AAAA;AAAA;AAAA;AAAA,yBAAuB;AAAA;AAAA,iBANzB;AAAA;AAAA;AAAA;AAAA,qBAOA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,UAEA,mDAAC;AAAA,YACC;AAAA,iEAAC,aAAK,SAAL;AAAA,gBAAa;AAAA,iBAAd;AAAA;AAAA;AAAA;AAAA,qBAA6B;AAAA,cAE7B,mDAAC,aAAK,MAAL;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAI,WAAW;AAAA,oBACd;AAAA,yEAAC,aAAK,QAAL;AAAA,wBAAa,kBAAQ;AAAA,yBAAtB;AAAA;AAAA;AAAA;AAAA,6BAAyB;AAAA,sBACzB,mDAAC,aAAK,OAAL;AAAA,wBAAW,OAAO;AAAA,wBAAM;AAAA,yBAAzB;AAAA;AAAA;AAAA;AAAA,6BAA6B;AAAA;AAAA,qBAF/B;AAAA;AAAA;AAAA;AAAA,yBAGA;AAAA,kBAEA,mDAAC;AAAA,oBAAM,MAAM,QAAQ;AAAA,qBAArB;AAAA;AAAA;AAAA;AAAA,yBAAyB;AAAA;AAAA,iBAN3B;AAAA;AAAA;AAAA;AAAA,qBAOA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA;AAAA,SA5GF;AAAA;AAAA;AAAA;AAAA,aA6GA;AAAA,MAEA,mDAAC;AAAA,QACC,6DAAC;AAAA,UACC;AAAA,+DAAC,aAAK,SAAL;AAAA,cAAa;AAAA,eAAd;AAAA;AAAA;AAAA;AAAA,mBAA0B;AAAA,YAE1B,mDAAC,aAAK,MAAL;AAAA,cACC;AAAA,mEAAC;AAAA,kBAAI,WAAW;AAAA,kBACd;AAAA,uEAAC,aAAK,QAAL;AAAA,sBAAa,sBAAY;AAAA,uBAA1B;AAAA;AAAA;AAAA;AAAA,2BAA6B;AAAA,oBAC7B,mDAAC,aAAK,OAAL;AAAA,sBAAW,OAAO;AAAA,sBAAM;AAAA,uBAAzB;AAAA;AAAA;AAAA;AAAA,2BAA4B;AAAA;AAAA,mBAF9B;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA,gBAEA,mDAAC;AAAA,kBAAM,MAAM,YAAY;AAAA,mBAAzB;AAAA;AAAA;AAAA;AAAA,uBAA6B;AAAA;AAAA,eAN/B;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA;AAAA,WAVF;AAAA;AAAA;AAAA;AAAA,eAWA;AAAA,SAZF;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,MAEA,mDAAC;AAAA,QACC,6DAAC;AAAA,UACC;AAAA,+DAAC,aAAK,SAAL;AAAA,cAAa;AAAA,eAAd;AAAA;AAAA;AAAA;AAAA,mBAAuB;AAAA,YAEvB,mDAAC,aAAK,MAAL;AAAA,cACC,6DAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,qBAAgB;AAAA,eADlB;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA;AAAA,WALF;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,SAPF;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA;AAAA,KAzIF;AAAA;AAAA;AAAA;AAAA,SA0IA;AAEJ;AAEA,SAAS,gBAAgB;AAjKzB;AAkKE,MAAM,WAAO,4BAAQ,GACf,oBAAkB,UAAK,SAAL,mBAAW,kBAAe,UAAK,SAAL,mBAAW,UAAS;AAEtE,SACE,mDAAC;AAAA,IACC;AAAA,yDAAC;AAAA,QAAQ,MAAM;AAAA,QAAG;AAAA;AAAA,UAAe;AAAA;AAAA,SAAjC;AAAA;AAAA;AAAA;AAAA,aAAiD;AAAA,MAEjD,mDAAC;AAAA,QAAE,WAAW;AAAA,QACZ,6DAAC;AAAA,UAAK;AAAA,WAAN;AAAA;AAAA;AAAA;AAAA,eAAgD;AAAA,SADlD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,KALF;AAAA;AAAA;AAAA;AAAA,SAMA;AAEJ;AAEA,SAAS,mBAAmB;AAC1B,MAAM,QAAQ,IAAI,KAAK,GACjB,YAAY,IAAI,KAAK,eAAe,SAAS;AAAA,IACjD,OAAO;AAAA,IACP,MAAM;AAAA,EACR,CAAC,GAEK,OAA0C,CAAC;AAEjD,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG;AAC7B,QAAM,OAAO,IAAI,KAAK,MAAM,YAAY,GAAG,MAAM,SAAS,IAAI,GAAG,CAAC;AAElE,SAAK,KAAK;AAAA,MACR,MAAM,UAAU,OAAO,IAAI;AAAA,MAC3B,QAAQ,KAAK,OAAO,IAAI,KAAM,QAAQ,CAAC;AAAA,IACzC,CAAC;AAAA,EACH;AAEA,SAAO,CAAC,MAAM,KAAK,KAAK,SAAS,GAAG,KAAK;AAC3C;AAEA,SAAS,MACP,OACA;AACA,SACE,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd,6DAAC;AAAA,MAAoB,OAAO;AAAA,MAAQ,QAAQ;AAAA,MAC1C,6DAAC;AAAA,QAAU,OAAO;AAAA,QAAK,QAAQ;AAAA,QAAK,MAAM,MAAM;AAAA,QAC9C;AAAA,6DAAC;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,QAAO;AAAA,YACP,aAAa;AAAA,YACb,KAAK;AAAA,aALP;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,UAEA,mDAAC;AAAA,YACC,OAAO,EAAE,UAAU,EAAE;AAAA,YACrB,UAAU;AAAA,YACV,UAAU;AAAA,YACV,SAAQ;AAAA,YACR,QAAQ;AAAA,YACR,IAAI;AAAA,aANN;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA;AAAA,SAhBF;AAAA;AAAA;AAAA;AAAA,aAiBA;AAAA,OAlBF;AAAA;AAAA;AAAA;AAAA,WAmBA;AAAA,KApBF;AAAA;AAAA;AAAA;AAAA,SAqBA;AAEJ;AAEA,SAAS,iBAAiB;AACxB,SACE,mDAAC;AAAA,IAAM,WAAW;AAAA,IAChB;AAAA,yDAAC;AAAA,QACC,6DAAC;AAAA,UACC;AAAA,+DAAC;AAAA,cAAG;AAAA,eAAJ;AAAA;AAAA;AAAA;AAAA,mBAAY;AAAA,YACZ,mDAAC;AAAA,cAAG;AAAA,eAAJ;AAAA;AAAA;AAAA;AAAA,mBAAQ;AAAA,YACR,mDAAC;AAAA,cAAG;AAAA,eAAJ;AAAA;AAAA;AAAA;AAAA,mBAAO;AAAA,YACP,mDAAC;AAAA,cAAG;AAAA,eAAJ;AAAA;AAAA;AAAA;AAAA,mBAAU;AAAA,YACV,mDAAC;AAAA,cAAG;AAAA,eAAJ;AAAA;AAAA;AAAA;AAAA,mBAAU;AAAA;AAAA,WALZ;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,SAPF;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MAEA,mDAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAe;AAAA,cACf,mDAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAO;AAAA,cACP,mDAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAU;AAAA,cACV,mDAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAO;AAAA,cACP,mDAAC;AAAA,gBACC,6DAAC,aAAK,OAAL;AAAA,kBAAW,OAAO;AAAA,kBAAM;AAAA,mBAAzB;AAAA;AAAA;AAAA;AAAA,uBAAgC;AAAA,iBADlC;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA,iBAQA;AAAA,UAEA,mDAAC;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAiB;AAAA,cACjB,mDAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAS;AAAA,cACT,mDAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAS;AAAA,cACT,mDAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAO;AAAA,cACP,mDAAC;AAAA,gBACC,6DAAC,aAAK,OAAL;AAAA,kBAAW,OAAO;AAAA,kBAAS;AAAA,mBAA5B;AAAA;AAAA;AAAA;AAAA,uBAA0C;AAAA,iBAD5C;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA,iBAQA;AAAA,UAEA,mDAAC;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAmB;AAAA,cACnB,mDAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAO;AAAA,cACP,mDAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAW;AAAA,cACX,mDAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAQ;AAAA,cACR,mDAAC;AAAA,gBACC,6DAAC,aAAK,OAAL;AAAA,kBAAW,OAAO;AAAA,kBAAM;AAAA,mBAAzB;AAAA;AAAA;AAAA;AAAA,uBAAgC;AAAA,iBADlC;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA,iBAQA;AAAA,UAEA,mDAAC;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAe;AAAA,cACf,mDAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAS;AAAA,cACT,mDAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAM;AAAA,cACN,mDAAC;AAAA,gBAAG;AAAA,iBAAJ;AAAA;AAAA;AAAA;AAAA,qBAAM;AAAA,cACN,mDAAC;AAAA,gBACC,6DAAC,aAAK,OAAL;AAAA,kBAAW,OAAO;AAAA,kBAAQ;AAAA,mBAA3B;AAAA;AAAA;AAAA;AAAA,uBAAkC;AAAA,iBADpC;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA,iBAQA;AAAA;AAAA,SAvCF;AAAA;AAAA;AAAA;AAAA,aAwCA;AAAA;AAAA,KAnDF;AAAA;AAAA;AAAA;AAAA,SAoDA;AAEJ;;;AEzRA,IAAAC,qBAAwB,sBACxB,0BAA6B;AAE7B;;;ACJA,IAAAC,yBAAsB,0BACtBC,iBAAqB,8BACrBC,oBAAsB;AAEtB;AAJA,+DAOM,mBAA6B,MAAM;AACvC,MAAMC,UACJ,mDAAC,oBAAK,QAAL;AAAA,IACC,6DAAC,kBAAAC,SAAA;AAAA,MAAU,WAAW;AAAA,OAAtB;AAAA;AAAA;AAAA;AAAA,WAA6B;AAAA,KAD/B;AAAA;AAAA;AAAA;AAAA,SAEA,GAGIC,SAAQ,0BAAkB,MAAM,IAAI,CAAC,SAEvC,mDAAC,iBAAS,MAAT;AAAA,IAA8B,MAAM,KAAK;AAAA,IACxC,6DAAC;AAAA,MAAK,WAAW;AAAA,MACf;AAAA,2DAAC,KAAK,MAAL;AAAA,UAAU,WAAW;AAAA,WAAtB;AAAA;AAAA;AAAA;AAAA,eAA6B;AAAA,QAE7B,mDAAC;AAAA,UACC,6DAAC;AAAA,YAAM,SAAS,KAAK;AAAA,YAAO,UAAU,KAAK;AAAA,aAA3C;AAAA;AAAA;AAAA;AAAA,iBAAkD;AAAA,WADpD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,KAPkB,KAAK,MAAzB;AAAA;AAAA;AAAA;AAAA,SAQA,CAEH;AAED,SAAO,mDAAC;AAAA,IAAS,QAAQF;AAAA,IAAQ,OAAOE;AAAA,KAAjC;AAAA;AAAA;AAAA;AAAA,SAAwC;AACjD,GAEO,2BAAQ;;;ADvBf;AACA;;;AETA;AAAA,SAAS,aAAa,OAAgC;AACpD,SAAO,mDAAC;AAAA,IAAI,WAAW;AAAA,IAAe,gBAAM;AAAA,KAArC;AAAA;AAAA;AAAA;AAAA,SAA8C;AACvD;AAEA,IAAO,uBAAQ;;;ACJf,IAAAC,iBAAkD,kBAClDC,yBAAsB,0BACtBC,mBAA+B;;;ACD/B,IAAAC,oBAAyC,+BAEzCC,qBAAyD;AAEzD;AAMe,SAAR,0BAA2C,QAAgB;AAChE,MAAM,gBAAY,iCAAa,GAEzB,8BAA0B;AAAA,IAC9B;AAAA,IACA;AAAA,EACF,GAEM,WAAW,WAAW,UAMtB,iBAAa,yBAAM,UALR,MAK4B,IAAI,GAC3C,yBAAqB,yBAAM,yBAAyB,UAAU;AAEpE,aAAO,+CAA2B,oBAAoB;AAAA,IACpD,SAAS;AAAA,EACX,CAAC;AACH;;;ADzBA;;;AENA,IAAAC,iBAA2D,kBAE3DA,iBAAoC,8BACpC,yBAA4B,+DAH5B,2DAKM,kBAAc,8BAAc;AAAA,EAChC,QAAQ;AAAA,EAER;AACF,CAAC,GAEK,kBAED,CAAC,EAAE,UAAU,OAAO,MAErB,mDAAC;AAAA,EAAQ,WAAU;AAAA,EAChB,WAAC,EAAE,MAAM,MAAM,MACd;AAAA,IACE;AAAA,yDAAC,uBAAQ,QAAR;AAAA,QACC,WAAW,iBAAiB,OAAO,wBAAwB;AAAA,QAE1D;AAAA;AAAA,UAED,mDAAC;AAAA,YAAK,WAAU;AAAA,YACd,6DAAC,uBAAAC,SAAA;AAAA,cACC,WAAW,0BACT,OAAO,KAAK;AAAA,cAEd,eAAY;AAAA,eAJd;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA;AAAA,SAZF;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,MAEA,mDAAC;AAAA,QACC,IAAI;AAAA,QACJ,OAAM;AAAA,QACN,WAAU;AAAA,QACV,SAAQ;AAAA,QACR,OAAM;AAAA,QACN,WAAU;AAAA,QACV,SAAQ;AAAA,QAER,6DAAC,uBAAQ,OAAR;AAAA,UAAc,WAAU;AAAA,UACvB,6DAAC;AAAA,YAAI,WAAU;AAAA,YACb,6DAAC;AAAA,cAAI,WAAU;AAAA,cACb,6DAAC,YAAY,UAAZ;AAAA,gBAAqB,OAAO,EAAE,MAAM;AAAA,gBAClC;AAAA,iBADH;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,WAPF;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,SAjBF;AAAA;AAAA;AAAA;AAAA,aAkBA;AAAA;AAAA,KAlCF;AAAA;AAAA;AAAA;AAAA,SAmCA;AAAA,GArCJ;AAAA;AAAA;AAAA;AAAA,OAuCA,GAIE,WAAsB,CAAC,EAAE,SAAS,MAC/B,mDAAC;AAAA,EAAI,WAAU;AAAA,EAAmB;AAAA,GAAlC;AAAA;AAAA;AAAA;AAAA,OAA2C,GAG9C,YAED,CAAC,EAAE,UAAU,UAAU,MACnB,mDAAC;AAAA,EAAE,WAAW,oBAAoB,aAAa;AAAA,EAAO;AAAA,GAAtD;AAAA;AAAA;AAAA;AAAA,OAA+D,GAGlEC,QAAqC,CAAC;AAAA,EAC1C;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,MAAM,cAAU,2BAAW,WAAW,GAEhC,cAAc,MAAM;AACxB,IAAI,WACF,QAAQ,GAGV,QAAQ,MAAM;AAAA,EAChB;AAEA,SACE,mDAAC;AAAA,IACC,WAAW,oBAAoB,aAAa;AAAA,IAC5C,SAAS;AAAA,IAER;AAAA,KAJH;AAAA;AAAA;AAAA;AAAA,SAKA;AAEJ;AAcAA,MAAK,QAAQ;AACbA,MAAK,OAAO;AAEZ,gBAAgB,OAAOA;AAEhB,IAAM,sBAAsBA;;;AFpGnC;;;AGTA,IAAAC,iBAAgD,kBAChDC,0BAAkB,qCAClBC,yBAAsC;AAEtC;AAEA;;;ACPA,IAAAC,iBAA4B,kBAC5BC,qBAAwB,sBAKxBC,oBAA0D;AAE1D;AACA;AAIA;AASA,SAAS,wBAAwB;AAtBjC;AAwBE,MAAM,UAAS,SADF,4BAAQ,EACD,SAAL,mBAAW,KAEpB,EAAE,OAAO,UAAU,SAAS,WAAW,IAC3C,gBAAsC;AAmDxC,SAAO,KAjD4B;AAAA,IACjC,OAAO,SAAiB;AACtB,UAAM,gBAAY,gCAAa,GACzB,YAAQ,8BAAW,SAAS;AAElC,UAAI;AACF,mBAAW,EAAI;AAEf,YAAM,oBAAgB,8BAAW,WAAW,wBAAwB,GAE9D,cAAU;AAAA,UACd;AAAA,UACA;AAAA,UACA;AAAA,QACF,GAEM,sBAAkB,uBAAI,aAAa,GAEnC,mBAAmB;AAAA,UACvB;AAAA,UACA,SAAS;AAAA,YACP,CAAC,QAAQ,KAAK;AAAA,cACZ,MAAM,wBAAe;AAAA,cACrB,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAEA,cAAM,IAAI,iBAAiB,gBAAgB,GAE3C,MAAM,MAAM,OAAO,GAEnB,QAAQ;AAAA,UACN;AAAA,UACA,IAAI,gBAAgB;AAAA,UACpB,SAAS;AAAA,YACP,CAAC,QAAQ,KAAK;AAAA,cACZ,MAAM,wBAAe;AAAA,cACrB,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH,SAAS,GAAP;AACA,iBAAU,EAAoB,OAAO;AAAA,MACvC;AAAA,IACF;AAAA,IACA,CAAC,SAAS,UAAU,YAAY,MAAM;AAAA,EACxC,GAEoC,KAAK;AAI3C;AAEA,IAAO,kCAAQ;;;ADpFf,+DAYM,0BAID,CAAC,EAAE,QAAQ,WAAW,SAAS,MAAM;AACxC,MAAM,CAAC,oBAAoB,uBAAuB,IAAI,gCAAsB,GACtE,EAAE,SAAS,MAAM,gBAAgB,IAAI,yBACrC,EAAE,GAAAC,GAAE,QAAI,uCAAe,GAEvBC,eAAU;AAAA,IACd,MAAM,mDAAC;AAAA,MAAM,SAAS;AAAA,OAAhB;AAAA;AAAA;AAAA;AAAA,WAA+D;AAAA,IACrE,CAAC;AAAA,EACH,GAGM,cAAU,4BAAY,MAAM;AAChC,4BAAAC,QAAM,MAAM,yBAAyB;AAAA,EACvC,GAAG,CAAC,CAAC,GAEC,eAAW;AAAA,IACf,OAAO,UAAsC;AAC3C,YAAM,eAAe;AAGrB,UAAM,OADO,IAAI,SAAS,MAAM,aAAa,EAC3B,IAAI,MAAM;AAK5B,UAFsB,CAAC,QAAQ,KAAK,KAAK,EAAE,WAAW;AAGpD,eAAO,QAAQ;AAGjB,YAAM,wBAAAA,QAAM,QAAQ,mBAAmB,IAAI,GAAG;AAAA,QAC5C,SAASF,GAAU,wCAAwC;AAAA,QAC3D,OAAOA,GAAU,sCAAsC;AAAA,QACvD,SAASA,GAAU,wCAAwC;AAAA,MAC7D,CAAC,GAED,UAAU,EAAK;AAAA,IACjB;AAAA,IACA,CAAC,oBAAoB,SAAS,WAAWA,EAAC;AAAA,EAC5C;AAEA,uCAAU,MAAM;AACd,IAAI,mBACF,SAAS,eAAe;AAAA,EAE5B,GAAG,CAAC,iBAAiB,QAAQ,CAAC,GAG5B,mDAAC;AAAA,IAAM;AAAA,IAAgB;AAAA,IAAsB,SAASC;AAAA,IACpD,6DAAC;AAAA,MAAK;AAAA,MACJ,6DAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC;AAAA,YACC,6DAAC,kBAAU,OAAV;AAAA,cACC;AAAA,mEAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAsD;AAAA,gBAEtD,mDAAC,kBAAU,OAAV;AAAA,kBACC,WAAS;AAAA,kBACT,MAAM;AAAA,kBACN,WAAW;AAAA,kBACX,UAAQ;AAAA,kBACR,aAAa;AAAA,mBALf;AAAA;AAAA;AAAA;AAAA,uBAMA;AAAA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA,mBAUA;AAAA,aAXF;AAAA;AAAA;AAAA;AAAA,iBAYA;AAAA,UAEA,mDAAC;AAAA,YACC,WAAS;AAAA,YACT,OAAK;AAAA,YACL;AAAA,YAEA,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAA8D;AAAA,aALhE;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA;AAAA,SArBF;AAAA;AAAA;AAAA;AAAA,aAsBA;AAAA,OAvBF;AAAA;AAAA;AAAA;AAAA,WAwBA;AAAA,KAzBF;AAAA;AAAA;AAAA;AAAA,SA0BA;AAEJ,GAEO,kCAAQ;;;AH7Ff,+DAeM,gBAED,CAAC,EAAE,aAAa,MACf,eACK,mDAAC;AAAA,EAAiB;AAAA,GAAlB;AAAA;AAAA;AAAA;AAAA,OAA8C,IAGhD,MAGH,wBAAuD,CAAC,EAAE,OAAO,MAAM;AAC3E,MAAM,CAAC,yBAAyB,0BAA0B,QAAI,yBAAS,EAAK,GACtE,EAAE,cAAc,gBAAgB,QAAI,2BAAW,oBAAmB,GAElE,2BAAuB;AAAA,IAC3B,CAAC,SAA+B;AAG9B,sBAAgB,IAAI,GAKpB,2BAA2B,KAAK,EAAE;AAAA,IACpC;AAAA,IACA,CAAC,eAAe;AAAA,EAClB;AAEA,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QAAI,WAAS;AAAA,QACZ,6DAAC;AAAA,UAAgB,QAAQ,mDAAC;AAAA,YAAc;AAAA,aAAf;AAAA;AAAA;AAAA;AAAA,iBAA2C;AAAA,UAClE;AAAA,+DAAC;AAAA,cACC,6DAAC;AAAA,gBACC,gBAAgB,6CAAc;AAAA,gBAC9B;AAAA,gBACA,UAAU;AAAA,iBAHZ;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA,eALF;AAAA;AAAA;AAAA;AAAA,mBAMA;AAAA,YAEA,mDAAC;AAAA,cACC,WAAW;AAAA,cACX,SAAS,MAAM,2BAA2B,EAAI;AAAA,cAE9C,6DAAC,oBAAoB,OAApB;AAAA,gBACC,6DAAC;AAAA,kBACC,WAAS;AAAA,kBACT,WAAW;AAAA,kBAEX;AAAA,uEAAC;AAAA,sBAAe,WAAW;AAAA,uBAA3B;AAAA;AAAA;AAAA;AAAA,2BAAkC;AAAA,oBAElC,mDAAC;AAAA,sBACC,6DAAC;AAAA,wBACC,SAAS;AAAA,yBADX;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA,uBAHF;AAAA;AAAA;AAAA;AAAA,2BAIA;AAAA;AAAA,mBAVF;AAAA;AAAA;AAAA;AAAA,uBAWA;AAAA,iBAZF;AAAA;AAAA;AAAA;AAAA,qBAaA;AAAA,eAjBF;AAAA;AAAA;AAAA;AAAA,mBAkBA;AAAA;AAAA,WA3BF;AAAA;AAAA;AAAA;AAAA,eA4BA;AAAA,SA7BF;AAAA;AAAA;AAAA;AAAA,aA8BA;AAAA,MAEA,mDAAC;AAAA,QACC,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,UAAU;AAAA,SAHZ;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA;AAAA,KArCF;AAAA;AAAA;AAAA;AAAA,SAsCA;AAEJ;AAEA,SAAS,qBACP,OAKA;AACA,MAAM,EAAE,MAAM,eAAe,OAAO,IAAI;AAAA,IACtC,MAAM;AAAA,EACR;AAEA,SAAI,WAAW,YACN,OAIP;AAAA,IACI,4BAAiB,CAAC,GAAG,IAAI,CAAC,SACP,KAAK,OAAO,MAAM,iBAe9B,OAXH,mDAAC;AAAA,MAEC,SAAS,MAAM,MAAM,SAAS,IAAI;AAAA,MAElC,6DAAC,oBAAoB,OAApB;AAAA,QACC,6DAAC;AAAA,UAAiB,cAAc;AAAA,WAAhC;AAAA;AAAA;AAAA;AAAA,eAAsC;AAAA,SADxC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,OALK,KAAK,MADZ;AAAA;AAAA;AAAA;AAAA,WAOA,CAKL;AAAA,KAlBH;AAAA;AAAA;AAAA;AAAA,SAmBA;AAEJ;AAEA,SAAS,iBAAiB,EAAE,aAAa,GAAmC;AAC1E,MAAM,EAAE,SAAS,KAAK,IAAI,cACpB,YAAY;AAElB,SACE,mDAAC;AAAA,IACC,WAAS;AAAA,IACT,WAAW;AAAA,IAEX;AAAA,yDAAC;AAAA,QAAG,WAAW;AAAA,QACb,6DAAC;AAAA,UAAK,WAAW;AAAA,UACf,6DAAC;AAAA,YACC,UAAU;AAAA,YACV,SAAS;AAAA,YACT,OAAO;AAAA,cACL,OAAO;AAAA,cACP,QAAQ;AAAA,YACV;AAAA,YACA,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,KAAK,GAAG;AAAA,YACR,WAAW;AAAA,YACX,KAAK;AAAA,aAXP;AAAA;AAAA;AAAA;AAAA,iBAYA;AAAA,WAbF;AAAA;AAAA;AAAA;AAAA,eAcA;AAAA,SAfF;AAAA;AAAA;AAAA;AAAA,aAgBA;AAAA,MAEA,mDAAC;AAAA,QAAK,WAAW;AAAA,QAA2C;AAAA,SAA5D;AAAA;AAAA;AAAA;AAAA,aAAiE;AAAA;AAAA,KAtBnE;AAAA;AAAA;AAAA;AAAA,SAuBA;AAEJ;AAEA,SAAS,2BAA2B,IAAY;AAC9C,YAAU,kBAAkB,EAAE;AAChC;AAEA,IAAO,gCAAQ;;;AHjKf,+DAaM,YAAuB,CAAC,EAAE,SAAS,MAAM;AAb/C;AAcE,MAAM,cAAc,eAAe,GAC7B,WAAO,4BAAQ;AAErB,SACE,mDAAC;AAAA,IAAI,WAAU;AAAA,IACb,6DAAC;AAAA,MACC,6DAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC;AAAA,YACC,WACE;AAAA,YAGF;AAAA,iEAAC;AAAA,gBAAI,WAAW;AAAA,gBACd,6DAAC,8BAAD;AAAA;AAAA;AAAA;AAAA,uBAAkB;AAAA,iBADpB;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cAEA,mDAAC;AAAA,gBAAI,WAAW;AAAA,gBACd;AAAA,qEAAC;AAAA,oBAAI,WAAW;AAAA,oBACd,6DAAC;AAAA,sBAAG,YAAW,gDAAa,SAAb,mBAAmB;AAAA,sBAC/B,WAAC,QAAQ,mDAAC;AAAA,wBAAsB,QAAQ;AAAA,yBAA/B;AAAA;AAAA;AAAA;AAAA,6BAAoC;AAAA,uBADhD;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA,qBAHF;AAAA;AAAA;AAAA;AAAA,yBAIA;AAAA,kBAEA,mDAAC,wBAAAE,SAAA;AAAA,oBAAiB,WAAW;AAAA,qBAA7B;AAAA;AAAA;AAAA;AAAA,yBAAoC;AAAA,kBAEpC,mDAAC;AAAA,oBAAQ,MAAM;AAAA,oBACb,6DAAC;AAAA,sBAAK,WAAW;AAAA,sBACd;AAAA,uBADH;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA,qBAHF;AAAA;AAAA;AAAA;AAAA,yBAIA;AAAA;AAAA,iBAbF;AAAA;AAAA;AAAA;AAAA,qBAcA;AAAA;AAAA,aAvBF;AAAA;AAAA;AAAA;AAAA,iBAwBA;AAAA,UAEA,mDAAC;AAAA,YAAI,WAAW;AAAA,YACd,6DAAC;AAAA,cACC,MAAM,2CAAa;AAAA,cACnB,kBAAkB,MAAM,KAAK,QAAQ;AAAA,eAFvC;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA;AAAA,SAhCF;AAAA;AAAA;AAAA;AAAA,aAiCA;AAAA,OAlCF;AAAA;AAAA;AAAA;AAAA,WAmCA;AAAA,KApCF;AAAA;AAAA;AAAA;AAAA,SAqCA;AAEJ,GAEO,oBAAQ;;;AH3Df,+DASaC,QAAqB,OACzB;AAAA,EACL,OAAO;AACT;AAGF,SAAS,gBAAgB;AACvB,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,6DAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAA4C;AAAA,SAD9C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QACC,6DAAC;AAAA,UACC,6DAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,iBAAe;AAAA,WADjB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA;AAAA,KATF;AAAA;AAAA;AAAA;AAAA,SAUA;AAEJ;AAEA,IAAO,oBAAQ;;;AW/Bf;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS,aAAa;AACpB,SACE;AAAA,IACE,6DAAC;AAAA,MAAG;AAAA,OAAJ;AAAA;AAAA;AAAA;AAAA,WAA+B;AAAA,KADjC;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEA,IAAO,iBAAQ;;;ACRf;AAAA;AAAA;AAAA;AAAA,IAAAC,yBAAsB;;;ACCtB;;;ACDA,IAAAC,iBAA8C,kBAC9CC,0BAAwB,4BACxBC,0BAAsB,4BACtBC,yBAAsC;AACtC;;;ACJA;AACA,IAAAC,iBAA4B;AAC5B;AACA,IAAAC,oBAAiD;AASjD,SAAS,gBAAgB;AACvB,MAAM,EAAE,OAAO,YAAY,SAAS,SAAS,IAC3C,gBAA8B;AA0BhC,SAAO,KAxBoB;AAAA,IACzB,OAAO,OAAe,gBAAwB;AAC5C,UAAM,gBAAY,gCAAa,GACzB,sBAAkB,8BAAW,WAAW,gBAAgB;AAC9D,UAAI;AACF,mBAAW,EAAI;AACf,YAAM,OAAa;AAAA,UACjB;AAAA,UACA;AAAA,UACA,aAAa;AAAA,QACf,GACM,SAAS,UAAM,0BAAO,iBAAiB,IAAI;AACjD,gBAAQ;AAAA,UACN,IAAI,OAAO;AAAA,UACX;AAAA,UACA;AAAA,UACA,aAAa,KAAK;AAAA,QACpB,CAAC;AAAA,MACH,SAAS,OAAP;AACA,iBAAU,MAAwB,OAAO;AAAA,MAC3C;AAAA,IACF;AAAA,IACA,CAAC,SAAS,UAAU,UAAU;AAAA,EAChC,GAC4B,KAAK;AAInC;AAEA,IAAO,0BAAQ;;;AD9Cf,+DAQM,iBAA+B,MAAM;AACzC,MAAM,CAAC,YAAY,eAAe,IAAI,wBAAc,GAC9C,EAAE,QAAQ,IAAI,iBACd,EAAE,GAAAC,GAAE,QAAI,uCAAe,GACvB,EAAE,UAAU,cAAc,MAAM,QAAI,iCAAQ;AAAA,IAChD,eAAe;AAAA,MACb,OAAO;AAAA,MACP,aAAa;AAAA,IACf;AAAA,EACF,CAAC,GAEK,eAAe,SAAS,SAAS,EAAE,UAAU,GAAK,CAAC,GACnD,qBAAqB,SAAS,eAAe,EAAE,UAAU,GAAK,CAAC,GAE/D,cAAU,4BAAY,MAAM;AAChC,kCAAM,MAAM,+CAA+C;AAAA,EAC7D,GAAG,CAAC,CAAC,GAEC,WAAW,OAAO,OAAe,gBAAwB;AAI7D,QAHA,QAAQ,IAAI,KAAK,GACjB,QAAQ,IAAI,WAAW,GAEnB,CAAC,SAAS,CAAC;AACb,aAAO,QAAQ;AAGjB,UAAM,8BAAM,QAAQ,WAAW,OAAO,WAAW,GAAG;AAAA,MAClD,SAASA,GAAU,wBAAwB;AAAA,MAC3C,OAAOA,GAAU,sBAAsB;AAAA,MACvC,SAASA,GAAU,wBAAwB;AAAA,IAC7C,CAAC,GAED,MAAM;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,IACf,CAAC;AAAA,EACH;AAEA,uCAAU,MAAM;AACd,UAAM,EAAE,OAAO,IAAI,aAAa,GAAG,CAAC;AAAA,EACtC,GAAG,CAAC,KAAK,CAAC,GAGR;AAAA,IACE,6DAAC;AAAA,MACC,UAAU,aAAa,CAAC,UACf,SAAS,MAAM,OAAO,MAAM,WAAW,CAC/C;AAAA,MAED,6DAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC;AAAA,YAAI,WAAW;AAAA,YACd;AAAA,iEAAC;AAAA,gBACC,6DAAC,kBAAU,OAAV;AAAA,kBACC;AAAA,uEAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAAwC;AAAA,oBACxC,mDAAC,kBAAU,OAAV;AAAA,sBACC,MAAM,aAAa;AAAA,sBACnB,UAAU,aAAa;AAAA,sBACvB,UAAU,aAAa;AAAA,sBACvB,QAAQ,aAAa;AAAA,sBACrB,UAAQ;AAAA,sBACR,WAAS;AAAA,sBACT,aAAa;AAAA,uBAPf;AAAA;AAAA;AAAA;AAAA,2BAQA;AAAA;AAAA,mBAVF;AAAA;AAAA;AAAA;AAAA,uBAWA;AAAA,iBAZF;AAAA;AAAA;AAAA;AAAA,qBAaA;AAAA,cACA,mDAAC;AAAA,gBAAU,WAAW;AAAA,gBACpB,6DAAC,kBAAU,OAAV;AAAA,kBACC;AAAA,uEAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAA8C;AAAA,oBAC9C,mDAAC,kBAAU,OAAV;AAAA,sBACC,MAAM,mBAAmB;AAAA,sBACzB,UAAU,mBAAmB;AAAA,sBAC7B,UAAU,mBAAmB;AAAA,sBAC7B,QAAQ,mBAAmB;AAAA,sBAC3B,UAAQ;AAAA,sBACR,WAAS;AAAA,sBACT,aAAa;AAAA,uBAPf;AAAA;AAAA;AAAA;AAAA,2BAQA;AAAA;AAAA,mBAVF;AAAA;AAAA;AAAA;AAAA,uBAWA;AAAA,iBAZF;AAAA;AAAA;AAAA;AAAA,qBAaA;AAAA;AAAA,aA5BF;AAAA;AAAA;AAAA;AAAA,iBA6BA;AAAA,UACA,mDAAC;AAAA,YAAI,WAAW;AAAA,YACd,6DAAC;AAAA,cACC,WAAW;AAAA,cACX,WAAS;AAAA,cACT;AAAA,cAEA,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA8C;AAAA,eALhD;AAAA;AAAA;AAAA;AAAA,mBAMA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA,iBAQA;AAAA;AAAA,SAvCF;AAAA;AAAA;AAAA;AAAA,aAwCA;AAAA,OA7CF;AAAA;AAAA;AAAA;AAAA,WA8CA;AAAA,KA/CF;AAAA;AAAA;AAAA;AAAA,SAgDA;AAEJ,GAEO,yBAAQ;;;AEtGf,IAAAC,yBAAsB;AACtB;AACA;;;ACHA;AACA,IAAAC,oBAAyC,+BACzCC,qBAAyD;AAWzD,SAAS,eAAe;AACtB,MAAM,gBAAY,iCAAa,GAEzB,qBAAiB;AAAA,IACrB;AAAA,IACA;AAAA,EACF,GAEM,oBAAgB;AAAA,IACpB;AAAA,EAGF;AAEA,aAAO,+CAA2B,eAAe;AAAA,IAC/C,aAAa,CAAC;AAAA,IACd,SAAS;AAAA,EACX,CAAC;AACH;AAEA,IAAO,yBAAQ;;;ACjCf,IAAAC,mBAA0B;AAC1B;AACA,IAAAC,0BAAoB,qCACpBC,iBAA6C;;;ACH7C,IAAAC,qBAA6B,sBAC7BC,qBAA+B;AAC/B;AAIA,IAAAC,iBAA4B;AAQ5B,SAAS,gBAAgB;AACrB,MAAM,gBAAY,iCAAa;AAe7B,aAbyB;AAAA,IACvB,CAAC,WAAmB;AAClB,UAAM,cAAU;AAAA,QACd;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,iBAAO,8BAAU,OAAO;AAAA,IAC1B;AAAA,IACA,CAAC,SAAS;AAAA,EACZ;AAGN;AAEA,IAAO,0BAAQ;;;AD5Bf,IAAAC,yBAAsC;AACtC;AACA;AACA;AARA,+DAUM,mBAAkD,CAAC,EAAE,OAAO,MAAM;AACtE,MAAM,CAAC,YAAY,aAAa,QAAI,yBAAS,EAAK,GAC5C,oBAAoB,wBAAc,GAClC,EAAE,GAAAC,GAAE,QAAI,uCAAe,GAEvB,0BAAsB,4BAAY,YAAY;AAClD,QAAM,UAAU,kBAAkB,MAAM;AAExC,UAAM,wBAAAC,QAAQ,QAAQ,SAAS;AAAA,MAC7B,SAASD,GAAU,+BAA+B;AAAA,MAClD,OAAOA,GAAU,6BAA6B;AAAA,MAC9C,SAASA,GAAU,+BAA+B;AAAA,IACpD,CAAC,GAED,cAAc,EAAK;AAAA,EACrB,GAAG,CAAC,mBAAmB,QAAQA,EAAC,CAAC;AAEjC,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,WAAS;AAAA,QACT,SAAS,MAAM,cAAc,EAAI;AAAA,QAEjC,6DAAC;AAAA,UAAU,WAAU;AAAA,WAArB;AAAA;AAAA;AAAA;AAAA,eAAgC;AAAA,SAJlC;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,mDAAC;AAAA,QAAG,WAAW;AAAA,QACb,6DAAC;AAAA,UACC,SAAS,mDAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAA+C;AAAA,UACxD,QAAQ;AAAA,UACR,WAAW;AAAA,UAEX,6DAAC;AAAA,YAAI,WAAW;AAAA,YACd;AAAA,iEAAC;AAAA,gBACC,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAoD;AAAA,iBADtD;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cACA,mDAAC;AAAA,gBACC,WAAS;AAAA,gBACT,OAAO;AAAA,gBACP,SAAS;AAAA,gBAET,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAA8C;AAAA,iBALhD;AAAA;AAAA;AAAA;AAAA,qBAMA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,WAhBF;AAAA;AAAA;AAAA;AAAA,eAiBA;AAAA,SAlBF;AAAA;AAAA;AAAA;AAAA,aAmBA;AAAA;AAAA,KA1BF;AAAA;AAAA;AAAA;AAAA,SA2BA;AAEJ,GAEO,2BAAQ;;;AE3Df,IAAAE,mBAAiC,wCACjCC,iBAAyB;AACzB;AACA;;;ACHA,IAAAC,iBAA0D;AAC1D;AACA;AAEA,IAAAC,yBAAsC,0BACtCC,0BAAwB;;;ACLxB,IAAAC,iBAA4B,kBAC5BC,qBAAwB,sBACxBC,qBAMO;AACP;AACA;AAeA,SAAS,gBAAgB;AAzBzB;AA2BE,MAAM,UAAS,SADF,4BAAQ,EACD,SAAL,mBAAW,KAEpB,EAAE,OAAO,UAAU,SAAS,WAAW,IAC3C,gBAA8B;AA4ChC,SAAO,KA1CoB;AAAA,IACzB,OAAO,SAAiB,UAAkB,mBAA2B;AACnE,UAAM,gBAAY,iCAAa;AAE/B,UAAI;AACF,mBAAW,EAAI;AAEf,YAAM,sBAAkB,+BAAW,WAAW,gBAAgB,GAExD,cAAU;AAAA,UACd;AAAA,UACA;AAAA,UACA;AAAA,QACF,GAEM,cAAU,wBAAI,iBAAiB,IAAI,SAAS,GAE5C,gBAAY,oCAAgB,GAE5B,WAAW;AAAA,UACf;AAAA,UACA,QAAQ,QAAQ;AAAA,UAChB;AAAA,QACF;AAEA,0CAAU,SAAS,QAAQ,GAE3B,QAAQ;AAAA,UACN,IAAI,QAAQ;AAAA,UACZ;AAAA,UACA,QAAQ,QAAQ;AAAA,UAEhB;AAAA,QACF,CAAC;AAAA,MACH,SAAS,GAAP;AACA,gBAAQ,MAAO,EAAoB,OAAO,GAC1C,SAAU,EAAoB,OAAO;AAAA,MACvC;AAAA,IACF;AAAA,IACA,CAAC,SAAS,UAAU,YAAY,MAAM;AAAA,EACxC,GAE4B,KAAK;AAInC;AAEA,IAAO,0BAAQ;;;ADzEf,IAAAC,0BAAkB;AAClB;AARA,+DAYM,iBAID,CAAC,EAAE,QAAQ,WAAW,KAAK,MAAM;AACpC,MAAM,EAAE,aAAa,QAAI,2BAAW,oBAAmB,GACjD,EAAE,GAAAC,GAAE,QAAI,uCAAe,GACvB,kBAAkB,KAAK,YAAY,IACnC,CAAC,YAAY,eAAe,IAAI,wBAAc,GAC9C,EAAE,QAAQ,IAAI,iBAEd,EAAE,UAAU,cAAc,MAAM,QAAI,iCAAQ;AAAA,IAChD,eAAe;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF,CAAC,GAEK,kBAAkB,SAAS,YAAY,EAAE,OAAO,gBAAgB,CAAC,GAEjE,cAAU,4BAAY,MAAM;AAChC,4BAAAC,QAAM,MAAM,gCAAgC;AAAA,EAC9C,GAAG,CAAC,CAAC,GAEC,WAAW,OAAO,aAAqB;AAE3C,QADsB,CAAC;AAErB,aAAO,QAAQ;AAGjB,UAAM,wBAAAA,QAAM;AAAA,MACV,WAAW,KAAK,IAAc,UAAU,6CAAc,EAAY;AAAA,MAClE;AAAA,QACE,SAAS,OACP,UAAU,EAAK,GACRD,GAAU,wBAAwB;AAAA,QAE3C,OAAOA,GAAU,sBAAsB;AAAA,QACvC,SAASA,GAAU,wBAAwB;AAAA,MAC7C;AAAA,IACF;AAAA,EACF;AAEA,uCAAU,MAAM;AACd,UAAM;AAAA,MACJ,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,GAAG,CAAC,iBAAiB,KAAK,CAAC,GAGzB,mDAAC;AAAA,IACC;AAAA,IACA;AAAA,IACA,SAASA,GAAU,4BAA4B;AAAA,IAE/C,6DAAC;AAAA,MACC,UAAU,aAAa,CAAC,UACf,SAAS,MAAM,QAAQ,CAC/B;AAAA,MAED,6DAAC;AAAA,QAAI,WAAW;AAAA,QAChB;AAAA,6DAAC;AAAA,YACK,6DAAC,kBAAU,OAAV;AAAA,cACC;AAAA,mEAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAwC;AAAA,gBACxC,mDAAC,kBAAU,OAAV;AAAA,kBACC,MAAM,gBAAgB;AAAA,kBACtB,UAAU,gBAAgB;AAAA,kBAC1B,UAAU,gBAAgB;AAAA,kBAC1B,QAAQ,gBAAgB;AAAA,kBACxB,UAAQ;AAAA,kBACR,WAAS;AAAA,kBACT,aAAa;AAAA,mBAPf;AAAA;AAAA;AAAA;AAAA,uBAQA;AAAA;AAAA,eAVF;AAAA;AAAA;AAAA;AAAA,mBAWA;AAAA,aAZN;AAAA;AAAA;AAAA;AAAA,iBAaI;AAAA,UACF,mDAAC;AAAA,YACC,6DAAC,kBAAU,OAAV;AAAA,cACC;AAAA,mEAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAA2C;AAAA,gBAC3C,mDAAC,kBAAU,OAAV;AAAA,kBACC,WAAS;AAAA,kBACT,UAAQ;AAAA,kBACR,MAAM,gBAAgB;AAAA,kBACtB,UAAU,gBAAgB;AAAA,kBAC1B,UAAU,gBAAgB;AAAA,kBAC1B,QAAQ,gBAAgB;AAAA,mBAN1B;AAAA;AAAA;AAAA;AAAA,uBAOA;AAAA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA,mBAUA;AAAA,aAXF;AAAA;AAAA;AAAA;AAAA,iBAYA;AAAA,UACA,mDAAC;AAAA,YACC,WAAS;AAAA,YACT,WAAW;AAAA,YACX;AAAA,YAEA,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAA8C;AAAA,aALhD;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA;AAAA,SAlCF;AAAA;AAAA;AAAA;AAAA,aAmCA;AAAA,OAxCF;AAAA;AAAA;AAAA;AAAA,WAyCA;AAAA,KA9CF;AAAA;AAAA;AAAA;AAAA,SA+CA;AAEJ,GAEO,0BAAQ;;;ADhHf,+DAQME,kBAA4C,CAAC,EAAE,KAAK,MAAM;AAC9D,MAAM,CAAC,kBAAkB,mBAAmB,QAAI,yBAAS,EAAK;AAE9D,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,WAAS;AAAA,QACT,SAAS,MAAM,oBAAoB,EAAI;AAAA,QAGvC,6DAAC;AAAA,UAAiB,WAAU;AAAA,WAA5B;AAAA;AAAA;AAAA;AAAA,eAAuC;AAAA,SALzC;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MACA,mDAAC;AAAA,QAAG,WAAW;AAAA,QACb,6DAAC;AAAA,UACC,QAAQ;AAAA,UACR,WAAW;AAAA,UACX;AAAA,WAHF;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,SALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA;AAAA,KAdF;AAAA;AAAA;AAAA;AAAA,SAeA;AAEJ,GAEO,yBAAQA;;;AG/Bf,+DAKM,WAAqC,CAAC,EAAE,KAAK,MAE/C,mDAAC;AAAA,EAAI,WAAU;AAAA,EACb;AAAA,uDAAC;AAAA,MAAG,WAAU;AAAA,MAAmC,eAAK;AAAA,OAAtD;AAAA;AAAA;AAAA;AAAA,WAA4D;AAAA,IAC5D,mDAAC;AAAA,MAAE,WAAU;AAAA,MAAa,eAAK;AAAA,OAA/B;AAAA;AAAA;AAAA;AAAA,WAA2C;AAAA,IAC3C,mDAAC;AAAA,MAAI,WAAU;AAAA,MACb;AAAA,2DAAC;AAAA,UACC,6DAAC;AAAA,YAAe;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAA4B;AAAA,WAD9B;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC;AAAA,UACC,6DAAC;AAAA,YAAiB,QAAQ,KAAK;AAAA,aAA/B;AAAA;AAAA;AAAA;AAAA,iBAA6C;AAAA,WAD/C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA;AAAA,OANF;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA;AAAA,GAVF;AAAA;AAAA;AAAA;AAAA,OAWA,GAIG,mBAAQ;;;APtBf,+DAQM,YAA0B,MAAM;AACpC,MAAM,EAAE,MAAM,OAAO,OAAO,OAAO,IAAI,uBAAa;AAEpD,SAAI,WAAW,YACN,mDAAC;AAAA,IAAW;AAAA,KAAZ;AAAA;AAAA;AAAA;AAAA,SAAuB,IAG5B,WAAW,UAEX,mDAAC;AAAA,IAAM,MAAK;AAAA,IACV;AAAA,yDAAC;AAAA,QAAM,SAAQ;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA,aAAsC;AAAA,MACtC,mDAAC;AAAA,QAAM,yCAAO;AAAA,SAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA;AAAA,KAFxB;AAAA;AAAA;AAAA;AAAA,SAGA,IAKF,mDAAC;AAAA,IACC,WAAW;AAAA,IAEX,6DAAC;AAAA,MAAI,WAAW;AAAA,MACd,6DAAC;AAAA,QAAG,WAAW,WAAW;AAAA,QACvB,gBAAM,IAAI,CAAC,SACH,mDAAC;AAAA,UAAuB;AAAA,WAAT,KAAK,IAApB;AAAA;AAAA;AAAA;AAAA,eAAoC,CAC5C;AAAA,SAHH;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,KATF;AAAA;AAAA;AAAA;AAAA,SAUA;AAEJ,GAEO,oBAAQ;;;AHvCf,+DAKM,iBAA+B,MAEjC;AAAA,EACE,6DAAC;AAAA,IAAI,WAAU;AAAA,IACb;AAAA,yDAAC;AAAA,QACC,6DAAC,4BAAD;AAAA;AAAA;AAAA;AAAA,eAAgB;AAAA,SADlB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QAAG,WAAW;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA,aAA4B;AAAA,MAC5B,mDAAC;AAAA,QAAI,WAAU;AAAA,QACb,6DAAC;AAAA,UAAQ,MAAM;AAAA,UAAG;AAAA,WAAlB;AAAA;AAAA;AAAA;AAAA,eAA6B;AAAA,SAD/B;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QACC,6DAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,eAAW;AAAA,SADb;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,KAVF;AAAA;AAAA;AAAA;AAAA,SAWA;AAAA,GAZF;AAAA;AAAA;AAAA;AAAA,OAaA,GAIG,yBAAQ;;;ADxBf;AAMA,SAAS,YAAY;AACnB,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,6DAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAAwC;AAAA,SAD1C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QACC,6DAAC;AAAA,UACC,6DAAC,4BAAD;AAAA;AAAA;AAAA;AAAA,iBAAgB;AAAA,WADlB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA;AAAA,KARF;AAAA;AAAA;AAAA;AAAA,SASA;AAEJ;AAEA,IAAO,gBAAQ;;;AYrBf;AAAA;AAAA;AAAA;AACA,IAAAC,iBAAuB,6BACvBC,yBAAsB;AAFtB,+DASMC,SAAQ;AAAA,EACZ;AAAA,IACE,MAAM;AAAA,IACN,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,OAAO;AAAA,EACT;AACF;AAEA,SAAS,iBAAiB;AACxB,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,6DAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAA2C;AAAA,SAD7C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YACE,UAAAA,OAAM,IAAI,CAAC,SACV,mDAAC;AAAA,cAAe;AAAA,eAAiB,KAAK,MAAtC;AAAA;AAAA;AAAA;AAAA,mBAA4C,CAC7C;AAAA,aAHH;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UAEA,mDAAC;AAAA,YACC,WAAW;AAAA,YAEX,6DAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,mBAAQ;AAAA,aAHV;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA;AAAA,SAXF;AAAA;AAAA;AAAA;AAAA,aAYA;AAAA;AAAA,KAjBF;AAAA;AAAA;AAAA;AAAA,SAkBA;AAEJ;AAEA,IAAO,mBAAQ;;;AChDf;AAAA;AAAA;AAAA,cAAAC;AAAA;AAEA,IAAAC,iBAA2C,kBAC3CC,yBAAsB;;;ACFtB,IAAAC,yBAAsB;AAEtB;;;ACHA,IAAAC,iBAAgC,kBAChCC,yBAAsB;;;ACAtB,IAAAC,iBAA2B,8BAC3BC,sBAAuB;AAGvB;AAGA;AARA,+DAUM,eAAe,sBAAc,OAAO;AAE3B,SAAR,aACL,OAIA;AACA,SACE,mDAAC;AAAA,IACC,WACE;AAAA,IAGF;AAAA,yDAAC;AAAA,QACC,WAAW;AAAA,QACX,OAAO,MAAM;AAAA,QACb,UAAU,MAAM;AAAA,QAEhB,6DAAC;AAAA,UAAI,WAAU;AAAA,UACZ,uBAAa,IAAI,CAAC,SACjB,mDAAC,0BAAW,QAAX;AAAA,YAEC,OAAO;AAAA,YACP,WAAS;AAAA,YACT,WAAW,CAAC,EAAE,QAAQ,QAAQ,UAC5B,oBAAAC,SAAW,yBAAyB;AAAA,cAClC,gCAAgC,CAAC;AAAA,cACjC,8BAA8B;AAAA,YAChC,CAAC;AAAA,YAGF,WAAC,EAAE,QAAQ,MACV;AAAA,cACE,6DAAC;AAAA,gBAAI,WAAU;AAAA,gBACb,6DAAC;AAAA,kBAAI,WAAU;AAAA,kBACb;AAAA,uEAAC;AAAA,sBAAI,WAAU;AAAA,sBACb,6DAAC;AAAA,wBAAG,WAAW;AAAA,wBAAS,UAAU,mDAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,+BAAa;AAAA,wBAC7C,6DAAC;AAAA,0BAAU,WAAU;AAAA,2BAArB;AAAA;AAAA;AAAA;AAAA,+BAA6C;AAAA,yBAD/C;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA,uBAHF;AAAA;AAAA;AAAA;AAAA,2BAIA;AAAA,oBAEA,mDAAC;AAAA,sBAAI,WAAU;AAAA,sBACb;AAAA,2EAAC,0BAAW,OAAX;AAAA,0BAAiB,IAAG;AAAA,0BAAI,WAAW;AAAA,0BACjC,eAAK;AAAA,2BADR;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAA,wBAEA,mDAAC,0BAAW,aAAX;AAAA,0BACC,IAAG;AAAA,0BACH,eAAW,oBAAAA,SAAW,oBAAoB;AAAA,4BACxC,sBAAsB;AAAA,4BACtB,oCAAoC,CAAC;AAAA,0BACvC,CAAC;AAAA,0BAEA,eAAK;AAAA,2BAPR;AAAA;AAAA;AAAA;AAAA,+BAQA;AAAA;AAAA,uBAbF;AAAA;AAAA;AAAA;AAAA,2BAcA;AAAA,oBAEA,mDAAC;AAAA,sBAAK,WAAW;AAAA,sBAAsB,eAAK;AAAA,uBAA5C;AAAA;AAAA;AAAA;AAAA,2BAAkD;AAAA;AAAA,mBAvBpD;AAAA;AAAA;AAAA;AAAA,uBAwBA;AAAA,iBAzBF;AAAA;AAAA;AAAA;AAAA,qBA0BA;AAAA,eA3BF;AAAA;AAAA;AAAA;AAAA,mBA4BA;AAAA,aAvCG,KAAK,MADZ;AAAA;AAAA;AAAA;AAAA,iBA0CA,CACD;AAAA,WA7CH;AAAA;AAAA;AAAA;AAAA,eA8CA;AAAA,SAnDF;AAAA;AAAA;AAAA;AAAA,aAoDA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW,MAAM;AAAA,QAClB,WAAC,SAEE,mDAAC;AAAA,UAAI,WAAW;AAAA,UACd;AAAA,+DAAC;AAAA,cAAI,WAAW;AAAA,cACd;AAAA,mEAAC;AAAA,kBAAQ,MAAM;AAAA,kBAAI,eAAK;AAAA,mBAAxB;AAAA;AAAA;AAAA;AAAA,uBAA6B;AAAA,gBAC7B,mDAAC;AAAA,kBAAQ,MAAM;AAAA,kBAAI,eAAK;AAAA,mBAAxB;AAAA;AAAA;AAAA;AAAA,uBAAoC;AAAA;AAAA,eAFtC;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA,YAEA,mDAAC,qBAAa,OAAb;AAAA,cAAoB,eAAK;AAAA,eAA1B;AAAA;AAAA;AAAA;AAAA,mBAAgC;AAAA,YAEhC,mDAAC,qBAAa,cAAb;AAAA,cAA0B,UAAU,KAAK;AAAA,eAA1C;AAAA;AAAA;AAAA;AAAA,mBAAoD;AAAA;AAAA,WARtD;AAAA;AAAA;AAAA;AAAA,eASA;AAAA,SAZN;AAAA;AAAA;AAAA;AAAA,aAeA;AAAA;AAAA,KA1EF;AAAA;AAAA;AAAA;AAAA,SA2EA;AAEJ;AAEA,SAAS,UAAU,OAA8B;AAC/C,SACE,mDAAC;AAAA,IAAI,SAAQ;AAAA,IAAa,GAAG;AAAA,IAC3B;AAAA,yDAAC;AAAA,QAAO,IAAI;AAAA,QAAI,IAAI;AAAA,QAAI,GAAG;AAAA,QAAI,MAAK;AAAA,QAAO,SAAQ;AAAA,SAAnD;AAAA;AAAA;AAAA;AAAA,aAAyD;AAAA,MACzD,mDAAC;AAAA,QACC,GAAE;AAAA,QACF,QAAO;AAAA,QACP,aAAa;AAAA,QACb,eAAc;AAAA,QACd,gBAAe;AAAA,SALjB;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA;AAAA,KARF;AAAA;AAAA;AAAA;AAAA,SASA;AAEJ;AAEA,SAAS,cAAc;AACrB,SACE,mDAAC;AAAA,IAAI,SAAQ;AAAA,IAAY,WAAW;AAAA,IAClC;AAAA,yDAAC;AAAA,QAAO,IAAI;AAAA,QAAI,IAAI;AAAA,QAAI,GAAG;AAAA,QAAI,MAAK;AAAA,QAAe,SAAQ;AAAA,SAA3D;AAAA;AAAA;AAAA;AAAA,aAAiE;AAAA,MAAE;AAAA;AAAA,KADrE;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;;;ACtHA,IAAAC,mBAA+B;AAE/B;AAGA;AANA,+DASM,gCAAgC,sBAAc,MAAM,IAAI,UAExD,yBAKD,CAAC,EAAE,aAAa,MAAM,MAEvB,mDAAC;AAAA,EACC,WAAS;AAAA,EACT,QAAQ;AAAA,EACR,QAAO;AAAA,EAEP;AAAA,uDAAC;AAAA,MACC,6DAAC;AAAA,QACC,YAAY,MAAM;AAAA,QAClB,gBAAgB,MAAM;AAAA,QACtB,SAAS,MAAM;AAAA,SAHjB;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,IAEA,mDAAC;AAAA,MACC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAK;AAAA,MACL,UAAU,MAAM;AAAA,MAEhB,6DAAC;AAAA,QAAK,WAAW;AAAA,QACf;AAAA,6DAAC;AAAA,YAAM;AAAA,aAAP;AAAA;AAAA;AAAA;AAAA,iBAAgB;AAAA,UAEhB,mDAAC;AAAA,YAAe,WAAW;AAAA,aAA3B;AAAA;AAAA;AAAA;AAAA,iBAAkC;AAAA;AAAA,SAHpC;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,OAVF;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA;AAAA,GAxBF;AAAA;AAAA;AAAA;AAAA,OAyBA,GAIG,iCAAQ;AAEf,SAAS,iBACP,OAKA;AACA,MAAM,eAAe,gBAAgB;AAErC,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,MAAK;AAAA,QACL,MAAM;AAAA,QACN,cAAc,MAAM;AAAA,SAHtB;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QACC,MAAK;AAAA,QACL,MAAM;AAAA,QACN,cAAc,aAAa,KAAK;AAAA,SAHlC;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QAAM,MAAK;AAAA,QAAS,MAAM;AAAA,QAAa,cAAc,aAAa;AAAA,SAAnE;AAAA;AAAA;AAAA;AAAA,aAAsE;AAAA,MACtE,mDAAC;AAAA,QAAM,MAAK;AAAA,QAAS,MAAM;AAAA,QAAW,cAAc,MAAM;AAAA,SAA1D;AAAA;AAAA;AAAA;AAAA,aAAmE;AAAA,MAEnE,mDAAC;AAAA,QACC,MAAK;AAAA,QACL,MAAM;AAAA,QACN,cAAc,MAAM;AAAA,SAHtB;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA;AAAA,KApBF;AAAA;AAAA;AAAA;AAAA,SAqBA;AAEJ;AAEA,SAAS,eAAe;AACtB,SAAO,mBAAU,IACb,CAAC,OAAO,SAAS,QAAQ,OAAO,SAAS,QAAQ,EAAE,KAAK,EAAE,IAC1D;AACN;;;ACvFA,IAAAC,mBAA+B;AAE/B;AACA;AAJA,+DAQM,mCAAmC,sBAAc,MAAM,IAAI,eAE3D,8BAGD,CAAC,EAAE,UAAU,YAAY,UAAU,MAEpC,mDAAC;AAAA,EAAK,QAAO;AAAA,EAAO,QAAQ;AAAA,EAC1B;AAAA,uDAAC;AAAA,MAAM,MAAM;AAAA,MAAU,MAAM;AAAA,MAAc,OAAO;AAAA,OAAlD;AAAA;AAAA;AAAA;AAAA,WAA8D;AAAA,IAE9D,mDAAC;AAAA,MACC,6DAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,aAAgB;AAAA,OADlB;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEA,mDAAC;AAAA,MAAO,MAAM;AAAA,MAAS,OAAO;AAAA,MAAa;AAAA,MACzC,6DAAC;AAAA,QAAK,WAAW;AAAA,QACf;AAAA,6DAAC;AAAA,YAAM;AAAA,aAAP;AAAA;AAAA;AAAA;AAAA,iBAAgB;AAAA,UAEhB,mDAAC;AAAA,YAAe,WAAW;AAAA,aAA3B;AAAA;AAAA;AAAA;AAAA,iBAAkC;AAAA;AAAA,SAHpC;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA;AAAA,GAbF;AAAA;AAAA;AAAA;AAAA,OAcA;AAIJ,SAAS,iBAAiB;AACxB,MAAM,eAAe,gBAAgB;AAErC,SACE,mDAAC;AAAA,IACC,MAAK;AAAA,IACL,MAAM;AAAA,IACN,cAAc,aAAa,KAAK;AAAA,KAHlC;AAAA;AAAA;AAAA;AAAA,SAIA;AAEJ;AAEA,IAAO,gCAAQ;;;AHjCf;AACA;AAEA;AAfA,+DAiBM,cAAc,sBAAc,OAAO,OAEnC,oBAED,CAAC,EAAE,aAAa,MAAM;AACzB,MAAM,cAAc,YAAY,KAAK,CAAC,SAAS;AAtBjD;AAuBI,WAAO,KAAK,oBAAkB,kDAAc,iBAAd,mBAA4B;AAAA,EAC5D,CAAC,GAEK,CAAC,cAAc,eAAe,QAAI,yBAAsB,WAAW,GAEnE,sBACJ,2CAAa,oBAAkB,6CAAc,gBAEzC,aAAa,aAAa;AAEhC,SACE,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd,6DAAC;AAAA,MAAiB,WAAW;AAAA,MAC3B;AAAA,2DAAC;AAAA,UAAI,WAAW;AAAA,UACd,6DAAC;AAAA,YAAa,MAAM;AAAA,YAAc,SAAS;AAAA,aAA3C;AAAA;AAAA;AAAA;AAAA,iBAA4D;AAAA,WAD9D;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAEA,mDAAC;AAAA,UACC,WACE;AAAA,UAGF;AAAA,+DAAC;AAAA,cACC,gBAAgB,aAAa;AAAA,cAC7B,SAAS,6CAAc;AAAA,cACvB;AAAA,cACA,UAAU;AAAA,cAEV,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA6C;AAAA,eAN/C;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA,YAEA,mDAAC;AAAA,cAAG,WAAW;AAAA,cACb,6DAAC;AAAA,gBAA4B;AAAA,gBAC3B,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAA8C;AAAA,iBADhD;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA;AAAA,WAlBF;AAAA;AAAA;AAAA;AAAA,eAmBA;AAAA;AAAA,OAxBF;AAAA;AAAA;AAAA;AAAA,WAyBA;AAAA,KA1BF;AAAA;AAAA;AAAA;AAAA,SA2BA;AAEJ,GAEO,4BAAQ;;;ADzDf;;;AKRA,IAAAC,iBAA+B,kBAC/BC,yBAAsB;AAKtB;AACA;AAGA;AAVA,+DAYM,mBAED,CAAC,EAAE,aAAa,MAAM;AACzB,MAAM,YAAQ,wBAAQ,MAAM,SAAS,GAAG,CAAC,CAAC,GAEpC,WAAO,wBAAQ,MACZ,MAAM,KAAK,CAAC,SACV,KAAK,kBAAkB,aAAa,OAC5C,GACA,CAAC,OAAO,aAAa,OAAO,CAAC,GAE1B,cAAU,wBAAQ,MAAM;AAC5B,QAAM,YAAY,aAAa,eAAe;AAE9C,WAAO,IAAI,KAAK,SAAS,EAAE,mBAAmB;AAAA,EAChD,GAAG,CAAC,aAAa,YAAY,CAAC,GAExB,2BAAuB,wBAAQ,MAC5B,aAAa,8BACnB,CAAC,aAAa,MAAM,CAAC;AAExB,SAAK,OAKH,mDAAC;AAAA,IAAI,WAAW;AAAA,IAA2B,WAAS;AAAA,IAClD;AAAA,yDAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC;AAAA,YAAK,WAAW;AAAA,YACf,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAA4C;AAAA,aAD9C;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAEA,mDAAC;AAAA,YAAI,WAAW;AAAA,YACd;AAAA,iEAAC;AAAA,gBAAQ,MAAM;AAAA,gBACb,6DAAC;AAAA,kBAAK,WAAS;AAAA,kBAAsB,eAAK;AAAA,mBAA1C;AAAA;AAAA;AAAA;AAAA,uBAA+C;AAAA,iBADjD;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cAEA,mDAAC;AAAA,gBAAG,WAAW;AAAA,gBACb,6DAAC;AAAA,kBAAM,MAAM;AAAA,kBAAS,OAAO;AAAA,kBAC3B,6DAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAAwD;AAAA,mBAD1D;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,iBAUA;AAAA,UAEA,mDAAC;AAAA,YAAQ,MAAM;AAAA,YACb,6DAAC;AAAA,cAAK,WAAW;AAAA,cACd,eAAK;AAAA,eADR;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA;AAAA,SArBF;AAAA;AAAA;AAAA;AAAA,aAsBA;AAAA,MAEA,mDAAC;AAAA,QAAI,WAAW;AAAA,QACd,6DAAC;AAAA,UACC,6DAAC;AAAA,YAAK,WAAS;AAAA,YACb,6DAAC;AAAA,cACC,SAAS;AAAA,cACT,QAAQ,EAAE,QAAQ;AAAA,eAFpB;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,WANF;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,SARF;AAAA;AAAA;AAAA;AAAA,aASA;AAAA;AAAA,KAlCF;AAAA;AAAA;AAAA;AAAA,SAmCA,IAvCO;AAyCX;AAEA,SAAS,WAAW;AAClB,MAAM,EAAE,MAAM,IAAI,sBAAc;AAQhC,SAAO,CAAC,GAAG,OAAO,GAAG,gBAAgB,CAAC;AACxC;AAMA,SAAS,kBAAkB;AACzB,SAAO;AAAA,IACL;AAAA,MACE,MAAM;AAAA,MACN,aAAa;AAAA,MACb,OAAO;AAAA,MACP,eAAe;AAAA,MACf,UAAU,CAAC;AAAA,IACb;AAAA,EACF;AACF;AAEA,IAAO,2BAAQ;;;AL/Ff;AAEA;AACA;AAbA,+DAgBM,QAAkB,MAAM;AAC5B,MAAM,eAAe,uBAAuB;AAE5C,MAAI,CAAC;AACH,WAAO;AAGT,MAAM,aAAa,aAAa,YAC1B,eAAe,aAAa;AAElC,MAAI,CAAC;AACH,WAAO,mDAAC;AAAA,MAAkB;AAAA,OAAnB;AAAA;AAAA;AAAA;AAAA,WAA+C;AAGxD,MAAM,oBACJ,aAAa;AAEf,SACE,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd;AAAA,yDAAC;AAAA,QAAG,WAAW;AAAA,QACb,6DAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAiB;AAAA,SAAlB;AAAA;AAAA;AAAA;AAAA,aAA8C;AAAA,MAE9C,mDAAC;AAAA,QAAiB,WAAW;AAAA,QAC3B,6DAAC;AAAA,UAAG,WAAW;AAAA,UACb,6DAAC;AAAA,YAA4B;AAAA,YAC3B,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAA8C;AAAA,aADhD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,WAHF;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,SALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA;AAAA,KAbF;AAAA;AAAA;AAAA;AAAA,SAcA;AAEJ;AAEA,SAAS,uBAAuB;AAC9B,SACE,mDAAC;AAAA,IAAM,MAAM;AAAA,IACX;AAAA,yDAAC,cAAM,SAAN;AAAA,QACC,6DAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAA4D;AAAA,SAD9D;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAK,WAAS;AAAA,QACb,6DAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAAqD;AAAA,SADvD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;AAEA,IAAO,gBAAQ;;;AMlEf;AACA;AADA,+DAGM,eAGD,CAAC,EAAE,UAAU,SAAS,WAAW,MAElC,mDAAC;AAAA,EAAI,WAAW;AAAA,EACd;AAAA,uDAAC;AAAA,MAAI,WAAW;AAAA,MACd;AAAA,2DAAC;AAAA,UAAG,WAAW;AAAA,UACb,6DAAC;AAAA,YAAQ,MAAM;AAAA,YAAI;AAAA,aAAnB;AAAA;AAAA;AAAA;AAAA,iBAA2B;AAAA,WAD7B;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAEA,mDAAC;AAAA,UAAG,WAAW;AAAA,UACb,6DAAC;AAAA,YAAE,WAAW;AAAA,YACX;AAAA,aADH;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,WAHF;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA;AAAA,OATF;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,IAEA,mDAAC;AAAA,MACC,WACE;AAAA,MAGD;AAAA,OALH;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA;AAAA,GAnBF;AAAA;AAAA;AAAA;AAAA,OAoBA,GAIG,uBAAQ;;;APxBf;AACA;AATA;AAgBO,IAAMC,QAAqB,OACzB;AAAA,EACL,OAAO;AACT,IAGI,2BAA2B,MAAM;AACrC,MAAM,SAAS,sBAAsB;AAErC,SACE;AAAA,IACE,6DAAC;AAAA,MAAI,WAAW;AAAA,MACd,6DAAC;AAAA,QACC,SAAS,mDAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAAuD;AAAA,QAChE,YACE,mDAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAA0D;AAAA,QAG5D,6DAAC;AAAA,UAAI,WAAW;AAAA,UACd;AAAA,+DAAC;AAAA,cAAG,WAAW,WAAW;AAAA,cACxB,6DAAC;AAAA,gBACC;AAAA,iBADF;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,YAEA,mDAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,mBAAO;AAAA;AAAA,WAPT;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,SAdF;AAAA;AAAA;AAAA;AAAA,aAeA;AAAA,OAhBF;AAAA;AAAA;AAAA;AAAA,WAiBA;AAAA,KAlBF;AAAA;AAAA;AAAA;AAAA,SAmBA;AAEJ,GAEO,uBAAQ;AAEf,SAAS,iBAAiB;AAAA,EACxB;AACF,GAEG;AACD,UAAQ;AAAA,SACD;AACH,aACE,mDAAC;AAAA,QAAM,MAAM;AAAA,QAAQ,gBAAgB;AAAA,QACnC;AAAA,6DAAC,cAAM,SAAN;AAAA,YACC,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAA6D;AAAA,aAD/D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAEA,mDAAC;AAAA,YACC,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAAsD;AAAA,aADxD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA;AAAA,SAPF;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,SAGC;AACH,aACE,mDAAC;AAAA,QAAM,MAAM;AAAA,QAAS,gBAAgB;AAAA,QACpC;AAAA,6DAAC,cAAM,SAAN;AAAA,YACC,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAAyD;AAAA,aAD3D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAEA,mDAAC;AAAA,YACC,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAAkD;AAAA,aADpD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA;AAAA,SAPF;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,SAGC;AACH,aACE,mDAAC;AAAA,QAAM,MAAM;AAAA,QAAW,gBAAgB;AAAA,QACtC;AAAA,6DAAC,cAAM,SAAN;AAAA,YACC,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAA8D;AAAA,aADhE;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAEA,mDAAC;AAAA,YACC,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAAuD;AAAA,aADzD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA;AAAA,SAPF;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA;AAGR;AAEA,SAAS,wBAAwB;AAC/B,MAAM,CAAC,QAAQ,SAAS,QAAI,yBAAwC;AAEpE,uCAAU,MAAM;AACd,QAAM,SAAS,IAAI,gBAAgB,OAAO,SAAS,MAAM,GAEnD,QAAQ,OAAO,IAAI,mBAAmC,GACtD,WAAW,OAAO,IAAI,qBAAoC,GAC1D,UAAU,OAAO,IAAI,uBAAqC;AAEhE,IAAI,WACF,UAAU,qBAAoC,IACrC,UACT,UAAU,uBAAqC,IACtC,SACT,UAAU,mBAAmC;AAAA,EAEjD,GAAG,CAAC,CAAC,GAEE;AACT;;;AQtHA;AAAA;AAAA,iBAAAC;AAAA;AAAA,IAAAC,iBAAuB;;;ACAvB,+DAAM,2BAAsC,CAAC,EAAE,SAAS,MAC/C,mDAAC;AAAA,EAAI,WAAW;AAAA,EAAwB;AAAA,GAAxC;AAAA;AAAA;AAAA;AAAA,OAAiD,GAGnD,mCAAQ;;;ACJf,+DAGMC,SAAQ;AAAA,EACZ,SAAS;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,EACT;AAAA,EACA,SAAS;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,EACT;AACF,GAEM,2BAA2B,MAAM;AACrC,MAAM,gBAAgB;AAEtB,SACE,mDAAC;AAAA,IACC,6DAAC;AAAA,MAAe,WAAS;AAAA,MAAC,UAAQ;AAAA,MAChC;AAAA,2DAAC;AAAA,UAAe,KAAG;AAAA,UAAC,WAAW;AAAA,UAAe,MAAMA,OAAM;AAAA,WAA1D;AAAA;AAAA;AAAA;AAAA,eAAmE;AAAA,QACnE,mDAAC;AAAA,UAAe,WAAW;AAAA,UAAe,MAAMA,OAAM;AAAA,WAAtD;AAAA;AAAA;AAAA;AAAA,eAA+D;AAAA;AAAA,OAFjE;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,KAJF;AAAA;AAAA;AAAA;AAAA,SAKA;AAEJ,GAEO,mCAAQ;;;AF3Bf;AAKA,SAAS,6BAA6B;AACpC,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,6DAAC,sCAAD;AAAA;AAAA;AAAA;AAAA,eAA0B;AAAA,SAD5B;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QACC,6DAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,eAAQ;AAAA,SADV;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;AAEA,IAAOC,wBAAQ;;;AGnBf;AAAA;AAAA,gBAAAC;AAAA;AACA,IAAAC,eAAqB,4BACrBC,cAAkB;AAmBlB;AAGA,eAAsBC,QAAO,MAAkB;AAC7C,MAAM,MAAM,KAAK,SACX,eAAe,KAAK,OAAO;AAKjC,UAHA,MAAM,kBAAS,GAAG,GAClB,MAAM,2BAAiB,KAAK,CAAC,UAAU,KAAK,CAAC,GAErC,IAAI;AAAA,SACL;AACH,aAAO,uBAAuB,KAAK,YAAY;AAAA,SAE5C;AACH,aAAO,oCAAoC,KAAK,YAAY;AAAA;AAElE;AAEA,eAAe,uBAAuB,KAAc,cAAsB;AACxE,MAAM,OAAO,MAAM,IAAI,KAAK,GACtB,SAAS,MAAM,0BAA0B,EAAE,eAAe,IAAI;AAEpE,MAAI,CAAC,OAAO;AACV,WAAO,yBAAyB;AAGlC,MAAMC,UAAS,eAAU,GACnB,iBAAiB,MAAM,0BAA0B,GAAG,GACpD,YAAY,MAAM,qBAAqB,GAAG,GAE1C,iBADc,MAAM,gBAAgB,SAAS,GACjB,KAE5B,OAAO,OAAO,KAAK,MAEnB,UAAU;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,MAAI,QAAQ,iBAAiB;AAC3B,WAAAA,QAAO,KAAK,uDAAuD,GAE5D,wBAAwB;AAIjC,MAAM,gBAAgB,EAAE,GAAG,SAAS,KAAK;AACzC,eAAM,iBAAiB,aAAa,GAEpCA,QAAO,KAAK,eAAe,gCAAgC,OAEpD,mBAAK,EAAE,SAAS,GAAK,CAAC;AAC/B;AAEA,eAAe,oCACb,KACA,cACA;AACA,MAAM,iBAAiB,MAAM,0BAA0B,GAAG,GACpD,YAAY,MAAM,qBAAqB,GAAG,GAE1C,iBADc,MAAM,gBAAgB,SAAS,GACjB,KAE5B,UAAU;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,eAAM,6BAA6B,OAAO,GAE1C,eAAU,EAAE,KAAK,SAAS,gCAAgC,OAEnD,mBAAK,EAAE,SAAS,GAAK,CAAC;AAC/B;AAEA,SAAS,4BAA4B;AACnC,SAAO,cAAE,OAAO;AAAA,IACd,MAAM,cAAE,WAAW,uBAAc;AAAA,EACnC,CAAC;AACH;;;ACvGA,IAAAC,kBAAA;AAAA,SAAAA,iBAAA;AAAA,gBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,YAAAC;AAAA;AAAA,IAAAC,yBAAsB,0BAEtBC,gBAAyB,4BACzB,uBAA0B,+DAC1BC,cAAkB;;;ACJlB,sBAAwB;AAKxB;;;ACLA,IAAAC,qBAUO;;;ACVP,wBAAkD;AAAlD;AAGA,SAAS,YACP,OAGA;AACA,MAAM,cAAc,MAAM,eAAe,sBAAc,KAAK;AAE5D,SACE,mDAAC;AAAA,IAAY,WAAS;AAAA,IACpB,6DAAC;AAAA,MACC,6DAAC;AAAA,QAAS,OAAO;AAAA,QAGd;AAAA,SAHH;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;AAEA,IAAO,sBAAQ;;;ACvBf,IAAAC,qBAA2B,uBAA3B,2DAGM,gBAAgB;AAEtB,SAAS,mBACP,OAGA;AACA,SACE,mDAAC;AAAA,IACC,SAAQ;AAAA,IACR,iBAAiB;AAAA,IACjB,cAAc;AAAA,IACd,MAAM,MAAM;AAAA,IAEX,gBAAM;AAAA,KANT;AAAA;AAAA;AAAA;AAAA,SAOA;AAEJ;AAEA,IAAO,6BAAQ;;;AFtBf;AAwBe,SAAR,kBAAmC,OAAc;AACtD,MAAM,QAAQ,iCAAiC,MAAM;AAErD,aAAO;AAAA,IACL,mDAAC;AAAA,MACC;AAAA,2DAAC;AAAA,UACC;AAAA,+DAAC;AAAA,cAAW;AAAA,eAAZ;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAAA,YAClB,mDAAC;AAAA,cAAa;AAAA,eAAd;AAAA;AAAA;AAAA;AAAA,mBAAoB;AAAA;AAAA,WAFtB;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QAEA,mDAAC;AAAA,UAAS,OAAO;AAAA,UACf;AAAA,+DAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,mBAAa;AAAA,YAEb,mDAAC;AAAA,cAAY,WAAS;AAAA,cACpB,6DAAC;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAS;AAAA,qBAAV;AAAA;AAAA;AAAA;AAAA,yBAAa;AAAA,kBAEb,mDAAC;AAAA,oBACE;AAAA,4BAAM;AAAA,sBAAQ;AAAA,sBAAO,MAAM;AAAA,sBAAiB;AAAA,sBACxC,MAAM;AAAA,sBAAY;AAAA;AAAA,qBAFzB;AAAA;AAAA;AAAA;AAAA,yBAGA;AAAA,kBAEA,mDAAC;AAAA,oBAAS;AAAA,qBAAV;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA;AAAA,iBAVF;AAAA;AAAA;AAAA;AAAA,qBAWA;AAAA,eAZF;AAAA;AAAA;AAAA;AAAA,mBAaA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC;AAAA,gBACC,6DAAC;AAAA,kBAAmB,MAAM,MAAM;AAAA,kBAAM;AAAA;AAAA,oBAC9B,MAAM;AAAA;AAAA,mBADd;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA,eALF;AAAA;AAAA;AAAA;AAAA,mBAMA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAS;AAAA,qBAAV;AAAA;AAAA;AAAA;AAAA,yBAAyB;AAAA,kBACzB,mDAAC;AAAA,oBAAS;AAAA;AAAA,sBAAK,MAAM;AAAA,sBAAY;AAAA;AAAA,qBAAjC;AAAA;AAAA;AAAA;AAAA,yBAAsC;AAAA;AAAA,iBAFxC;AAAA;AAAA;AAAA;AAAA,qBAGA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA;AAAA,WA/BF;AAAA;AAAA;AAAA;AAAA,eAgCA;AAAA;AAAA,OAtCF;AAAA;AAAA;AAAA;AAAA,WAuCA;AAAA,IACA,EAAE,iBAAiB,OAAO;AAAA,EAC5B;AACF;;;AG5DA,eAAO,UAAiC,QAAyB;AAG/D,UAFoB,MAAM,eAAe,GAEtB,SAAS,MAAM;AACpC;AAEA,SAAS,iBAAiB;AACxB,SAAI,QAAQ,IAAI,QACP,uBAAuB,IAG5B,sBAAc,WACT,2BAA2B,IAG7B,mBAAmB;AAC5B;AAMA,eAAe,qBAAqB;AAClC,MAAM,aAAa,MAAM,OAAO,eAE1B,EAAE,MAAM,MAAM,MAAM,UAAU,KAAK,IAAI,sBAAc,OACrD,SAAS,SAAS,OAAO,CAAC,sBAAc;AAE9C,SAAO,WAAW,gBAAgB;AAAA,IAChC;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAMA,eAAe,6BAA6B;AAC1C,MAAM,aAAa,MAAM,OAAO,eAC1B,cAAc,MAAM,uBAAuB,GAE3C,OAAO,uBACP,OAAO;AAEb,SAAO,WAAW,gBAAgB;AAAA,IAChC;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACJ,MAAM,YAAY;AAAA,MAClB,MAAM,YAAY;AAAA,IACpB;AAAA,EACF,CAAC;AACH;AAEA,SAAS,yBAAyB;AAChC,SAAO;AAAA,IACL,SAAS,QAAyB;AAChC,cAAQ;AAAA,QACN;AAAA,QACA,KAAK,UAAU,QAAQ,MAAM,CAAC;AAAA,MAChC;AAAA,IACF;AAAA,EACF;AACF;AAEA,eAAe,yBAAyB;AACtC,MAAM,OAAO,QAAQ,IAAI,gBACnB,OAAO,QAAQ,IAAI;AAIzB,SAAI,QAAQ,QACV,QAAQ,IAAI,6CAA6C,GAElD;AAAA,IACL;AAAA,IACA;AAAA,EACF,KAKK,0BAA0B;AACnC;AAEA,eAAe,4BAA4B;AAEzC,MAAM,aAAa,OADA,MAAM,OAAO,eACI,kBAAkB;AAEtD,iBAAQ,KAAK;AAAA;AAAA;AAAA;AAAA,GAIZ,GAED,QAAQ;AAAA,IACN,kCAAkC,KAAK,UAAU,YAAY,MAAM,CAAC;AAAA,EACtE,GAEA,QAAQ,IAAI,8DAA8D,GAEnE;AACT;;;AJ5GA;AAiBA,IAAM,yBAAyB;AAE/B,eAAO,cAAqC,QAAgB;AAC1D,MAAM,EAAE,gBAAgB,SAAS,UAAU,IAAI,QACzCC,UAAS,eAAU,GAEnB,UAAU,MAAM,gBAAgB,SAAS,GACzC,eAAe,MAAM,oBAAoB,cAAc,GACvD,mBAAmB,aAAa,KAAK;AAE3C,MAAI,CAAC;AACH,UAAM,IAAI;AAAA,MACR,6BAA6B;AAAA,IAC/B;AAGF,MAAM,mBAAmB,iBAAiB,MACpC,cAAc,qDAAkB,QAAQ,WAAW;AAGzD,MAAI,gBAAgB;AAClB,UAAM,IAAI;AAAA,MACR,mBAAmB;AAAA,IACrB;AAGF,MAAM,oBAAoB,aAAa,IAAI,WAAW,SAAS,GACzD,WAAoC,CAAC,GACrC,gBAAY,yBAAQ,IAAI,KAAK,GAAG,sBAAsB,EAAE,QAAQ;AAEtE,WAAW,UAAU,SAAS;AAC5B,QAAMC,OAAM,kBAAkB,IAAI;AAIlC,QAAI,CAAC,cAAc,aAAa,OAAO,IAAI;AACzC;AAGF,QAAM,sBACJ,mCAAS,iBAAe,mCAAS,UAAS,QAEtC,oBAAmB,qDAAkB,YAAW,QAEhD,mBAAmB,MACvB,gBAAgB;AAAA,MACd,kBAAkB,OAAO;AAAA,MACzB,YAAYA,KAAI;AAAA,MAChB;AAAA,MACA;AAAA,MACA,SAAS;AAAA,IACX,CAAC,GAEG,QAAgC,SAChC,KAAK,MAEL,iBAAiB,MAAM,kBAC1B,MAAM,OAAO,IAAI,OAAO,KAAK,EAC7B,IAAI,GAED,eAAe,CAAC,eAAe,OAG/B,gBAAgB,CAAC,WACrBD,QAAO;AAAA,MACL;AAAA,QACE,UAAUC,KAAI;AAAA,QACd,SAAS,mCAAS;AAAA,QAClB;AAAA,MACF;AAAA,MACA;AAAA,IACF,GAEAD,QAAO,MAAM,KAAK,GAEX,QAAQ,OAAO,KAAK;AAK7B,QAAI,cAAc;AAChB,UAAME,OAAM,eAAe,KAAK,IAE1B,UAAU,YAAY;AAC1B,YAAI;AAEF,gBAAMA,KAAI,IAAI,OAAO,EAAE,GAAG,OAAO,CAAC,GAGlC,MAAM,iBAAiB;AAAA,QACzB,SAAS,GAAP;AACA,iBAAO,cAAc,CAAC;AAAA,QACxB;AAAA,MACF;AAGA,eAAS,KAAK,QAAQ,CAAC;AAAA,IACzB,OAAO;AAEL,UAAM,UAAU,YAAY;AAC1B,YAAM,OAAyB;AAAA,UAC7B,GAAG;AAAA,UACH,MAAMD,KAAI;AAAA,UACV;AAAA,UACA,cAAc;AAAA,YACZ,IAAI;AAAA,YACJ,OAAM,qDAAkB,SAAQ;AAAA,UAClC;AAAA,QACF;AAEA,YAAI;AAEF,cAAMC,OAAM,MAAM,kBAAkB,IAAI,IAAI;AAE5C,UAAAF,QAAO;AAAA,YACL;AAAA,cACE;AAAA,cACA,UAAUE,KAAI;AAAA,YAChB;AAAA,YACA;AAAA,UACF,GAGA,MAAM,iBAAiB,GAEvBF,QAAO;AAAA,YACL;AAAA,cACE;AAAA,cACA,UAAUE,KAAI;AAAA,YAChB;AAAA,YACA;AAAA,UACF;AAAA,QACF,SAAS,GAAP;AACA,iBAAO,cAAc,CAAC;AAAA,QACxB;AAAA,MACF;AAGA,eAAS,KAAK,QAAQ,CAAC;AAAA,IACzB;AAAA,EACF;AAEA,SAAO,QAAQ,IAAI,QAAQ;AAC7B;AAEA,SAAS,gBAAgB,OAMtB;AACD,MAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,OAEE,SAAS,sBAAc,MAAM,eAC7B,cAAc,sBAAc,KAAK,UAEjC,UAAU,kDACV,OAAO,qBAAqB,UAAU,GAEtC,EAAE,MAAM,OAAO,IAAI,kBAAkB;AAAA,IACzC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,MAAI,OAAO;AACT,UAAM,IAAI;AAAA,MACR,kDAAkD,KAAK;AAAA,QACrD;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAGF,SAAO,UAAU;AAAA,IACf,IAAI;AAAA,IACJ,MAAM;AAAA,IACN;AAAA,IACA;AAAA,EACF,CAAC;AACH;AAQA,SAAS,qBAAqB,YAAoB;AAChD,MAAI,UAAU,sBAAc,KAAK;AAEjC,SAAI,sBAAc,aAChB,UAAU,gBAAgB,IAG5B,cAAc,OAAO,GAEd,CAAC,SAAS,UAAU,UAAU,EAAE,KAAK,GAAG;AACjD;AAEA,SAAS,cAAc,SAAmD;AACxE,MAAI,CAAC,WAAW,sBAAc;AAC5B,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAEJ;AAEA,SAAS,kBAAkB;AAIzB,SAAO,CAHM,oBAGC,GAAI,EAAE,KAAK,GAAG;AAC9B;;;AK5PA,IAAAC,yBAAsC,0BACtCC,iBAAsC,kBACtCC,0BAAuC,4BACvCC,0BAAkB,qCAElB,wBAA2B,gEAC3BC,oBAAsB;AAEtB;;;ACRA;AAQO,SAAS,mBAAmB;AACjC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,MACE,UAAU;AAAA,IACZ;AAAA,EACF;AACF;;;ADLA;AAEA;AACA;AAGA;AACA;AAlBA,+DAsBM,oBAAoB,MAAM;AAC9B,MAAM,EAAE,GAAAC,GAAE,QAAI,uCAAe,cAAc,GACrC,OAAO,eAAe,GACtB,CAACC,gBAAe,EAAE,QAAQ,CAAC,IAAI,iBAAiB,GAEhD,EAAE,UAAU,cAAc,UAAU,SAAS,aAAa,MAAM,IACpE,qBAAqB,GAEjB,EAAE,QAAQ,QAAQ,OAAO,QAAI,uCAAc;AAAA,IAC/C;AAAA,IACA,MAAM;AAAA,IACN,kBAAkB;AAAA,EACpB,CAAC,GAEK,kBAAkB,MAAM,SAAS,GAEjC,mBAAmB,OAAO,IAAI,CAAC,OAAO,WACnC;AAAA,IACL,GAAG;AAAA,IACH,GAAG,gBAAgB;AAAA,EACrB,EACD,GAEK,eAAW;AAAA,IACf,OAAO,EAAE,QAAQ,MAAkC;AACjD,UAAM,UAAUA,eAAc,OAAO;AAErC,aAAO,wBAAAC,QAAM,QAAQ,SAAS;AAAA,QAC5B,SAASF,GAAU,sBAAsB;AAAA,QACzC,OAAOA,GAAU,oBAAoB;AAAA,QACrC,SAASA,GAAU,sBAAsB;AAAA,MAC3C,CAAC;AAAA,IACH;AAAA,IACA,CAACC,gBAAeD,EAAC;AAAA,EACnB;AAEA,SACE,mDAAC;AAAA,IACC,WAAW;AAAA,IACX,WAAS;AAAA,IACT,UAAU,CAAC,UAAU;AACnB,MAAK,aAAa,QAAQ,EAAE,KAAK;AAAA,IACnC;AAAA,IAEA;AAAA,yDAAC;AAAA,QAAI,WAAU;AAAA,QACZ;AAAA,2BAAiB,IAAI,CAAC,OAAO,UAAU;AACtC,gBAAM,iBAAiB,WAAW,eAC5B,gBAAgB,WAAW,cAG3B,eAAe,SAAS,gBAAgB;AAAA,cAC5C,UAAU;AAAA,cACV,UAAU,CAAC,UAAU;AA1EjC;AA6Ec,uBAFgB,iBAAiB,eAAe,EAAE,OAAO,KAAK,IAGrDA,GAAU,2BAA2B,MAGb,kCAAM,SAAN,mBAAY,WAAU,QAG9CA,GAAU,yBAAyB,IAGrC;AAAA,cACT;AAAA,YACF,CAAC;AAGD,4BAAS,eAAe;AAAA,cACtB,OAAO,MAAM;AAAA,YACf,CAAC,GAGC,mDAAC;AAAA,cACC,6DAAC;AAAA,gBAAI,WAAW;AAAA,gBACd;AAAA,qEAAC;AAAA,oBAAI,WAAW;AAAA,oBACd,6DAAC,kBAAU,OAAV;AAAA,sBACC,WAAS;AAAA,sBACT,MAAM,aAAa;AAAA,sBACnB,UAAU,CAAC,UAAU;AACnB,wBAAK,aAAa,SAAS,KAAK;AAAA,sBAClC;AAAA,sBACA,QAAQ,CAAC,UAAU;AACjB,wBAAK,aAAa,OAAO,KAAK;AAAA,sBAChC;AAAA,sBACA,UAAU,aAAa;AAAA,sBACvB,aAAY;AAAA,sBACZ,MAAK;AAAA,sBACL,UAAQ;AAAA,uBAZV;AAAA;AAAA;AAAA;AAAA,2BAaA;AAAA,qBAdF;AAAA;AAAA;AAAA;AAAA,yBAeA;AAAA,kBAEA,mDAAC;AAAA,oBAAI,WAAW;AAAA,oBACd,6DAAC;AAAA,sBACC,OAAO,MAAM;AAAA,sBACb,UAAU,CAAC,SAAS;AAClB,iCAAS,eAAe,IAAI;AAAA,sBAC9B;AAAA,uBAJF;AAAA;AAAA;AAAA;AAAA,2BAKA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,yBAOA;AAAA,kBAEA,mDAAC;AAAA,oBAAG,WAAW,OAAO,SAAS;AAAA,oBAC7B,6DAAC;AAAA,sBAAI,WAAW;AAAA,sBACd,6DAAC;AAAA,wBACC,WAAW;AAAA,wBACX,SAASA,GAAE,yBAAyB;AAAA,wBAEpC,6DAAC;AAAA,0BACC,WAAS;AAAA,0BACT,OAAOA,GAAU,yBAAyB;AAAA,0BAC1C,SAAS,MAAM;AACb,mCAAO,KAAK,GACZ,YAAY,cAAc;AAAA,0BAC5B;AAAA,0BAEA,6DAAC,kBAAAG,SAAA;AAAA,4BAAU,WAAW;AAAA,6BAAtB;AAAA;AAAA;AAAA;AAAA,iCAAoC;AAAA,2BARtC;AAAA;AAAA;AAAA;AAAA,+BASA;AAAA,yBAbF;AAAA;AAAA;AAAA;AAAA,6BAcA;AAAA,uBAfF;AAAA;AAAA;AAAA;AAAA,2BAgBA;AAAA,qBAjBF;AAAA;AAAA;AAAA;AAAA,yBAkBA;AAAA;AAAA,iBA7CF;AAAA;AAAA;AAAA;AAAA,qBA8CA;AAAA,eA/Ca,MAAM,IAArB;AAAA;AAAA;AAAA;AAAA,mBAgDA;AAAA,UAEJ,CAAC;AAAA,UAED,mDAAC;AAAA,YACC,6DAAC;AAAA,cACC,WAAS;AAAA,cACT,MAAM;AAAA,cACN,OAAO;AAAA,cACP,MAAM;AAAA,cACN,UAAU;AAAA,cACV,SAAS,MAAM,OAAO,cAAc,CAAC;AAAA,cAErC,6DAAC;AAAA,gBAAK,WAAW;AAAA,gBACf;AAAA,qEAAC,sBAAAC,SAAA;AAAA,oBAAe,WAAW;AAAA,qBAA3B;AAAA;AAAA;AAAA;AAAA,yBAAkC;AAAA,kBAElC,mDAAC;AAAA,oBACC,6DAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAA4D;AAAA,qBAD9D;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA;AAAA,iBALF;AAAA;AAAA;AAAA;AAAA,qBAMA;AAAA,eAdF;AAAA;AAAA;AAAA;AAAA,mBAeA;AAAA,aAhBF;AAAA;AAAA;AAAA;AAAA,iBAiBA;AAAA;AAAA,SApGF;AAAA;AAAA;AAAA;AAAA,aAqGA;AAAA,MAEA,mDAAC;AAAA,QACC,6DAAC;AAAA,UACC,WAAW;AAAA,UACX,WAAS;AAAA,UACT,MAAM;AAAA,UACN;AAAA,UAEA;AAAA,+DAAC;AAAA,cAAG,WAAW,CAAC;AAAA,cACd,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAyD;AAAA,eAD3D;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEA,mDAAC;AAAA,cAAG,WAAW;AAAA,cACb,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAqD;AAAA,eADvD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA;AAAA,WAZF;AAAA;AAAA;AAAA;AAAA,eAaA;AAAA,SAdF;AAAA;AAAA;AAAA;AAAA,aAeA;AAAA;AAAA,KA7HF;AAAA;AAAA;AAAA;AAAA,SA8HA;AAEJ;AAEA,SAAS,gBAAgB;AACvB,SAAO;AAAA,IACL,OAAO;AAAA,IACP,MAAM,wBAAe;AAAA,EACvB;AACF;AAEA,SAAS,uBAAuB;AAC9B,aAAO,iCAAQ;AAAA,IACb,eAAe;AAAA,MACb,SAAS,CAAC,cAAc,CAAC;AAAA,IAC3B;AAAA,IACA,2BAA2B;AAAA,IAC3B,kBAAkB;AAAA,IAClB,kBAAkB;AAAA,EACpB,CAAC;AACH;AAEA,SAAS,iBAAiB,SAAwB;AAChD,SAAO,SAAwB,OAAe,OAAe;AAE3D,QAAM,aADS,QAAQ,IAAI,CAAC,WAAW,OAAO,KAAK,EACzB,QAAQ,KAAK;AAEvC,WAAO,cAAc,KAAK,eAAe;AAAA,EAC3C;AACF;AAEA,IAAO,4BAAQ;;;ANvMf;AACA;AAlBA,+DAwBaC,QAAqB,OACzB;AAAA,EACL,OAAO;AACT;AAGF,eAAsBC,QAAO,OAAmB;AAC9C,MAAM,MAAM,MAAM;AAElB,QAAM,kBAAS,GAAG,GAClB,MAAM,2BAAiB,KAAK,CAAC,MAAM,CAAC;AAEpC,MAAM,UAAU,MAAM,qBAAqB,GAAG,GACxC,iBAAiB,MAAM,0BAA0B,GAAG,GACpD,OAAO,MAAM,gBAAgB,OAAO,GAEpCC,SAAO,MAAM,IAAI,KAAK,GACtB,SAAS,MAAM,2BAA2B,EAAE,eAAeA,MAAI;AAErE,MAAI,CAAC,OAAO;AACV,WAAO,yBAAyB;AAGlC,MAAM,SAAS;AAAA,IACb,SAAS,OAAO;AAAA,IAChB;AAAA,IACA,WAAW,KAAK;AAAA,EAClB;AAEA,MAAI;AACF,iBAAM,cAAc,MAAM,OAEnB,wBAAS,gCAAgC;AAAA,EAClD,QAAE;AACA,WAAO,kCAAkC;AAAA,EAC3C;AACF;AAEA,IAAM,gCAAgC,MAElC;AAAA,EACE;AAAA,uDAAC;AAAA,MACC,SAAS,mDAAC;AAAA,QAAM,SAAS;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA,aAAyD;AAAA,MAClE,YACE,mDAAC;AAAA,QAAM,SAAS;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA,aAA4D;AAAA,MAG9D,6DAAC,+BAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,OANrB;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,IAEA,mDAAC;AAAA,MAAI,WAAW;AAAA,MACd,6DAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,aAAuB;AAAA,OADzB;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA;AAAA,GAZF;AAAA;AAAA;AAAA;AAAA,OAaA,GAIGC,kBAAQ;AAEf,SAAS,wBAAwB;AAC/B,SACE,mDAAC;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IAEN,6DAAC;AAAA,MAAK,WAAW;AAAA,MACf;AAAA,2DAAC,qBAAAC,SAAA;AAAA,UAAc,WAAW;AAAA,WAA1B;AAAA;AAAA;AAAA;AAAA,eAAiC;AAAA,QAEjC,mDAAC;AAAA,UACC,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAAoD;AAAA,WADtD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,KAXF;AAAA;AAAA;AAAA;AAAA,SAYA;AAEJ;AAEA,SAAS,6BAA6B;AACpC,SAAO,cAAE;AAAA,IACP,cAAE,OAAO;AAAA,MACP,MAAM,cAAE,WAAW,uBAAc;AAAA,MACjC,OAAO,cAAE,OAAO,EAAE,MAAM;AAAA,IAC1B,CAAC;AAAA,EACH;AACF;;;AQ5GA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA,YAAAC;AAAA;AAAA,IAAAC,kBAAwC,kBAGxCC,gBAA+B,4BAC/BD,kBAA2C,6BAC3CE,mBAA6B,wCAC7BC,yBAAsB;AAItB;AACA;AAGA;;;ACdA;AACA;AAEe,SAAR,wBAAyC;AAC9C,MAAM,OAAO,mBAAmB;AAEhC,SAAO,SAAS,UAAa,eAAe,IAAI;AAClD;;;ADPA,+DAyBMC,+BAA0B;AAAA,EAC9B,MAAM;AACR,GAEMC,sCAAiC;AAAA,EACrC,MAAM;AACR,GAEaC,QAAqB,OACzB;AAAA,EACL,OAAO;AACT,IAGWC,UAAS,OAAO,EAAE,QAAQ,MAAkB;AACvD,QAAM,2BAA2B;AAEjC,MAAM,iBAAiB,MAAM,0BAA0B,OAAO;AAE9D,MAAI,CAAC;AACH,eAAO,wBAAS,sBAAc,MAAM,OAAO;AAG7C,MAAM,UAAU,MAAM,qBAAqB,OAAO,GAC5C,OAAO,MAAM,gBAAgB,OAAO,GAEpC,UAAU,MAAM,uBAAuB;AAAA,IAC3C;AAAA,IACA,QAAQ,KAAK;AAAA,EACf,CAAC;AAED,aAAO,oBAAK,OAAO;AACrB,GAEM,0BAA0B,MAAM;AACpC,MAAM,cAAU,+BAA6B,GACvCC,kBAAiB,sBAAsB,GACvC,eAAe,uBAAuB,GACtC,iBAAiB,6CAAc;AAIrC,SAFA,sCAAsC,GAEjC,iBAKH;AAAA,IACE;AAAA,yDAAC;AAAA,QAAI,WAAW;AAAA,QACd,6DAAC;AAAA,UAAG,WAAWA;AAAA,UACb,6DAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,iBAAqB;AAAA,WADvB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QAAI,WAAU;AAAA,QACb;AAAA,6DAAC;AAAA,YACC,SAAS,mDAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAAgD;AAAA,YACzD,YAAY,mDAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAAqD;AAAA,YAEjE,6DAAC;AAAA,cACC,6DAACJ,0BAAA;AAAA,gBACC,iBAAiB;AAAA,gBACjB;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA,qBAGA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,iBAUA;AAAA,UAEA,mDAAC;AAAA,YACC,SAAS,mDAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAAsD;AAAA,YAC/D,YACE,mDAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAAyD;AAAA,YAG3D,6DAAC;AAAA,cACC,6DAACC,iCAAA;AAAA,gBAA+B;AAAA,iBAAhC;AAAA;AAAA;AAAA;AAAA,qBAAgE;AAAA,eADlE;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA,iBASA;AAAA;AAAA,SAtBF;AAAA;AAAA;AAAA;AAAA,aAuBA;AAAA;AAAA,KA9BF;AAAA;AAAA;AAAA;AAAA,SA+BA,IAnCO;AAqCX,GAEO,kBAAQ;AAEf,SAAS,wCAAwC;AAC/C,MAAM,eAAW,6BAAY,GACvB,eAAe,uBAAuB,GACtC,iBAAiB,6CAAc,IAC/B,wBAAoB,wBAAO,cAAc;AAE/C,iCAAU,MAAM;AACd,IAAI,mBAAmB,kBAAkB,WAClC,SAAS,KAAK,EAAE,SAAS,GAAK,CAAC;AAAA,EAExC,GAAG,CAAC,UAAU,cAAc,CAAC;AAC/B;AAEA,SAAS,sBAAsB;AAC7B,SACE,mDAAC;AAAA,IACC,WAAW;AAAA,IACX,WAAS;AAAA,IACT,MAAK;AAAA,IACL,MAAM;AAAA,IAEN,6DAAC;AAAA,MAAK,WAAU;AAAA,MACd;AAAA,2DAAC;AAAA,UAAa,WAAU;AAAA,WAAxB;AAAA;AAAA;AAAA;AAAA,eAA8B;AAAA,QAE9B,mDAAC;AAAA,UACC,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAAyD;AAAA,WAD3D;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,KAZF;AAAA;AAAA;AAAA;AAAA,SAaA;AAEJ;;;AE3IA;AAAA;AAAA,gBAAAI;AAAA;AACA,IAAAC,gBAAqB,4BACrBC,cAAkB;AAOlB;AAOA;AAMA,eAAsBC,QAAO,MAAkB;AAC7C,MAAM,MAAM,KAAK;AAEjB,QAAM,kBAAS,GAAG,GAClB,MAAM,2BAAiB,KAAK,CAAC,KAAK,CAAC;AAEnC,MAAM,OAAO,MAAM,IAAI,KAAK,GACtBC,UAAS,eAAU,GAEnB,iBAAiB,MAAM,0BAA0B,GAAG,GACpD,YAAY,MAAM,qBAAqB,GAAG,GAC1C,OAAO,MAAM,gBAAgB,SAAS,GAEtC,EAAE,QAAQ,aAAa,IAAIC,eAAc,EAAE,MAAM,IAAI,GAErD,gBAAgB,KAAK,KACrB,kBAAkB,MAAM,oBAAoB,cAAc,GAC1D,eAAe,gBAAgB,KAAK;AAY1C,MAVAD,QAAO;AAAA,IACL;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,EACF,GAGI,CAAC,gBAAgB,UAAU,CAAC;AAC9B,WAAO,uBAAuB,4BAA4B;AAO5D,MAAM,UAAU,aAAa,SACvB,wBAAwB,QAAQ;AAGtC,MAAI,CAFyB,QAAQ;AAGnC,WAAO,uBAAuB,6BAA6B;AAG7D,MAAI,CAAC;AACH,WAAO,uBAAuB,8BAA8B;AAG9D,MAAI,sBAAsB,SAAS,wBAAe;AAChD,WAAO,wBAAwB,iCAAiC;AAOlE,MAAM,aAAa;AAAA,IACjB,CAAC,WAAW,uBAAuB,wBAAe;AAAA,IAClD,CAAC,WAAW,sBAAsB,wBAAe;AAAA,EACnD;AAIA,eAAM,gBAAgB,IAAI,OAAO,UAAU,GAE3CA,QAAO;AAAA,IACL;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,EACF,OAEO,oBAAK,EAAE,SAAS,GAAK,CAAC;AAC/B;AAEA,SAASC,iBAAgB;AACvB,SAAO,cAAE,OAAO;AAAA,IACd,QAAQ,cAAE,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,CAAC;AACH;;;ACxGA,IAAAC,wBAAA;AAAA,SAAAA,uBAAA;AAAA,iBAAAC;AAAA,EAAA,YAAAC;AAAA;AAAA,IAAAC,yBAAsB;;;ACItB,IAAAC,qBAAgD;AAJhD;AAOe,SAAR,wBAAyC;AAAA,EAC9C;AAAA,EACA;AACF,GAAuD;AACrD,MAAM,WAAW,eAAe,wBAAe,UAEzC,EAAE,MAAM,KAAK,OAAO,QAAI,mCAAe,OAAO,QAAQ;AAC1D,QAAM,YAAY,wBAAe,eAC3B,EAAE,WAAW,IAAI,MAAM,OAAO,qBAC9B,UAAU,WAAW,KAAK,SAAS;AAEzC,WAAI,YACF,MAAM,kBAAkB,OAAO,GAG1B;AAAA,EACT,CAAC;AAQD,SANgB,WAAW,YAOlB,OAGF,mDAAC;AAAA,IAAgB;AAAA,IAAW;AAAA,KAA5B;AAAA;AAAA;AAAA;AAAA,SAAqC;AAC9C;AAEA,eAAe,kBAAkB,SAA0B;AACzD,MAAM,EAAE,uBAAuB,IAAI,MAAM,OAAO,qBAE1C,OAAO,MACP,eAAe,sBAAc,gBAAgB;AAEnD,yBAAuB,SAAS,cAAc,IAAI;AACpD;;;AC7CA,IAAAC,kBAA6D,kBAC7DC,2BAAkB,qCAClBC,qBAA2B,sBAC3BC,yBAAsC,0BACtCC,0BAAwB,4BAIxB,iBAKO;AAEP;;;ACdA,IAAAC,qBAA+B,+BAC/BC,qBAA6B,sBAC7BC,kBAA4B;AAE5B;AAGA;AAMe,SAAR,wBAAyC;AAC9C,MAAM,EAAE,OAAO,UAAU,SAAS,WAAW,IAC3C,gBAA+C,GAE3C,gBAAY,iCAAa;AAmB/B,SAAO,KAjBoB;AAAA,IACzB,OAAO,iBAAgD;AACrD,iBAAW,EAAI;AAEf,UAAI;AACF,YAAMC,WAAM,wBAAI,WAAW,0BAA0B,aAAa,EAAE;AAEpE,kBAAM,8BAAUA,MAAK,YAAY,GAEjC,QAAQ,YAAY;AAAA,MACtB,SAAS,GAAP;AACA,iBAAU,EAAoB,OAAO;AAAA,MACvC;AAAA,IACF;AAAA,IACA,CAAC,WAAW,SAAS,UAAU,UAAU;AAAA,EAC3C,GAE4B,KAAK;AAInC;;;ADtBA;;;AElBA,IAAAC,kBAAmD,kBAEnDC,mBAA4C;AAE5C;AACA;AACA;AAPA,+DAeM,aAAa,IAEb,mBAAqC,CAAC;AAAA,EAC1C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,KACG;AACL,MAAM;AACJ,MAAM,YAAY,SAAS,MACrB,CAAC,OAAO,QAAQ,QAAI,0BAAwB,SAAS,GACrD,CAAC,UAAU,WAAW,QAAI,0BAAiB,EAAE,GAC7CC,WAAM,wBAAyB,GAE/B,UAAU,CAAC,MAAmC;AAClD,MAAE,eAAe;AAEjB,QAAM,QAAQ,EAAE,cAAc;AAE9B,QAAI,uBAAO,QAAQ;AACjB,UAAM,OAAO,MAAM,IACb,OAAO,IAAI,gBAAgB,IAAI;AAErC,eAAS,IAAI,GACb,YAAY,KAAK,IAAI;AAAA,IACvB;AAEA,IAAI,MAAM,WACR,MAAM,QAAQ,CAAC;AAAA,EAEnB,GAEM,eAAkC,CAAC,MAAM;AAC7C,MAAE,eAAe,GAEjB,SAAS,EAAE,GACX,YAAY,EAAE,GAEVA,KAAI,YACNA,KAAI,QAAQ,QAAQ,KAGlB,WACF,QAAQ;AAAA,EAEZ;AAEA,wCAAU,MAAM;AACd,aAAS,SAAS;AAAA,EACpB,GAAG,CAAC,SAAS,CAAC,GAGZ,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd;AAAA,yDAAC;AAAA,QACE,GAAG;AAAA,QACJ,KAAK,CAAC,aAAa;AACjB,UAAAA,KAAI,UAAU,YAAY,QAEtB,YACF,SAAS,QAAQ;AAAA,QAErB;AAAA,QACA,WAAW;AAAA,QACX,MAAM;AAAA,QACN;AAAA,QACA,QAAO;AAAA,SAZT;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,MAEA,mDAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC;AAAA,YAAI,WAAW;AAAA,YACd;AAAA,iEAAC;AAAA,gBAAG,WAAW,CAAC;AAAA,gBACd,6DAAC;AAAA,kBACC,WAAW;AAAA,mBADb;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA,cAEA,mDAAC;AAAA,gBAAG,WAAW;AAAA,gBACb,6DAAC;AAAA,kBACC,SAAS;AAAA,kBACT,OAAO;AAAA,oBACL,OAAO;AAAA,oBACP,QAAQ;AAAA,kBACV;AAAA,kBACA,WAAW;AAAA,kBACX,OAAO;AAAA,kBACP,QAAQ;AAAA,kBACR,KAAK;AAAA,kBACL,KAAK,MAAM,OAAO;AAAA,mBAVpB;AAAA;AAAA;AAAA;AAAA,uBAWA;AAAA,iBAZF;AAAA;AAAA;AAAA;AAAA,qBAaA;AAAA;AAAA,aApBF;AAAA;AAAA;AAAA;AAAA,iBAqBA;AAAA,UAEA,mDAAC;AAAA,YAAG,WAAW,CAAC;AAAA,YACd,6DAAC;AAAA,cAAI,WAAW;AAAA,cACd,6DAAC;AAAA,gBAAM,IAAI;AAAA,gBAAQ,WAAW;AAAA,gBAC3B;AAAA,iBADH;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,UAEA,mDAAC;AAAA,YAAG,WAAW;AAAA,YACb,6DAAC;AAAA,cAAI,WAAW;AAAA,cACd,6DAAC;AAAA,gBACC,WAAW;AAAA,gBACX,UACE,mDAAC;AAAA,kBACC,IAAI;AAAA,kBACJ,WAAW;AAAA,kBAEV;AAAA,mBAJH;AAAA;AAAA;AAAA;AAAA,uBAKA;AAAA,gBAGF,6DAAC;AAAA,kBAAM,IAAG;AAAA,kBAAO,WAAW;AAAA,kBACzB;AAAA,mBADH;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,iBAbF;AAAA;AAAA;AAAA;AAAA,qBAcA;AAAA,eAfF;AAAA;AAAA;AAAA;AAAA,mBAgBA;AAAA,aAjBF;AAAA;AAAA;AAAA;AAAA,iBAkBA;AAAA,UAEA,mDAAC;AAAA,YAAG,WAAW;AAAA,YACb,6DAAC;AAAA,cAAW,SAAS;AAAA,cACnB,6DAAC;AAAA,gBAAU,WAAU;AAAA,iBAArB;AAAA;AAAA;AAAA;AAAA,qBAA+B;AAAA,eADjC;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA;AAAA,SAxDF;AAAA;AAAA;AAAA;AAAA,aAyDA;AAAA;AAAA,KAzEF;AAAA;AAAA;AAAA;AAAA,SA0EA;AAEJ,GAEO,2BAAQ;;;AF3Hf;AAtBA,+DAwBM,yBAAyB,MAAM;AACnC,MAAM,cAAU,+BAAW,GACrB,EAAE,cAAc,gBAAgB,QAAI,4BAAW,oBAAmB,GAClE,CAAC,oBAAoB,EAAE,QAAQ,CAAC,IAAI,sBAAsB,GAE1D,CAAC,aAAa,cAAc,QAAI,0BAAS,EAAK,GAC9C,EAAE,GAAAC,GAAE,QAAI,uCAAe,cAAc,GAErC,2BAA0B,6CAAc,SAAQ,IAChD,kBAAiB,6CAAc,YAAW,MAE1C,EAAE,UAAU,cAAc,MAAM,QAAI,iCAAQ;AAAA,IAChD,eAAe;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,EACF,CAAC,GAEK,oBAAgB,6BAAY,MAAM;AACtC,mBAAe,EAAI;AAAA,EACrB,GAAG,CAAC,CAAC,GAEC,eAAW;AAAA,IACf,OAAO,kBAA0B,aAA0B;AACzD,UAAM,iBAAiB,6CAAc;AAErC,UAAI,CAAC,gBAAgB;AACnB,YAAM,eAAeA,GAAU,gCAAgC;AAC/D,eAAO,yBAAAC,QAAM,MAAM,YAAY;AAAA,MACjC;AAEA,UAAM,WAAW,qCAAU,MAErB,UAAU,WACZ,MAAM,WAAW;AAAA,QACf,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACF,CAAC,EAAE,MAAM,MAAM;AACb,YAAM,eAAeD,GAAU,wBAAwB;AACvD,iCAAAC,QAAM,MAAM,YAAY;AAAA,MAG1B,CAAC,IACD,gBAEE,gBAAgB,eAAe,CAAC;AAGtC,UAAI,iBAAiB;AACnB,YAAI;AACF,oBAAM,iCAAa,oBAAI,SAAS,cAAc,CAAC;AAAA,QACjD,QAAE;AAAA,QAEF;AAGF,UAAM,mBAAkD;AAAA,QACtD,IAAI,aAAa;AAAA,QACjB,MAAM;AAAA,QACN,SAAS,gBAAgB,OAAO;AAAA,MAClC,GAEM,UAAU,mBAAmB,gBAAgB,EAAE,KAAK,MAAM;AAC9D,wBAAgB;AAAA,UACd,GAAG;AAAA,UACH,GAAG;AAAA,QACL,CAAC;AAAA,MACH,CAAC;AAED,YAAM,yBAAAA,QAAM,QAAQ,SAAS;AAAA,QAC3B,SAASD,GAAU,kCAAkC;AAAA,QACrD,SAASA,GAAU,kCAAkC;AAAA,QACrD,OAAOA,GAAU,gCAAgC;AAAA,MACnD,CAAC;AAAA,IACH;AAAA,IACA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACAA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,iCAAU,MAAM;AACd,UAAM;AAAA,MACJ,MAAM,6CAAc;AAAA,MACpB,SAAS,6CAAc;AAAA,IACzB,CAAC;AAAA,EACH,GAAG,CAAC,cAAc,KAAK,CAAC;AAExB,MAAM,cAAc,SAAS,QAAQ;AAAA,IACnC,UAAU;AAAA,EACZ,CAAC,GAEK,cAAc,SAAS,SAAS;AAEtC,SACE,mDAAC;AAAA,IACC,UAAU,aAAa,CAAC,UACf,SAAS,MAAM,MAAM,YAAY,MAAM,OAAO,CAAC,CACvD;AAAA,IACD,WAAW;AAAA,IAEX,6DAAC;AAAA,MAAI,WAAW;AAAA,MACd;AAAA,2DAAC;AAAA,UACC,6DAAC,kBAAU,OAAV;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA2D;AAAA,cAE3D,mDAAC,kBAAU,OAAV;AAAA,gBACC,WAAS;AAAA,gBACT,UAAQ;AAAA,gBACR,MAAM,YAAY;AAAA,gBAClB,UAAU,YAAY;AAAA,gBACtB,UAAU,YAAY;AAAA,gBACtB,QAAQ,YAAY;AAAA,gBACpB,aAAa;AAAA,iBAPf;AAAA;AAAA;AAAA;AAAA,qBAQA;AAAA;AAAA,aAXF;AAAA;AAAA;AAAA;AAAA,iBAYA;AAAA,WAbF;AAAA;AAAA;AAAA;AAAA,eAcA;AAAA,QAEA,mDAAC;AAAA,UACC;AAAA,+DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAA2D;AAAA,YAE3D,mDAAC;AAAA,cACC,MAAM,YAAY;AAAA,cAClB,UAAU,YAAY;AAAA,cACtB,QAAQ,YAAY;AAAA,cACpB,UAAU,YAAY;AAAA,cACtB,OAAO;AAAA,cACP,SAAS;AAAA,cAET,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA0C;AAAA,eAR5C;AAAA;AAAA;AAAA;AAAA,mBASA;AAAA;AAAA,WAZF;AAAA;AAAA;AAAA;AAAA,eAaA;AAAA,QAEA,mDAAC;AAAA,UACC,6DAAC;AAAA,YACC,WAAW;AAAA,YACX,WAAS;AAAA,YACT;AAAA,YAEA,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAA8D;AAAA,aALhE;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,WAPF;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA;AAAA,OAxCF;AAAA;AAAA;AAAA;AAAA,WAyCA;AAAA,KA/CF;AAAA;AAAA;AAAA;AAAA,SAgDA;AAEJ;AAQA,eAAe,WAAW;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AACF,GAIG;AACD,MAAM,OAAO,mBAAmB,gBAAgB,KAAK,IAAI,GACnD,QAAQ,MAAM,KAAK,YAAY,GAC/B,cAAU,oBAAI,SAAS,IAAI;AAGjC,mBAAM,4BAAY,SAAS,KAAK,GAGzB,UAAM,+BAAe,OAAO;AACrC;AAOA,SAAS,mBAAmB,gBAAwB,UAAkB;AACpE,SAAO,CAAC,kBAAkB,gBAAgB,QAAQ,EAAE,KAAK,GAAG;AAC9D;AAEA,SAAS,YAAY,OAAiC;AACpD,MAAI,GAAC,SAAS,OAAO,SAAU;AAI/B,WAAO,MAAM,KAAK,CAAC,KAAK;AAC1B;AAEA,IAAO,iCAAQ;;;AF5Nf,+DAOaE,SAAqB,OACzB;AAAA,EACL,OAAO;AACT,IAGI,2BAA2B,MAE7B,mDAAC;AAAA,EACC,SAAS,mDAAC;AAAA,IAAM,SAAS;AAAA,KAAhB;AAAA;AAAA;AAAA;AAAA,SAAgD;AAAA,EACzD,YAAY,mDAAC;AAAA,IAAM,SAAS;AAAA,KAAhB;AAAA;AAAA;AAAA;AAAA,SAA0D;AAAA,EAEtE,6DAAC;AAAA,IACC,6DAAC,oCAAD;AAAA;AAAA;AAAA;AAAA,WAAwB;AAAA,KAD1B;AAAA;AAAA;AAAA;AAAA,SAEA;AAAA,GANF;AAAA;AAAA;AAAA;AAAA,OAOA,GAIGC,wBAAQ;;;AK1Bf;AAAA;AAAA;AAAA;AAAA,IAAAC,kBAAuB;;;ACAvB,IAAAC,kBAA+B,kBAC/BC,eAAkC,0BAClCC,qBAAwB;AAFxB,+DAOMC,SAAQ;AAAA,EACZ,SAAS;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,EACT;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,IACN,OAAO;AAAA,EACT;AAAA,EACA,OAAO;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,EACT;AAAA,EACA,UAAU;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,EACT;AACF,GAEM,sBAAsB,MAAM;AAChC,MAAM,EAAE,MAAM,KAAK,QAAI,4BAAQ,GAIzB,8BAA0B,yBAAQ,MAAM;AAC5C,QAAM,kBAAkB,+BAAkB;AAE1C,WAAK,OAIE,KAAK,aAAa,KAAK,CAAC,SACtB,KAAK,eAAe,eAC5B,IALQ;AAAA,EAMX,GAAG,CAAC,IAAI,CAAC,GAEH,gBAAgB;AAEtB,SACE,mDAAC;AAAA,IAAe,UAAQ;AAAA,IAAC,WAAS;AAAA,IAChC;AAAA,yDAAC;AAAA,QAAe,KAAG;AAAA,QAAC,WAAW;AAAA,QAAe,MAAMA,OAAM;AAAA,SAA1D;AAAA;AAAA;AAAA;AAAA,aAAmE;AAAA,MAEnE,mDAAC;AAAA,QAAe,WAAW;AAAA,QAAe,MAAMA,OAAM;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA,aAAsE;AAAA,MAEtE,mDAAC;AAAA,QACC,WAAW;AAAA,QACX,UAAU,CAAC;AAAA,QACX,MAAMA,OAAM;AAAA,SAHd;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QACC,WAAW;AAAA,QACX,UAAU,CAAC;AAAA,QACX,MAAMA,OAAM;AAAA,SAHd;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA;AAAA,KAfF;AAAA;AAAA;AAAA;AAAA,SAgBA;AAEJ,GAEO,8BAAQ;;;ADlEf;AAIA,SAAS,wBAAwB;AAC/B,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,6DAAC,iCAAD;AAAA;AAAA;AAAA;AAAA,eAAqB;AAAA,SADvB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QACC,6DAAC,4BAAD;AAAA;AAAA;AAAA;AAAA,eAAQ;AAAA,SADV;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;AAEA,IAAO,kBAAQ;;;AElBf;AAAA;AAAA;AAAA,cAAAC;AAAA;AAAA,IAAAC,kBAA+C,kBAC/CC,yBAAsB;;;ACDtB,IAAAC,kBAOO,kBAEPC,2BAAoB,qCACpBC,qBAAwB,sBAQxBC,gBAMO,0BAEPC,yBAAsC,0BACtCC,mBAAgC;AAIhC;AACA;AACA;AACA;;;AClCA,IAAAC,yBAAsB;AACtB;AADA;AAIA,SAAS,qBAAqB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AACF,GAII;AACF,SACE,mDAAC;AAAA,IACC,SAAS,mDAAC;AAAA,MAAM,SAAS;AAAA,OAAhB;AAAA;AAAA;AAAA;AAAA,WAA2C;AAAA,IACpD;AAAA,IACA;AAAA,IAEA,6DAAC;AAAA,MACC,QAAQ;AAAA,MACR,WAAW,CAAC,eAAe;AACzB,YAAI,WAAW;AACb,cAAM,cAAc,WAAW,KAAK;AAIpC,UAAI,eACF,UAAU,WAAW;AAAA,QAEzB;AAEA,kBAAU,EAAK;AAAA,MACjB;AAAA,OAdF;AAAA;AAAA;AAAA;AAAA,WAeA;AAAA,KApBF;AAAA;AAAA;AAAA;AAAA,SAqBA;AAEJ;AAEA,IAAO,+BAAQ;;;ACvCf,IAAAC,qBAAwB,sBACxBC,kBAAiD,kBAGjDC,gBAIO,0BAEPC,0BAAwB,4BACxBC,2BAAoB,qCACpBC,yBAAsC;;;ACZtC,IAAAC,kBAA4B;;;ACA5B;AAMO,SAAS,mBAAmB;AACjC,SAAO,cAA0B,iBAAiB,MAAM;AAC1D;;;ADHA,SAAS,6BAA6B;AACpC,MAAM,CAAC,QAAQ,WAAW,IAAI,iBAAiB;AAW/C,SAAO,KATgB;AAAA,IACrB,OAAO,MAAY,eAAe,OAAS;AACzC,UAAM,UAAU,MAAM,KAAK,WAAW,YAAY;AAElD,aAAO,OAAO,EAAE,QAAQ,CAAC;AAAA,IAC3B;AAAA,IACA,CAAC,MAAM;AAAA,EACT,GAEwB,WAAW;AAIrC;AAEA,IAAO,yCAAQ;;;ADPf;AAMA;AAEA;AACA;AAzBA;AA2BA,SAAS,uBAAuB;AAAA,EAC9B;AAAA,EACA;AACF,GAGI;AAjCJ;AAkCE,MAAM,EAAE,GAAAC,GAAE,QAAI,uCAAe,GACvB,EAAE,OAAO,YAAY,UAAU,WAAW,IAAI,gBAAsB,GACpE,WAAO,4BAAQ,GACf,CAAC,cAAc,IAAI,uCAA2B,GAE9C,CAAC,sBAAsB,uBAAuB,QAClD,0BAAkC,GAE9B,OAAO,KAAK,aAEZ,EAAE,UAAU,cAAc,OAAO,OAAO,UAAU,QAAI,iCAAQ;AAAA,IAClE,eAAe;AAAA,MACb,OAAO;AAAA,MACP,UAAU;AAAA,MACV,gBAAgB;AAAA,IAClB;AAAA,EACF,CAAC,GAEK,SAAS,UAAU,QACnB,eAAe,SAAS,SAAS,EAAE,UAAU,GAAK,CAAC,GAEnD,kBAAkB,SAAS,YAAY;AAAA,IAC3C,UAAU;AAAA,IACV,WAAW;AAAA,MACT,OAAO;AAAA,MACP,SAASA,GAAU,0BAA0B;AAAA,IAC/C;AAAA,EACF,CAAC,GAEK,gBAAgB,MAAM,UAAU,GAEhC,wBAAwB,SAAS,kBAAkB;AAAA,IACvD,UAAU;AAAA,IACV,WAAW;AAAA,MACT,OAAO;AAAA,MACP,SAASA,GAAU,0BAA0B;AAAA,IAC/C;AAAA,IACA,UAAU,CAAC,UACL,UAAU,gBACLA,GAAU,0BAA0B,IAGtC;AAAA,EAEX,CAAC,GAEK,eAAW;AAAA,IACf,OAAO,WAAgD;AACrD,UAAI,MAAM,WAAW,CAAC;AACpB;AAGF,iBAAW,EAAI;AAEf,UAAM,iBAAiB,gCAAkB;AAAA,QACvC,OAAO;AAAA,QACP,OAAO;AAAA,MACT,GAEM,UAAU,IAAI,QAAc,CAACC,UAAS,eACnC,kCAAmB,MAAM,cAAc,EAC3C,KAAK,YAAY;AAChB,YAAM,gBAAgB,UAAM;AAAA,UAC1B;AAAA,UACA;AAAA,QACF;AAKA,cAAM,eAAe,cAAc,IAAI,GAEvCA,SAAQ;AAAA,MACV,CAAC,EACA,MAAM,CAAC,UAAU;AAChB,YAAI,mBAAmB,KAAK;AAC1B,kCAAwB,KAAK,GAC7B,UAAU,EAAK,GACf,yBAAAC,QAAQ,QAAQ;AAAA;AAEhB,0BAAS,KAAK,GAEP,OAAO;AAAA,MAElB,CAAC,CACJ;AAED,YAAM,yBAAAA,QAAQ,QAAQ,SAAS;AAAA,QAC7B,SAASF,GAAU,2BAA2B;AAAA,QAC9C,OAAOA,GAAU,yBAAyB;AAAA,QAC1C,SAASA,GAAU,2BAA2B;AAAA,MAChD,CAAC,GAED,WAAW,GACX,UAAU,EAAK,GACf,MAAM;AAAA,IACR;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN;AAAA,MACAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,wCAAU,OACH,UACH,MAAM,GAGD,MAAM;AACX,UAAM;AAAA,EACR,IACC,CAAC,OAAO,MAAM,CAAC,GAGhB;AAAA,IACE;AAAA,yDAAC;AAAA,QAAM,SAAS;AAAA,QAAiB;AAAA,QAAgB;AAAA,QAC/C,6DAAC;AAAA,UAAK,WAAW;AAAA,UAAU,UAAU,aAAa,QAAQ;AAAA,UACxD,6DAAC;AAAA,YAAI,WAAW;AAAA,YACd;AAAA,iEAAC;AAAA,gBACC,6DAAC,kBAAU,OAAV;AAAA,kBACC;AAAA,uEAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAAuC;AAAA,oBAEvC,mDAAC,kBAAU,OAAV;AAAA,sBACC,WAAS;AAAA,sBACT,UAAQ;AAAA,sBACR,MAAK;AAAA,sBACL,aAAa;AAAA,sBACb,UAAU,aAAa;AAAA,sBACvB,QAAQ,aAAa;AAAA,sBACrB,UAAU,aAAa;AAAA,sBACvB,MAAM,aAAa;AAAA,uBARrB;AAAA;AAAA;AAAA;AAAA,2BASA;AAAA;AAAA,mBAZF;AAAA;AAAA;AAAA;AAAA,uBAaA;AAAA,iBAdF;AAAA;AAAA;AAAA;AAAA,qBAeA;AAAA,cAEA,mDAAC;AAAA,gBACC,6DAAC,kBAAU,OAAV;AAAA,kBACC;AAAA,uEAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAAmC;AAAA,oBAEnC,mDAAC,kBAAU,OAAV;AAAA,sBACC,WAAS;AAAA,sBACT,UAAQ;AAAA,sBACR,MAAK;AAAA,sBACL,aAAa;AAAA,sBACb,UAAU,gBAAgB;AAAA,sBAC1B,QAAQ,gBAAgB;AAAA,sBACxB,UAAU,gBAAgB;AAAA,sBAC1B,MAAM,gBAAgB;AAAA,uBARxB;AAAA;AAAA;AAAA;AAAA,2BASA;AAAA,oBAEA,mDAAC,kBAAU,MAAV;AAAA,sBACC,6DAAC;AAAA,wBAAM,SAAS;AAAA,yBAAhB;AAAA;AAAA;AAAA;AAAA,6BAAqC;AAAA,uBADvC;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA,oBAEA,mDAAC,kBAAU,OAAV;AAAA,sBAAgB,QAAO,YAAO,aAAP,mBAAiB;AAAA,uBAAzC;AAAA;AAAA;AAAA;AAAA,2BAAkD;AAAA;AAAA,mBAlBpD;AAAA;AAAA;AAAA;AAAA,uBAmBA;AAAA,iBApBF;AAAA;AAAA;AAAA;AAAA,qBAqBA;AAAA,cAEA,mDAAC;AAAA,gBACC;AAAA,qEAAC,kBAAU,OAAV;AAAA,oBACC;AAAA,yEAAC;AAAA,wBAAM,SAAS;AAAA,yBAAhB;AAAA;AAAA;AAAA;AAAA,6BAAuC;AAAA,sBAEvC,mDAAC,kBAAU,OAAV;AAAA,wBACC,WAAS;AAAA,wBACT,UAAQ;AAAA,wBACR,MAAK;AAAA,wBACL,aAAa;AAAA,wBACb,UAAU,sBAAsB;AAAA,wBAChC,QAAQ,sBAAsB;AAAA,wBAC9B,UAAU,sBAAsB;AAAA,wBAChC,MAAM,sBAAsB;AAAA,yBAR9B;AAAA;AAAA;AAAA;AAAA,6BASA;AAAA;AAAA,qBAZF;AAAA;AAAA;AAAA;AAAA,yBAaA;AAAA,kBAEA,mDAAC,kBAAU,OAAV;AAAA,oBAAgB,QAAO,YAAO,mBAAP,mBAAuB;AAAA,qBAA/C;AAAA;AAAA;AAAA;AAAA,yBAAwD;AAAA;AAAA,iBAhB1D;AAAA;AAAA;AAAA;AAAA,qBAiBA;AAAA,cAEA,mDAAC;AAAA,gBAAG,WAAW,MAAM;AAAA,gBAClB,WAAC,UACA,mDAAC;AAAA,kBAAiB,OAAO,qBAAqB,KAAK;AAAA,mBAAnD;AAAA;AAAA;AAAA;AAAA,uBAAsD;AAAA,iBAF1D;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA,cAEA,mDAAC;AAAA,gBACC,6DAAC;AAAA,kBACC,MAAM;AAAA,kBACN,WAAS;AAAA,kBACT,WAAW;AAAA,kBACX,OAAO;AAAA,kBACP,MAAK;AAAA,kBACL,SAAS,MAAM;AAAA,kBAEf,6DAAC;AAAA,oBACC,WAAW,MAAM;AAAA,oBACjB,UAAU,mDAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAAuC;AAAA,oBAEjD,6DAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAA6C;AAAA,qBAJ/C;AAAA;AAAA;AAAA;AAAA,yBAKA;AAAA,mBAbF;AAAA;AAAA;AAAA;AAAA,uBAcA;AAAA,iBAfF;AAAA;AAAA;AAAA;AAAA,qBAgBA;AAAA;AAAA,aAlFF;AAAA;AAAA;AAAA;AAAA,iBAmFA;AAAA,WApFF;AAAA;AAAA;AAAA;AAAA,eAqFA;AAAA,SAtFF;AAAA;AAAA;AAAA;AAAA,aAuFA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW;AAAA,QACZ,WAAC,UACA,mDAAC;AAAA,UACC;AAAA,UACA,QAAQ;AAAA,UACR,WAAW,MAAM,wBAAwB,MAAS;AAAA,UAClD,WAAW,OAAO,eAAe;AAC/B,kBAAM,eAAe,WAAW,IAAI,GAEpC,wBAAwB,MAAS,GACjC,MAAM,GACN,WAAW;AAAA,UACb;AAAA,WAVF;AAAA;AAAA;AAAA;AAAA,eAWA;AAAA,SAbJ;AAAA;AAAA;AAAA;AAAA,aAeA;AAAA;AAAA,KAzGF;AAAA;AAAA;AAAA;AAAA,SA0GA;AAEJ;AAEA,IAAO,iCAAQ;;;AGvQf,IAAM,QAAQ,oBAAI,QAAQ;AAM1B,SAAS,0BACP,mBAIA;AACA,MAAI,MAAM,IAAI,iBAAiB;AAC7B,WAAO,MAAM,IAAI,iBAAiB;AAKpC,MAAI,iBAAiB,mBAAmB;AACtC,QAAMG,MAAK,kBAAkB;AAE7B,iBAAM,IAAI,mBAAmBA,GAAE,GAExBA;AAAA,EACT;AAGA,MAAM,KAAK,IAAI,kBAAkB,EAAE;AAEnC,eAAM,IAAI,mBAAmB,EAAE,GAExB;AACT;AAEA,IAAO,wCAAQ;;;ALrCf,+DAkDM,6BAA6B,MAAM;AACvC,MAAM,EAAE,MAAM,KAAK,QAAI,4BAAQ,GACzB,EAAE,GAAAC,GAAE,QAAI,uCAAe,GACvB,qBAAqB,0BAA0B,GAE/C,CAAC,qBAAqB,sBAAsB,QAAI,0BAAS,EAAK,GAC9D,CAAC,kBAAkB,mBAAmB,QAAI,0BAAS,EAAK,GAExD,CAAC,gCAAgC,iCAAiC,QACtE,0BAAS,EAAK,GAEV,CAAC,sBAAsB,uBAAuB,QAClD,0BAAkC,GAE9B,6BAAyB,wBAAe,GAExC,mBAAe;AAAA,IACnB,OAAM,6BAAM,iBAAgB,CAAC;AAAA,IAC7B,CAAC,6BAAM,YAAY;AAAA,EACrB,GAEM,CAAC,WAAW,YAAY,QAAI,0BAAS,YAAY,GACjD,YAAY,UAAU,SAAS,GAE/B,wBAAoB;AAAA,IACxB,OAAO,eAAuB;AAC5B,UAAI,CAAC,QAAQ,KAAK,aAAa,SAAS;AACtC;AAGF,UAAM,cAAU,sBAAO,MAAM,UAAU;AAEvC,YAAM,yBAAAC,QAAQ,QAAQ,SAAS;AAAA,QAC7B,SAASD,GAAU,6BAA6B;AAAA,QAChD,SAASA,GAAU,6BAA6B;AAAA,QAChD,OAAOA,GAAU,2BAA2B;AAAA,MAC9C,CAAC,GAED;AAAA,QAAa,CAACE,eACZA,WAAU,OAAO,CAAC,aAAa,SAAS,eAAe,UAAU;AAAA,MACnE;AAAA,IACF;AAAA,IACA,CAAC,MAAMF,EAAC;AAAA,EACV,GAEM,oBAAgB,6BAAY,MAAM;AACtC,QAAM,UAAUA,GAAU,2BAA2B;AACrD,WAAO,yBAAAC,QAAQ,QAAQ,OAAO;AAAA,EAChC,GAAG,CAACD,EAAC,CAAC,GAEA,kBAAc;AAAA,IAClB,CAAC,UAA0B;AACzB,UAAM,UACFA,GADY,QACF,eAAe,UACf,yBADsB;AAGpC,+BAAAC,QAAQ,MAAM,OAAO;AAAA,IACvB;AAAA,IACA,CAACD,EAAC;AAAA,EACJ,GAEM,yBAAqB,yBAAQ,MAC1B,mBAAmB,OAAO,CAAC,sBACzB,UAAU;AAAA,IACf,CAAC,sBACC,kBAAkB,eAClB,sCAA0B,iBAAiB;AAAA,EAC/C,CACD,GACA,CAAC,WAAW,kBAAkB,CAAC,GAE5B,4BAAwB,yBAAQ,MAC7B,mBAAmB,OAAO,CAAC,sBACzB,CAAC,mBAAmB,SAAS,iBAAiB,CACtD,GACA,CAAC,oBAAoB,kBAAkB,CAAC,GAErC,4BAAwB;AAAA,IAC5B,OAAO,sBAA4C;AACjD,UAAI,CAAC;AACH,eAAO;AAGT,UAAI;AACF,YAAM,iBAAiB,UAAM;AAAA,UAC3B;AAAA,UACA,IAAI,kBAAkB;AAAA,UACtB;AAAA,QACF;AAKA,eAFE,kBAAkB,qBAAqB,cAAc,IAE9B,cAAc,IAAI,YAAY;AAAA,MACzD,SAAS,OAAP;AACA,QAAI,mBAAmB,KAAK,IAC1B,wBAAwB,KAAK,IAE7B,YAAY,qBAAqB,KAAK,CAAC;AAAA,MAE3C;AAAA,IACF;AAAA,IACA,CAAC,aAAa,eAAe,IAAI;AAAA,EACnC,GAEM,sBAAkB;AAAA,IACtB,OAAO,aAAwC;AAC7C,UAAI,CAAC;AACH,eAAO;AAKT,cAFmB,sCAA0B,QAAQ;AAAA,aAG9C,gCAAkB;AACrB,iBAAO,oBAAoB,EAAI;AAAA,aAE5B,gCAAkB;AACrB,iBAAO,uBAAuB,EAAI;AAAA;AAGlC,iBAAO,sBAAsB,QAAgC;AAAA;AAAA,IAEnE;AAAA,IACA,CAAC,uBAAuB,IAAI;AAAA,EAC9B;AAEA,wCAAU,MAAM;AACd,iBAAa,YAAY;AAAA,EAC3B,GAAG,CAAC,YAAY,CAAC,GAGf,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd;AAAA,yDAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YAAI,WAAW;AAAA,YACd;AAAA,iEAAC;AAAA,gBAAQ,MAAM;AAAA,gBACb,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAA6C;AAAA,iBAD/C;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cAEA,mDAAC;AAAA,gBACC,6DAAC;AAAA,kBAAK,WAAW;AAAA,kBACf,6DAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAAuD;AAAA,mBADzD;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,iBAUA;AAAA,UAEA,mDAAC;AAAA,YACC,WACE;AAAA,YAGD,6BAAmB,IAAI,CAAC,UAAU,UAAU;AAC3C,kBAAM,aAAa,sCAA0B,QAAQ;AAErD,qBACE,mDAAC;AAAA,gBACC,6DAAC;AAAA,kBACC;AAAA,kBACA;AAAA,kBACA,UAAU,MAAM;AACd,oBAAI,CAAC,cAIL,uBAAuB,UAAU,YACjC,kCAAkC,EAAI;AAAA,kBACxC;AAAA,mBAVF;AAAA;AAAA;AAAA;AAAA,uBAWA;AAAA,iBAZa,OAAf;AAAA;AAAA;AAAA;AAAA,qBAaA;AAAA,YAEJ,CAAC;AAAA,aAxBH;AAAA;AAAA;AAAA;AAAA,iBAyBA;AAAA;AAAA,SAtCF;AAAA;AAAA;AAAA;AAAA,aAuCA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW,sBAAsB;AAAA,QACnC,6DAAC;AAAA,UACC;AAAA,+DAAC;AAAA,cAAI,WAAW;AAAA,cACd;AAAA,mEAAC;AAAA,kBAAQ,MAAM;AAAA,kBACb,6DAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAA8C;AAAA,mBADhD;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBAEA,mDAAC;AAAA,kBACC,6DAAC;AAAA,oBAAK,WAAW;AAAA,oBACf,6DAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAAwD;AAAA,qBAD1D;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA,mBAHF;AAAA;AAAA;AAAA;AAAA,uBAIA;AAAA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA,mBAUA;AAAA,YAEA,mDAAC;AAAA,cAAI,WAAW;AAAA,cACb,gCAAsB,IAAI,CAAC,UAAU,UAElC,mDAAC;AAAA,gBACC,6DAAC;AAAA,kBACC;AAAA,kBACA,QAAQ,MAAM,gBAAgB,QAAQ;AAAA,mBAFxC;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA,iBAJQ,OAAV;AAAA;AAAA;AAAA;AAAA,qBAKA,CAEH;AAAA,eAVH;AAAA;AAAA;AAAA;AAAA,mBAWA;AAAA;AAAA,WAxBF;AAAA;AAAA;AAAA;AAAA,eAyBA;AAAA,SA1BF;AAAA;AAAA;AAAA;AAAA,aA2BA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW;AAAA,QACZ,WAAC,UACA,mDAAC;AAAA,UACC;AAAA,UACA,QAAQ;AAAA,UACR,WAAW,MAAM,wBAAwB,MAAS;AAAA,UAClD,WAAW,YAAY;AAAA,UAEvB;AAAA,WANF;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,SATJ;AAAA;AAAA;AAAA;AAAA,aAWA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW;AAAA,QACb,6DAAC;AAAA,UAAuB,QAAQ;AAAA,UAAM,WAAW;AAAA,WAAjD;AAAA;AAAA;AAAA;AAAA,eAAsE;AAAA,SADxE;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW;AAAA,QACZ,gBACC,mDAAC;AAAA,UACC,QAAQ;AAAA,UACR,WAAW;AAAA,WAFb;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,SALJ;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MAEA,mDAAC;AAAA,QACC,QAAQ;AAAA,QACR,WAAW,CAAC,WAAW;AACrB,UAAK,WACH,uBAAuB,UAAU,SAGnC,kCAAkC,MAAM;AAAA,QAC1C;AAAA,QACA,UAAU,YAAY;AACpB,UAAI,uBAAuB,YACzB,MAAM,kBAAkB,uBAAuB,OAAO,GAEtD,kCAAkC,EAAK;AAAA,QAE3C;AAAA,SAfF;AAAA;AAAA;AAAA;AAAA,aAgBA;AAAA;AAAA,KAjHF;AAAA;AAAA;AAAA;AAAA,SAkHA;AAEJ;AAEA,SAAS,0BAA0B;AAAA,EACjC;AAAA,EACA;AACF,GAGI;AACF,MAAM,aAAa,sCAA0B,QAAQ,GAC/C,eAAe,WAAW,UAAU;AAE1C,SACE,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd,6DAAC;AAAA,MACC,WAAS;AAAA,MACT,iBAAe;AAAA,MACf;AAAA,MACA,SAAS;AAAA,MAET,6DAAC;AAAA,QACC,SAAS;AAAA,QACT,QAAQ,EAAE,UAAU,aAAa;AAAA,SAFnC;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,OATF;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,KAXF;AAAA;AAAA;AAAA;AAAA,SAYA;AAEJ;AAEA,SAAS,yBAAyB;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AACF,GAII;AACF,MAAM,WAAW,WAAW,UAAU;AAEtC,SACE,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd;AAAA,yDAAC;AAAA,QAAI,WAAW;AAAA,QACd,6DAAC;AAAA,UAAK,WAAW;AAAA,UACf;AAAA,+DAAC;AAAA,cAAiB,oBAAoB;AAAA,eAAtC;AAAA;AAAA;AAAA;AAAA,mBAAkD;AAAA,YAElD,mDAAC;AAAA,cACC,WACE;AAAA,cAIF;AAAA,mEAAC;AAAA,kBACC,6DAAC;AAAA,oBACC,SAAS;AAAA,oBACT,QAAQ,EAAE,SAAS;AAAA,qBAFrB;AAAA;AAAA;AAAA;AAAA,yBAGA;AAAA,mBAJF;AAAA;AAAA;AAAA;AAAA,uBAKA;AAAA,gBAEA,mDAAC;AAAA,kBAAgB,WAAW;AAAA,mBAA5B;AAAA;AAAA;AAAA;AAAA,uBAAmC;AAAA;AAAA,eAbrC;AAAA;AAAA;AAAA;AAAA,mBAcA;AAAA;AAAA,WAjBF;AAAA;AAAA;AAAA;AAAA,eAkBA;AAAA,SAnBF;AAAA;AAAA;AAAA;AAAA,aAoBA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW;AAAA,QACb,6DAAC;AAAA,UACC,WAAS;AAAA,UACT,iBAAe;AAAA,UACf,WAAW;AAAA,UACX,OAAO;AAAA,UACP,SAAS;AAAA,UACT,SAAS;AAAA,UAET,6DAAC;AAAA,YACC,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAA6C;AAAA,aAD/C;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,WAVF;AAAA;AAAA;AAAA;AAAA,eAWA;AAAA,SAZF;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA;AAAA,KApCF;AAAA;AAAA;AAAA;AAAA,SAqCA;AAEJ;AAEA,SAAS,0BAA0B;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AACF,GAII;AACF,SACE,mDAAC;AAAA,IACC,SAAS,mDAAC;AAAA,MAAM,SAAS;AAAA,OAAhB;AAAA;AAAA;AAAA;AAAA,WAAqD;AAAA,IAC9D;AAAA,IACA;AAAA,IAEA,6DAAC;AAAA,MAAI,WAAW;AAAA,MACd;AAAA,2DAAC;AAAA,UACC;AAAA,+DAAC;AAAA,cACC,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAyC;AAAA,eAD3C;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAoD;AAAA,eADtD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA;AAAA,WAPF;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,QAEA,mDAAC;AAAA,UACC,WAAS;AAAA,UACT,OAAK;AAAA,UACL,OAAO;AAAA,UACP,SAAS;AAAA,UAET,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAAoD;AAAA,WANtD;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA;AAAA,OAlBF;AAAA;AAAA;AAAA;AAAA,WAmBA;AAAA,KAxBF;AAAA;AAAA;AAAA;AAAA,SAyBA;AAEJ;AAEA,SAAS,4BAA4B;AACnC,aAAO,yBAAQ,MAAM;AACnB,QAAM,YAAY,sBAAc,KAAK;AAErC,WAAO;AAAA,MACL,GAAI,UAAU,cAAc,CAAC,+BAAiB,IAAI,CAAC;AAAA,MACnD,GAAI,UAAU,gBAAgB,CAAC,+BAAiB,IAAI,CAAC;AAAA,MACrD,GAAI,UAAU,SAAS,CAAC;AAAA,IAC1B;AAAA,EACF,GAAG,CAAC,CAAC;AACP;AAEA,SAAS,WAAW,YAAoB;AACtC,SAAO,WAAW,MAAM,GAAG,CAAC,EAAE,YAAY,IAAI,WAAW,MAAM,CAAC;AAClE;AAEA,IAAO,qCAAQ;;;AMnbf,IAAAG,yBAAsB,0BACtBC,mBAAgC,wCAChCC,kBAAyB,kBACzBC,qBAAwB;AAExB;AACA;AACA;;;ACPA,IAAAC,kBAA8C,kBAC9CC,yBAAsB,0BACtBC,qBAAwB;AAExB;AACA;;;ACJA,IAAAC,kBAA4B,kBAC5BC,yBAAsC,0BACtCC,gBAA+C,0BAG/CC,2BAAoB,qCACpBC,qBAAwB;AAGxB;AACA;AAGA;AAdA,+DAkBMC,YAAW,yCAEX,iCAGD,CAAC,EAAE,YAAY,sBAAsB,MAAM;AAC9C,MAAM,WAAO,4BAAQ,GACf,EAAE,GAAAC,GAAE,QAAI,uCAAe,GACvB,eAAe,gBAAsB,GACrC,uBAAuB,+BAAqBD,SAAQ,GAEpD,0BAAsB;AAAA,IAC1B,OAAO,gBAAwB;AAC7B,UAAM,OAAO,KAAK;AAElB,UAAI,CAAC,QAAQ,aAAa,MAAM;AAC9B;AAGF,mBAAa,WAAW,EAAI;AAE5B,UAAM,qBAAqB,UAAM,2BAAY,IAAI,EAAE,WAAW,GAExD,mBAAmB;AAAA,QACvB;AAAA,QACA,SAAS;AAAA,MACX,GAEM,oBAAoB,IAAI,gCAAkB,IAAI,GAC9C,oBAAoB,MAAM,qBAAqB,GAE/C,UAAU,kBACb,kBAAkB,kBAAkB,iBAAiB,EACrD,KAAK,CAAC,oBACL,aAAa,QAAQ,GAErB,WAAW,cAAc,GAElBC,GAAU,kCAAkC,EACpD,EACA,MAAM,CAAC,UAAyB;AAI/B,YAAI,6BAA6B,KAAK;AACpC,uCAAsB,GAEfA,GAAU,iCAAiC;AAGlD,2BAAa,SAAS,KAAK,GAErB,MAAM;AAAA,MAEhB,CAAC;AAEH,YAAM,yBAAAC,QAAQ,QAAQ,SAAS;AAAA,QAC7B,SAAS,CAAC,UAAU;AAAA,QACpB,OAAOD,GAAU,gCAAgC;AAAA,QACjD,SAASA,GAAU,kCAAkC;AAAA,MACvD,CAAC;AAAA,IACH;AAAA,IACA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,MACAA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF,GAEM,eAA8C;AAAA,IAClD,OAAO,MAAM;AACX,QAAE,eAAe;AAGjB,UAAM,cADO,IAAI,SAAS,EAAE,aAAa,EAChB,IAAI,aAAa;AAE1C,aAAO,oBAAoB,WAAW;AAAA,IACxC;AAAA,IACA,CAAC,mBAAmB;AAAA,EACtB;AAEA,SACE,mDAAC;AAAA,IAAK;AAAA,IACJ;AAAA,yDAAC;AAAA,QAAI,WAAW;AAAA,QACd,6DAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAAwD;AAAA,SAD1D;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC,kBAAU,OAAV;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA4C;AAAA,cAE5C,mDAAC,kBAAU,OAAV;AAAA,gBACC,UAAQ;AAAA,gBACR,SAAS;AAAA,gBACT,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,aAAa;AAAA,gBACb,UAAU,aAAa,MAAM;AAAA,iBAN/B;AAAA;AAAA;AAAA;AAAA,qBAOA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,UAEA,mDAAC;AAAA,YAAG,WAAW,aAAa,MAAM;AAAA,YAChC,6DAAC;AAAA,cACC,OAAO,qBAAqB,aAAa,MAAM,KAAK;AAAA,eADtD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UAEA,mDAAC;AAAA,YACC,IAAID;AAAA,YACJ,OAAK;AAAA,YACL,MAAM;AAAA,YACN,SAAS,aAAa,MAAM;AAAA,YAE5B,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAAwD;AAAA,aAN1D;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA;AAAA,SA3BF;AAAA;AAAA;AAAA;AAAA,aA4BA;AAAA;AAAA,KAjCF;AAAA;AAAA;AAAA;AAAA,SAkCA;AAEJ;AAEA,SAAS,6BAA6B,OAAsB;AAC1D,SAAO,MAAM,SAAS;AACxB;AAEA,IAAO,yCAAQ;;;AChJf,IAAAG,kBAA4B,kBAC5BC,yBAAsC,0BAEtCC,gBAIO,0BAEPC,2BAAoB,qCACpBC,qBAAwB;AAGxB;AACA;AAfA,+DAiBM,sCAGD,CAAC,EAAE,YAAY,eAAe,MAAM;AACvC,MAAM,WAAO,4BAAQ,GACf,EAAE,GAAAC,GAAE,QAAI,uCAAe,GACvB,eAAe,gBAAsB,GACrC,OAAO,KAAK,aAEZ,uBAAmB;AAAA,IACvB,OAAO,WAAiE;AACtE,UAAI,CAAC,QAAQ,aAAa,MAAM;AAC9B;AAGF,mBAAa,WAAW,EAAI;AAE5B,UAAM,EAAE,kBAAkB,eAAe,IAAI,QAEvC,sBAAsB,gCAAkB;AAAA,QAC5C;AAAA,QACA;AAAA,MACF,GAEM,uBACJ,wCAA0B,UAAU,mBAAmB,GAEnD,cAAc,kBAAkB,MAEhC,cAAU,2BAAY,IAAI,EAC7B,OAAO,sBAAsB,WAAW,EACxC,KAAK,MAAM;AAEV,mBAAW,EAAO;AAAA,MACpB,CAAC,EACA,MAAM,CAAC,UAAU;AAChB,2BAAa,SAAS,KAAK,GAErB,MAAM;AAAA,MACd,CAAC;AAEH,aAAO,MAAM,yBAAAC,QAAQ,QAAQ,SAAS;AAAA,QACpC,SAASD,GAAU,gCAAgC;AAAA,QACnD,OAAOA,GAAU,+BAA+B;AAAA,QAChD,SAASA,GAAU,8BAA8B;AAAA,MACnD,CAAC;AAAA,IACH;AAAA,IACA,CAAC,gBAAgBA,IAAG,YAAY,MAAM,YAAY;AAAA,EACpD,GAEM,eAA8C;AAAA,IAClD,CAAC,MAAM;AACL,QAAE,eAAe;AAEjB,UAAM,OAAO,IAAI,SAAS,EAAE,aAAa,GACnC,mBAAmB,KAAK,IAAI,kBAAkB,GAC9C,iBAAiB,KAAK,IAAI,gBAAgB;AAEhD,aAAO,iBAAiB,EAAE,kBAAkB,eAAe,CAAC;AAAA,IAC9D;AAAA,IACA,CAAC,gBAAgB;AAAA,EACnB;AAEA,SACE,mDAAC;AAAA,IAAK;AAAA,IACJ;AAAA,yDAAC;AAAA,QAAI,WAAW;AAAA,QACd,6DAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAA2D;AAAA,SAD7D;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC,kBAAU,OAAV;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA4C;AAAA,cAC5C,mDAAC,kBAAU,OAAV;AAAA,gBACC,UAAQ;AAAA,gBACR,cAAc;AAAA,gBACd,MAAM;AAAA,iBAHR;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,UAEA,mDAAC,kBAAU,OAAV;AAAA,YACC;AAAA,iEAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA0C;AAAA,cAC1C,mDAAC,kBAAU,OAAV;AAAA,gBAAgB,MAAM;AAAA,iBAAvB;AAAA;AAAA;AAAA;AAAA,qBAAyC;AAAA,cACzC,mDAAC,kBAAU,MAAV;AAAA,gBACC,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAA8C;AAAA,iBADhD;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,UAEA,mDAAC;AAAA,YAAO,OAAK;AAAA,YAAC,MAAM;AAAA,YAAU,SAAS,aAAa,MAAM;AAAA,YACxD,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAA2D;AAAA,aAD7D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA;AAAA,SApBF;AAAA;AAAA;AAAA;AAAA,aAqBA;AAAA;AAAA,KA1BF;AAAA;AAAA;AAAA;AAAA,SA2BA;AAEJ,GAEO,+BAAQ;;;AChHf,+DAGM,uBAED,CAAC,EAAE,UAAU,MAEd,mDAAC;AAAA,EAAI,WAAW;AAAA,EACd;AAAA,uDAAC;AAAA,MAAe,UAAU;AAAA,OAA1B;AAAA;AAAA;AAAA;AAAA,WAAqC;AAAA,IACrC,mDAAC;AAAA,MAA6B,UAAU;AAAA,OAAxC;AAAA;AAAA;AAAA;AAAA,WAAmD;AAAA;AAAA,GAFrD;AAAA;AAAA;AAAA;AAAA,OAGA,GAIG,+BAAQ;;;AHdf;AAkBA,IAAM,gCAED,CAAC,EAAE,WAAW,MAAM;AACvB,MAAM,WAAO,4BAAQ,GACf,CAACE,wBAAuB,IAAI,uCAA2B,GACvD,CAAC,QAAQ,SAAS,QAAI,0BAAiB,uBAAsB,GAC7D,wBAAoB,wBAAe,GAEnC,6BAAyB,6BAAY,YAAY;AACrD,QAAM,OAAO,MAAM,KAAK;AAExB,IAAI,QACF,MAAMA,yBAAwB,IAAI;AAAA,EAEtC,GAAG,CAACA,0BAAyB,IAAI,CAAC;AAElC,SACE,mDAAC;AAAA,IACC,SAAS,mDAAC;AAAA,MAAM,SAAS;AAAA,OAAhB;AAAA;AAAA;AAAA;AAAA,WAA2C;AAAA,IACpD,QAAQ;AAAA,IACR,WAAW,MAAM,WAAW,EAAK;AAAA,IAEjC;AAAA,yDAAC;AAAA,QAAG,WAAW,WAAW;AAAA,QACxB;AAAA,6DAAC;AAAA,YAAI,WAAW;AAAA,YACd,6DAAC;AAAA,cACC,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAkD;AAAA,eADpD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UAEA,mDAAC;AAAA,YACC,WAAW,MAAM,UAAU,uBAAsB;AAAA,aADnD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA;AAAA,SATF;AAAA;AAAA;AAAA;AAAA,aAUA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW,WAAW;AAAA,QACxB,6DAAC;AAAA,UACC,uBAAuB,MAAM;AAC3B,sBAAU,sBAAqB;AAAA,UACjC;AAAA,UACA,YAAY,CAAC,mBAAmB;AAC9B,8BAAkB,UAAU,gBAC5B,UAAU,4BAA2B;AAAA,UACvC;AAAA,WAPF;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,SATF;AAAA;AAAA;AAAA;AAAA,aAUA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW,WAAW;AAAA,QACxB,6DAAC;AAAA,UAAG,WAAW,kBAAkB;AAAA,UAC9B,WAAC,mBAEE,mDAAC;AAAA,YACC;AAAA,YACA,YAAY,OAAO,iBAAiB;AAClC,cAAI,gBACF,MAAM,uBAAuB,GAG/B,WAAW,YAAY;AAAA,YACzB;AAAA,aARF;AAAA;AAAA;AAAA;AAAA,iBASA;AAAA,WAZN;AAAA;AAAA;AAAA;AAAA,eAeA;AAAA,SAhBF;AAAA;AAAA;AAAA;AAAA,aAiBA;AAAA;AAAA,KA9CF;AAAA;AAAA;AAAA;AAAA,SA+CA;AAEJ,GAEO,wCAAQ;;;AIrFf,IAAAC,gBAAsC,0BACtCC,yBAAsC,0BACtCC,kBAA4B,kBAC5BC,2BAAoB;AAEpB;AACA;AACA;AACA;AATA;AAcA,SAAS,uBACP,OAGA;AACA,MAAM,eAAe,gBAAsB,GACrC,EAAE,GAAAC,GAAE,QAAI,uCAAe,GAEvB,sBAAkB,6BAAY,YAAY;AAC9C,iBAAa,WAAW,EAAI;AAE5B,QAAM,cAAU,qCAAsB,MAAM,IAAI,EAC7C,KAAK,MAAM;AACV,mBAAa,QAAQ;AAAA,IACvB,CAAC,EACA,MAAM,CAAC,UAAU;AAChB,yBAAa,SAAS,KAAK,GAErB,qBAAqB,KAAK;AAAA,IAClC,CAAC;AAEH,UAAM,yBAAAC,QAAQ,QAAQ,SAAS;AAAA,MAC7B,SAASD,GAAU,sCAAsC;AAAA,MACzD,SAASA,GAAU,0CAA0C;AAAA,MAC7D,OAAOA,GAAU,wCAAwC;AAAA,IAC3D,CAAC;AAAA,EACH,GAAG,CAAC,OAAO,cAAcA,EAAC,CAAC;AAE3B,SACE,mDAAC;AAAA,IAAI,WAAW;AAAA,IACd;AAAA,yDAAC;AAAA,QACC,6DAAC;AAAA,UAAM,MAAM;AAAA,UACX;AAAA,+DAAC,cAAM,SAAN;AAAA,cACC,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAmD;AAAA,eADrD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC;AAAA,gBACC,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAA4D;AAAA,iBAD9D;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA;AAAA,WATF;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,SAXF;AAAA;AAAA;AAAA;AAAA,aAYA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW,aAAa,MAAM;AAAA,QAChC,6DAAC;AAAA,UACC,6DAAC;AAAA,YACC,OAAO,qBAAqB,aAAa,MAAM,KAAK;AAAA,aADtD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,WAHF;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,SALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MAEA,mDAAC;AAAA,QACC,6DAAC;AAAA,UACC,WAAW,aAAa,MAAM;AAAA,UAC9B,UACE,mDAAC;AAAA,YACC,SAAS,aAAa,MAAM;AAAA,YAC5B,SAAS;AAAA,YAET,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAA2D;AAAA,aAJ7D;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,UAGF,6DAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,iBAAuB;AAAA,WAXzB;AAAA;AAAA;AAAA;AAAA,eAYA;AAAA,SAbF;AAAA;AAAA;AAAA;AAAA,aAcA;AAAA;AAAA,KArCF;AAAA;AAAA;AAAA;AAAA,SAsCA;AAEJ;AAEA,SAAS,wBAAwB;AAC/B,SACE,mDAAC;AAAA,IAAM,MAAM;AAAA,IACX,6DAAC;AAAA,MACC,6DAAC;AAAA,QAAM,SAAS;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA,aAA4D;AAAA,OAD9D;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,KAHF;AAAA;AAAA;AAAA;AAAA,SAIA;AAEJ;AAEA,IAAO,iCAAQ;;;AL/Ff,+DAYM,gCAED,CAAC,EAAE,WAAW,MAAM;AACvB,MAAM,CAAC,kBAAkB,mBAAmB,QAAI,0BAAS,EAAK,GACxD,EAAE,MAAM,MAAM,OAAO,QAAI,4BAAQ;AAEvC,MAAI,CAAC,QAAQ,WAAW;AACtB,WAAO;AAGT,MAAM,kBAAkB,KAAK;AAE7B,SACE;AAAA,IACE,6DAAC;AAAA,MAAI,WAAW;AAAA,MACd;AAAA,2DAAC;AAAA,UAAM,MAAM;AAAA,UACX;AAAA,+DAAC,cAAM,SAAN;AAAA,cACC,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAkD;AAAA,eADpD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAsD;AAAA,eADxD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA;AAAA,WAPF;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,QAEA,mDAAC;AAAA,UAAG,WAAW;AAAA,UACb,6DAAC;AAAA,YACC,6DAAC;AAAA,cAAgB,SAAS,MAAM,oBAAoB,EAAI;AAAA,eAAxD;AAAA;AAAA;AAAA;AAAA,mBAA2D;AAAA,aAD7D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,WAHF;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,QAEA,mDAAC;AAAA,UACC,WAAW;AAAA,UACX,UAAU,mDAAC;AAAA,YAAuB;AAAA,aAAxB;AAAA;AAAA;AAAA;AAAA,iBAAoC;AAAA,UAE9C,6DAAC;AAAA,YAAG,WAAW;AAAA,YACb,6DAAC;AAAA,cACC,YAAY,CAAC,YAAY;AACvB,2BAAW,OAAO,GAClB,oBAAoB,EAAK;AAAA,cAC3B;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,WAXF;AAAA;AAAA;AAAA;AAAA,eAYA;AAAA;AAAA,OA7BF;AAAA;AAAA;AAAA;AAAA,WA8BA;AAAA,KA/BF;AAAA;AAAA;AAAA;AAAA,SAgCA;AAEJ;AAEA,SAAS,gBACP,OACA;AACA,SACE,mDAAC;AAAA,IAAO,OAAO;AAAA,IAAW,SAAS,MAAM;AAAA,IACvC,6DAAC;AAAA,MAAK,WAAW;AAAA,MACf;AAAA,2DAAC;AAAA,UAAgB,WAAW;AAAA,WAA5B;AAAA;AAAA;AAAA;AAAA,eAAmC;AAAA,QAEnC,mDAAC;AAAA,UACC,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAA+C;AAAA,WADjD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;AAEA,IAAO,wCAAQ;;;AM7Ef,IAAAE,kBAAsC,kBACtCC,yBAAsC,0BACtCC,2BAAoB;AAEpB;AACA;;;ACLA;AAEA,SAAS,sCAAsC;AAC7C,SAAO,cAAc,yBAAyB,MAAM;AACtD;AAEA,IAAO,wCAAQ;;;ADNf,+DASM,2BAED,CAAC,EAAE,UAAU,MAAM;AACtB,MAAM,CAAC,kCAAkC,EAAE,QAAQ,CAAC,IAClD,sCAAoC,GAEhC,CAAC,aAAa,cAAc,QAAI,0BAAS,EAAK,GAC9C,EAAE,GAAAC,GAAE,QAAI,uCAAe,GAEvB,sBAAkB,6BAAY,YAAY;AAC9C,QAAM,UAAU,iCAAiC,EAAE,KAAK,SAAS;AAEjE,WAAO,yBAAAC,QAAQ,QAAQ,SAAS;AAAA,MAC9B,SAASD,GAAU,sBAAsB;AAAA,MACzC,OAAOA,GAAU,yBAAyB;AAAA,MAC1C,SAASA,GAAU,2BAA2B;AAAA,IAChD,CAAC;AAAA,EACH,GAAG,CAAC,kCAAkC,WAAWA,EAAC,CAAC;AAEnD,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,6DAAC;AAAA,UACC,OAAO;AAAA,UACP,SAAS;AAAA,UACT,SAAS,MAAM,eAAe,EAAI;AAAA,UAElC,6DAAC;AAAA,YAAK,WAAW;AAAA,YACf,6DAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAAiD;AAAA,aADnD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,WAPF;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,SATF;AAAA;AAAA;AAAA;AAAA,aAUA;AAAA,MAEA,mDAAC;AAAA,QACC,SAAS,mDAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAAsC;AAAA,QAC/C,QAAQ;AAAA,QACR,WAAW;AAAA,QAEX,6DAAC;AAAA,UAAI,WAAW;AAAA,UACd;AAAA,+DAAC;AAAA,cACC,6DAAC;AAAA,gBACC,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAoD;AAAA,iBADtD;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,YAEA,mDAAC;AAAA,cACC,OAAO;AAAA,cACP,OAAK;AAAA,cACL;AAAA,cACA,SAAS;AAAA,cAET,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAwD;AAAA,eAN1D;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA;AAAA,WAdF;AAAA;AAAA;AAAA;AAAA,eAeA;AAAA,SApBF;AAAA;AAAA;AAAA;AAAA,aAqBA;AAAA;AAAA,KAlCF;AAAA;AAAA;AAAA;AAAA,SAmCA;AAEJ,GAEO,mCAAQ;;;AEpEf,IAAAE,kBAA4B,kBAC5BC,yBAAsB;AAEtB;AAHA,+DAMM,wBAGD,CAAC,EAAE,QAAQ,UAAU,MAAM;AAC9B,MAAM,gBAAY,6BAAY,MAAM;AAClC,cAAU,EAAK;AAAA,EACjB,GAAG,CAAC,SAAS,CAAC;AAEd,SACE,mDAAC;AAAA,IACC,SAAS,mDAAC;AAAA,MAAM,SAAS;AAAA,OAAhB;AAAA;AAAA;AAAA;AAAA,WAAuC;AAAA,IAChD;AAAA,IACA;AAAA,IACA,aAAa;AAAA,IAEb;AAAA,yDAAC;AAAA,QAAI,WAAW;AAAA,QACd,6DAAC;AAAA,UACC,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAAkD;AAAA,WADpD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QAAqB;AAAA,SAAtB;AAAA;AAAA;AAAA;AAAA,aAA4C;AAAA;AAAA,KAZ9C;AAAA;AAAA;AAAA;AAAA,SAaA;AAEJ,GAEO,gCAAQ;;;AftBf;AACA;AACA;AAGA;AAfA,+DAiBaC,SAAqB,OACzB;AAAA,EACL,OAAO;AACT,IAGI,4BAA4B,MAAM;AAvBxC;AAwBE,MAAM,OAAO,eAAe,GAEtBC,mBAAc;AAAA,IAClB,MAAG;AA3BP,UAAAC;AA2BU,eAAAA,MAAA,6BAAM,SAAN,gBAAAA,IAAY,gBAAe,CAAC;AAAA;AAAA,IAClC,EAAC,kCAAM,SAAN,mBAAY,WAAW;AAAA,EAC1B,GAEM,CAAC,sBAAsB,uBAAuB,QAAI,0BAAS,EAAK,GAEhE,kBAAc,6BAAY,CAAC,YAAqB;AACpD,IAAI,WAIF,OAAO,SAAS,OAAO;AAAA,EAE3B,GAAG,CAAC,CAAC;AAEL,SACE;AAAA,IACE,6DAAC;AAAA,MAAI,WAAW;AAAA,MACd;AAAA,2DAAC;AAAA,UACC,SAAS,mDAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAAmD;AAAA,UAC5D,YACE,mDAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAA6D;AAAA,UAG/D,6DAAC,wCAAD;AAAA;AAAA;AAAA;AAAA,iBAA4B;AAAA,WAN9B;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,QAGA,mDAAC;AAAA,UAAG,WAAW,sBAAc,KAAK;AAAA,UAChC,6DAAC;AAAA,YACC,SAAS,mDAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAA2C;AAAA,YACpD,YAAY,mDAAC;AAAA,cAAM,SAAS;AAAA,eAAhB;AAAA;AAAA;AAAA;AAAA,mBAAqD;AAAA,YAGjE;AAAA,iEAAC;AAAA,gBAAG,WAAW,CAACD;AAAA,gBACd,6DAAC;AAAA,kBAA8B,YAAY;AAAA,mBAA3C;AAAA;AAAA;AAAA;AAAA,uBAAwD;AAAA,iBAD1D;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cAGA,mDAAC;AAAA,gBAAG,WAAWA;AAAA,gBACb,6DAAC;AAAA,kBAAI,WAAW;AAAA,kBACd;AAAA,uEAAC,6BAAD;AAAA;AAAA;AAAA;AAAA,2BAAyB;AAAA,oBAEzB,mDAAC;AAAA,sBACC,WAAW,YAAY;AAIrB,gDAAwB,EAAI;AAAA,sBAC9B;AAAA,uBANF;AAAA;AAAA;AAAA;AAAA,2BAOA;AAAA;AAAA,mBAVF;AAAA;AAAA;AAAA;AAAA,uBAWA;AAAA,iBAZF;AAAA;AAAA;AAAA;AAAA,qBAaA;AAAA,cAEA,mDAAC;AAAA,gBAAG,WAAW;AAAA,gBACb,6DAAC;AAAA,kBACC,QAAQ;AAAA,kBACR,WAAW,YAAY;AACrB,4CAAwB,EAAK,GAK7B,MAAM,YAAY,EAAI;AAAA,kBACxB;AAAA,mBATF;AAAA;AAAA;AAAA;AAAA,uBAUA;AAAA,iBAXF;AAAA;AAAA;AAAA;AAAA,qBAYA;AAAA;AAAA,aArCF;AAAA;AAAA;AAAA;AAAA,iBAsCA;AAAA,WAvCF;AAAA;AAAA;AAAA;AAAA,eAwCA;AAAA;AAAA,OAnDF;AAAA;AAAA;AAAA;AAAA,WAoDA;AAAA,KArDF;AAAA;AAAA;AAAA;AAAA,SAsDA;AAEJ,GAEO,yBAAQ;AAEf,SAAS,0BAA0B;AACjC,SACE,mDAAC;AAAA,IAAM,MAAM;AAAA,IAAW,WAAW;AAAA,IACjC;AAAA,yDAAC;AAAA,QAAQ,MAAM;AAAA,QACb,6DAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAAkD;AAAA,SADpD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QACC,6DAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAAwD;AAAA,SAD1D;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,KAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEJ;;;AgBnHA;AAAA;AAAA;AAAA,cAAAE;AAAA;AACA,IAAAC,qBAAwB,sBAExBC,yBAAsB,0BACtBC,gBAAkC;AAElC;AACA;;;ACPA,IAAAC,kBAAiD,kBAGjDC,gBAIO,0BAEPC,2BAAkB,qCAClBC,yBAAsC,0BACtCC,0BAAwB;AAExB;AAEA;AACA;AAKA;AArBA,+DAwBM,qBAAgD,CAAC,EAAE,KAAK,MAAM;AAxBpE;AAyBE,MAAM,EAAE,GAAAC,GAAE,QAAI,uCAAe,GACvB,CAACC,wBAAuB,IAAI,uCAA2B,GACvD,eAAe,gBAAsB,GAErC,CAAC,sBAAsB,uBAAuB,QAClD,0BAAkC,GAE9B,EAAE,UAAU,cAAc,OAAO,WAAW,UAAU,QAAI,iCAAQ;AAAA,IACtE,eAAe;AAAA,MACb,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,gBAAgB;AAAA,IAClB;AAAA,EACF,CAAC,GAEK,SAAS,UAAU,QAEnB,yBAAyB,SAAS,mBAAmB;AAAA,IACzD,OAAO;AAAA,IACP,UAAU;AAAA,IACV,WAAW;AAAA,MACT,OAAO;AAAA,MACP,SAASD,GAAU,0BAA0B;AAAA,IAC/C;AAAA,EACF,CAAC,GAEK,qBAAqB,SAAS,eAAe;AAAA,IACjD,OAAO;AAAA,IACP,UAAU;AAAA,IACV,WAAW;AAAA,MACT,OAAO;AAAA,MACP,SAASA,GAAU,0BAA0B;AAAA,IAC/C;AAAA,IACA,UAAU,CAAC,UAAU;AAEnB,UAAI,UAAU,UAAU,iBAAiB;AACvC,eAAOA,GAAU,4BAA4B;AAAA,IAEjD;AAAA,EACF,CAAC,GAEK,wBAAwB,SAAS,kBAAkB;AAAA,IACvD,OAAO;AAAA,IACP,UAAU;AAAA,IACV,WAAW;AAAA,MACT,OAAO;AAAA,MACP,SAASA,GAAU,6BAA6B;AAAA,IAClD;AAAA,IACA,UAAU,CAAC,UAAU;AAEnB,UAAI,UAAU,UAAU,aAAa;AACnC,eAAOA,GAAU,6BAA6B;AAAA,IAElD;AAAA,EACF,CAAC,GAEK,yBAAqB;AAAA,IACzB,CAAC,OAAe,oBAA4B;AAC1C,UAAM,sBAAsB,gCAAkB;AAAA,QAC5C;AAAA,QACA;AAAA,MACF;AAGA,iBAAO,4CAA6B,MAAM,mBAAmB,EAAE;AAAA,QAC7D,CAAC,UAAU;AAGT,cAAI,mBAAmB,KAAK;AAC1B,oCAAwB,KAAK;AAAA;AAI7B,gCAAa,SAAS,qBAAqB,KAAK,CAAC,GAC1C,QAAQ,OAAO,KAAK;AAAA,QAE/B;AAAA,MACF;AAAA,IACF;AAAA,IACA,CAAC,MAAM,yBAAyB,YAAY;AAAA,EAC9C,GAEM,mCAA+B;AAAA,IACnC,OAAO,YAA4B,gBAAwB;AACzD,UAAM,UAAU,IAAI,QAAc,OAAOE,UAAS,WAAW;AAC3D,YAAI;AAEF,oBAAM,8BAAe,MAAM,WAAW,GAGtC,MAAMD,yBAAwB,WAAW,IAAI,GAG7C,aAAa,QAAQ,GAErBC,SAAQ;AAAA,QACV,SAAS,GAAP;AACA,iBAAO,CAAC;AAAA,QACV;AAAA,MACF,CAAC;AAED,aAAO,MAAM,yBAAAC,QAAM,QAAQ,SAAS;AAAA,QAClC,SAASH,GAAU,+BAA+B;AAAA,QAClD,OAAOA,GAAU,6BAA6B;AAAA,QAC9C,SAASA,GAAU,+BAA+B;AAAA,MACpD,CAAC;AAAA,IACH;AAAA,IACA,CAAC,cAAcC,0BAAyBD,IAAG,IAAI;AAAA,EACjD,GAEM,6BAAyB;AAAA,IAC7B,OAAOI,OAAY,iBAAyB,gBAAwB;AAClE,UAAM,QAAQA,MAAK;AAInB,UAAI,CAAC;AACH,eAAO,QAAQ,OAAOJ,GAAE,8BAA8B,CAAC;AAGzD,UAAI;AAEF,YAAM,aAAa,MAAM,mBAAmB,OAAO,eAAe;AAKlE,eAAK,aAIE,MAAM,6BAA6B,YAAY,WAAW,IAH/D;AAAA,MAIJ,SAAS,GAAP;AACA,eAAO,QAAQ,OAAO,CAAC;AAAA,MACzB;AAAA,IACF;AAAA,IACA,CAAC,oBAAoB,8BAA8BA,EAAC;AAAA,EACtD,GAEM,eAAW;AAAA,IACf,OAAO,WAA6D;AAClE,UAAM,EAAE,aAAa,gBAAgB,IAAI;AAEzC,0BAAa,WAAW,EAAI,GAErB,uBAAuB,MAAM,iBAAiB,WAAW,EAAE;AAAA,QAChE,CAAC,OACC,aAAa,SAASA,GAAE,6BAA6B,CAAC,GAE/C;AAAA,MAEX;AAAA,IACF;AAAA,IACA,CAACA,IAAG,MAAM,cAAc,sBAAsB;AAAA,EAChD;AAGA,wCAAU,MAAM;AACd,IAAI,aAAa,MAAM,YACrB,MAAM,GACN,aAAa,WAAW;AAAA,EAE5B,GAAG,CAAC,OAAO,YAAY,CAAC,GAGtB;AAAA,IACE;AAAA,yDAAC;AAAA,QAAK,WAAS;AAAA,QAAwB,UAAU,aAAa,QAAQ;AAAA,QACpE,6DAAC;AAAA,UAAI,WAAW;AAAA,UACd;AAAA,+DAAC;AAAA,cAAG,WAAW,aAAa,MAAM;AAAA,cAChC,6DAAC;AAAA,gBAAI,WAAS;AAAA,gBACZ,6DAAC;AAAA,kBAAM,MAAM;AAAA,kBAAU,uBAAa,MAAM;AAAA,mBAA1C;AAAA;AAAA;AAAA;AAAA,uBAA0D;AAAA,iBAD5D;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC,kBAAU,OAAV;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAA2C;AAAA,kBAE3C,mDAAC,kBAAU,OAAV;AAAA,oBACC,WAAS;AAAA,oBACT,UAAQ;AAAA,oBACR,MAAM;AAAA,oBACN,MAAM,uBAAuB;AAAA,oBAC7B,UAAU,uBAAuB;AAAA,oBACjC,UAAU,uBAAuB;AAAA,oBACjC,QAAQ,uBAAuB;AAAA,qBAPjC;AAAA;AAAA;AAAA;AAAA,yBAQA;AAAA;AAAA,iBAXF;AAAA;AAAA;AAAA;AAAA,qBAYA;AAAA,eAbF;AAAA;AAAA;AAAA;AAAA,mBAcA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC,kBAAU,OAAV;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAAuC;AAAA,kBAEvC,mDAAC,kBAAU,OAAV;AAAA,oBACC,WAAS;AAAA,oBACT,UAAQ;AAAA,oBACR,MAAM;AAAA,oBACN,MAAM,mBAAmB;AAAA,oBACzB,UAAU,mBAAmB;AAAA,oBAC7B,UAAU,mBAAmB;AAAA,oBAC7B,QAAQ,mBAAmB;AAAA,qBAP7B;AAAA;AAAA;AAAA;AAAA,yBAQA;AAAA,kBAEA,mDAAC,kBAAU,OAAV;AAAA,oBACC,WAAS;AAAA,oBACT,QAAO,YAAO,gBAAP,mBAAoB;AAAA,qBAF7B;AAAA;AAAA;AAAA;AAAA,yBAGA;AAAA;AAAA,iBAhBF;AAAA;AAAA;AAAA;AAAA,qBAiBA;AAAA,eAlBF;AAAA;AAAA;AAAA;AAAA,mBAmBA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC,kBAAU,OAAV;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAA0C;AAAA,kBAE1C,mDAAC,kBAAU,OAAV;AAAA,oBACC,WAAS;AAAA,oBACT,UAAQ;AAAA,oBACR,MAAM;AAAA,oBACN,MAAM,sBAAsB;AAAA,oBAC5B,UAAU,sBAAsB;AAAA,oBAChC,UAAU,sBAAsB;AAAA,oBAChC,QAAQ,sBAAsB;AAAA,qBAPhC;AAAA;AAAA;AAAA;AAAA,yBAQA;AAAA,kBAEA,mDAAC,kBAAU,OAAV;AAAA,oBACC,WAAS;AAAA,oBACT,QAAO,YAAO,mBAAP,mBAAuB;AAAA,qBAFhC;AAAA;AAAA;AAAA;AAAA,yBAGA;AAAA;AAAA,iBAhBF;AAAA;AAAA;AAAA;AAAA,qBAiBA;AAAA,eAlBF;AAAA;AAAA;AAAA;AAAA,mBAmBA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC;AAAA,gBACC,WAAW;AAAA,gBACX,SAAS,aAAa,MAAM;AAAA,gBAE5B,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAqD;AAAA,iBAJvD;AAAA;AAAA;AAAA;AAAA,qBAKA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA;AAAA,WAxEF;AAAA;AAAA;AAAA;AAAA,eAyEA;AAAA,SA1EF;AAAA;AAAA;AAAA;AAAA,aA2EA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW;AAAA,QACZ,WAAC,UACA,mDAAC;AAAA,UACC;AAAA,UACA,QAAQ;AAAA,UACR,WAAW,MAAM,wBAAwB,MAAS;AAAA,UAClD,WAAW,OAAO,eAAe;AAC/B,kBAAM;AAAA,cACJ;AAAA,cACA,UAAU,aAAa;AAAA,YACzB,GAEA,wBAAwB,MAAS;AAAA,UACnC;AAAA,WAXF;AAAA;AAAA;AAAA;AAAA,eAYA;AAAA,SAdJ;AAAA;AAAA;AAAA;AAAA,aAgBA;AAAA;AAAA,KA9FF;AAAA;AAAA;AAAA;AAAA,SA+FA;AAEJ,GAEO,6BAAQ;;;ADjSf,+DAYaK,SAAqB,OACzB;AAAA,EACL,OAAO;AACT,IAGI,0BAA0B,MAAM;AACpC,MAAM,EAAE,MAAM,KAAK,QAAI,4BAAQ;AAE/B,MAAI,CAAC;AACH,WAAO;AAGT,MAAM,oBAAoB,KAAK,aAAa;AAAA,IAC1C,CAAC,SAAS,KAAK,eAAe,gCAAkB;AAAA,EAClD;AAEA,SACE,mDAAC;AAAA,IACC,SAAS,mDAAC;AAAA,MAAM,SAAS;AAAA,OAAhB;AAAA;AAAA;AAAA;AAAA,WAAuC;AAAA,IAChD,YAAY,mDAAC;AAAA,MAAM,SAAS;AAAA,OAAhB;AAAA;AAAA;AAAA;AAAA,WAAiD;AAAA,IAE7D,6DAAC;AAAA,MACC,WAAW;AAAA,MACX,UAAU,mDAAC,mCAAD;AAAA;AAAA;AAAA;AAAA,aAA+B;AAAA,MAEzC,6DAAC;AAAA,QAAmB;AAAA,SAApB;AAAA;AAAA;AAAA;AAAA,aAAgC;AAAA,OAJlC;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,KATF;AAAA;AAAA;AAAA;AAAA,SAUA;AAEJ;AAEA,SAAS,gCAAgC;AACvC,SACE,mDAAC;AAAA,IAAM,MAAM;AAAA,IACX,6DAAC;AAAA,MAAM,SAAS;AAAA,OAAhB;AAAA;AAAA;AAAA;AAAA,WAAgD;AAAA,KADlD;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEA,IAAO,mBAAQ;;;AEpDf;AAAA;AAAA;AAAA,cAAAC;AAAA;AAAA,IAAAC,gBAAkC,0BAClCC,yBAAsB,0BAEtBC,qBAAwB;AAExB;AACA;;;ACJA,IAAAC,gBAIO,0BAEPC,kBAAiD,kBACjDC,2BAAkB,qCAClBC,yBAAsC,0BACtCC,0BAAwB;AAExB;AAEA;AACA;AAIA;AApBA,+DAuBM,kBAA4C,CAAC,EAAE,KAAK,MAAM;AAC9D,MAAM,CAAC,cAAc,eAAe,QAAI,0BAAwB,GAC1D,EAAE,GAAAC,GAAE,QAAI,uCAAe,GACvB,CAACC,wBAAuB,IAAI,uCAA2B,GACvD,eAAe,gBAAsB,GAErC,CAAC,sBAAsB,uBAAuB,QAClD,0BAAkC,GAE9B,gCAA4B;AAAA,IAChC,CAAC,YAA4B,UAAkB;AAE7C,UAAM,cAAU,2BAAY,WAAW,MAAM,KAAK,EAC/C,KAAK,MACGA,yBAAwB,WAAW,IAAI,CAC/C,EACA,KAAK,MAAM;AACV,wBAAgB,MAAS;AAAA,MAC3B,CAAC,EACA,MAAM,CAAC,OACN,gBAAgBD,GAAU,0BAA0B,CAAC,GAE9C,EACR;AAEH,aAAO,yBAAAE,QAAM,QAAQ,SAAS;AAAA,QAC5B,SAASF,GAAU,4BAA4B;AAAA,QAC/C,SAASA,GAAU,4BAA4B;AAAA,QAC/C,OAAOA,GAAU,0BAA0B;AAAA,MAC7C,CAAC;AAAA,IACH;AAAA,IACA,CAACC,0BAAyB,iBAAiBD,EAAC;AAAA,EAC9C,GAEM,eAAe,6BAAM,OAErB,EAAE,UAAU,cAAc,WAAW,MAAM,QAAI,iCAAQ;AAAA,IAC3D,eAAe;AAAA,MACb,OAAO;AAAA,MACP,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF,CAAC,GAEK,eAAW;AAAA,IACf,OAAO,WAID;AACJ,UAAM,EAAE,OAAO,aAAa,SAAS,IAAI;AAEzC,UAAI,UAAU,aAAa;AACzB,YAAM,UAAUA,GAAE,2BAA2B;AAC7C,wBAAgB,OAAO;AAEvB;AAAA,MACF;AAEA,UAAI,UAAU,cAAc;AAC1B,YAAM,UAAUA,GAAE,2BAA2B;AAC7C,wBAAgB,OAAO;AAEvB;AAAA,MACF;AAEA,mBAAa,WAAW,EAAI;AAI5B,UAAM,sBAAsB,gCAAkB;AAAA,QAC5C;AAAA,QACA;AAAA,MACF,GAIM,aAAa,UAFH,4CAA6B,MAAM,mBAAmB,EAErC,MAAM,CAAC,UAAU;AAGhD,YAAI,mBAAmB,KAAK;AAC1B,kCAAwB,KAAK;AAAA,aACxB;AAGL,cAAM,UAAUA,GAAU,0BAA0B;AACpD,0BAAgB,OAAO;AAAA,QACzB;AAEA,qBAAa,SAAS,KAAK;AAAA,MAC7B,CAAC;AAID,UAAI,EAAC;AAKL,eAAO,MAAM,0BAA0B,YAAY,KAAK,EAAE,QAAQ,MAAM;AACtE,uBAAa,QAAQ;AAAA,QACvB,CAAC;AAAA,IACH;AAAA,IACA,CAAC,cAAcA,IAAG,cAAc,2BAA2B,IAAI;AAAA,EACjE,GAEM,eAAe,SAAS,SAAS;AAAA,IACrC,OAAO;AAAA,IACP,UAAU;AAAA,EACZ,CAAC,GAEK,qBAAqB,SAAS,eAAe;AAAA,IACjD,OAAO;AAAA,IACP,UAAU;AAAA,EACZ,CAAC,GAEK,kBAAkB,SAAS,YAAY;AAAA,IAC3C,OAAO;AAAA,IACP,UAAU;AAAA,EACZ,CAAC;AAGD,wCAAU,MAAM;AACd,IAAI,aAAa,MAAM,YACrB,MAAM,GACN,aAAa,WAAW;AAAA,EAE5B,GAAG,CAAC,OAAO,YAAY,CAAC,GAGtB;AAAA,IACE;AAAA,yDAAC;AAAA,QAAK,WAAS;AAAA,QAAqB,UAAU,aAAa,QAAQ;AAAA,QACjE,6DAAC;AAAA,UAAI,WAAW;AAAA,UACd;AAAA,+DAAC;AAAA,cAAG,WAAW;AAAA,cACb,6DAAC;AAAA,gBAAI,WAAS;AAAA,gBACZ,6DAAC;AAAA,kBAAM,MAAM;AAAA,kBAAU;AAAA,mBAAvB;AAAA;AAAA;AAAA;AAAA,uBAAoC;AAAA,iBADtC;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC,kBAAU,OAAV;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAAoC;AAAA,kBAEpC,mDAAC,kBAAU,OAAV;AAAA,oBACC,WAAS;AAAA,oBACT,MAAM,aAAa;AAAA,oBACnB,UAAU,aAAa;AAAA,oBACvB,QAAQ,aAAa;AAAA,oBACrB,UAAU,aAAa;AAAA,oBACvB,UAAQ;AAAA,oBACR,MAAM;AAAA,oBACN,aAAa;AAAA,qBARf;AAAA;AAAA;AAAA;AAAA,yBASA;AAAA;AAAA,iBAZF;AAAA;AAAA;AAAA;AAAA,qBAaA;AAAA,eAdF;AAAA;AAAA;AAAA;AAAA,mBAeA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC,kBAAU,OAAV;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAAuC;AAAA,kBAEvC,mDAAC,kBAAU,OAAV;AAAA,oBACC,WAAS;AAAA,oBACT,MAAM,mBAAmB;AAAA,oBACzB,UAAU,mBAAmB;AAAA,oBAC7B,QAAQ,mBAAmB;AAAA,oBAC3B,UAAU,mBAAmB;AAAA,oBAC7B,UAAQ;AAAA,oBACR,MAAM;AAAA,qBAPR;AAAA;AAAA;AAAA;AAAA,yBAQA;AAAA;AAAA,iBAXF;AAAA;AAAA;AAAA;AAAA,qBAYA;AAAA,eAbF;AAAA;AAAA;AAAA;AAAA,mBAcA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC,kBAAU,OAAV;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAAwC;AAAA,kBAExC,mDAAC,kBAAU,OAAV;AAAA,oBACC,WAAS;AAAA,oBACT,UAAQ;AAAA,oBACR,MAAM;AAAA,oBACN,MAAM,gBAAgB;AAAA,oBACtB,UAAU,gBAAgB;AAAA,oBAC1B,QAAQ,gBAAgB;AAAA,oBACxB,UAAU,gBAAgB;AAAA,oBAC1B,aAAa;AAAA,qBARf;AAAA;AAAA;AAAA;AAAA,yBASA;AAAA;AAAA,iBAZF;AAAA;AAAA;AAAA;AAAA,qBAaA;AAAA,eAdF;AAAA;AAAA;AAAA;AAAA,mBAeA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC;AAAA,gBACC,WAAW;AAAA,gBACX,SAAS,aAAa,MAAM;AAAA,gBAE5B,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAkD;AAAA,iBAJpD;AAAA;AAAA;AAAA;AAAA,qBAKA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA;AAAA,WAhEF;AAAA;AAAA;AAAA;AAAA,eAiEA;AAAA,SAlEF;AAAA;AAAA;AAAA;AAAA,aAmEA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW;AAAA,QACZ,WAAC,UACA,mDAAC;AAAA,UACC;AAAA,UACA,QAAQ;AAAA,UACR,WAAW,MAAM,wBAAwB,MAAS;AAAA,UAClD,WAAW,OAAO,eAAe;AAC/B,kBAAM,0BAA0B,YAAY,UAAU,OAAO,CAAC,GAE9D,wBAAwB,MAAS,GACjC,aAAa,QAAQ;AAAA,UACvB;AAAA,WATF;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,SAZJ;AAAA;AAAA;AAAA;AAAA,aAcA;AAAA;AAAA,KApFF;AAAA;AAAA;AAAA;AAAA,SAqFA;AAEJ,GAEO,0BAAQ;;;ADlPf,+DAWaG,SAAqB,OACzB;AAAA,EACL,OAAO;AACT,IAGI,uBAAuB,MAAM;AACjC,MAAM,EAAE,MAAM,KAAK,QAAI,4BAAQ;AAE/B,MAAI,CAAC;AACH,WAAO;AAGT,MAAM,iBAAiB,KAAK,aAAa;AAAA,IACvC,CAAC,SAAS,KAAK,eAAe,gCAAkB;AAAA,EAClD;AAEA,SACE;AAAA,IACE,6DAAC;AAAA,MACC,SAAS,mDAAC;AAAA,QAAM,SAAS;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA,aAAoC;AAAA,MAC7C,YAAY,mDAAC;AAAA,QAAM,SAAS;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA,aAAiD;AAAA,MAE7D,6DAAC;AAAA,QACC,WAAW;AAAA,QACX,UAAU,mDAAC,gCAAD;AAAA;AAAA;AAAA;AAAA,eAA4B;AAAA,QAEtC,6DAAC;AAAA,UAAgB;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA,eAA6B;AAAA,SAJ/B;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,OATF;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,KAXF;AAAA;AAAA;AAAA;AAAA,SAYA;AAEJ;AAEA,SAAS,6BAA6B;AACpC,SACE,mDAAC;AAAA,IAAM,MAAM;AAAA,IACX,6DAAC;AAAA,MAAM,SAAS;AAAA,OAAhB;AAAA;AAAA;AAAA;AAAA,WAA6C;AAAA,KAD/C;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEA,IAAO,gBAAQ;;;AErDf,IAAAC,mBAAA;AAAA,SAAAA,kBAAA;AAAA,iBAAAC;AAAA,EAAA,YAAAC;AAAA;AACA,IAAAC,kBAAwC,kBACxCC,yBAAsB,0BAEtBC,qBAAwB;AAGxB;;;ACPA,IAAAC,kBAAiD,kBACjDC,qBAA2B,sBAE3BC,yBAAsC,0BACtCC,2BAAoB,qCACpBC,2BAAwB,4BAIxBC,kBAKO,6BAEPC,gBAA0C;AAI1C;;;ACpBA,IAAAC,kBAA4B,kBAC5BC,qBAAwB,sBACxBC,gBAA8B;AAC9B;AAOe,SAAR,mBAAoC;AACzC,MAAM,EAAE,MAAM,KAAK,QAAI,4BAAQ,GACzB,EAAE,OAAO,YAAY,SAAS,SAAS,IAAI,gBAAsB;AAqBvE,SAAO,KAnBuB;AAAA,IAC5B,OAAO,SAA6B;AAClC,UAAI,QAAQ,MAAM;AAChB,mBAAW,EAAI;AAEf,YAAI;AACF,oBAAM,6BAAc,MAAM,IAAI,GAE9B,QAAQ;AAAA,QACV,SAAS,GAAP;AACA,0BAAS,0BAA0B,GAE5B,QAAQ,OAAO,CAAC;AAAA,QACzB;AAAA,MACF;AAAA,IACF;AAAA,IACA,CAAC,SAAS,UAAU,YAAY,IAAI;AAAA,EACtC,GAE+B,KAAK;AAItC;;;ADXA;AAGA;AACA;AA9BA;AAsCA,SAAS,kBAAkB;AAAA,EACzB;AAAA,EACA;AACF,GAGG;AACD,MAAM,CAACC,gBAAe,EAAE,QAAQ,CAAC,IAAI,iBAAiB,GAEhD,CAAC,0BAA0B,2BAA2B,QAC1D,0BAAS,EAAK,GAEV,cAAU,+BAAW,GACrB,EAAE,GAAAC,GAAE,QAAI,uCAAe,GAEvB,mBAAkB,6BAAM,aAAY,IACpC,sBAAqB,6BAAM,gBAAe,IAC1C,sBAAqB,6BAAM,gBAAe,IAE1C,EAAE,UAAU,cAAc,MAAM,QAAI,kCAAQ;AAAA,IAChD,eAAe;AAAA,MACb,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF,CAAC,GAEK,CAAC,eAAe,gBAAgB,QAAI,0BAAS,EAAK,GAElD,sBAAkB,6BAAY,MAAM;AACxC,qBAAiB,EAAI;AAAA,EACvB,GAAG,CAAC,CAAC,GAEC,WAAW,OAAO,aAAqB,cAA2B;AACtE,QAAM,YAAY,uCAAW,MAEvB,WAAW,YACb,MAAM,uBAAuB,SAAS,WAAW,KAAK,GAAG,IACzD,iBAEE,kBAAkB,iBAAiB,CAAC,WAEpC,OAAO;AAAA,MACX;AAAA,MACA,UAAU,kBAAkB,KAAK;AAAA,IACnC;AAGA,QAAI,mBAAmB;AACrB,UAAI;AACF,kBAAM,kCAAa,qBAAI,SAAS,eAAe,CAAC;AAAA,MAClD,QAAE;AAAA,MAEF;AAGF,QAAM,UAAUD,eAAc,IAAI,EAAE,KAAK,MAAM;AAC7C,eAAS,IAAI;AAAA,IACf,CAAC;AAED,WAAO,yBAAAE,QAAQ,QAAQ,SAAS;AAAA,MAC9B,SAASD,GAAU,8BAA8B;AAAA,MACjD,OAAOA,GAAU,4BAA4B;AAAA,MAC7C,SAASA,GAAU,8BAA8B;AAAA,IACnD,CAAC;AAAA,EACH,GAEM,qBAAqB,SAAS,eAAe;AAAA,IACjD,OAAO;AAAA,EACT,CAAC,GAEK,kBAAkB,SAAS,UAAU;AAE3C,wCAAU,MAAM;AACd,UAAM;AAAA,MACJ,aAAa,sBAAsB;AAAA,MACnC,UAAU,mBAAmB;AAAA,IAC/B,CAAC;AAAA,EACH,GAAG,CAAC,oBAAoB,iBAAiB,KAAK,CAAC,GAG7C;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,WAAS;AAAA,QACT,UAAU,aAAa,CAAC,UACf,SAAS,MAAM,aAAa,aAAa,MAAM,QAAQ,CAAC,CAChE;AAAA,QAED,6DAAC;AAAA,UAAI,WAAW;AAAA,UACd;AAAA,+DAAC;AAAA,cACC,6DAAC,kBAAU,OAAV;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAA4C;AAAA,kBAE5C,mDAAC,kBAAU,OAAV;AAAA,oBACC,UAAU,mBAAmB;AAAA,oBAC7B,UAAU,mBAAmB;AAAA,oBAC7B,QAAQ,mBAAmB;AAAA,oBAC3B,MAAM,mBAAmB;AAAA,oBACzB,WAAS;AAAA,oBACT,WAAW;AAAA,oBACX,aAAa;AAAA,qBAPf;AAAA;AAAA;AAAA;AAAA,yBAQA;AAAA;AAAA,iBAXF;AAAA;AAAA;AAAA;AAAA,qBAYA;AAAA,eAbF;AAAA;AAAA;AAAA;AAAA,mBAcA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC,kBAAU,OAAV;AAAA,gBACC;AAAA,qEAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAA+C;AAAA,kBAE/C,mDAAC;AAAA,oBACC,UAAU;AAAA,oBACV,SAAS;AAAA,oBACT,MAAM,gBAAgB;AAAA,oBACtB,OAAO;AAAA,oBACP,UAAU,gBAAgB;AAAA,oBAC1B,QAAQ,gBAAgB;AAAA,oBACxB,UAAU,gBAAgB;AAAA,oBAE1B,6DAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAA0C;AAAA,qBAT5C;AAAA;AAAA;AAAA;AAAA,yBAUA;AAAA;AAAA,iBAbF;AAAA;AAAA;AAAA;AAAA,qBAcA;AAAA,eAfF;AAAA;AAAA;AAAA;AAAA,mBAgBA;AAAA,YAEA,mDAAC;AAAA,cACC;AAAA,mEAAC,kBAAU,OAAV;AAAA,kBACC;AAAA,uEAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAAsC;AAAA,oBAEtC,mDAAC,kBAAU,OAAV;AAAA,sBAAgB,UAAQ;AAAA,sBAAC,OAAO,KAAK,SAAS;AAAA,uBAA/C;AAAA;AAAA;AAAA;AAAA,2BAAmD;AAAA;AAAA,mBAHrD;AAAA;AAAA;AAAA;AAAA,uBAIA;AAAA,gBAEA,mDAAC;AAAA,kBAAG,WAAW,KAAK;AAAA,kBAClB,6DAAC;AAAA,oBACC,6DAAC;AAAA,sBACC,MAAM;AAAA,sBACN,OAAO;AAAA,sBACP,MAAM;AAAA,sBACN,MAAM,sBAAc,MAAM,SAAS;AAAA,sBAEnC,6DAAC;AAAA,wBAAK,WAAW;AAAA,wBACf,6DAAC;AAAA,0BAAM,SAAS;AAAA,2BAAhB;AAAA;AAAA;AAAA;AAAA,+BAAkD;AAAA,yBADpD;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA,uBARF;AAAA;AAAA;AAAA;AAAA,2BASA;AAAA,qBAVF;AAAA;AAAA;AAAA;AAAA,yBAWA;AAAA,mBAZF;AAAA;AAAA;AAAA;AAAA,uBAaA;AAAA,gBAEA,mDAAC;AAAA,kBAAG,WAAW,CAAC,KAAK;AAAA,kBACnB,6DAAC;AAAA,oBACC,6DAAC;AAAA,sBACC,MAAM;AAAA,sBACN,OAAO;AAAA,sBACP,MAAM;AAAA,sBACN,MAAM,sBAAc,MAAM,SAAS;AAAA,sBAEnC,6DAAC;AAAA,wBAAK,WAAW;AAAA,wBACf,6DAAC;AAAA,0BAAM,SAAS;AAAA,2BAAhB;AAAA;AAAA;AAAA;AAAA,+BAA2C;AAAA,yBAD7C;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA,uBARF;AAAA;AAAA;AAAA;AAAA,2BASA;AAAA,qBAVF;AAAA;AAAA;AAAA;AAAA,yBAWA;AAAA,mBAZF;AAAA;AAAA;AAAA;AAAA,uBAaA;AAAA;AAAA,eAnCF;AAAA;AAAA;AAAA;AAAA,mBAoCA;AAAA,YAEA,mDAAC;AAAA,cACC;AAAA,mEAAC,kBAAU,OAAV;AAAA,kBACC;AAAA,uEAAC;AAAA,sBAAM,SAAS;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA,2BAA4C;AAAA,oBAE5C,mDAAC,kBAAU,OAAV;AAAA,sBAAgB,UAAQ;AAAA,sBAAC,OAAO;AAAA,uBAAjC;AAAA;AAAA;AAAA;AAAA,2BAAqD;AAAA;AAAA,mBAHvD;AAAA;AAAA;AAAA;AAAA,uBAIA;AAAA,gBAGA,mDAAC;AAAA,kBAAG,WAAW,sBAAc,KAAK,UAAU;AAAA,kBAC1C,6DAAC;AAAA,oBACC,6DAAC;AAAA,sBACC,WAAW,CAAC;AAAA,sBACZ,UACE,mDAAC;AAAA,wBACC;AAAA,wBACA,WAAW,MAAM;AACf,mCAAS;AAAA,4BACP,aAAa;AAAA,0BACf,CAAC;AAAA,wBACH;AAAA,yBANF;AAAA;AAAA;AAAA;AAAA,6BAOA;AAAA,sBAGF,6DAAC;AAAA,wBACC,SAAS,MAAM,4BAA4B,EAAI;AAAA,yBADjD;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA,uBAfF;AAAA;AAAA;AAAA;AAAA,2BAgBA;AAAA,qBAjBF;AAAA;AAAA;AAAA;AAAA,yBAkBA;AAAA,mBAnBF;AAAA;AAAA;AAAA;AAAA,uBAoBA;AAAA;AAAA,eA5BF;AAAA;AAAA;AAAA;AAAA,mBA6BA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC;AAAA,gBAAO,WAAW;AAAA,gBAAoB;AAAA,gBACrC,6DAAC;AAAA,kBAAM,SAAS;AAAA,mBAAhB;AAAA;AAAA;AAAA;AAAA,uBAAoD;AAAA,iBADtD;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA;AAAA,WA5GF;AAAA;AAAA;AAAA;AAAA,eA6GA;AAAA,SAnHF;AAAA;AAAA;AAAA;AAAA,aAoHA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW;AAAA,QACb,6DAAC;AAAA,UACC,QAAQ;AAAA,UACR,WAAW;AAAA,UACX,WAAW,CAAC,gBAAgB;AAC1B,qBAAS;AAAA,cACP;AAAA,YACF,CAAC;AAAA,UACH;AAAA,WAPF;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,SATF;AAAA;AAAA;AAAA;AAAA,aAUA;AAAA;AAAA,KAjIF;AAAA;AAAA;AAAA;AAAA,SAkIA;AAEJ;AAQA,SAAS,aAAa,OAAiC;AACrD,MAAI,GAAC,SAAS,OAAO,SAAU;AAI/B,WAAO,MAAM,KAAK,CAAC,KAAK;AAC1B;AAEA,eAAe,uBACb,SACA,WACA,QACA;AACA,MAAM,MAAM,aAAa,UAAU,UAAU,QACvC,QAAQ,MAAM,UAAU,YAAY,GACpC,cAAU,qBAAI,SAAS,GAAG;AAEhC,mBAAM,6BAAY,SAAS,KAAK,GAEzB,UAAM,gCAAe,OAAO;AACrC;AAEA,SAAS,wBAAwB;AAAA,EAC/B;AAAA,EACA;AACF,GAGI;AACF,MAAM,CAAC,aAAa,cAAc,QAAI,0BAAS,EAAK,GAC9C,eAAe,gBAAgB,GAC/B,EAAE,GAAAA,GAAE,QAAI,uCAAe,GAEvB,0BAAsB,6BAAY,MAAM;AAC5C,QAAM,cAAU,sBAAO,MAAM,gCAAkB,WAAW,EACvD,KAAK,MAAM;AACV,qBAAe,EAAK,GACpB,UAAU;AAAA,IACZ,CAAC,EACA,MAAM,CAAC,UAAU;AAChB,yBAAa,SAAS,KAAK,GAErB,qBAAqB,KAAK;AAAA,IAClC,CAAC;AAEH,wBAAa,WAAW,EAAI,GAErB,yBAAAC,QAAQ,QAAQ,SAAS;AAAA,MAC9B,SAASD,GAAU,6BAA6B;AAAA,MAChD,SAASA,GAAU,6BAA6B;AAAA,MAChD,OAAOA,GAAU,2BAA2B;AAAA,IAC9C,CAAC;AAAA,EACH,GAAG,CAAC,MAAM,cAAcA,IAAG,SAAS,CAAC;AAErC,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,MAAM;AAAA,QACN,SAAS,MAAM,eAAe,EAAI;AAAA,QAElC,6DAAC;AAAA,UAAK,WAAW;AAAA,UACf,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAA6C;AAAA,WAD/C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SARF;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,MAEA,mDAAC;AAAA,QACC,SAAS,mDAAC;AAAA,UAAM,SAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,eAA6C;AAAA,QACtD,QAAQ;AAAA,QACR,WAAW;AAAA,QAEX,6DAAC;AAAA,UAAI,WAAW;AAAA,UACd;AAAA,+DAAC;AAAA,cACC,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA+D;AAAA,eADjE;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEA,mDAAC;AAAA,cACC,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAoD;AAAA,eADtD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEA,mDAAC;AAAA,cAAG,WAAW,aAAa,MAAM;AAAA,cAC/B,WAAC,UAAU,mDAAC;AAAA,gBAAiB;AAAA,iBAAlB;AAAA;AAAA;AAAA;AAAA,qBAA0C;AAAA,eADxD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEA,mDAAC;AAAA,cACC,OAAK;AAAA,cACL,SAAS,aAAa,MAAM;AAAA,cAC5B,OAAO;AAAA,cACP,SAAS;AAAA,cAET,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAoD;AAAA,eANtD;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA;AAAA,WApBF;AAAA;AAAA;AAAA;AAAA,eAqBA;AAAA,SA1BF;AAAA;AAAA;AAAA;AAAA,aA2BA;AAAA;AAAA,KAvCF;AAAA;AAAA;AAAA;AAAA,SAwCA;AAEJ;AAEA,SAAS,qBACP,OAGA;AACA,SACE,mDAAC;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,SAAS,MAAM;AAAA,IAEf,6DAAC;AAAA,MAAK,WAAW;AAAA,MACf,6DAAC;AAAA,QAAM,SAAS;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA,aAA0C;AAAA,OAD5C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,KARF;AAAA;AAAA;AAAA;AAAA,SASA;AAEJ;AAEA,IAAO,4BAAQ;;;ADxXf,+DAYaE,SAAqB,OACzB;AAAA,EACL,OAAO;AACT,IAKI,qBAAqB,MAAM;AAC/B,MAAM,EAAE,aAAa,eAAe,QAAI,4BAAW,oBAAkB,GAC/D,EAAE,MAAM,KAAK,QAAI,4BAAQ,GAEzB,eAAW;AAAA,IACf,CAAC,SAAsB;AACrB,UAAM,WAAW,2CAAa;AAE9B,MAAI,YACF,eAAe;AAAA,QACb,MAAM;AAAA,UACJ,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,MAAM,YAAY;AAAA,MACpB,CAAC;AAAA,IAEL;AAAA,IACA,CAAC,gBAAgB,WAAW;AAAA,EAC9B;AAEA,SAAK,OAKH,mDAAC;AAAA,IACC,SAAS,mDAAC;AAAA,MAAM,SAAS;AAAA,OAAhB;AAAA;AAAA;AAAA;AAAA,WAAsC;AAAA,IAC/C,YAAY,mDAAC;AAAA,MAAM,SAAS;AAAA,OAAhB;AAAA;AAAA;AAAA;AAAA,WAAgD;AAAA,IAE5D,6DAAC;AAAA,MACC,6DAAC;AAAA,QAAkB;AAAA,QAAY;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA,aAAmD;AAAA,OADrD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,KANF;AAAA;AAAA;AAAA;AAAA,SAOA,IAXO;AAaX,GAEOC,mBAAQ;;;AGzDf,IAAAC,oBAAA;AAAA,SAAAA,mBAAA;AAAA,gBAAAC;AAAA;AAAA,IAAAC,gBAAyB;AAGlB,SAASC,UAAS;AACvB,aAAO,wBAAS,sBAAc,MAAM,SAAS,OAAO;AACtD;;;ACLA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA,YAAAC;AAAA;AAAA,IAAAC,kBAAuB;;;ACCvB,IAAAC,gBAA+B;AAS/B,IAAM,mBAAmB,OAAO,EAAE,QAAQ,MAAkB;AAC1D,MAAM,UAAU,MAAM,qBAAqB,OAAO,GAC5C,EAAE,SAAS,MAAM,IAAI,MAAM,oBAAoB,GAE/C,KAAK,UACF;AAAA,IACL;AAAA,MACE,WAAW;AAAA,IACb;AAAA,IACA;AAAA,MACE;AAAA,IACF;AAAA,EACF;AAGF,MAAI;AAGF,WAFa,MAAM,gBAAgB,OAAO,QAGjC,wBAAS,sBAAc,MAAM,OAAO,IAGtC,GAAG;AAAA,EACZ,QAAE;AACA,WAAO,GAAG;AAAA,EACZ;AACF;AAEA,eAAe,sBAAsB;AACnC,MAAM,UAAU,IAAI,QAAQ,GACtB,EAAE,QAAQ,MAAM,IAAI,MAAM,0BAAgB;AAEhD,iBAAQ,OAAO,cAAc,MAAM,0BAA0B,MAAM,CAAC,GAE7D;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAEA,IAAO,8BAAQ;;;ADlDf,+DAKaC,UAAS,6BAETC,SAAqB,CAAC,EAAE,KAAK,OACjC;AAAA,EACL,cAAc,6BAAM;AACtB;AAGF,SAAS,aAAa;AACpB,SACE,mDAAC;AAAA,IACC,6DAAC,4BAAD;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA,KADV;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEA,IAAO,eAAQ;;;AErBf;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA,YAAAC;AAAA;AACA,IAAAC,kBAA4B,kBAC5BA,kBAAqB,6BAErBC,gBAAuC,2BACvCC,yBAAsB,0BACtBC,qBAAwB;AAIxB;AACA;AACA;AACA;AAIA;AAjBA,+DAqBaC,UAAS,6BAETC,SAAqB,OACzB;AAAA,EACL,OAAO;AACT;AAGF,SAAS,oBAAoB;AAC3B,MAAM,WAAO,4BAAQ,GACf,EAAE,OAAO,UAAU,SAAS,WAAW,IAAI,gBAAgB,GAE3D,eAAW;AAAA,IACf,OAAO,UAAsC;AAC3C,YAAM,eAAe;AAGrB,UAAM,QADO,IAAI,SAAS,MAAM,aAAa,EAC1B,IAAI,OAAO;AAE9B,iBAAW,EAAI;AAEf,UAAI;AACF,YAAM,YAAYC,cAAa;AAE/B,kBAAM,sCAAuB,MAAM,OAAO;AAAA,UACxC,KAAK;AAAA,QACP,CAAC,GAED,QAAQ,EAAI;AAAA,MACd,SAAS,GAAP;AACA,iBAAS,qBAAqB,CAAC,CAAC;AAAA,MAClC;AAAA,IACF;AAAA,IACA,CAAC,MAAM,SAAS,UAAU,UAAU;AAAA,EACtC;AAEA,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,6DAAC;AAAA,UAAQ,MAAM;AAAA,UACb,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAA2C;AAAA,WAD7C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QAAI,WAAW;AAAA,QACd;AAAA,6DAAC;AAAA,YAAG,WAAW,MAAM;AAAA,YACnB,6DAAC;AAAA,cAAM,MAAM;AAAA,cACX,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAAoD;AAAA,eADtD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UAEA,mDAAC;AAAA,YAAG,WAAW,CAAC,MAAM;AAAA,YACpB;AAAA,cACE,6DAAC;AAAA,gBACC,UAAU,CAAC,MAAM,KAAK,SAAS,CAAC;AAAA,gBAChC,WAAW;AAAA,gBAEX,6DAAC;AAAA,kBAAI,WAAW;AAAA,kBACd;AAAA,uEAAC;AAAA,sBACC,6DAAC;AAAA,wBAAE,WAAW;AAAA,wBACZ,6DAAC;AAAA,0BAAM,SAAS;AAAA,2BAAhB;AAAA;AAAA;AAAA;AAAA,+BAAgD;AAAA,yBADlD;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA,uBAHF;AAAA;AAAA;AAAA;AAAA,2BAIA;AAAA,oBAEA,mDAAC;AAAA,sBACC,6DAAC,kBAAU,OAAV;AAAA,wBACC;AAAA,6EAAC;AAAA,4BAAM,SAAS;AAAA,6BAAhB;AAAA;AAAA;AAAA;AAAA,iCAAuC;AAAA,0BAEvC,mDAAC,kBAAU,OAAV;AAAA,4BACC,MAAK;AAAA,4BACL,UAAQ;AAAA,4BACR,MAAK;AAAA,4BACL,aAAa;AAAA,6BAJf;AAAA;AAAA;AAAA;AAAA,iCAKA;AAAA;AAAA,yBARF;AAAA;AAAA;AAAA;AAAA,6BASA;AAAA,uBAVF;AAAA;AAAA;AAAA;AAAA,2BAWA;AAAA,oBAEA,mDAAC;AAAA,sBAAG,WAAW,MAAM;AAAA,sBACnB,6DAAC;AAAA,wBAAiB,OAAO,MAAM;AAAA,yBAA/B;AAAA;AAAA;AAAA;AAAA,6BAAgD;AAAA,uBADlD;AAAA;AAAA;AAAA;AAAA,2BAEA;AAAA,oBAEA,mDAAC;AAAA,sBACC,SAAS,MAAM;AAAA,sBACf,MAAK;AAAA,sBACL,MAAK;AAAA,sBACL,OAAK;AAAA,sBAEL,6DAAC;AAAA,wBAAM,SAAS;AAAA,yBAAhB;AAAA;AAAA;AAAA;AAAA,6BAA2C;AAAA,uBAN7C;AAAA;AAAA;AAAA;AAAA,2BAOA;AAAA;AAAA,mBA/BF;AAAA;AAAA;AAAA;AAAA,uBAgCA;AAAA,iBApCF;AAAA;AAAA;AAAA;AAAA,qBAqCA;AAAA,eAtCF;AAAA;AAAA;AAAA;AAAA,mBAuCA;AAAA,aAxCF;AAAA;AAAA;AAAA;AAAA,iBAyCA;AAAA,UAEA,mDAAC;AAAA,YAAI,WAAW;AAAA,YACd,6DAAC;AAAA,cAAE,WAAW;AAAA,cACZ;AAAA,mEAAC;AAAA,kBACC,6DAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAAkD;AAAA,mBADpD;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBAEA,mDAAC;AAAA,kBACC,WACE;AAAA,kBAEF,IAAI,sBAAc,MAAM;AAAA,kBAExB,6DAAC;AAAA,oBAAM,SAAS;AAAA,qBAAhB;AAAA;AAAA;AAAA;AAAA,yBAA+B;AAAA,mBANjC;AAAA;AAAA;AAAA;AAAA,uBAOA;AAAA;AAAA,eAZF;AAAA;AAAA;AAAA;AAAA,mBAaA;AAAA,aAdF;AAAA;AAAA;AAAA;AAAA,iBAeA;AAAA;AAAA,SAjEF;AAAA;AAAA;AAAA;AAAA,aAkEA;AAAA;AAAA,KAzEF;AAAA;AAAA;AAAA;AAAA,SA0EA;AAEJ;AAEA,IAAO,yBAAQ;AAOf,SAASA,gBAAe;AACtB,SAAO,GAAG,OAAO,SAAS,SAAS,sBAAc,MAAM;AACzD;;;ACjJA;AAAA;AAAA,gBAAAC;AAAA;AACA,IAAAC,gBAAyB;AAWlB,IAAMC,UAAyB,OAAO,EAAE,QAAQ,MAAM;AAC3D,QAAM,4BAAkB;AAKxB,MAAM,UAAU,MAAM,qBAAqB,OAAO;AAElD,MAAI,CAAC;AACH,WAAO,mBAAmB;AAG5B,MAAI;AAEF,UAAM,2BAA2B,OAAO;AAAA,EAC1C,SAAS,GAAP;AACA,mBAAU,EAAE,KAAK,GAAG,sCAAsC;AAAA,EAC5D;AAEA,SAAO,mBAAmB;AAC5B;AAEA,eAAe,2BAA2B,eAAuB;AAC/D,MAAM,EAAE,SAAAC,SAAQ,IAAI,MAAM,OAAO,wBAC3B,OAAOA,SAAQ,GACf,EAAE,IAAI,IAAI,MAAM,KAAK,oBAAoB,aAAa;AAE5D,SAAO,KAAK,oBAAoB,GAAG;AACrC;AAEA,eAAe,gBAAgB;AAC7B,MAAM,UAAU,IAAI,QAAQ;AAE5B,iBAAQ,OAAO,cAAc,MAAM,sBAAsB,CAAC,GAC1D,QAAQ,OAAO,cAAc,MAAM,uBAAuB,CAAC,GAEpD;AACT;AAEA,eAAe,qBAAqB;AAClC,MAAM,UAAU,MAAM,cAAc;AAEpC,aAAO,wBAAS,KAAK;AAAA,IACnB;AAAA,EACF,CAAC;AACH;;;ACzDA;AAAA;AAAA,gBAAAC;AAAA;AAAA,IAAAC,gBAAqB,4BAErBC,cAAkB;AAOX,IAAMC,WAAyB,OAAO,EAAE,QAAQ,MAAM;AAC3D,MAAM,UAAU,MAAM,QAAQ,KAAK,GAC7B,OAAO,MAAMC,eAAc,EAAE,eAAe,OAAO;AAEzD,MAAI,CAAC,KAAK;AACR,WAAO,yBAAyB;AAGlC,QAAM,kBAAS,OAAO,GACtB,MAAM,4BAAkB;AAExB,MAAM,UAAU,MAAM,mCAAwB,KAAK,KAAK,OAAO,GACzD,UAAU,IAAI,QAAQ;AAE5B,iBAAQ,OAAO,cAAc,OAAO,OAE7B,oBAAK,EAAE,SAAS,GAAK,GAAG,EAAE,QAAQ,CAAC;AAC5C;AAEA,SAASA,iBAAgB;AACvB,SAAO,cAAE,OAAO;AAAA,IACd,SAAS,cAAE,OAAO,EAAE,IAAI,CAAC;AAAA,EAC3B,CAAC;AACH;;;AChCA;AAAA;AAAA,uBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA;AAAA,cAAAC;AAAA;AAAA,IAAAC,kBAAgD,kBAEhDA,kBAA+C,6BAE/CC,yBAAsB,0BACtBC,qBAAwB;;;ACJxB,IAAAC,gBAAyB,4BACzBC,cAAkB;AASlB,IAAM,yBAAyB,aAEzB,4BAA4C,OAAO;AAAA,EACvD;AAAA,EACA;AACF,MAAM;AACJ,MAAM,WAAW,MAAM,QAAQ,SAAS,GAClC,SAAS,OAAO,YAAY,SAAS,QAAQ,CAAC,GAC9C,SAAS,MAAM,kBAAkB,EAAE,eAAe,MAAM;AAE9D,MAAI,CAAC,OAAO;AACV,WAAO,yBAAyB;AAGlC,QAAM,kBAAS,SAAS,MAAM,OAAO,KAAK,SAAS,GACnD,MAAM,4BAAkB;AAExB,MAAM,UAAU,MAAM,mCAAwB,OAAO,KAAK,OAAO,GAC3D,UAAU,IAAI,QAAQ;AAAA,IAC1B,cAAc;AAAA,EAChB,CAAC,GAGK,cADO,cAAc,QAAQ,GAAG,KACV,sBAAc,MAAM;AAEhD,aAAO,wBAAS,aAAa;AAAA,IAC3B;AAAA,EACF,CAAC;AACH,GAEO,uCAAQ;AAEf,SAAS,oBAAoB;AAC3B,SAAO,cAAE,OAAO;AAAA,IACd,SAAS,cAAE,OAAO,EAAE,IAAI,CAAC;AAAA,IACzB,WAAW,cAAE,OAAO,EAAE,IAAI,CAAC;AAAA,EAC7B,CAAC;AACH;AAEA,SAAS,cAAc,KAAa;AAClC,SAAO,IAAI,IAAI,GAAG,EAAE,aAAa,IAAI,sBAAsB;AAC7D;;;AD3CA;AACA;;;AEVA,SAAS,uBAAuB;AAC9B,SAAO,IAAI,gBAAgB,OAAO,SAAS,MAAM;AACnD;AAEA,IAAO,kCAAQ;;;AFUf;AAdA,+DAyBaC,WAAS,sCACTC,iBAAgB,2BAEhBC,SAAqB,OACzB;AAAA,EACL,OAAO;AACT,IAGI,eAAe,sBAAc,MAAM,QACnC,6BAA6B;AAEnC,SAAS,aAAa;AACpB,MAAM,WAAO,4BAAQ,GACf,aAAS,2BAAU,GACnB,eAAe,gBAAgB,GAC/B,iBAAa,+BAAc,GAE3B,eAAW;AAAA,IACf,CAAC,YAAoB;AACnB,UAAM,YAAY,aAAa,KAAK;AAGpC,aAFgB,EAAE,SAAS,UAAU,GAErB,EAAE,QAAQ,OAAO,CAAC;AAAA,IACpC;AAAA,IACA,CAAC,QAAQ,YAAY;AAAA,EACvB,GAEM,yBAAqB,yBAAQ,MAC5B,mBAAU,IAIA,gCAAqB,EAEtB,IAAI,0BAA0B,IALnC,IAMR,CAAC,CAAC;AASL,aANA,2BAAU,MAAM;AACd,IAAI,sBACG,KAAK,QAAQ;AAAA,EAEtB,GAAG,CAAC,MAAM,kBAAkB,CAAC,GAEzB,WAAW,UAAU,SAChB,mDAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,SAAsB,IAI7B;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,6DAAC;AAAA,UAAQ,MAAM;AAAA,UACb,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAAsC;AAAA,WADxC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QAAe;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA,aAAoC;AAAA,MAEpC,mDAAC;AAAA,QAAG,WAAW,sBAAc,KAAK,UAAU;AAAA,QAC1C;AAAA,6DAAC;AAAA,YACC,6DAAC;AAAA,cAAK,WAAW;AAAA,cACf,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA4C;AAAA,eAD9C;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UAEA,mDAAC;AAAA,YAA6B;AAAA,aAA9B;AAAA;AAAA;AAAA;AAAA,iBAAkD;AAAA;AAAA,SAPpD;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW,sBAAc,KAAK,UAAU;AAAA,QAC1C,6DAAC;AAAA,UAA2B;AAAA,WAA5B;AAAA;AAAA;AAAA;AAAA,eAAgD;AAAA,SADlD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW,sBAAc,KAAK,UAAU;AAAA,QAC1C,6DAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,eAAe;AAAA,SADjB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAI,WAAW;AAAA,QACd,6DAAC;AAAA,UAAE,WAAW;AAAA,UACZ;AAAA,+DAAC;AAAA,cACC,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA4C;AAAA,eAD9C;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEA,mDAAC;AAAA,cACC,WAAW;AAAA,cACX,IAAI;AAAA,cAEJ,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA+B;AAAA,eAJjC;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA;AAAA,WAVF;AAAA;AAAA;AAAA;AAAA,eAWA;AAAA,SAZF;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA;AAAA,KAxCF;AAAA;AAAA;AAAA;AAAA,SAyCA;AAEJ;AAEA,IAAO,kBAAQ;;;AGxHf;AAAA;AAAA,uBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA;AAAA,cAAAC;AAAA;AACA,IAAAC,kBAA+C,6BAC/CA,kBAA4B,kBAC5BC,yBAAsB;AAEtB;AACA;AAOA;AAbA,+DAmBaC,WAAS,sCACTC,iBAAgB,2BAEhBC,SAAqB,OACzB;AAAA,EACL,OAAO;AACT,IAGI,eAAe,sBAAc,MAAM;AAE1B,SAAR,aAA8B;AACnC,MAAM,aAAS,2BAAU,GACnB,eAAe,gBAAgB,GAC/B,iBAAa,+BAAc,GAE3B,eAAW;AAAA,IACf,CAAC,YAAoB;AACnB,UAAM,YAAY,aAAa,KAAK;AAGpC,aAFgB,EAAE,SAAS,UAAU,GAErB;AAAA,QACd,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA,IACA,CAAC,cAAc,MAAM;AAAA,EACvB;AAEA,SAAI,WAAW,UAAU,SAChB,mDAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,SAAsB,IAI7B;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,6DAAC;AAAA,UAAQ,MAAM;AAAA,UACb,6DAAC;AAAA,YAAM,SAAS;AAAA,aAAhB;AAAA;AAAA;AAAA;AAAA,iBAAsC;AAAA,WADxC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC;AAAA,QAAe,UAAU;AAAA,SAA1B;AAAA;AAAA;AAAA;AAAA,aAAoC;AAAA,MAEpC,mDAAC;AAAA,QAAG,WAAW,sBAAc,KAAK,UAAU;AAAA,QAC1C;AAAA,6DAAC;AAAA,YACC,6DAAC;AAAA,cAAK,WAAW;AAAA,cACf,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA4C;AAAA,eAD9C;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UAEA,mDAAC;AAAA,YAA6B;AAAA,aAA9B;AAAA;AAAA;AAAA;AAAA,iBAAkD;AAAA;AAAA,SAPpD;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW,sBAAc,KAAK,UAAU;AAAA,QAC1C,6DAAC;AAAA,UAA2B,UAAU;AAAA,WAAtC;AAAA;AAAA;AAAA;AAAA,eAAgD;AAAA,SADlD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAG,WAAW,sBAAc,KAAK,UAAU;AAAA,QAC1C,6DAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,eAAe;AAAA,SADjB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC;AAAA,QAAI,WAAW;AAAA,QACd,6DAAC;AAAA,UAAE,WAAW;AAAA,UACZ;AAAA,+DAAC;AAAA,cACC,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA6C;AAAA,eAD/C;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YAEA,mDAAC;AAAA,cACC,WAAW;AAAA,cACX,IAAI;AAAA,cAEJ,6DAAC;AAAA,gBAAM,SAAS;AAAA,iBAAhB;AAAA;AAAA;AAAA;AAAA,qBAA+B;AAAA,eAJjC;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA;AAAA,WAVF;AAAA;AAAA;AAAA;AAAA,eAWA;AAAA,SAZF;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA;AAAA,KAxCF;AAAA;AAAA;AAAA;AAAA,SAyCA;AAEJ;;;AC/FA,IAAO,0BAAQ,EAAC,SAAU,YAAW,OAAQ,EAAC,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,EAAC,GAAE,QAAS,EAAC,MAAO,EAAC,IAAK,QAAO,UAAW,QAAU,MAAO,IAAG,OAAQ,QAAU,eAAgB,QAAU,QAAS,2BAA0B,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAK,kBAAmB,GAAK,GAAE,gBAAe,EAAC,IAAK,gBAAe,UAAW,QAAO,MAAO,QAAU,OAAQ,QAAU,eAAgB,QAAU,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,gCAA+B,EAAC,IAAK,gCAA+B,UAAW,gBAAe,MAAO,aAAY,OAAQ,IAAK,eAAgB,QAAU,QAAS,mDAAkD,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,6BAA4B,EAAC,IAAK,6BAA4B,UAAW,gBAAe,MAAO,UAAS,OAAQ,IAAK,eAAgB,QAAU,QAAS,gDAA+C,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,yBAAwB,EAAC,IAAK,yBAAwB,UAAW,gBAAe,MAAO,YAAW,OAAQ,QAAU,eAAgB,QAAU,QAAS,4CAA2C,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,+BAA8B,EAAC,IAAK,+BAA8B,UAAW,yBAAwB,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,kDAAiD,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,sCAAqC,EAAC,IAAK,sCAAqC,UAAW,yBAAwB,MAAO,gBAAe,OAAQ,QAAU,eAAgB,QAAU,QAAS,yDAAwD,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,4CAA2C,EAAC,IAAK,4CAA2C,UAAW,sCAAqC,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,+DAA8D,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,sDAAqD,EAAC,IAAK,sDAAqD,UAAW,sCAAqC,MAAO,mBAAkB,OAAQ,QAAU,eAAgB,QAAU,QAAS,yEAAwE,SAAU,QAAU,WAAY,IAAK,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,oDAAmD,EAAC,IAAK,oDAAmD,UAAW,sCAAqC,MAAO,WAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,uEAAsE,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,qDAAoD,EAAC,IAAK,qDAAoD,UAAW,sCAAqC,MAAO,kBAAiB,OAAQ,QAAU,eAAgB,QAAU,QAAS,wEAAuE,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAK,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,oDAAmD,EAAC,IAAK,oDAAmD,UAAW,sCAAqC,MAAO,iBAAgB,OAAQ,QAAU,eAAgB,QAAU,QAAS,uEAAsE,SAAU,QAAU,WAAY,IAAK,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,iCAAgC,EAAC,IAAK,iCAAgC,UAAW,yBAAwB,MAAO,WAAU,OAAQ,QAAU,eAAgB,QAAU,QAAS,oDAAmD,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,gDAA+C,EAAC,IAAK,gDAA+C,UAAW,iCAAgC,MAAO,kBAAiB,OAAQ,QAAU,eAAgB,QAAU,QAAS,mEAAkE,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,uCAAsC,EAAC,IAAK,uCAAsC,UAAW,iCAAgC,MAAO,SAAQ,OAAQ,QAAU,eAAgB,QAAU,QAAS,0DAAyD,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,uCAAsC,EAAC,IAAK,uCAAsC,UAAW,iCAAgC,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,0DAAyD,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,0CAAyC,EAAC,IAAK,0CAAyC,UAAW,iCAAgC,MAAO,YAAW,OAAQ,QAAU,eAAgB,QAAU,QAAS,6DAA4D,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,4CAA2C,EAAC,IAAK,4CAA2C,UAAW,yBAAwB,MAAO,gBAAe,OAAQ,IAAK,eAAgB,QAAU,QAAS,+DAA8D,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,4BAA2B,EAAC,IAAK,4BAA2B,UAAW,gBAAe,MAAO,SAAQ,OAAQ,IAAK,eAAgB,QAAU,QAAS,+CAA8C,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,iBAAgB,EAAC,IAAK,iBAAgB,UAAW,QAAO,MAAO,QAAU,OAAQ,QAAU,eAAgB,QAAU,QAAS,oCAAmC,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,qBAAoB,EAAC,IAAK,qBAAoB,UAAW,iBAAgB,MAAO,OAAM,OAAQ,QAAU,eAAgB,QAAU,QAAS,wCAAuC,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,uBAAsB,EAAC,IAAK,uBAAsB,UAAW,iBAAgB,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,0CAAyC,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,yBAAwB,EAAC,IAAK,yBAAwB,UAAW,iBAAgB,MAAO,WAAU,OAAQ,QAAU,eAAgB,QAAU,QAAS,4CAA2C,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,eAAc,EAAC,IAAK,eAAc,UAAW,QAAO,MAAO,QAAO,OAAQ,QAAU,eAAgB,QAAU,QAAS,kCAAiC,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,8BAA6B,EAAC,IAAK,8BAA6B,UAAW,eAAc,MAAO,kBAAiB,OAAQ,QAAU,eAAgB,QAAU,QAAS,iDAAgD,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,uBAAsB,EAAC,IAAK,uBAAsB,UAAW,eAAc,MAAO,WAAU,OAAQ,QAAU,eAAgB,QAAU,QAAS,0CAAyC,SAAU,QAAU,WAAY,IAAK,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,uBAAsB,EAAC,IAAK,uBAAsB,UAAW,eAAc,MAAO,WAAU,OAAQ,QAAU,eAAgB,QAAU,QAAS,0CAAyC,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAK,WAAY,IAAM,kBAAmB,IAAK,kBAAmB,GAAK,GAAE,wBAAuB,EAAC,IAAK,wBAAuB,UAAW,eAAc,MAAO,YAAW,OAAQ,QAAU,eAAgB,QAAU,QAAS,2CAA0C,SAAU,QAAU,WAAY,IAAK,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,uBAAsB,EAAC,IAAK,uBAAsB,UAAW,eAAc,MAAO,WAAU,OAAQ,QAAU,eAAgB,QAAU,QAAS,0CAAyC,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAK,WAAY,IAAM,kBAAmB,IAAK,kBAAmB,GAAK,GAAE,iBAAgB,EAAC,IAAK,iBAAgB,UAAW,QAAO,MAAO,UAAS,OAAQ,QAAU,eAAgB,QAAU,QAAS,oCAAmC,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,uBAAsB,EAAC,IAAK,uBAAsB,UAAW,iBAAgB,MAAO,SAAQ,OAAQ,QAAU,eAAgB,QAAU,QAAS,0CAAyC,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAK,WAAY,IAAK,kBAAmB,IAAK,kBAAmB,GAAK,GAAE,2BAA0B,EAAC,IAAK,2BAA0B,UAAW,QAAO,MAAO,cAAa,OAAQ,IAAK,eAAgB,QAAU,QAAS,8CAA6C,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,GAAE,WAAY,IAAK,WAAY,IAAK,kBAAmB,IAAK,kBAAmB,GAAK,GAAE,0BAAyB,EAAC,IAAK,0BAAyB,UAAW,QAAO,MAAO,mBAAkB,OAAQ,QAAU,eAAgB,QAAU,QAAS,6CAA4C,SAAU,QAAU,WAAY,IAAK,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,wBAAuB,EAAC,IAAK,wBAAuB,UAAW,QAAO,MAAO,iBAAgB,OAAQ,QAAU,eAAgB,QAAU,QAAS,2CAA0C,SAAU,QAAU,WAAY,IAAK,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,yBAAwB,EAAC,IAAK,yBAAwB,UAAW,QAAO,MAAO,kBAAiB,OAAQ,QAAU,eAAgB,QAAU,QAAS,4CAA2C,SAAU,QAAU,WAAY,IAAK,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,EAAC,GAAE,KAAM,8BAA6B;;;ACsC9y5B,IAAM,uBAAuB,gBACvB,aAAa,WACb,QAAQ,EAAE,QAAQ,qBAAY,GAC9B,SAAS;AAAA,EACpB,MAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,2BAA2B;AAAA,IACvB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,0BAA0B;AAAA,IACtB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,wBAAwB;AAAA,IACpB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,iBAAiB;AAAA,IACb,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,uBAAuB;AAAA,IACnB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQC;AAAA,EACV;AAAA,EACF,qBAAqB;AAAA,IACjB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,iBAAiB;AAAA,IACb,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,uBAAuB;AAAA,IACnB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,gCAAgC;AAAA,IAC5B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,6BAA6B;AAAA,IACzB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,4BAA4B;AAAA,IACxB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,4CAA4C;AAAA,IACxC,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,sCAAsC;AAAA,IAClC,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,sDAAsD;AAAA,IAClD,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,qDAAqD;AAAA,IACjD,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQC;AAAA,EACV;AAAA,EACF,oDAAoD;AAAA,IAChD,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,oDAAoD;AAAA,IAChD,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,4CAA4C;AAAA,IACxC,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQC;AAAA,EACV;AAAA,EACF,iCAAiC;AAAA,IAC7B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,gDAAgD;AAAA,IAC5C,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,0CAA0C;AAAA,IACtC,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,uCAAuC;AAAA,IACnC,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,uCAAuC;AAAA,IACnC,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQC;AAAA,EACV;AAAA,EACF,+BAA+B;AAAA,IAC3B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQC;AAAA,EACV;AAAA,EACF,eAAe;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,8BAA8B;AAAA,IAC1B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,wBAAwB;AAAA,IACpB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,uBAAuB;AAAA,IACnB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,uBAAuB;AAAA,IACnB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,uBAAuB;AAAA,IACnB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AACF;",
  "names": ["import_react", "import_react", "classNames", "classNames", "import_react", "import_classnames", "children", "import_react", "import_react", "import_react", "import_react", "import_outline", "import_react", "collection", "MembershipRole", "import_auth", "import_react", "import_react", "import_XMarkIcon", "import_react_i18next", "XMarkIcon", "import_react", "import_react", "import_react", "getColorClasses", "getSizeClasses", "colorClasses", "sizeClasses", "redirect", "import_react", "import_reactfire", "import_outline", "import_react", "import_react_i18next", "import_react", "import_react_i18next", "import_CheckCircleIcon", "CheckCircleIcon", "import_react_i18next", "classNames", "ref", "import_reactfire", "import_firestore", "import_react_epic_spinners", "import_react", "import_react_i18next", "import_react_hot_toast", "t", "toaster", "import_react", "import_react_i18next", "import_outline", "Button", "import_react", "import_react_i18next", "import_i18next", "import_react_hot_toast", "toaster", "import_react", "import_react_hot_toast", "import_react_i18next", "t", "toaster", "import_react", "metadata", "import_react_i18next", "import_firestore", "import_reactfire", "import_reactfire", "import_firestore", "import_react", "import_react", "import_react_hot_toast", "import_react_i18next", "import_XMarkIcon", "t", "toaster", "XMarkIcon", "import_react_i18next", "import_react_i18next", "import_node_path", "import_i18next", "import_i18next_fs_backend", "Backend", "Backend", "isbot", "resolve", "links", "import_node", "import_react", "import_classnames", "env", "import_react", "import_react", "ref", "import_react", "import_react_i18next", "import_react", "import_outline", "import_react", "import_classnames", "classNames", "import_react", "import_react", "import_react_i18next", "import_classnames", "classNames", "import_classnames", "classNames", "Button", "Bars3Icon", "Links", "import_react", "import_react_i18next", "import_outline", "import_react", "import_react_i18next", "import_react", "Tippy", "currentTheme", "SunIcon", "MoonIcon", "import_reactfire", "import_react", "import_reactfire", "import_auth", "import_react", "_a", "_b", "env", "HttpStatusCode", "links", "classNames", "RemixMeta", "env", "CatchBoundary", "loader", "import_react", "import_node", "import_react_i18next", "import_react", "import_outline", "import_react", "import_classnames", "ref", "classNames", "XMarkIcon", "import_react", "import_react_epic_spinners", "doc", "import_firestore", "import_auth", "GlobalRole", "getAuth", "pino", "getUserFromSessionCookie", "import_auth", "logger", "formData", "CatchBoundary", "loader", "getUserData", "getUserRefById", "ref", "action", "import_node", "import_zod", "Csrf", "import_url", "import_firestore", "doc", "collection", "ref", "getAuth", "action", "getBodySchema", "redirectToErrorPage", "action", "import_node", "StripeWebhooks", "import_firestore", "action", "logger", "action", "import_zod", "import_path", "import_node", "action", "getBodySchema", "logger", "import_react", "import_reactfire", "import_react", "meta", "import_classnames", "import_react_i18next", "classNames", "CheckCircleIcon", "meta", "site_exports", "import_outline", "action", "import_react", "Divider", "meta", "meta", "import_react", "CatchBoundary", "action", "loader", "meta", "import_react", "import_react_i18next", "import_zod", "import_node", "import_reactfire", "import_react", "import_react_i18next", "import_outline", "import_react", "import_reactfire", "import_react", "import_reactfire", "browserPopupRedirectResolver", "import_react_i18next", "import_auth", "import_react", "import_reactfire", "import_react_epic_spinners", "import_react_i18next", "import_reactfire", "import_react", "error", "import_app", "import_react_epic_spinners", "capitalize", "import_react", "import_reactfire", "import_react", "import_csrf", "Csrf", "import_react", "import_react_i18next", "t", "import_react", "import_auth", "import_reactfire", "import_react", "import_react_i18next", "import_react_hook_form", "getCredential", "import_react", "import_react", "import_reactfire", "import_react_i18next", "action", "t", "toaster", "import_react_i18next", "import_react", "import_reactfire", "import_auth", "import_react_hot_toast", "t", "toast", "createEmulatorAdminApp", "invariant", "createFirebaseAdminApp", "import_react", "import_react_i18next", "CatchBoundary", "meta", "loader", "logger", "action", "getBodySchema", "loader", "meta", "import_react", "import_node", "import_react", "import_react_hot_toast", "import_reactfire", "import_firestore", "isTestEnv", "import_react", "import_react", "import_react", "import_react_i18next", "import_classnames", "import_outline", "import_react", "import_react", "import_react_i18next", "import_classnames", "import_outline", "classNames", "Label", "classNames", "loader", "meta", "meta", "import_react_i18next", "import_reactfire", "import_react", "import_react", "import_outline", "import_reactfire", "import_react_i18next", "import_react", "import_Bars3Icon", "Button", "Bars3Icon", "Links", "import_react", "import_react_i18next", "import_outline", "import_firestore", "import_reactfire", "import_react", "ChevronDownIcon", "Item", "import_react", "import_react_hot_toast", "import_react_i18next", "import_react", "import_reactfire", "import_firestore", "t", "Heading", "toast", "ChevronRightIcon", "meta", "import_react_i18next", "import_react", "import_react_hook_form", "import_react_hot_toast", "import_react_i18next", "import_react", "import_firestore", "t", "import_react_i18next", "import_firestore", "import_reactfire", "import_outline", "import_react_hot_toast", "import_react", "import_reactfire", "import_firestore", "import_react", "import_react_i18next", "t", "toaster", "import_outline", "import_react", "import_react", "import_react_i18next", "import_react_hook_form", "import_react", "import_reactfire", "import_firestore", "import_react_hot_toast", "t", "toast", "EditTaskButton", "import_react", "import_react_i18next", "links", "meta", "import_react", "import_react_i18next", "import_react_i18next", "import_react", "import_react_i18next", "import_react", "import_classnames", "classNames", "import_outline", "import_outline", "import_react", "import_react_i18next", "meta", "organization_default", "import_react", "links", "organization_default", "action", "import_node", "import_zod", "action", "logger", "invite_exports", "action", "invite_default", "meta", "import_react_i18next", "import_node", "import_zod", "import_mjml_react", "import_mjml_react", "logger", "ref", "doc", "import_react_i18next", "import_react", "import_react_hook_form", "import_react_hot_toast", "import_XMarkIcon", "t", "inviteMembers", "toast", "XMarkIcon", "PlusCircleIcon", "meta", "action", "json", "invite_default", "ArrowLeftIcon", "loader", "meta", "import_react", "import_node", "import_outline", "import_react_i18next", "OrganizationMembersList", "OrganizationInvitedMembersList", "meta", "loader", "canInviteUsers", "action", "import_node", "import_zod", "action", "logger", "getBodySchema", "organization_exports", "organization_default", "meta", "import_react_i18next", "import_reactfire", "import_react", "import_react_hot_toast", "import_reactfire", "import_react_i18next", "import_react_hook_form", "import_firestore", "import_reactfire", "import_react", "ref", "import_react", "import_outline", "ref", "t", "toast", "meta", "organization_default", "import_react", "import_react", "import_auth", "import_reactfire", "links", "meta", "import_react", "import_react_i18next", "import_react", "import_react_hot_toast", "import_reactfire", "import_auth", "import_react_i18next", "import_outline", "import_react_i18next", "import_reactfire", "import_react", "import_auth", "import_react_hook_form", "import_react_hot_toast", "import_react_i18next", "import_react", "t", "resolve", "toaster", "id", "t", "toaster", "providers", "import_react_i18next", "import_outline", "import_react", "import_reactfire", "import_react", "import_react_i18next", "import_reactfire", "import_react", "import_react_i18next", "import_auth", "import_react_hot_toast", "import_reactfire", "buttonId", "t", "toaster", "import_react", "import_react_i18next", "import_auth", "import_react_hot_toast", "import_reactfire", "t", "toaster", "createServerSideSession", "import_auth", "import_react_i18next", "import_react", "import_react_hot_toast", "t", "toaster", "import_react", "import_react_i18next", "import_react_hot_toast", "t", "toaster", "import_react", "import_react_i18next", "meta", "multiFactor", "_a", "meta", "import_reactfire", "import_react_i18next", "import_auth", "import_react", "import_auth", "import_react_hot_toast", "import_react_i18next", "import_react_hook_form", "t", "createServerSideSession", "resolve", "toast", "user", "meta", "meta", "import_auth", "import_react_i18next", "import_reactfire", "import_auth", "import_react", "import_react_hot_toast", "import_react_i18next", "import_react_hook_form", "t", "createServerSideSession", "toast", "meta", "profile_exports", "profile_default", "meta", "import_react", "import_react_i18next", "import_reactfire", "import_react", "import_reactfire", "import_react_i18next", "import_react_hot_toast", "import_react_hook_form", "import_storage", "import_auth", "import_react", "import_reactfire", "import_auth", "updateProfile", "t", "toaster", "meta", "profile_default", "settings_exports", "loader", "import_node", "loader", "loader", "meta", "import_react", "import_node", "loader", "meta", "loader", "meta", "import_react", "import_auth", "import_react_i18next", "import_reactfire", "loader", "meta", "getReturnUrl", "action", "import_node", "action", "getAuth", "action", "import_node", "import_zod", "action", "getBodySchema", "CatchBoundary", "action", "meta", "import_react", "import_react_i18next", "import_reactfire", "import_node", "import_zod", "action", "CatchBoundary", "meta", "CatchBoundary", "action", "meta", "import_react", "import_react_i18next", "action", "CatchBoundary", "meta", "site_exports", "invite_exports", "organization_exports", "profile_exports", "settings_exports"]
}
